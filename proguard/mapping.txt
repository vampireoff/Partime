a.a.a.a -> a.a.a.a:
    a.a.a.b a -> a
    int a() -> a
    java.lang.String c() -> c
    java.lang.String b() -> b
    void log(java.lang.String,int,int,java.lang.String,java.lang.String) -> log
    int a(int,java.lang.String) -> a
a.a.a.a.a -> a.a.a.a.a:
    void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
    void onOpen(android.database.sqlite.SQLiteDatabase) -> onOpen
    void close() -> close
a.a.a.a.b -> a.a.a.a.b:
    android.content.Context a -> a
    a.a.a.a.a b -> b
    a.a.a.a.b c -> c
    a.a.a.a.b a(android.content.Context) -> a
    long a(java.lang.String,android.content.ContentValues) -> a
    int a(java.lang.String,java.lang.String,java.lang.String[]) -> a
    int a(java.lang.String) -> a
    android.database.Cursor a(java.lang.String,java.lang.String[]) -> a
a.a.a.a.c -> a.a.a.a.c:
    android.content.Context a -> a
    android.content.SharedPreferences b -> b
    a.a.a.a.c c -> c
    a.a.a.a.c a(android.content.Context) -> a
    void a(java.lang.String,java.lang.String) -> a
    java.lang.String b(java.lang.String,java.lang.String) -> b
    void a(java.lang.String,java.lang.Boolean) -> a
    void a(java.lang.String,java.lang.Long) -> a
    long a(java.lang.String,long) -> a
    void a(long) -> a
    long a() -> a
    void a(boolean) -> a
    boolean b() -> b
    void b(boolean) -> b
    boolean c() -> c
    void c(boolean) -> c
    boolean d() -> d
    void d(boolean) -> d
    boolean e() -> e
    java.lang.String f() -> f
    void a(java.lang.String) -> a
a.a.a.a.d -> a.a.a.a.d:
    java.util.ArrayList a -> a
    java.util.ArrayList b -> b
a.a.a.a.e -> a.a.a.a.e:
    long a(android.content.Context,long,java.lang.String,int,java.lang.String) -> a
    long a(android.content.Context,java.util.ArrayList) -> a
    java.util.ArrayList a(android.content.Context,java.lang.String,java.lang.String[]) -> a
    java.util.ArrayList a(android.content.Context,java.lang.String[]) -> a
a.a.a.b -> a.a.a.b:
    a.a.a.b a -> a
    java.lang.String b -> b
    android.content.Context c -> c
    com.mob.tools.utils.DeviceHelper d -> d
    com.mob.tools.network.NetworkHelper e -> e
    a.a.a.a.c f -> f
    android.content.Context a() -> a
    a.a.a.b a(android.content.Context) -> a
    void a(int,java.lang.String,java.lang.String) -> a
    void a(int,int,java.lang.String,java.lang.String,java.lang.String) -> a
    void b(int,int,java.lang.String,java.lang.String,java.lang.String) -> b
    void onMessage(android.os.Message) -> onMessage
    void a(android.os.Message) -> a
    void b(android.os.Message) -> b
    java.lang.String b() -> b
    void b(int,java.lang.String,java.lang.String) -> b
    java.lang.String c() -> c
    void a(int,java.lang.String,java.lang.String,java.lang.String[]) -> a
    java.util.HashMap c(int,java.lang.String,java.lang.String) -> c
    java.lang.String a(java.lang.String) -> a
    boolean a(java.lang.String,boolean) -> a
android.UnusedStub -> android.UnusedStub:
android.support.annotation.AnimRes -> android.support.annotation.AnimRes:
android.support.annotation.AnimatorRes -> android.support.annotation.AnimatorRes:
android.support.annotation.AnyRes -> android.support.annotation.AnyRes:
android.support.annotation.ArrayRes -> android.support.annotation.ArrayRes:
android.support.annotation.AttrRes -> android.support.annotation.AttrRes:
android.support.annotation.BoolRes -> android.support.annotation.BoolRes:
android.support.annotation.ColorRes -> android.support.annotation.ColorRes:
android.support.annotation.DimenRes -> android.support.annotation.DimenRes:
android.support.annotation.DrawableRes -> android.support.annotation.DrawableRes:
android.support.annotation.FractionRes -> android.support.annotation.FractionRes:
android.support.annotation.IdRes -> android.support.annotation.IdRes:
android.support.annotation.IntDef -> android.support.annotation.IntDef:
    long[] value() -> value
    boolean flag() -> flag
android.support.annotation.IntegerRes -> android.support.annotation.IntegerRes:
android.support.annotation.InterpolatorRes -> android.support.annotation.InterpolatorRes:
android.support.annotation.LayoutRes -> android.support.annotation.LayoutRes:
android.support.annotation.MenuRes -> android.support.annotation.MenuRes:
android.support.annotation.NonNull -> android.support.annotation.NonNull:
android.support.annotation.Nullable -> android.support.annotation.Nullable:
android.support.annotation.PluralsRes -> android.support.annotation.PluralsRes:
android.support.annotation.RawRes -> android.support.annotation.RawRes:
android.support.annotation.StringDef -> android.support.annotation.StringDef:
    java.lang.String[] value() -> value
android.support.annotation.StringRes -> android.support.annotation.StringRes:
android.support.annotation.StyleRes -> android.support.annotation.StyleRes:
android.support.annotation.StyleableRes -> android.support.annotation.StyleableRes:
android.support.annotation.XmlRes -> android.support.annotation.XmlRes:
android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat -> android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat:
    android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoVersionImpl IMPL -> IMPL
    int CAPABILITY_CAN_RETRIEVE_WINDOW_CONTENT -> CAPABILITY_CAN_RETRIEVE_WINDOW_CONTENT
    int CAPABILITY_CAN_REQUEST_TOUCH_EXPLORATION -> CAPABILITY_CAN_REQUEST_TOUCH_EXPLORATION
    int CAPABILITY_CAN_REQUEST_ENHANCED_WEB_ACCESSIBILITY -> CAPABILITY_CAN_REQUEST_ENHANCED_WEB_ACCESSIBILITY
    int CAPABILITY_CAN_FILTER_KEY_EVENTS -> CAPABILITY_CAN_FILTER_KEY_EVENTS
    int FEEDBACK_BRAILLE -> FEEDBACK_BRAILLE
    int FEEDBACK_ALL_MASK -> FEEDBACK_ALL_MASK
    int DEFAULT -> DEFAULT
    int FLAG_INCLUDE_NOT_IMPORTANT_VIEWS -> FLAG_INCLUDE_NOT_IMPORTANT_VIEWS
    int FLAG_REQUEST_TOUCH_EXPLORATION_MODE -> FLAG_REQUEST_TOUCH_EXPLORATION_MODE
    int FLAG_REQUEST_ENHANCED_WEB_ACCESSIBILITY -> FLAG_REQUEST_ENHANCED_WEB_ACCESSIBILITY
    int FLAG_REPORT_VIEW_IDS -> FLAG_REPORT_VIEW_IDS
    int FLAG_REQUEST_FILTER_KEY_EVENTS -> FLAG_REQUEST_FILTER_KEY_EVENTS
    java.lang.String getId(android.accessibilityservice.AccessibilityServiceInfo) -> getId
    android.content.pm.ResolveInfo getResolveInfo(android.accessibilityservice.AccessibilityServiceInfo) -> getResolveInfo
    java.lang.String getSettingsActivityName(android.accessibilityservice.AccessibilityServiceInfo) -> getSettingsActivityName
    boolean getCanRetrieveWindowContent(android.accessibilityservice.AccessibilityServiceInfo) -> getCanRetrieveWindowContent
    java.lang.String getDescription(android.accessibilityservice.AccessibilityServiceInfo) -> getDescription
    java.lang.String feedbackTypeToString(int) -> feedbackTypeToString
    java.lang.String flagToString(int) -> flagToString
    int getCapabilities(android.accessibilityservice.AccessibilityServiceInfo) -> getCapabilities
    java.lang.String capabilityToString(int) -> capabilityToString
android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoIcsImpl -> android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoIcsImpl:
    boolean getCanRetrieveWindowContent(android.accessibilityservice.AccessibilityServiceInfo) -> getCanRetrieveWindowContent
    java.lang.String getDescription(android.accessibilityservice.AccessibilityServiceInfo) -> getDescription
    java.lang.String getId(android.accessibilityservice.AccessibilityServiceInfo) -> getId
    android.content.pm.ResolveInfo getResolveInfo(android.accessibilityservice.AccessibilityServiceInfo) -> getResolveInfo
    java.lang.String getSettingsActivityName(android.accessibilityservice.AccessibilityServiceInfo) -> getSettingsActivityName
    int getCapabilities(android.accessibilityservice.AccessibilityServiceInfo) -> getCapabilities
android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoJellyBeanMr2 -> android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoJellyBeanMr2:
    int getCapabilities(android.accessibilityservice.AccessibilityServiceInfo) -> getCapabilities
android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoStubImpl -> android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoStubImpl:
    boolean getCanRetrieveWindowContent(android.accessibilityservice.AccessibilityServiceInfo) -> getCanRetrieveWindowContent
    java.lang.String getDescription(android.accessibilityservice.AccessibilityServiceInfo) -> getDescription
    java.lang.String getId(android.accessibilityservice.AccessibilityServiceInfo) -> getId
    android.content.pm.ResolveInfo getResolveInfo(android.accessibilityservice.AccessibilityServiceInfo) -> getResolveInfo
    java.lang.String getSettingsActivityName(android.accessibilityservice.AccessibilityServiceInfo) -> getSettingsActivityName
    int getCapabilities(android.accessibilityservice.AccessibilityServiceInfo) -> getCapabilities
android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoVersionImpl -> android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoVersionImpl:
    java.lang.String getId(android.accessibilityservice.AccessibilityServiceInfo) -> getId
    android.content.pm.ResolveInfo getResolveInfo(android.accessibilityservice.AccessibilityServiceInfo) -> getResolveInfo
    boolean getCanRetrieveWindowContent(android.accessibilityservice.AccessibilityServiceInfo) -> getCanRetrieveWindowContent
    java.lang.String getDescription(android.accessibilityservice.AccessibilityServiceInfo) -> getDescription
    java.lang.String getSettingsActivityName(android.accessibilityservice.AccessibilityServiceInfo) -> getSettingsActivityName
    int getCapabilities(android.accessibilityservice.AccessibilityServiceInfo) -> getCapabilities
android.support.v4.accessibilityservice.AccessibilityServiceInfoCompatIcs -> android.support.v4.accessibilityservice.AccessibilityServiceInfoCompatIcs:
    boolean getCanRetrieveWindowContent(android.accessibilityservice.AccessibilityServiceInfo) -> getCanRetrieveWindowContent
    java.lang.String getDescription(android.accessibilityservice.AccessibilityServiceInfo) -> getDescription
    java.lang.String getId(android.accessibilityservice.AccessibilityServiceInfo) -> getId
    android.content.pm.ResolveInfo getResolveInfo(android.accessibilityservice.AccessibilityServiceInfo) -> getResolveInfo
    java.lang.String getSettingsActivityName(android.accessibilityservice.AccessibilityServiceInfo) -> getSettingsActivityName
android.support.v4.accessibilityservice.AccessibilityServiceInfoCompatJellyBeanMr2 -> android.support.v4.accessibilityservice.AccessibilityServiceInfoCompatJellyBeanMr2:
    int getCapabilities(android.accessibilityservice.AccessibilityServiceInfo) -> getCapabilities
android.support.v4.app.ActionBarDrawerToggle -> android.support.v4.app.ActionBarDrawerToggle:
    android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImpl IMPL -> IMPL
    float TOGGLE_DRAWABLE_OFFSET -> TOGGLE_DRAWABLE_OFFSET
    int ID_HOME -> ID_HOME
    android.app.Activity mActivity -> mActivity
    android.support.v4.app.ActionBarDrawerToggle$Delegate mActivityImpl -> mActivityImpl
    android.support.v4.widget.DrawerLayout mDrawerLayout -> mDrawerLayout
    boolean mDrawerIndicatorEnabled -> mDrawerIndicatorEnabled
    boolean mHasCustomUpIndicator -> mHasCustomUpIndicator
    android.graphics.drawable.Drawable mHomeAsUpIndicator -> mHomeAsUpIndicator
    android.graphics.drawable.Drawable mDrawerImage -> mDrawerImage
    android.support.v4.app.ActionBarDrawerToggle$SlideDrawable mSlider -> mSlider
    int mDrawerImageResource -> mDrawerImageResource
    int mOpenDrawerContentDescRes -> mOpenDrawerContentDescRes
    int mCloseDrawerContentDescRes -> mCloseDrawerContentDescRes
    java.lang.Object mSetIndicatorInfo -> mSetIndicatorInfo
    boolean assumeMaterial(android.content.Context) -> assumeMaterial
    void syncState() -> syncState
    void setHomeAsUpIndicator(android.graphics.drawable.Drawable) -> setHomeAsUpIndicator
    void setHomeAsUpIndicator(int) -> setHomeAsUpIndicator
    void setDrawerIndicatorEnabled(boolean) -> setDrawerIndicatorEnabled
    boolean isDrawerIndicatorEnabled() -> isDrawerIndicatorEnabled
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void onDrawerSlide(android.view.View,float) -> onDrawerSlide
    void onDrawerOpened(android.view.View) -> onDrawerOpened
    void onDrawerClosed(android.view.View) -> onDrawerClosed
    void onDrawerStateChanged(int) -> onDrawerStateChanged
    android.graphics.drawable.Drawable getThemeUpIndicator() -> getThemeUpIndicator
    void setActionBarUpIndicator(android.graphics.drawable.Drawable,int) -> setActionBarUpIndicator
    void setActionBarDescription(int) -> setActionBarDescription
    android.app.Activity access$400(android.support.v4.app.ActionBarDrawerToggle) -> access$400
android.support.v4.app.ActionBarDrawerToggle$1 -> android.support.v4.app.ActionBarDrawerToggle$1:
android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImpl -> android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImpl:
    android.graphics.drawable.Drawable getThemeUpIndicator(android.app.Activity) -> getThemeUpIndicator
    java.lang.Object setActionBarUpIndicator(java.lang.Object,android.app.Activity,android.graphics.drawable.Drawable,int) -> setActionBarUpIndicator
    java.lang.Object setActionBarDescription(java.lang.Object,android.app.Activity,int) -> setActionBarDescription
android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImplBase -> android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImplBase:
    android.graphics.drawable.Drawable getThemeUpIndicator(android.app.Activity) -> getThemeUpIndicator
    java.lang.Object setActionBarUpIndicator(java.lang.Object,android.app.Activity,android.graphics.drawable.Drawable,int) -> setActionBarUpIndicator
    java.lang.Object setActionBarDescription(java.lang.Object,android.app.Activity,int) -> setActionBarDescription
android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImplHC -> android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImplHC:
    android.graphics.drawable.Drawable getThemeUpIndicator(android.app.Activity) -> getThemeUpIndicator
    java.lang.Object setActionBarUpIndicator(java.lang.Object,android.app.Activity,android.graphics.drawable.Drawable,int) -> setActionBarUpIndicator
    java.lang.Object setActionBarDescription(java.lang.Object,android.app.Activity,int) -> setActionBarDescription
android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImplJellybeanMR2 -> android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImplJellybeanMR2:
    android.graphics.drawable.Drawable getThemeUpIndicator(android.app.Activity) -> getThemeUpIndicator
    java.lang.Object setActionBarUpIndicator(java.lang.Object,android.app.Activity,android.graphics.drawable.Drawable,int) -> setActionBarUpIndicator
    java.lang.Object setActionBarDescription(java.lang.Object,android.app.Activity,int) -> setActionBarDescription
android.support.v4.app.ActionBarDrawerToggle$Delegate -> android.support.v4.app.ActionBarDrawerToggle$Delegate:
    android.graphics.drawable.Drawable getThemeUpIndicator() -> getThemeUpIndicator
    void setActionBarUpIndicator(android.graphics.drawable.Drawable,int) -> setActionBarUpIndicator
    void setActionBarDescription(int) -> setActionBarDescription
android.support.v4.app.ActionBarDrawerToggle$DelegateProvider -> android.support.v4.app.ActionBarDrawerToggle$DelegateProvider:
    android.support.v4.app.ActionBarDrawerToggle$Delegate getDrawerToggleDelegate() -> getDrawerToggleDelegate
android.support.v4.app.ActionBarDrawerToggle$SlideDrawable -> android.support.v4.app.ActionBarDrawerToggle$SlideDrawable:
    boolean mHasMirroring -> mHasMirroring
    android.graphics.Rect mTmpRect -> mTmpRect
    float mPosition -> mPosition
    float mOffset -> mOffset
    android.support.v4.app.ActionBarDrawerToggle this$0 -> this$0
    void setPosition(float) -> setPosition
    float getPosition() -> getPosition
    void setOffset(float) -> setOffset
    void draw(android.graphics.Canvas) -> draw
android.support.v4.app.ActionBarDrawerToggleHoneycomb -> android.support.v4.app.ActionBarDrawerToggleHoneycomb:
    java.lang.String TAG -> TAG
    int[] THEME_ATTRS -> THEME_ATTRS
    java.lang.Object setActionBarUpIndicator(java.lang.Object,android.app.Activity,android.graphics.drawable.Drawable,int) -> setActionBarUpIndicator
    java.lang.Object setActionBarDescription(java.lang.Object,android.app.Activity,int) -> setActionBarDescription
    android.graphics.drawable.Drawable getThemeUpIndicator(android.app.Activity) -> getThemeUpIndicator
android.support.v4.app.ActionBarDrawerToggleHoneycomb$SetIndicatorInfo -> android.support.v4.app.ActionBarDrawerToggleHoneycomb$SetIndicatorInfo:
    java.lang.reflect.Method setHomeAsUpIndicator -> setHomeAsUpIndicator
    java.lang.reflect.Method setHomeActionContentDescription -> setHomeActionContentDescription
    android.widget.ImageView upIndicatorView -> upIndicatorView
android.support.v4.app.ActionBarDrawerToggleJellybeanMR2 -> android.support.v4.app.ActionBarDrawerToggleJellybeanMR2:
    java.lang.String TAG -> TAG
    int[] THEME_ATTRS -> THEME_ATTRS
    java.lang.Object setActionBarUpIndicator(java.lang.Object,android.app.Activity,android.graphics.drawable.Drawable,int) -> setActionBarUpIndicator
    java.lang.Object setActionBarDescription(java.lang.Object,android.app.Activity,int) -> setActionBarDescription
    android.graphics.drawable.Drawable getThemeUpIndicator(android.app.Activity) -> getThemeUpIndicator
android.support.v4.app.ActivityCompat -> android.support.v4.app.ActivityCompat:
    boolean invalidateOptionsMenu(android.app.Activity) -> invalidateOptionsMenu
    void startActivity(android.app.Activity,android.content.Intent,android.os.Bundle) -> startActivity
    void startActivityForResult(android.app.Activity,android.content.Intent,int,android.os.Bundle) -> startActivityForResult
    void finishAffinity(android.app.Activity) -> finishAffinity
    void finishAfterTransition(android.app.Activity) -> finishAfterTransition
    void setEnterSharedElementCallback(android.app.Activity,android.support.v4.app.SharedElementCallback) -> setEnterSharedElementCallback
    void setExitSharedElementCallback(android.app.Activity,android.support.v4.app.SharedElementCallback) -> setExitSharedElementCallback
    void postponeEnterTransition(android.app.Activity) -> postponeEnterTransition
    void startPostponedEnterTransition(android.app.Activity) -> startPostponedEnterTransition
    android.support.v4.app.ActivityCompat21$SharedElementCallback21 createCallback(android.support.v4.app.SharedElementCallback) -> createCallback
android.support.v4.app.ActivityCompat$SharedElementCallback21Impl -> android.support.v4.app.ActivityCompat$SharedElementCallback21Impl:
    android.support.v4.app.SharedElementCallback mCallback -> mCallback
    void onSharedElementStart(java.util.List,java.util.List,java.util.List) -> onSharedElementStart
    void onSharedElementEnd(java.util.List,java.util.List,java.util.List) -> onSharedElementEnd
    void onRejectSharedElements(java.util.List) -> onRejectSharedElements
    void onMapSharedElements(java.util.List,java.util.Map) -> onMapSharedElements
    android.os.Parcelable onCaptureSharedElementSnapshot(android.view.View,android.graphics.Matrix,android.graphics.RectF) -> onCaptureSharedElementSnapshot
    android.view.View onCreateSnapshotView(android.content.Context,android.os.Parcelable) -> onCreateSnapshotView
android.support.v4.app.ActivityCompat21 -> android.support.v4.app.ActivityCompat21:
    void finishAfterTransition(android.app.Activity) -> finishAfterTransition
    void setEnterSharedElementCallback(android.app.Activity,android.support.v4.app.ActivityCompat21$SharedElementCallback21) -> setEnterSharedElementCallback
    void setExitSharedElementCallback(android.app.Activity,android.support.v4.app.ActivityCompat21$SharedElementCallback21) -> setExitSharedElementCallback
    void postponeEnterTransition(android.app.Activity) -> postponeEnterTransition
    void startPostponedEnterTransition(android.app.Activity) -> startPostponedEnterTransition
    android.app.SharedElementCallback createCallback(android.support.v4.app.ActivityCompat21$SharedElementCallback21) -> createCallback
android.support.v4.app.ActivityCompat21$SharedElementCallback21 -> android.support.v4.app.ActivityCompat21$SharedElementCallback21:
    void onSharedElementStart(java.util.List,java.util.List,java.util.List) -> onSharedElementStart
    void onSharedElementEnd(java.util.List,java.util.List,java.util.List) -> onSharedElementEnd
    void onRejectSharedElements(java.util.List) -> onRejectSharedElements
    void onMapSharedElements(java.util.List,java.util.Map) -> onMapSharedElements
    android.os.Parcelable onCaptureSharedElementSnapshot(android.view.View,android.graphics.Matrix,android.graphics.RectF) -> onCaptureSharedElementSnapshot
    android.view.View onCreateSnapshotView(android.content.Context,android.os.Parcelable) -> onCreateSnapshotView
android.support.v4.app.ActivityCompat21$SharedElementCallbackImpl -> android.support.v4.app.ActivityCompat21$SharedElementCallbackImpl:
    android.support.v4.app.ActivityCompat21$SharedElementCallback21 mCallback -> mCallback
    void onSharedElementStart(java.util.List,java.util.List,java.util.List) -> onSharedElementStart
    void onSharedElementEnd(java.util.List,java.util.List,java.util.List) -> onSharedElementEnd
    void onRejectSharedElements(java.util.List) -> onRejectSharedElements
    void onMapSharedElements(java.util.List,java.util.Map) -> onMapSharedElements
    android.os.Parcelable onCaptureSharedElementSnapshot(android.view.View,android.graphics.Matrix,android.graphics.RectF) -> onCaptureSharedElementSnapshot
    android.view.View onCreateSnapshotView(android.content.Context,android.os.Parcelable) -> onCreateSnapshotView
android.support.v4.app.ActivityCompatHoneycomb -> android.support.v4.app.ActivityCompatHoneycomb:
    void invalidateOptionsMenu(android.app.Activity) -> invalidateOptionsMenu
    void dump(android.app.Activity,java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
android.support.v4.app.ActivityCompatJB -> android.support.v4.app.ActivityCompatJB:
    void startActivity(android.content.Context,android.content.Intent,android.os.Bundle) -> startActivity
    void startActivityForResult(android.app.Activity,android.content.Intent,int,android.os.Bundle) -> startActivityForResult
    void finishAffinity(android.app.Activity) -> finishAffinity
android.support.v4.app.ActivityManagerCompat -> android.support.v4.app.ActivityManagerCompat:
    boolean isLowRamDevice(android.app.ActivityManager) -> isLowRamDevice
android.support.v4.app.ActivityManagerCompatKitKat -> android.support.v4.app.ActivityManagerCompatKitKat:
    boolean isLowRamDevice(android.app.ActivityManager) -> isLowRamDevice
android.support.v4.app.ActivityOptionsCompat -> android.support.v4.app.ActivityOptionsCompat:
    android.support.v4.app.ActivityOptionsCompat makeCustomAnimation(android.content.Context,int,int) -> makeCustomAnimation
    android.support.v4.app.ActivityOptionsCompat makeScaleUpAnimation(android.view.View,int,int,int,int) -> makeScaleUpAnimation
    android.support.v4.app.ActivityOptionsCompat makeThumbnailScaleUpAnimation(android.view.View,android.graphics.Bitmap,int,int) -> makeThumbnailScaleUpAnimation
    android.support.v4.app.ActivityOptionsCompat makeSceneTransitionAnimation(android.app.Activity,android.view.View,java.lang.String) -> makeSceneTransitionAnimation
    android.support.v4.app.ActivityOptionsCompat makeSceneTransitionAnimation(android.app.Activity,android.support.v4.util.Pair[]) -> makeSceneTransitionAnimation
    android.os.Bundle toBundle() -> toBundle
    void update(android.support.v4.app.ActivityOptionsCompat) -> update
android.support.v4.app.ActivityOptionsCompat$ActivityOptionsImpl21 -> android.support.v4.app.ActivityOptionsCompat$ActivityOptionsImpl21:
    android.support.v4.app.ActivityOptionsCompat21 mImpl -> mImpl
    android.os.Bundle toBundle() -> toBundle
    void update(android.support.v4.app.ActivityOptionsCompat) -> update
android.support.v4.app.ActivityOptionsCompat$ActivityOptionsImplJB -> android.support.v4.app.ActivityOptionsCompat$ActivityOptionsImplJB:
    android.support.v4.app.ActivityOptionsCompatJB mImpl -> mImpl
    android.os.Bundle toBundle() -> toBundle
    void update(android.support.v4.app.ActivityOptionsCompat) -> update
android.support.v4.app.ActivityOptionsCompat21 -> android.support.v4.app.ActivityOptionsCompat21:
    android.app.ActivityOptions mActivityOptions -> mActivityOptions
    android.support.v4.app.ActivityOptionsCompat21 makeSceneTransitionAnimation(android.app.Activity,android.view.View,java.lang.String) -> makeSceneTransitionAnimation
    android.support.v4.app.ActivityOptionsCompat21 makeSceneTransitionAnimation(android.app.Activity,android.view.View[],java.lang.String[]) -> makeSceneTransitionAnimation
    android.os.Bundle toBundle() -> toBundle
    void update(android.support.v4.app.ActivityOptionsCompat21) -> update
android.support.v4.app.ActivityOptionsCompatJB -> android.support.v4.app.ActivityOptionsCompatJB:
    android.app.ActivityOptions mActivityOptions -> mActivityOptions
    android.support.v4.app.ActivityOptionsCompatJB makeCustomAnimation(android.content.Context,int,int) -> makeCustomAnimation
    android.support.v4.app.ActivityOptionsCompatJB makeScaleUpAnimation(android.view.View,int,int,int,int) -> makeScaleUpAnimation
    android.support.v4.app.ActivityOptionsCompatJB makeThumbnailScaleUpAnimation(android.view.View,android.graphics.Bitmap,int,int) -> makeThumbnailScaleUpAnimation
    android.os.Bundle toBundle() -> toBundle
    void update(android.support.v4.app.ActivityOptionsCompatJB) -> update
android.support.v4.app.BackStackRecord -> android.support.v4.app.BackStackRecord:
    java.lang.String TAG -> TAG
    android.support.v4.app.FragmentManagerImpl mManager -> mManager
    int OP_NULL -> OP_NULL
    int OP_ADD -> OP_ADD
    int OP_REPLACE -> OP_REPLACE
    int OP_REMOVE -> OP_REMOVE
    int OP_HIDE -> OP_HIDE
    int OP_SHOW -> OP_SHOW
    int OP_DETACH -> OP_DETACH
    int OP_ATTACH -> OP_ATTACH
    android.support.v4.app.BackStackRecord$Op mHead -> mHead
    android.support.v4.app.BackStackRecord$Op mTail -> mTail
    int mNumOp -> mNumOp
    int mEnterAnim -> mEnterAnim
    int mExitAnim -> mExitAnim
    int mPopEnterAnim -> mPopEnterAnim
    int mPopExitAnim -> mPopExitAnim
    int mTransition -> mTransition
    int mTransitionStyle -> mTransitionStyle
    boolean mAddToBackStack -> mAddToBackStack
    boolean mAllowAddToBackStack -> mAllowAddToBackStack
    java.lang.String mName -> mName
    boolean mCommitted -> mCommitted
    int mIndex -> mIndex
    int mBreadCrumbTitleRes -> mBreadCrumbTitleRes
    java.lang.CharSequence mBreadCrumbTitleText -> mBreadCrumbTitleText
    int mBreadCrumbShortTitleRes -> mBreadCrumbShortTitleRes
    java.lang.CharSequence mBreadCrumbShortTitleText -> mBreadCrumbShortTitleText
    java.util.ArrayList mSharedElementSourceNames -> mSharedElementSourceNames
    java.util.ArrayList mSharedElementTargetNames -> mSharedElementTargetNames
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    void dump(java.lang.String,java.io.PrintWriter,boolean) -> dump
    int getId() -> getId
    int getBreadCrumbTitleRes() -> getBreadCrumbTitleRes
    int getBreadCrumbShortTitleRes() -> getBreadCrumbShortTitleRes
    java.lang.CharSequence getBreadCrumbTitle() -> getBreadCrumbTitle
    java.lang.CharSequence getBreadCrumbShortTitle() -> getBreadCrumbShortTitle
    void addOp(android.support.v4.app.BackStackRecord$Op) -> addOp
    android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String) -> add
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment) -> add
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment,java.lang.String) -> add
    void doAddOp(int,android.support.v4.app.Fragment,java.lang.String,int) -> doAddOp
    android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment) -> replace
    android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment,java.lang.String) -> replace
    android.support.v4.app.FragmentTransaction remove(android.support.v4.app.Fragment) -> remove
    android.support.v4.app.FragmentTransaction hide(android.support.v4.app.Fragment) -> hide
    android.support.v4.app.FragmentTransaction show(android.support.v4.app.Fragment) -> show
    android.support.v4.app.FragmentTransaction detach(android.support.v4.app.Fragment) -> detach
    android.support.v4.app.FragmentTransaction attach(android.support.v4.app.Fragment) -> attach
    android.support.v4.app.FragmentTransaction setCustomAnimations(int,int) -> setCustomAnimations
    android.support.v4.app.FragmentTransaction setCustomAnimations(int,int,int,int) -> setCustomAnimations
    android.support.v4.app.FragmentTransaction setTransition(int) -> setTransition
    android.support.v4.app.FragmentTransaction addSharedElement(android.view.View,java.lang.String) -> addSharedElement
    android.support.v4.app.FragmentTransaction setTransitionStyle(int) -> setTransitionStyle
    android.support.v4.app.FragmentTransaction addToBackStack(java.lang.String) -> addToBackStack
    boolean isAddToBackStackAllowed() -> isAddToBackStackAllowed
    android.support.v4.app.FragmentTransaction disallowAddToBackStack() -> disallowAddToBackStack
    android.support.v4.app.FragmentTransaction setBreadCrumbTitle(int) -> setBreadCrumbTitle
    android.support.v4.app.FragmentTransaction setBreadCrumbTitle(java.lang.CharSequence) -> setBreadCrumbTitle
    android.support.v4.app.FragmentTransaction setBreadCrumbShortTitle(int) -> setBreadCrumbShortTitle
    android.support.v4.app.FragmentTransaction setBreadCrumbShortTitle(java.lang.CharSequence) -> setBreadCrumbShortTitle
    void bumpBackStackNesting(int) -> bumpBackStackNesting
    int commit() -> commit
    int commitAllowingStateLoss() -> commitAllowingStateLoss
    int commitInternal(boolean) -> commitInternal
    void run() -> run
    void setFirstOut(android.util.SparseArray,android.support.v4.app.Fragment) -> setFirstOut
    void setLastIn(android.util.SparseArray,android.support.v4.app.Fragment) -> setLastIn
    void calculateFragments(android.util.SparseArray,android.util.SparseArray) -> calculateFragments
    void calculateBackFragments(android.util.SparseArray,android.util.SparseArray) -> calculateBackFragments
    android.support.v4.app.BackStackRecord$TransitionState popFromBackStack(boolean,android.support.v4.app.BackStackRecord$TransitionState,android.util.SparseArray,android.util.SparseArray) -> popFromBackStack
    java.lang.String getName() -> getName
    int getTransition() -> getTransition
    int getTransitionStyle() -> getTransitionStyle
    boolean isEmpty() -> isEmpty
    android.support.v4.app.BackStackRecord$TransitionState beginTransition(android.util.SparseArray,android.util.SparseArray,boolean) -> beginTransition
    java.lang.Object getEnterTransition(android.support.v4.app.Fragment,boolean) -> getEnterTransition
    java.lang.Object getExitTransition(android.support.v4.app.Fragment,boolean) -> getExitTransition
    java.lang.Object getSharedElementTransition(android.support.v4.app.Fragment,android.support.v4.app.Fragment,boolean) -> getSharedElementTransition
    java.lang.Object captureExitingViews(java.lang.Object,android.support.v4.app.Fragment,java.util.ArrayList,android.support.v4.util.ArrayMap) -> captureExitingViews
    android.support.v4.util.ArrayMap remapSharedElements(android.support.v4.app.BackStackRecord$TransitionState,android.support.v4.app.Fragment,boolean) -> remapSharedElements
    boolean configureTransitions(int,android.support.v4.app.BackStackRecord$TransitionState,boolean,android.util.SparseArray,android.util.SparseArray) -> configureTransitions
    void prepareSharedElementTransition(android.support.v4.app.BackStackRecord$TransitionState,android.view.View,java.lang.Object,android.support.v4.app.Fragment,android.support.v4.app.Fragment,boolean,java.util.ArrayList) -> prepareSharedElementTransition
    void callSharedElementEnd(android.support.v4.app.BackStackRecord$TransitionState,android.support.v4.app.Fragment,android.support.v4.app.Fragment,boolean,android.support.v4.util.ArrayMap) -> callSharedElementEnd
    void setEpicenterIn(android.support.v4.util.ArrayMap,android.support.v4.app.BackStackRecord$TransitionState) -> setEpicenterIn
    android.support.v4.util.ArrayMap mapSharedElementsIn(android.support.v4.app.BackStackRecord$TransitionState,boolean,android.support.v4.app.Fragment) -> mapSharedElementsIn
    android.support.v4.util.ArrayMap remapNames(java.util.ArrayList,java.util.ArrayList,android.support.v4.util.ArrayMap) -> remapNames
    android.support.v4.util.ArrayMap mapEnteringSharedElements(android.support.v4.app.BackStackRecord$TransitionState,android.support.v4.app.Fragment,boolean) -> mapEnteringSharedElements
    void excludeHiddenFragmentsAfterEnter(android.view.View,android.support.v4.app.BackStackRecord$TransitionState,int,java.lang.Object) -> excludeHiddenFragmentsAfterEnter
    void excludeHiddenFragments(android.support.v4.app.BackStackRecord$TransitionState,int,java.lang.Object) -> excludeHiddenFragments
    void setNameOverride(android.support.v4.util.ArrayMap,java.lang.String,java.lang.String) -> setNameOverride
    void setNameOverrides(android.support.v4.app.BackStackRecord$TransitionState,java.util.ArrayList,java.util.ArrayList) -> setNameOverrides
    void setBackNameOverrides(android.support.v4.app.BackStackRecord$TransitionState,android.support.v4.util.ArrayMap,boolean) -> setBackNameOverrides
    void setNameOverrides(android.support.v4.app.BackStackRecord$TransitionState,android.support.v4.util.ArrayMap,boolean) -> setNameOverrides
    android.support.v4.util.ArrayMap access$000(android.support.v4.app.BackStackRecord,android.support.v4.app.BackStackRecord$TransitionState,boolean,android.support.v4.app.Fragment) -> access$000
    void access$100(android.support.v4.app.BackStackRecord,android.support.v4.util.ArrayMap,android.support.v4.app.BackStackRecord$TransitionState) -> access$100
    void access$200(android.support.v4.app.BackStackRecord,android.support.v4.app.BackStackRecord$TransitionState,android.support.v4.app.Fragment,android.support.v4.app.Fragment,boolean,android.support.v4.util.ArrayMap) -> access$200
    void access$300(android.support.v4.app.BackStackRecord,android.support.v4.app.BackStackRecord$TransitionState,int,java.lang.Object) -> access$300
android.support.v4.app.BackStackRecord$1 -> android.support.v4.app.BackStackRecord$1:
    android.support.v4.app.Fragment val$inFragment -> val$inFragment
    android.support.v4.app.BackStackRecord this$0 -> this$0
    android.view.View getView() -> getView
android.support.v4.app.BackStackRecord$2 -> android.support.v4.app.BackStackRecord$2:
    android.view.View val$sceneRoot -> val$sceneRoot
    java.lang.Object val$sharedElementTransition -> val$sharedElementTransition
    java.util.ArrayList val$sharedElementTargets -> val$sharedElementTargets
    android.support.v4.app.BackStackRecord$TransitionState val$state -> val$state
    boolean val$isBack -> val$isBack
    android.support.v4.app.Fragment val$inFragment -> val$inFragment
    android.support.v4.app.Fragment val$outFragment -> val$outFragment
    android.support.v4.app.BackStackRecord this$0 -> this$0
    boolean onPreDraw() -> onPreDraw
android.support.v4.app.BackStackRecord$3 -> android.support.v4.app.BackStackRecord$3:
    android.view.View val$sceneRoot -> val$sceneRoot
    android.support.v4.app.BackStackRecord$TransitionState val$state -> val$state
    int val$containerId -> val$containerId
    java.lang.Object val$transition -> val$transition
    android.support.v4.app.BackStackRecord this$0 -> this$0
    boolean onPreDraw() -> onPreDraw
android.support.v4.app.BackStackRecord$Op -> android.support.v4.app.BackStackRecord$Op:
    android.support.v4.app.BackStackRecord$Op next -> next
    android.support.v4.app.BackStackRecord$Op prev -> prev
    int cmd -> cmd
    android.support.v4.app.Fragment fragment -> fragment
    int enterAnim -> enterAnim
    int exitAnim -> exitAnim
    int popEnterAnim -> popEnterAnim
    int popExitAnim -> popExitAnim
    java.util.ArrayList removed -> removed
android.support.v4.app.BackStackRecord$TransitionState -> android.support.v4.app.BackStackRecord$TransitionState:
    android.support.v4.util.ArrayMap nameOverrides -> nameOverrides
    java.util.ArrayList hiddenFragmentViews -> hiddenFragmentViews
    android.support.v4.app.FragmentTransitionCompat21$EpicenterView enteringEpicenterView -> enteringEpicenterView
    android.view.View nonExistentView -> nonExistentView
    android.support.v4.app.BackStackRecord this$0 -> this$0
android.support.v4.app.BackStackState -> android.support.v4.app.BackStackState:
    int[] mOps -> mOps
    int mTransition -> mTransition
    int mTransitionStyle -> mTransitionStyle
    java.lang.String mName -> mName
    int mIndex -> mIndex
    int mBreadCrumbTitleRes -> mBreadCrumbTitleRes
    java.lang.CharSequence mBreadCrumbTitleText -> mBreadCrumbTitleText
    int mBreadCrumbShortTitleRes -> mBreadCrumbShortTitleRes
    java.lang.CharSequence mBreadCrumbShortTitleText -> mBreadCrumbShortTitleText
    java.util.ArrayList mSharedElementSourceNames -> mSharedElementSourceNames
    java.util.ArrayList mSharedElementTargetNames -> mSharedElementTargetNames
    android.os.Parcelable$Creator CREATOR -> CREATOR
    android.support.v4.app.BackStackRecord instantiate(android.support.v4.app.FragmentManagerImpl) -> instantiate
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.BackStackState$1 -> android.support.v4.app.BackStackState$1:
    android.support.v4.app.BackStackState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.app.BackStackState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.BundleUtil -> android.support.v4.app.BundleUtil:
    android.os.Bundle[] getBundleArrayFromBundle(android.os.Bundle,java.lang.String) -> getBundleArrayFromBundle
android.support.v4.app.DialogFragment -> android.support.v4.app.DialogFragment:
    int STYLE_NORMAL -> STYLE_NORMAL
    int STYLE_NO_TITLE -> STYLE_NO_TITLE
    int STYLE_NO_FRAME -> STYLE_NO_FRAME
    int STYLE_NO_INPUT -> STYLE_NO_INPUT
    java.lang.String SAVED_DIALOG_STATE_TAG -> SAVED_DIALOG_STATE_TAG
    java.lang.String SAVED_STYLE -> SAVED_STYLE
    java.lang.String SAVED_THEME -> SAVED_THEME
    java.lang.String SAVED_CANCELABLE -> SAVED_CANCELABLE
    java.lang.String SAVED_SHOWS_DIALOG -> SAVED_SHOWS_DIALOG
    java.lang.String SAVED_BACK_STACK_ID -> SAVED_BACK_STACK_ID
    int mStyle -> mStyle
    int mTheme -> mTheme
    boolean mCancelable -> mCancelable
    boolean mShowsDialog -> mShowsDialog
    int mBackStackId -> mBackStackId
    android.app.Dialog mDialog -> mDialog
    boolean mViewDestroyed -> mViewDestroyed
    boolean mDismissed -> mDismissed
    boolean mShownByMe -> mShownByMe
    void setStyle(int,int) -> setStyle
    void show(android.support.v4.app.FragmentManager,java.lang.String) -> show
    int show(android.support.v4.app.FragmentTransaction,java.lang.String) -> show
    void dismiss() -> dismiss
    void dismissAllowingStateLoss() -> dismissAllowingStateLoss
    void dismissInternal(boolean) -> dismissInternal
    android.app.Dialog getDialog() -> getDialog
    int getTheme() -> getTheme
    void setCancelable(boolean) -> setCancelable
    boolean isCancelable() -> isCancelable
    void setShowsDialog(boolean) -> setShowsDialog
    boolean getShowsDialog() -> getShowsDialog
    void onAttach(android.app.Activity) -> onAttach
    void onDetach() -> onDetach
    void onCreate(android.os.Bundle) -> onCreate
    android.view.LayoutInflater getLayoutInflater(android.os.Bundle) -> getLayoutInflater
    android.app.Dialog onCreateDialog(android.os.Bundle) -> onCreateDialog
    void onCancel(android.content.DialogInterface) -> onCancel
    void onDismiss(android.content.DialogInterface) -> onDismiss
    void onActivityCreated(android.os.Bundle) -> onActivityCreated
    void onStart() -> onStart
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onStop() -> onStop
    void onDestroyView() -> onDestroyView
android.support.v4.app.DialogFragment$DialogStyle -> android.support.v4.app.DialogFragment$DialogStyle:
android.support.v4.app.Fragment -> android.support.v4.app.Fragment:
    android.support.v4.util.SimpleArrayMap sClassMap -> sClassMap
    java.lang.Object USE_DEFAULT_TRANSITION -> USE_DEFAULT_TRANSITION
    int INITIALIZING -> INITIALIZING
    int CREATED -> CREATED
    int ACTIVITY_CREATED -> ACTIVITY_CREATED
    int STOPPED -> STOPPED
    int STARTED -> STARTED
    int RESUMED -> RESUMED
    int mState -> mState
    android.view.View mAnimatingAway -> mAnimatingAway
    int mStateAfterAnimating -> mStateAfterAnimating
    android.os.Bundle mSavedFragmentState -> mSavedFragmentState
    android.util.SparseArray mSavedViewState -> mSavedViewState
    int mIndex -> mIndex
    java.lang.String mWho -> mWho
    android.os.Bundle mArguments -> mArguments
    android.support.v4.app.Fragment mTarget -> mTarget
    int mTargetIndex -> mTargetIndex
    int mTargetRequestCode -> mTargetRequestCode
    boolean mAdded -> mAdded
    boolean mRemoving -> mRemoving
    boolean mResumed -> mResumed
    boolean mFromLayout -> mFromLayout
    boolean mInLayout -> mInLayout
    boolean mRestored -> mRestored
    int mBackStackNesting -> mBackStackNesting
    android.support.v4.app.FragmentManagerImpl mFragmentManager -> mFragmentManager
    android.support.v4.app.FragmentActivity mActivity -> mActivity
    android.support.v4.app.FragmentManagerImpl mChildFragmentManager -> mChildFragmentManager
    android.support.v4.app.Fragment mParentFragment -> mParentFragment
    int mFragmentId -> mFragmentId
    int mContainerId -> mContainerId
    java.lang.String mTag -> mTag
    boolean mHidden -> mHidden
    boolean mDetached -> mDetached
    boolean mRetainInstance -> mRetainInstance
    boolean mRetaining -> mRetaining
    boolean mHasMenu -> mHasMenu
    boolean mMenuVisible -> mMenuVisible
    boolean mCalled -> mCalled
    int mNextAnim -> mNextAnim
    android.view.ViewGroup mContainer -> mContainer
    android.view.View mView -> mView
    android.view.View mInnerView -> mInnerView
    boolean mDeferStart -> mDeferStart
    boolean mUserVisibleHint -> mUserVisibleHint
    android.support.v4.app.LoaderManagerImpl mLoaderManager -> mLoaderManager
    boolean mLoadersStarted -> mLoadersStarted
    boolean mCheckedForLoaderManager -> mCheckedForLoaderManager
    java.lang.Object mEnterTransition -> mEnterTransition
    java.lang.Object mReturnTransition -> mReturnTransition
    java.lang.Object mExitTransition -> mExitTransition
    java.lang.Object mReenterTransition -> mReenterTransition
    java.lang.Object mSharedElementEnterTransition -> mSharedElementEnterTransition
    java.lang.Object mSharedElementReturnTransition -> mSharedElementReturnTransition
    java.lang.Boolean mAllowReturnTransitionOverlap -> mAllowReturnTransitionOverlap
    java.lang.Boolean mAllowEnterTransitionOverlap -> mAllowEnterTransitionOverlap
    android.support.v4.app.SharedElementCallback mEnterTransitionCallback -> mEnterTransitionCallback
    android.support.v4.app.SharedElementCallback mExitTransitionCallback -> mExitTransitionCallback
    android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String) -> instantiate
    android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle) -> instantiate
    boolean isSupportFragmentClass(android.content.Context,java.lang.String) -> isSupportFragmentClass
    void restoreViewState(android.os.Bundle) -> restoreViewState
    void setIndex(int,android.support.v4.app.Fragment) -> setIndex
    boolean isInBackStack() -> isInBackStack
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    int getId() -> getId
    java.lang.String getTag() -> getTag
    void setArguments(android.os.Bundle) -> setArguments
    android.os.Bundle getArguments() -> getArguments
    void setInitialSavedState(android.support.v4.app.Fragment$SavedState) -> setInitialSavedState
    void setTargetFragment(android.support.v4.app.Fragment,int) -> setTargetFragment
    android.support.v4.app.Fragment getTargetFragment() -> getTargetFragment
    int getTargetRequestCode() -> getTargetRequestCode
    android.support.v4.app.FragmentActivity getActivity() -> getActivity
    android.content.res.Resources getResources() -> getResources
    java.lang.CharSequence getText(int) -> getText
    java.lang.String getString(int) -> getString
    java.lang.String getString(int,java.lang.Object[]) -> getString
    android.support.v4.app.FragmentManager getFragmentManager() -> getFragmentManager
    android.support.v4.app.FragmentManager getChildFragmentManager() -> getChildFragmentManager
    android.support.v4.app.Fragment getParentFragment() -> getParentFragment
    boolean isAdded() -> isAdded
    boolean isDetached() -> isDetached
    boolean isRemoving() -> isRemoving
    boolean isInLayout() -> isInLayout
    boolean isResumed() -> isResumed
    boolean isVisible() -> isVisible
    boolean isHidden() -> isHidden
    boolean hasOptionsMenu() -> hasOptionsMenu
    boolean isMenuVisible() -> isMenuVisible
    void onHiddenChanged(boolean) -> onHiddenChanged
    void setRetainInstance(boolean) -> setRetainInstance
    boolean getRetainInstance() -> getRetainInstance
    void setHasOptionsMenu(boolean) -> setHasOptionsMenu
    void setMenuVisibility(boolean) -> setMenuVisibility
    void setUserVisibleHint(boolean) -> setUserVisibleHint
    boolean getUserVisibleHint() -> getUserVisibleHint
    android.support.v4.app.LoaderManager getLoaderManager() -> getLoaderManager
    void startActivity(android.content.Intent) -> startActivity
    void startActivityForResult(android.content.Intent,int) -> startActivityForResult
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    android.view.LayoutInflater getLayoutInflater(android.os.Bundle) -> getLayoutInflater
    void onInflate(android.app.Activity,android.util.AttributeSet,android.os.Bundle) -> onInflate
    void onAttach(android.app.Activity) -> onAttach
    android.view.animation.Animation onCreateAnimation(int,boolean,int) -> onCreateAnimation
    void onCreate(android.os.Bundle) -> onCreate
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onViewCreated(android.view.View,android.os.Bundle) -> onViewCreated
    android.view.View getView() -> getView
    void onActivityCreated(android.os.Bundle) -> onActivityCreated
    void onViewStateRestored(android.os.Bundle) -> onViewStateRestored
    void onStart() -> onStart
    void onResume() -> onResume
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onPause() -> onPause
    void onStop() -> onStop
    void onLowMemory() -> onLowMemory
    void onDestroyView() -> onDestroyView
    void onDestroy() -> onDestroy
    void initState() -> initState
    void onDetach() -> onDetach
    void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> onCreateOptionsMenu
    void onPrepareOptionsMenu(android.view.Menu) -> onPrepareOptionsMenu
    void onDestroyOptionsMenu() -> onDestroyOptionsMenu
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void onOptionsMenuClosed(android.view.Menu) -> onOptionsMenuClosed
    void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
    void registerForContextMenu(android.view.View) -> registerForContextMenu
    void unregisterForContextMenu(android.view.View) -> unregisterForContextMenu
    boolean onContextItemSelected(android.view.MenuItem) -> onContextItemSelected
    void setEnterSharedElementCallback(android.support.v4.app.SharedElementCallback) -> setEnterSharedElementCallback
    void setExitSharedElementCallback(android.support.v4.app.SharedElementCallback) -> setExitSharedElementCallback
    void setEnterTransition(java.lang.Object) -> setEnterTransition
    java.lang.Object getEnterTransition() -> getEnterTransition
    void setReturnTransition(java.lang.Object) -> setReturnTransition
    java.lang.Object getReturnTransition() -> getReturnTransition
    void setExitTransition(java.lang.Object) -> setExitTransition
    java.lang.Object getExitTransition() -> getExitTransition
    void setReenterTransition(java.lang.Object) -> setReenterTransition
    java.lang.Object getReenterTransition() -> getReenterTransition
    void setSharedElementEnterTransition(java.lang.Object) -> setSharedElementEnterTransition
    java.lang.Object getSharedElementEnterTransition() -> getSharedElementEnterTransition
    void setSharedElementReturnTransition(java.lang.Object) -> setSharedElementReturnTransition
    java.lang.Object getSharedElementReturnTransition() -> getSharedElementReturnTransition
    void setAllowEnterTransitionOverlap(boolean) -> setAllowEnterTransitionOverlap
    boolean getAllowEnterTransitionOverlap() -> getAllowEnterTransitionOverlap
    void setAllowReturnTransitionOverlap(boolean) -> setAllowReturnTransitionOverlap
    boolean getAllowReturnTransitionOverlap() -> getAllowReturnTransitionOverlap
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    android.support.v4.app.Fragment findFragmentByWho(java.lang.String) -> findFragmentByWho
    void instantiateChildFragmentManager() -> instantiateChildFragmentManager
    void performCreate(android.os.Bundle) -> performCreate
    android.view.View performCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> performCreateView
    void performActivityCreated(android.os.Bundle) -> performActivityCreated
    void performStart() -> performStart
    void performResume() -> performResume
    void performConfigurationChanged(android.content.res.Configuration) -> performConfigurationChanged
    void performLowMemory() -> performLowMemory
    boolean performCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> performCreateOptionsMenu
    boolean performPrepareOptionsMenu(android.view.Menu) -> performPrepareOptionsMenu
    boolean performOptionsItemSelected(android.view.MenuItem) -> performOptionsItemSelected
    boolean performContextItemSelected(android.view.MenuItem) -> performContextItemSelected
    void performOptionsMenuClosed(android.view.Menu) -> performOptionsMenuClosed
    void performSaveInstanceState(android.os.Bundle) -> performSaveInstanceState
    void performPause() -> performPause
    void performStop() -> performStop
    void performReallyStop() -> performReallyStop
    void performDestroyView() -> performDestroyView
    void performDestroy() -> performDestroy
android.support.v4.app.Fragment$1 -> android.support.v4.app.Fragment$1:
    android.support.v4.app.Fragment this$0 -> this$0
    android.view.View findViewById(int) -> findViewById
    boolean hasView() -> hasView
android.support.v4.app.Fragment$InstantiationException -> android.support.v4.app.Fragment$InstantiationException:
android.support.v4.app.Fragment$SavedState -> android.support.v4.app.Fragment$SavedState:
    android.os.Bundle mState -> mState
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.Fragment$SavedState$1 -> android.support.v4.app.Fragment$SavedState$1:
    android.support.v4.app.Fragment$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.app.Fragment$SavedState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentActivity -> android.support.v4.app.FragmentActivity:
    java.lang.String TAG -> TAG
    java.lang.String FRAGMENTS_TAG -> FRAGMENTS_TAG
    int HONEYCOMB -> HONEYCOMB
    int MSG_REALLY_STOPPED -> MSG_REALLY_STOPPED
    int MSG_RESUME_PENDING -> MSG_RESUME_PENDING
    android.os.Handler mHandler -> mHandler
    android.support.v4.app.FragmentManagerImpl mFragments -> mFragments
    android.support.v4.app.FragmentContainer mContainer -> mContainer
    boolean mCreated -> mCreated
    boolean mResumed -> mResumed
    boolean mStopped -> mStopped
    boolean mReallyStopped -> mReallyStopped
    boolean mRetaining -> mRetaining
    boolean mOptionsMenuInvalidated -> mOptionsMenuInvalidated
    boolean mCheckedForLoaderManager -> mCheckedForLoaderManager
    boolean mLoadersStarted -> mLoadersStarted
    android.support.v4.util.SimpleArrayMap mAllLoaderManagers -> mAllLoaderManagers
    android.support.v4.app.LoaderManagerImpl mLoaderManager -> mLoaderManager
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onBackPressed() -> onBackPressed
    void supportFinishAfterTransition() -> supportFinishAfterTransition
    void setEnterSharedElementCallback(android.support.v4.app.SharedElementCallback) -> setEnterSharedElementCallback
    void setExitSharedElementCallback(android.support.v4.app.SharedElementCallback) -> setExitSharedElementCallback
    void supportPostponeEnterTransition() -> supportPostponeEnterTransition
    void supportStartPostponedEnterTransition() -> supportStartPostponedEnterTransition
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onCreate(android.os.Bundle) -> onCreate
    boolean onCreatePanelMenu(int,android.view.Menu) -> onCreatePanelMenu
    android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    void onDestroy() -> onDestroy
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onLowMemory() -> onLowMemory
    boolean onMenuItemSelected(int,android.view.MenuItem) -> onMenuItemSelected
    void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    void onPause() -> onPause
    void onNewIntent(android.content.Intent) -> onNewIntent
    void onResume() -> onResume
    void onPostResume() -> onPostResume
    void onResumeFragments() -> onResumeFragments
    boolean onPreparePanel(int,android.view.View,android.view.Menu) -> onPreparePanel
    boolean onPrepareOptionsPanel(android.view.View,android.view.Menu) -> onPrepareOptionsPanel
    java.lang.Object onRetainNonConfigurationInstance() -> onRetainNonConfigurationInstance
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onStart() -> onStart
    void onStop() -> onStop
    java.lang.Object onRetainCustomNonConfigurationInstance() -> onRetainCustomNonConfigurationInstance
    java.lang.Object getLastCustomNonConfigurationInstance() -> getLastCustomNonConfigurationInstance
    void supportInvalidateOptionsMenu() -> supportInvalidateOptionsMenu
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    java.lang.String viewToString(android.view.View) -> viewToString
    void dumpViewHierarchy(java.lang.String,java.io.PrintWriter,android.view.View) -> dumpViewHierarchy
    void doReallyStop(boolean) -> doReallyStop
    void onReallyStop() -> onReallyStop
    void onAttachFragment(android.support.v4.app.Fragment) -> onAttachFragment
    android.support.v4.app.FragmentManager getSupportFragmentManager() -> getSupportFragmentManager
    void startActivityForResult(android.content.Intent,int) -> startActivityForResult
    void startActivityFromFragment(android.support.v4.app.Fragment,android.content.Intent,int) -> startActivityFromFragment
    void invalidateSupportFragment(java.lang.String) -> invalidateSupportFragment
    android.support.v4.app.LoaderManager getSupportLoaderManager() -> getSupportLoaderManager
    android.support.v4.app.LoaderManagerImpl getLoaderManager(java.lang.String,boolean,boolean) -> getLoaderManager
android.support.v4.app.FragmentActivity$1 -> android.support.v4.app.FragmentActivity$1:
    android.support.v4.app.FragmentActivity this$0 -> this$0
    void handleMessage(android.os.Message) -> handleMessage
android.support.v4.app.FragmentActivity$2 -> android.support.v4.app.FragmentActivity$2:
    android.support.v4.app.FragmentActivity this$0 -> this$0
    android.view.View findViewById(int) -> findViewById
    boolean hasView() -> hasView
android.support.v4.app.FragmentActivity$NonConfigurationInstances -> android.support.v4.app.FragmentActivity$NonConfigurationInstances:
    java.lang.Object activity -> activity
    java.lang.Object custom -> custom
    android.support.v4.util.SimpleArrayMap children -> children
    java.util.ArrayList fragments -> fragments
    android.support.v4.util.SimpleArrayMap loaders -> loaders
android.support.v4.app.FragmentContainer -> android.support.v4.app.FragmentContainer:
    android.view.View findViewById(int) -> findViewById
    boolean hasView() -> hasView
android.support.v4.app.FragmentManager -> android.support.v4.app.FragmentManager:
    int POP_BACK_STACK_INCLUSIVE -> POP_BACK_STACK_INCLUSIVE
    android.support.v4.app.FragmentTransaction beginTransaction() -> beginTransaction
    android.support.v4.app.FragmentTransaction openTransaction() -> openTransaction
    boolean executePendingTransactions() -> executePendingTransactions
    android.support.v4.app.Fragment findFragmentById(int) -> findFragmentById
    android.support.v4.app.Fragment findFragmentByTag(java.lang.String) -> findFragmentByTag
    void popBackStack() -> popBackStack
    boolean popBackStackImmediate() -> popBackStackImmediate
    void popBackStack(java.lang.String,int) -> popBackStack
    boolean popBackStackImmediate(java.lang.String,int) -> popBackStackImmediate
    void popBackStack(int,int) -> popBackStack
    boolean popBackStackImmediate(int,int) -> popBackStackImmediate
    int getBackStackEntryCount() -> getBackStackEntryCount
    android.support.v4.app.FragmentManager$BackStackEntry getBackStackEntryAt(int) -> getBackStackEntryAt
    void addOnBackStackChangedListener(android.support.v4.app.FragmentManager$OnBackStackChangedListener) -> addOnBackStackChangedListener
    void removeOnBackStackChangedListener(android.support.v4.app.FragmentManager$OnBackStackChangedListener) -> removeOnBackStackChangedListener
    void putFragment(android.os.Bundle,java.lang.String,android.support.v4.app.Fragment) -> putFragment
    android.support.v4.app.Fragment getFragment(android.os.Bundle,java.lang.String) -> getFragment
    java.util.List getFragments() -> getFragments
    android.support.v4.app.Fragment$SavedState saveFragmentInstanceState(android.support.v4.app.Fragment) -> saveFragmentInstanceState
    boolean isDestroyed() -> isDestroyed
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    void enableDebugLogging(boolean) -> enableDebugLogging
android.support.v4.app.FragmentManager$BackStackEntry -> android.support.v4.app.FragmentManager$BackStackEntry:
    int getId() -> getId
    java.lang.String getName() -> getName
    int getBreadCrumbTitleRes() -> getBreadCrumbTitleRes
    int getBreadCrumbShortTitleRes() -> getBreadCrumbShortTitleRes
    java.lang.CharSequence getBreadCrumbTitle() -> getBreadCrumbTitle
    java.lang.CharSequence getBreadCrumbShortTitle() -> getBreadCrumbShortTitle
android.support.v4.app.FragmentManager$OnBackStackChangedListener -> android.support.v4.app.FragmentManager$OnBackStackChangedListener:
    void onBackStackChanged() -> onBackStackChanged
android.support.v4.app.FragmentManagerImpl -> android.support.v4.app.FragmentManagerImpl:
    boolean DEBUG -> DEBUG
    java.lang.String TAG -> TAG
    boolean HONEYCOMB -> HONEYCOMB
    java.lang.String TARGET_REQUEST_CODE_STATE_TAG -> TARGET_REQUEST_CODE_STATE_TAG
    java.lang.String TARGET_STATE_TAG -> TARGET_STATE_TAG
    java.lang.String VIEW_STATE_TAG -> VIEW_STATE_TAG
    java.lang.String USER_VISIBLE_HINT_TAG -> USER_VISIBLE_HINT_TAG
    java.util.ArrayList mPendingActions -> mPendingActions
    java.lang.Runnable[] mTmpActions -> mTmpActions
    boolean mExecutingActions -> mExecutingActions
    java.util.ArrayList mActive -> mActive
    java.util.ArrayList mAdded -> mAdded
    java.util.ArrayList mAvailIndices -> mAvailIndices
    java.util.ArrayList mBackStack -> mBackStack
    java.util.ArrayList mCreatedMenus -> mCreatedMenus
    java.util.ArrayList mBackStackIndices -> mBackStackIndices
    java.util.ArrayList mAvailBackStackIndices -> mAvailBackStackIndices
    java.util.ArrayList mBackStackChangeListeners -> mBackStackChangeListeners
    int mCurState -> mCurState
    android.support.v4.app.FragmentActivity mActivity -> mActivity
    android.support.v4.app.FragmentContainer mContainer -> mContainer
    android.support.v4.app.Fragment mParent -> mParent
    boolean mNeedMenuInvalidate -> mNeedMenuInvalidate
    boolean mStateSaved -> mStateSaved
    boolean mDestroyed -> mDestroyed
    java.lang.String mNoTransactionsBecause -> mNoTransactionsBecause
    boolean mHavePendingDeferredStart -> mHavePendingDeferredStart
    android.os.Bundle mStateBundle -> mStateBundle
    android.util.SparseArray mStateArray -> mStateArray
    java.lang.Runnable mExecCommit -> mExecCommit
    android.view.animation.Interpolator DECELERATE_QUINT -> DECELERATE_QUINT
    android.view.animation.Interpolator DECELERATE_CUBIC -> DECELERATE_CUBIC
    android.view.animation.Interpolator ACCELERATE_QUINT -> ACCELERATE_QUINT
    android.view.animation.Interpolator ACCELERATE_CUBIC -> ACCELERATE_CUBIC
    int ANIM_DUR -> ANIM_DUR
    int ANIM_STYLE_OPEN_ENTER -> ANIM_STYLE_OPEN_ENTER
    int ANIM_STYLE_OPEN_EXIT -> ANIM_STYLE_OPEN_EXIT
    int ANIM_STYLE_CLOSE_ENTER -> ANIM_STYLE_CLOSE_ENTER
    int ANIM_STYLE_CLOSE_EXIT -> ANIM_STYLE_CLOSE_EXIT
    int ANIM_STYLE_FADE_ENTER -> ANIM_STYLE_FADE_ENTER
    int ANIM_STYLE_FADE_EXIT -> ANIM_STYLE_FADE_EXIT
    void throwException(java.lang.RuntimeException) -> throwException
    android.support.v4.app.FragmentTransaction beginTransaction() -> beginTransaction
    boolean executePendingTransactions() -> executePendingTransactions
    void popBackStack() -> popBackStack
    boolean popBackStackImmediate() -> popBackStackImmediate
    void popBackStack(java.lang.String,int) -> popBackStack
    boolean popBackStackImmediate(java.lang.String,int) -> popBackStackImmediate
    void popBackStack(int,int) -> popBackStack
    boolean popBackStackImmediate(int,int) -> popBackStackImmediate
    int getBackStackEntryCount() -> getBackStackEntryCount
    android.support.v4.app.FragmentManager$BackStackEntry getBackStackEntryAt(int) -> getBackStackEntryAt
    void addOnBackStackChangedListener(android.support.v4.app.FragmentManager$OnBackStackChangedListener) -> addOnBackStackChangedListener
    void removeOnBackStackChangedListener(android.support.v4.app.FragmentManager$OnBackStackChangedListener) -> removeOnBackStackChangedListener
    void putFragment(android.os.Bundle,java.lang.String,android.support.v4.app.Fragment) -> putFragment
    android.support.v4.app.Fragment getFragment(android.os.Bundle,java.lang.String) -> getFragment
    java.util.List getFragments() -> getFragments
    android.support.v4.app.Fragment$SavedState saveFragmentInstanceState(android.support.v4.app.Fragment) -> saveFragmentInstanceState
    boolean isDestroyed() -> isDestroyed
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    android.view.animation.Animation makeOpenCloseAnimation(android.content.Context,float,float,float,float) -> makeOpenCloseAnimation
    android.view.animation.Animation makeFadeAnimation(android.content.Context,float,float) -> makeFadeAnimation
    android.view.animation.Animation loadAnimation(android.support.v4.app.Fragment,int,boolean,int) -> loadAnimation
    void performPendingDeferredStart(android.support.v4.app.Fragment) -> performPendingDeferredStart
    void moveToState(android.support.v4.app.Fragment,int,int,int,boolean) -> moveToState
    void moveToState(android.support.v4.app.Fragment) -> moveToState
    void moveToState(int,boolean) -> moveToState
    void moveToState(int,int,int,boolean) -> moveToState
    void startPendingDeferredFragments() -> startPendingDeferredFragments
    void makeActive(android.support.v4.app.Fragment) -> makeActive
    void makeInactive(android.support.v4.app.Fragment) -> makeInactive
    void addFragment(android.support.v4.app.Fragment,boolean) -> addFragment
    void removeFragment(android.support.v4.app.Fragment,int,int) -> removeFragment
    void hideFragment(android.support.v4.app.Fragment,int,int) -> hideFragment
    void showFragment(android.support.v4.app.Fragment,int,int) -> showFragment
    void detachFragment(android.support.v4.app.Fragment,int,int) -> detachFragment
    void attachFragment(android.support.v4.app.Fragment,int,int) -> attachFragment
    android.support.v4.app.Fragment findFragmentById(int) -> findFragmentById
    android.support.v4.app.Fragment findFragmentByTag(java.lang.String) -> findFragmentByTag
    android.support.v4.app.Fragment findFragmentByWho(java.lang.String) -> findFragmentByWho
    void checkStateLoss() -> checkStateLoss
    void enqueueAction(java.lang.Runnable,boolean) -> enqueueAction
    int allocBackStackIndex(android.support.v4.app.BackStackRecord) -> allocBackStackIndex
    void setBackStackIndex(int,android.support.v4.app.BackStackRecord) -> setBackStackIndex
    void freeBackStackIndex(int) -> freeBackStackIndex
    boolean execPendingActions() -> execPendingActions
    void reportBackStackChanged() -> reportBackStackChanged
    void addBackStackState(android.support.v4.app.BackStackRecord) -> addBackStackState
    boolean popBackStackState(android.os.Handler,java.lang.String,int,int) -> popBackStackState
    java.util.ArrayList retainNonConfig() -> retainNonConfig
    void saveFragmentViewState(android.support.v4.app.Fragment) -> saveFragmentViewState
    android.os.Bundle saveFragmentBasicState(android.support.v4.app.Fragment) -> saveFragmentBasicState
    android.os.Parcelable saveAllState() -> saveAllState
    void restoreAllState(android.os.Parcelable,java.util.ArrayList) -> restoreAllState
    void attachActivity(android.support.v4.app.FragmentActivity,android.support.v4.app.FragmentContainer,android.support.v4.app.Fragment) -> attachActivity
    void noteStateNotSaved() -> noteStateNotSaved
    void dispatchCreate() -> dispatchCreate
    void dispatchActivityCreated() -> dispatchActivityCreated
    void dispatchStart() -> dispatchStart
    void dispatchResume() -> dispatchResume
    void dispatchPause() -> dispatchPause
    void dispatchStop() -> dispatchStop
    void dispatchReallyStop() -> dispatchReallyStop
    void dispatchDestroyView() -> dispatchDestroyView
    void dispatchDestroy() -> dispatchDestroy
    void dispatchConfigurationChanged(android.content.res.Configuration) -> dispatchConfigurationChanged
    void dispatchLowMemory() -> dispatchLowMemory
    boolean dispatchCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> dispatchCreateOptionsMenu
    boolean dispatchPrepareOptionsMenu(android.view.Menu) -> dispatchPrepareOptionsMenu
    boolean dispatchOptionsItemSelected(android.view.MenuItem) -> dispatchOptionsItemSelected
    boolean dispatchContextItemSelected(android.view.MenuItem) -> dispatchContextItemSelected
    void dispatchOptionsMenuClosed(android.view.Menu) -> dispatchOptionsMenuClosed
    int reverseTransit(int) -> reverseTransit
    int transitToStyleIndex(int,boolean) -> transitToStyleIndex
    android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    android.view.LayoutInflater$Factory getLayoutInflaterFactory() -> getLayoutInflaterFactory
android.support.v4.app.FragmentManagerImpl$1 -> android.support.v4.app.FragmentManagerImpl$1:
    android.support.v4.app.FragmentManagerImpl this$0 -> this$0
    void run() -> run
android.support.v4.app.FragmentManagerImpl$2 -> android.support.v4.app.FragmentManagerImpl$2:
    android.support.v4.app.FragmentManagerImpl this$0 -> this$0
    void run() -> run
android.support.v4.app.FragmentManagerImpl$3 -> android.support.v4.app.FragmentManagerImpl$3:
    java.lang.String val$name -> val$name
    int val$flags -> val$flags
    android.support.v4.app.FragmentManagerImpl this$0 -> this$0
    void run() -> run
android.support.v4.app.FragmentManagerImpl$4 -> android.support.v4.app.FragmentManagerImpl$4:
    int val$id -> val$id
    int val$flags -> val$flags
    android.support.v4.app.FragmentManagerImpl this$0 -> this$0
    void run() -> run
android.support.v4.app.FragmentManagerImpl$5 -> android.support.v4.app.FragmentManagerImpl$5:
    android.support.v4.app.Fragment val$fragment -> val$fragment
    android.support.v4.app.FragmentManagerImpl this$0 -> this$0
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
android.support.v4.app.FragmentManagerImpl$FragmentTag -> android.support.v4.app.FragmentManagerImpl$FragmentTag:
    int[] Fragment -> Fragment
    int Fragment_id -> Fragment_id
    int Fragment_name -> Fragment_name
    int Fragment_tag -> Fragment_tag
android.support.v4.app.FragmentManagerState -> android.support.v4.app.FragmentManagerState:
    android.support.v4.app.FragmentState[] mActive -> mActive
    int[] mAdded -> mAdded
    android.support.v4.app.BackStackState[] mBackStack -> mBackStack
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.FragmentManagerState$1 -> android.support.v4.app.FragmentManagerState$1:
    android.support.v4.app.FragmentManagerState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.app.FragmentManagerState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentPagerAdapter -> android.support.v4.app.FragmentPagerAdapter:
    java.lang.String TAG -> TAG
    boolean DEBUG -> DEBUG
    android.support.v4.app.FragmentManager mFragmentManager -> mFragmentManager
    android.support.v4.app.FragmentTransaction mCurTransaction -> mCurTransaction
    android.support.v4.app.Fragment mCurrentPrimaryItem -> mCurrentPrimaryItem
    android.support.v4.app.Fragment getItem(int) -> getItem
    void startUpdate(android.view.ViewGroup) -> startUpdate
    java.lang.Object instantiateItem(android.view.ViewGroup,int) -> instantiateItem
    void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> destroyItem
    void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object) -> setPrimaryItem
    void finishUpdate(android.view.ViewGroup) -> finishUpdate
    boolean isViewFromObject(android.view.View,java.lang.Object) -> isViewFromObject
    android.os.Parcelable saveState() -> saveState
    void restoreState(android.os.Parcelable,java.lang.ClassLoader) -> restoreState
    long getItemId(int) -> getItemId
    java.lang.String makeFragmentName(int,long) -> makeFragmentName
android.support.v4.app.FragmentState -> android.support.v4.app.FragmentState:
    java.lang.String mClassName -> mClassName
    int mIndex -> mIndex
    boolean mFromLayout -> mFromLayout
    int mFragmentId -> mFragmentId
    int mContainerId -> mContainerId
    java.lang.String mTag -> mTag
    boolean mRetainInstance -> mRetainInstance
    boolean mDetached -> mDetached
    android.os.Bundle mArguments -> mArguments
    android.os.Bundle mSavedFragmentState -> mSavedFragmentState
    android.support.v4.app.Fragment mInstance -> mInstance
    android.os.Parcelable$Creator CREATOR -> CREATOR
    android.support.v4.app.Fragment instantiate(android.support.v4.app.FragmentActivity,android.support.v4.app.Fragment) -> instantiate
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.FragmentState$1 -> android.support.v4.app.FragmentState$1:
    android.support.v4.app.FragmentState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.app.FragmentState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentStatePagerAdapter -> android.support.v4.app.FragmentStatePagerAdapter:
    java.lang.String TAG -> TAG
    boolean DEBUG -> DEBUG
    android.support.v4.app.FragmentManager mFragmentManager -> mFragmentManager
    android.support.v4.app.FragmentTransaction mCurTransaction -> mCurTransaction
    java.util.ArrayList mSavedState -> mSavedState
    java.util.ArrayList mFragments -> mFragments
    android.support.v4.app.Fragment mCurrentPrimaryItem -> mCurrentPrimaryItem
    android.support.v4.app.Fragment getItem(int) -> getItem
    void startUpdate(android.view.ViewGroup) -> startUpdate
    java.lang.Object instantiateItem(android.view.ViewGroup,int) -> instantiateItem
    void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> destroyItem
    void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object) -> setPrimaryItem
    void finishUpdate(android.view.ViewGroup) -> finishUpdate
    boolean isViewFromObject(android.view.View,java.lang.Object) -> isViewFromObject
    android.os.Parcelable saveState() -> saveState
    void restoreState(android.os.Parcelable,java.lang.ClassLoader) -> restoreState
android.support.v4.app.FragmentTabHost -> android.support.v4.app.FragmentTabHost:
    java.util.ArrayList mTabs -> mTabs
    android.widget.FrameLayout mRealTabContent -> mRealTabContent
    android.content.Context mContext -> mContext
    android.support.v4.app.FragmentManager mFragmentManager -> mFragmentManager
    int mContainerId -> mContainerId
    android.widget.TabHost$OnTabChangeListener mOnTabChangeListener -> mOnTabChangeListener
    android.support.v4.app.FragmentTabHost$TabInfo mLastTab -> mLastTab
    boolean mAttached -> mAttached
    void initFragmentTabHost(android.content.Context,android.util.AttributeSet) -> initFragmentTabHost
    void ensureHierarchy(android.content.Context) -> ensureHierarchy
    void setup() -> setup
    void setup(android.content.Context,android.support.v4.app.FragmentManager) -> setup
    void setup(android.content.Context,android.support.v4.app.FragmentManager,int) -> setup
    void ensureContent() -> ensureContent
    void setOnTabChangedListener(android.widget.TabHost$OnTabChangeListener) -> setOnTabChangedListener
    void addTab(android.widget.TabHost$TabSpec,java.lang.Class,android.os.Bundle) -> addTab
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void onTabChanged(java.lang.String) -> onTabChanged
    android.support.v4.app.FragmentTransaction doTabChanged(java.lang.String,android.support.v4.app.FragmentTransaction) -> doTabChanged
android.support.v4.app.FragmentTabHost$1 -> android.support.v4.app.FragmentTabHost$1:
android.support.v4.app.FragmentTabHost$DummyTabFactory -> android.support.v4.app.FragmentTabHost$DummyTabFactory:
    android.content.Context mContext -> mContext
    android.view.View createTabContent(java.lang.String) -> createTabContent
android.support.v4.app.FragmentTabHost$SavedState -> android.support.v4.app.FragmentTabHost$SavedState:
    java.lang.String curTab -> curTab
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
android.support.v4.app.FragmentTabHost$SavedState$1 -> android.support.v4.app.FragmentTabHost$SavedState$1:
    android.support.v4.app.FragmentTabHost$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.app.FragmentTabHost$SavedState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentTabHost$TabInfo -> android.support.v4.app.FragmentTabHost$TabInfo:
    java.lang.String tag -> tag
    java.lang.Class clss -> clss
    android.os.Bundle args -> args
    android.support.v4.app.Fragment fragment -> fragment
    android.support.v4.app.Fragment access$102(android.support.v4.app.FragmentTabHost$TabInfo,android.support.v4.app.Fragment) -> access$102
    android.support.v4.app.Fragment access$100(android.support.v4.app.FragmentTabHost$TabInfo) -> access$100
    java.lang.String access$200(android.support.v4.app.FragmentTabHost$TabInfo) -> access$200
    java.lang.Class access$300(android.support.v4.app.FragmentTabHost$TabInfo) -> access$300
    android.os.Bundle access$400(android.support.v4.app.FragmentTabHost$TabInfo) -> access$400
android.support.v4.app.FragmentTransaction -> android.support.v4.app.FragmentTransaction:
    int TRANSIT_ENTER_MASK -> TRANSIT_ENTER_MASK
    int TRANSIT_EXIT_MASK -> TRANSIT_EXIT_MASK
    int TRANSIT_UNSET -> TRANSIT_UNSET
    int TRANSIT_NONE -> TRANSIT_NONE
    int TRANSIT_FRAGMENT_OPEN -> TRANSIT_FRAGMENT_OPEN
    int TRANSIT_FRAGMENT_CLOSE -> TRANSIT_FRAGMENT_CLOSE
    int TRANSIT_FRAGMENT_FADE -> TRANSIT_FRAGMENT_FADE
    android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String) -> add
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment) -> add
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment,java.lang.String) -> add
    android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment) -> replace
    android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment,java.lang.String) -> replace
    android.support.v4.app.FragmentTransaction remove(android.support.v4.app.Fragment) -> remove
    android.support.v4.app.FragmentTransaction hide(android.support.v4.app.Fragment) -> hide
    android.support.v4.app.FragmentTransaction show(android.support.v4.app.Fragment) -> show
    android.support.v4.app.FragmentTransaction detach(android.support.v4.app.Fragment) -> detach
    android.support.v4.app.FragmentTransaction attach(android.support.v4.app.Fragment) -> attach
    boolean isEmpty() -> isEmpty
    android.support.v4.app.FragmentTransaction setCustomAnimations(int,int) -> setCustomAnimations
    android.support.v4.app.FragmentTransaction setCustomAnimations(int,int,int,int) -> setCustomAnimations
    android.support.v4.app.FragmentTransaction addSharedElement(android.view.View,java.lang.String) -> addSharedElement
    android.support.v4.app.FragmentTransaction setTransition(int) -> setTransition
    android.support.v4.app.FragmentTransaction setTransitionStyle(int) -> setTransitionStyle
    android.support.v4.app.FragmentTransaction addToBackStack(java.lang.String) -> addToBackStack
    boolean isAddToBackStackAllowed() -> isAddToBackStackAllowed
    android.support.v4.app.FragmentTransaction disallowAddToBackStack() -> disallowAddToBackStack
    android.support.v4.app.FragmentTransaction setBreadCrumbTitle(int) -> setBreadCrumbTitle
    android.support.v4.app.FragmentTransaction setBreadCrumbTitle(java.lang.CharSequence) -> setBreadCrumbTitle
    android.support.v4.app.FragmentTransaction setBreadCrumbShortTitle(int) -> setBreadCrumbShortTitle
    android.support.v4.app.FragmentTransaction setBreadCrumbShortTitle(java.lang.CharSequence) -> setBreadCrumbShortTitle
    int commit() -> commit
    int commitAllowingStateLoss() -> commitAllowingStateLoss
android.support.v4.app.FragmentTransaction$Transit -> android.support.v4.app.FragmentTransaction$Transit:
android.support.v4.app.FragmentTransitionCompat21 -> android.support.v4.app.FragmentTransitionCompat21:
    java.lang.String getTransitionName(android.view.View) -> getTransitionName
    java.lang.Object cloneTransition(java.lang.Object) -> cloneTransition
    java.lang.Object captureExitingViews(java.lang.Object,android.view.View,java.util.ArrayList,java.util.Map) -> captureExitingViews
    void excludeTarget(java.lang.Object,android.view.View,boolean) -> excludeTarget
    void beginDelayedTransition(android.view.ViewGroup,java.lang.Object) -> beginDelayedTransition
    void setEpicenter(java.lang.Object,android.view.View) -> setEpicenter
    void addTransitionTargets(java.lang.Object,java.lang.Object,android.view.View,android.support.v4.app.FragmentTransitionCompat21$ViewRetriever,android.view.View,android.support.v4.app.FragmentTransitionCompat21$EpicenterView,java.util.Map,java.util.ArrayList,java.util.Map,java.util.ArrayList) -> addTransitionTargets
    java.lang.Object mergeTransitions(java.lang.Object,java.lang.Object,java.lang.Object,boolean) -> mergeTransitions
    void setSharedElementEpicenter(android.transition.Transition,android.support.v4.app.FragmentTransitionCompat21$EpicenterView) -> setSharedElementEpicenter
    android.graphics.Rect getBoundsOnScreen(android.view.View) -> getBoundsOnScreen
    void captureTransitioningViews(java.util.ArrayList,android.view.View) -> captureTransitioningViews
    void findNamedViews(java.util.Map,android.view.View) -> findNamedViews
    void cleanupTransitions(android.view.View,android.view.View,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList,java.util.Map) -> cleanupTransitions
    void removeTargets(java.lang.Object,java.util.ArrayList) -> removeTargets
    void addTargets(java.lang.Object,java.util.ArrayList) -> addTargets
    void access$000(java.util.ArrayList,android.view.View) -> access$000
    android.graphics.Rect access$100(android.view.View) -> access$100
android.support.v4.app.FragmentTransitionCompat21$1 -> android.support.v4.app.FragmentTransitionCompat21$1:
    android.graphics.Rect val$epicenter -> val$epicenter
    android.graphics.Rect onGetEpicenter(android.transition.Transition) -> onGetEpicenter
android.support.v4.app.FragmentTransitionCompat21$2 -> android.support.v4.app.FragmentTransitionCompat21$2:
    android.view.View val$container -> val$container
    android.support.v4.app.FragmentTransitionCompat21$ViewRetriever val$inFragment -> val$inFragment
    java.util.Map val$nameOverrides -> val$nameOverrides
    java.util.Map val$renamedViews -> val$renamedViews
    android.transition.Transition val$enterTransition -> val$enterTransition
    java.util.ArrayList val$enteringViews -> val$enteringViews
    boolean onPreDraw() -> onPreDraw
android.support.v4.app.FragmentTransitionCompat21$3 -> android.support.v4.app.FragmentTransitionCompat21$3:
    android.graphics.Rect mEpicenter -> mEpicenter
    android.support.v4.app.FragmentTransitionCompat21$EpicenterView val$epicenterView -> val$epicenterView
    android.graphics.Rect onGetEpicenter(android.transition.Transition) -> onGetEpicenter
android.support.v4.app.FragmentTransitionCompat21$4 -> android.support.v4.app.FragmentTransitionCompat21$4:
    android.view.View val$sceneRoot -> val$sceneRoot
    android.transition.Transition val$enterTransition -> val$enterTransition
    android.view.View val$nonExistentView -> val$nonExistentView
    java.util.ArrayList val$enteringViews -> val$enteringViews
    android.transition.Transition val$exitTransition -> val$exitTransition
    java.util.ArrayList val$exitingViews -> val$exitingViews
    android.transition.Transition val$sharedElementTransition -> val$sharedElementTransition
    java.util.ArrayList val$sharedElementTargets -> val$sharedElementTargets
    java.util.Map val$renamedViews -> val$renamedViews
    java.util.ArrayList val$hiddenViews -> val$hiddenViews
    android.transition.Transition val$overallTransition -> val$overallTransition
    boolean onPreDraw() -> onPreDraw
android.support.v4.app.FragmentTransitionCompat21$EpicenterView -> android.support.v4.app.FragmentTransitionCompat21$EpicenterView:
    android.view.View epicenter -> epicenter
android.support.v4.app.FragmentTransitionCompat21$ViewRetriever -> android.support.v4.app.FragmentTransitionCompat21$ViewRetriever:
    android.view.View getView() -> getView
android.support.v4.app.INotificationSideChannel -> android.support.v4.app.INotificationSideChannel:
    void notify(java.lang.String,int,java.lang.String,android.app.Notification) -> notify
    void cancel(java.lang.String,int,java.lang.String) -> cancel
    void cancelAll(java.lang.String) -> cancelAll
android.support.v4.app.INotificationSideChannel$Stub -> android.support.v4.app.INotificationSideChannel$Stub:
    java.lang.String DESCRIPTOR -> DESCRIPTOR
    int TRANSACTION_notify -> TRANSACTION_notify
    int TRANSACTION_cancel -> TRANSACTION_cancel
    int TRANSACTION_cancelAll -> TRANSACTION_cancelAll
    android.support.v4.app.INotificationSideChannel asInterface(android.os.IBinder) -> asInterface
    android.os.IBinder asBinder() -> asBinder
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
android.support.v4.app.INotificationSideChannel$Stub$Proxy -> android.support.v4.app.INotificationSideChannel$Stub$Proxy:
    android.os.IBinder mRemote -> mRemote
    android.os.IBinder asBinder() -> asBinder
    java.lang.String getInterfaceDescriptor() -> getInterfaceDescriptor
    void notify(java.lang.String,int,java.lang.String,android.app.Notification) -> notify
    void cancel(java.lang.String,int,java.lang.String) -> cancel
    void cancelAll(java.lang.String) -> cancelAll
android.support.v4.app.ListFragment -> android.support.v4.app.ListFragment:
    int INTERNAL_EMPTY_ID -> INTERNAL_EMPTY_ID
    int INTERNAL_PROGRESS_CONTAINER_ID -> INTERNAL_PROGRESS_CONTAINER_ID
    int INTERNAL_LIST_CONTAINER_ID -> INTERNAL_LIST_CONTAINER_ID
    android.os.Handler mHandler -> mHandler
    java.lang.Runnable mRequestFocus -> mRequestFocus
    android.widget.AdapterView$OnItemClickListener mOnClickListener -> mOnClickListener
    android.widget.ListAdapter mAdapter -> mAdapter
    android.widget.ListView mList -> mList
    android.view.View mEmptyView -> mEmptyView
    android.widget.TextView mStandardEmptyView -> mStandardEmptyView
    android.view.View mProgressContainer -> mProgressContainer
    android.view.View mListContainer -> mListContainer
    java.lang.CharSequence mEmptyText -> mEmptyText
    boolean mListShown -> mListShown
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onViewCreated(android.view.View,android.os.Bundle) -> onViewCreated
    void onDestroyView() -> onDestroyView
    void onListItemClick(android.widget.ListView,android.view.View,int,long) -> onListItemClick
    void setListAdapter(android.widget.ListAdapter) -> setListAdapter
    void setSelection(int) -> setSelection
    int getSelectedItemPosition() -> getSelectedItemPosition
    long getSelectedItemId() -> getSelectedItemId
    android.widget.ListView getListView() -> getListView
    void setEmptyText(java.lang.CharSequence) -> setEmptyText
    void setListShown(boolean) -> setListShown
    void setListShownNoAnimation(boolean) -> setListShownNoAnimation
    void setListShown(boolean,boolean) -> setListShown
    android.widget.ListAdapter getListAdapter() -> getListAdapter
    void ensureList() -> ensureList
android.support.v4.app.ListFragment$1 -> android.support.v4.app.ListFragment$1:
    android.support.v4.app.ListFragment this$0 -> this$0
    void run() -> run
android.support.v4.app.ListFragment$2 -> android.support.v4.app.ListFragment$2:
    android.support.v4.app.ListFragment this$0 -> this$0
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
android.support.v4.app.LoaderManager -> android.support.v4.app.LoaderManager:
    android.support.v4.content.Loader initLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> initLoader
    android.support.v4.content.Loader restartLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> restartLoader
    void destroyLoader(int) -> destroyLoader
    android.support.v4.content.Loader getLoader(int) -> getLoader
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    void enableDebugLogging(boolean) -> enableDebugLogging
    boolean hasRunningLoaders() -> hasRunningLoaders
android.support.v4.app.LoaderManager$LoaderCallbacks -> android.support.v4.app.LoaderManager$LoaderCallbacks:
    android.support.v4.content.Loader onCreateLoader(int,android.os.Bundle) -> onCreateLoader
    void onLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> onLoadFinished
    void onLoaderReset(android.support.v4.content.Loader) -> onLoaderReset
android.support.v4.app.LoaderManagerImpl -> android.support.v4.app.LoaderManagerImpl:
    java.lang.String TAG -> TAG
    boolean DEBUG -> DEBUG
    android.support.v4.util.SparseArrayCompat mLoaders -> mLoaders
    android.support.v4.util.SparseArrayCompat mInactiveLoaders -> mInactiveLoaders
    java.lang.String mWho -> mWho
    android.support.v4.app.FragmentActivity mActivity -> mActivity
    boolean mStarted -> mStarted
    boolean mRetaining -> mRetaining
    boolean mRetainingStarted -> mRetainingStarted
    boolean mCreatingLoader -> mCreatingLoader
    void updateActivity(android.support.v4.app.FragmentActivity) -> updateActivity
    android.support.v4.app.LoaderManagerImpl$LoaderInfo createLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> createLoader
    android.support.v4.app.LoaderManagerImpl$LoaderInfo createAndInstallLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> createAndInstallLoader
    void installLoader(android.support.v4.app.LoaderManagerImpl$LoaderInfo) -> installLoader
    android.support.v4.content.Loader initLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> initLoader
    android.support.v4.content.Loader restartLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> restartLoader
    void destroyLoader(int) -> destroyLoader
    android.support.v4.content.Loader getLoader(int) -> getLoader
    void doStart() -> doStart
    void doStop() -> doStop
    void doRetain() -> doRetain
    void finishRetain() -> finishRetain
    void doReportNextStart() -> doReportNextStart
    void doReportStart() -> doReportStart
    void doDestroy() -> doDestroy
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    boolean hasRunningLoaders() -> hasRunningLoaders
android.support.v4.app.LoaderManagerImpl$LoaderInfo -> android.support.v4.app.LoaderManagerImpl$LoaderInfo:
    int mId -> mId
    android.os.Bundle mArgs -> mArgs
    android.support.v4.app.LoaderManager$LoaderCallbacks mCallbacks -> mCallbacks
    android.support.v4.content.Loader mLoader -> mLoader
    boolean mHaveData -> mHaveData
    boolean mDeliveredData -> mDeliveredData
    java.lang.Object mData -> mData
    boolean mStarted -> mStarted
    boolean mRetaining -> mRetaining
    boolean mRetainingStarted -> mRetainingStarted
    boolean mReportNextStart -> mReportNextStart
    boolean mDestroyed -> mDestroyed
    boolean mListenerRegistered -> mListenerRegistered
    android.support.v4.app.LoaderManagerImpl$LoaderInfo mPendingLoader -> mPendingLoader
    android.support.v4.app.LoaderManagerImpl this$0 -> this$0
    void start() -> start
    void retain() -> retain
    void finishRetain() -> finishRetain
    void reportStart() -> reportStart
    void stop() -> stop
    void destroy() -> destroy
    void onLoadComplete(android.support.v4.content.Loader,java.lang.Object) -> onLoadComplete
    void callOnLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> callOnLoadFinished
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
android.support.v4.app.NavUtils -> android.support.v4.app.NavUtils:
    java.lang.String TAG -> TAG
    java.lang.String PARENT_ACTIVITY -> PARENT_ACTIVITY
    android.support.v4.app.NavUtils$NavUtilsImpl IMPL -> IMPL
    boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent) -> shouldUpRecreateTask
    void navigateUpFromSameTask(android.app.Activity) -> navigateUpFromSameTask
    void navigateUpTo(android.app.Activity,android.content.Intent) -> navigateUpTo
    android.content.Intent getParentActivityIntent(android.app.Activity) -> getParentActivityIntent
    android.content.Intent getParentActivityIntent(android.content.Context,java.lang.Class) -> getParentActivityIntent
    android.content.Intent getParentActivityIntent(android.content.Context,android.content.ComponentName) -> getParentActivityIntent
    java.lang.String getParentActivityName(android.app.Activity) -> getParentActivityName
    java.lang.String getParentActivityName(android.content.Context,android.content.ComponentName) -> getParentActivityName
android.support.v4.app.NavUtils$NavUtilsImpl -> android.support.v4.app.NavUtils$NavUtilsImpl:
    android.content.Intent getParentActivityIntent(android.app.Activity) -> getParentActivityIntent
    boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent) -> shouldUpRecreateTask
    void navigateUpTo(android.app.Activity,android.content.Intent) -> navigateUpTo
    java.lang.String getParentActivityName(android.content.Context,android.content.pm.ActivityInfo) -> getParentActivityName
android.support.v4.app.NavUtils$NavUtilsImplBase -> android.support.v4.app.NavUtils$NavUtilsImplBase:
    android.content.Intent getParentActivityIntent(android.app.Activity) -> getParentActivityIntent
    boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent) -> shouldUpRecreateTask
    void navigateUpTo(android.app.Activity,android.content.Intent) -> navigateUpTo
    java.lang.String getParentActivityName(android.content.Context,android.content.pm.ActivityInfo) -> getParentActivityName
android.support.v4.app.NavUtils$NavUtilsImplJB -> android.support.v4.app.NavUtils$NavUtilsImplJB:
    android.content.Intent getParentActivityIntent(android.app.Activity) -> getParentActivityIntent
    android.content.Intent superGetParentActivityIntent(android.app.Activity) -> superGetParentActivityIntent
    boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent) -> shouldUpRecreateTask
    void navigateUpTo(android.app.Activity,android.content.Intent) -> navigateUpTo
    java.lang.String getParentActivityName(android.content.Context,android.content.pm.ActivityInfo) -> getParentActivityName
android.support.v4.app.NavUtilsJB -> android.support.v4.app.NavUtilsJB:
    android.content.Intent getParentActivityIntent(android.app.Activity) -> getParentActivityIntent
    boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent) -> shouldUpRecreateTask
    void navigateUpTo(android.app.Activity,android.content.Intent) -> navigateUpTo
    java.lang.String getParentActivityName(android.content.pm.ActivityInfo) -> getParentActivityName
android.support.v4.app.NoSaveStateFrameLayout -> android.support.v4.app.NoSaveStateFrameLayout:
    android.view.ViewGroup wrap(android.view.View) -> wrap
    void dispatchSaveInstanceState(android.util.SparseArray) -> dispatchSaveInstanceState
    void dispatchRestoreInstanceState(android.util.SparseArray) -> dispatchRestoreInstanceState
android.support.v4.app.NotificationBuilderWithActions -> android.support.v4.app.NotificationBuilderWithActions:
    void addAction(android.support.v4.app.NotificationCompatBase$Action) -> addAction
android.support.v4.app.NotificationBuilderWithBuilderAccessor -> android.support.v4.app.NotificationBuilderWithBuilderAccessor:
    android.app.Notification$Builder getBuilder() -> getBuilder
android.support.v4.app.NotificationCompat -> android.support.v4.app.NotificationCompat:
    int DEFAULT_ALL -> DEFAULT_ALL
    int DEFAULT_SOUND -> DEFAULT_SOUND
    int DEFAULT_VIBRATE -> DEFAULT_VIBRATE
    int DEFAULT_LIGHTS -> DEFAULT_LIGHTS
    int STREAM_DEFAULT -> STREAM_DEFAULT
    int FLAG_SHOW_LIGHTS -> FLAG_SHOW_LIGHTS
    int FLAG_ONGOING_EVENT -> FLAG_ONGOING_EVENT
    int FLAG_INSISTENT -> FLAG_INSISTENT
    int FLAG_ONLY_ALERT_ONCE -> FLAG_ONLY_ALERT_ONCE
    int FLAG_AUTO_CANCEL -> FLAG_AUTO_CANCEL
    int FLAG_NO_CLEAR -> FLAG_NO_CLEAR
    int FLAG_FOREGROUND_SERVICE -> FLAG_FOREGROUND_SERVICE
    int FLAG_HIGH_PRIORITY -> FLAG_HIGH_PRIORITY
    int FLAG_LOCAL_ONLY -> FLAG_LOCAL_ONLY
    int FLAG_GROUP_SUMMARY -> FLAG_GROUP_SUMMARY
    int PRIORITY_DEFAULT -> PRIORITY_DEFAULT
    int PRIORITY_LOW -> PRIORITY_LOW
    int PRIORITY_MIN -> PRIORITY_MIN
    int PRIORITY_HIGH -> PRIORITY_HIGH
    int PRIORITY_MAX -> PRIORITY_MAX
    java.lang.String EXTRA_TITLE -> EXTRA_TITLE
    java.lang.String EXTRA_TITLE_BIG -> EXTRA_TITLE_BIG
    java.lang.String EXTRA_TEXT -> EXTRA_TEXT
    java.lang.String EXTRA_SUB_TEXT -> EXTRA_SUB_TEXT
    java.lang.String EXTRA_INFO_TEXT -> EXTRA_INFO_TEXT
    java.lang.String EXTRA_SUMMARY_TEXT -> EXTRA_SUMMARY_TEXT
    java.lang.String EXTRA_BIG_TEXT -> EXTRA_BIG_TEXT
    java.lang.String EXTRA_SMALL_ICON -> EXTRA_SMALL_ICON
    java.lang.String EXTRA_LARGE_ICON -> EXTRA_LARGE_ICON
    java.lang.String EXTRA_LARGE_ICON_BIG -> EXTRA_LARGE_ICON_BIG
    java.lang.String EXTRA_PROGRESS -> EXTRA_PROGRESS
    java.lang.String EXTRA_PROGRESS_MAX -> EXTRA_PROGRESS_MAX
    java.lang.String EXTRA_PROGRESS_INDETERMINATE -> EXTRA_PROGRESS_INDETERMINATE
    java.lang.String EXTRA_SHOW_CHRONOMETER -> EXTRA_SHOW_CHRONOMETER
    java.lang.String EXTRA_SHOW_WHEN -> EXTRA_SHOW_WHEN
    java.lang.String EXTRA_PICTURE -> EXTRA_PICTURE
    java.lang.String EXTRA_TEXT_LINES -> EXTRA_TEXT_LINES
    java.lang.String EXTRA_TEMPLATE -> EXTRA_TEMPLATE
    java.lang.String EXTRA_PEOPLE -> EXTRA_PEOPLE
    java.lang.String EXTRA_BACKGROUND_IMAGE_URI -> EXTRA_BACKGROUND_IMAGE_URI
    java.lang.String EXTRA_MEDIA_SESSION -> EXTRA_MEDIA_SESSION
    java.lang.String EXTRA_COMPACT_ACTIONS -> EXTRA_COMPACT_ACTIONS
    int COLOR_DEFAULT -> COLOR_DEFAULT
    int VISIBILITY_PUBLIC -> VISIBILITY_PUBLIC
    int VISIBILITY_PRIVATE -> VISIBILITY_PRIVATE
    int VISIBILITY_SECRET -> VISIBILITY_SECRET
    java.lang.String CATEGORY_CALL -> CATEGORY_CALL
    java.lang.String CATEGORY_MESSAGE -> CATEGORY_MESSAGE
    java.lang.String CATEGORY_EMAIL -> CATEGORY_EMAIL
    java.lang.String CATEGORY_EVENT -> CATEGORY_EVENT
    java.lang.String CATEGORY_PROMO -> CATEGORY_PROMO
    java.lang.String CATEGORY_ALARM -> CATEGORY_ALARM
    java.lang.String CATEGORY_PROGRESS -> CATEGORY_PROGRESS
    java.lang.String CATEGORY_SOCIAL -> CATEGORY_SOCIAL
    java.lang.String CATEGORY_ERROR -> CATEGORY_ERROR
    java.lang.String CATEGORY_TRANSPORT -> CATEGORY_TRANSPORT
    java.lang.String CATEGORY_SYSTEM -> CATEGORY_SYSTEM
    java.lang.String CATEGORY_SERVICE -> CATEGORY_SERVICE
    java.lang.String CATEGORY_RECOMMENDATION -> CATEGORY_RECOMMENDATION
    java.lang.String CATEGORY_STATUS -> CATEGORY_STATUS
    android.support.v4.app.NotificationCompat$NotificationCompatImpl IMPL -> IMPL
    void addActionsToBuilder(android.support.v4.app.NotificationBuilderWithActions,java.util.ArrayList) -> addActionsToBuilder
    void addStyleToBuilderJellybean(android.support.v4.app.NotificationBuilderWithBuilderAccessor,android.support.v4.app.NotificationCompat$Style) -> addStyleToBuilderJellybean
    android.app.Notification[] getNotificationArrayFromBundle(android.os.Bundle,java.lang.String) -> getNotificationArrayFromBundle
    android.os.Bundle getExtras(android.app.Notification) -> getExtras
    int getActionCount(android.app.Notification) -> getActionCount
    android.support.v4.app.NotificationCompat$Action getAction(android.app.Notification,int) -> getAction
    java.lang.String getCategory(android.app.Notification) -> getCategory
    boolean getLocalOnly(android.app.Notification) -> getLocalOnly
    java.lang.String getGroup(android.app.Notification) -> getGroup
    boolean isGroupSummary(android.app.Notification) -> isGroupSummary
    java.lang.String getSortKey(android.app.Notification) -> getSortKey
    void access$000(android.support.v4.app.NotificationBuilderWithActions,java.util.ArrayList) -> access$000
    void access$100(android.support.v4.app.NotificationBuilderWithBuilderAccessor,android.support.v4.app.NotificationCompat$Style) -> access$100
    android.support.v4.app.NotificationCompat$NotificationCompatImpl access$200() -> access$200
    android.app.Notification[] access$500(android.os.Bundle,java.lang.String) -> access$500
android.support.v4.app.NotificationCompat$1 -> android.support.v4.app.NotificationCompat$1:
android.support.v4.app.NotificationCompat$Action -> android.support.v4.app.NotificationCompat$Action:
    android.os.Bundle mExtras -> mExtras
    android.support.v4.app.RemoteInput[] mRemoteInputs -> mRemoteInputs
    int icon -> icon
    java.lang.CharSequence title -> title
    android.app.PendingIntent actionIntent -> actionIntent
    android.support.v4.app.NotificationCompatBase$Action$Factory FACTORY -> FACTORY
    int getIcon() -> getIcon
    java.lang.CharSequence getTitle() -> getTitle
    android.app.PendingIntent getActionIntent() -> getActionIntent
    android.os.Bundle getExtras() -> getExtras
    android.support.v4.app.RemoteInput[] getRemoteInputs() -> getRemoteInputs
    android.support.v4.app.RemoteInputCompatBase$RemoteInput[] getRemoteInputs() -> getRemoteInputs
    android.os.Bundle access$300(android.support.v4.app.NotificationCompat$Action) -> access$300
android.support.v4.app.NotificationCompat$Action$1 -> android.support.v4.app.NotificationCompat$Action$1:
    android.support.v4.app.NotificationCompat$Action build(int,java.lang.CharSequence,android.app.PendingIntent,android.os.Bundle,android.support.v4.app.RemoteInputCompatBase$RemoteInput[]) -> build
    android.support.v4.app.NotificationCompat$Action[] newArray(int) -> newArray
    android.support.v4.app.NotificationCompatBase$Action[] newArray(int) -> newArray
    android.support.v4.app.NotificationCompatBase$Action build(int,java.lang.CharSequence,android.app.PendingIntent,android.os.Bundle,android.support.v4.app.RemoteInputCompatBase$RemoteInput[]) -> build
android.support.v4.app.NotificationCompat$Action$Builder -> android.support.v4.app.NotificationCompat$Action$Builder:
    int mIcon -> mIcon
    java.lang.CharSequence mTitle -> mTitle
    android.app.PendingIntent mIntent -> mIntent
    android.os.Bundle mExtras -> mExtras
    java.util.ArrayList mRemoteInputs -> mRemoteInputs
    android.support.v4.app.NotificationCompat$Action$Builder addExtras(android.os.Bundle) -> addExtras
    android.os.Bundle getExtras() -> getExtras
    android.support.v4.app.NotificationCompat$Action$Builder addRemoteInput(android.support.v4.app.RemoteInput) -> addRemoteInput
    android.support.v4.app.NotificationCompat$Action$Builder extend(android.support.v4.app.NotificationCompat$Action$Extender) -> extend
    android.support.v4.app.NotificationCompat$Action build() -> build
android.support.v4.app.NotificationCompat$Action$Extender -> android.support.v4.app.NotificationCompat$Action$Extender:
    android.support.v4.app.NotificationCompat$Action$Builder extend(android.support.v4.app.NotificationCompat$Action$Builder) -> extend
android.support.v4.app.NotificationCompat$Action$WearableExtender -> android.support.v4.app.NotificationCompat$Action$WearableExtender:
    java.lang.String EXTRA_WEARABLE_EXTENSIONS -> EXTRA_WEARABLE_EXTENSIONS
    java.lang.String KEY_FLAGS -> KEY_FLAGS
    java.lang.String KEY_IN_PROGRESS_LABEL -> KEY_IN_PROGRESS_LABEL
    java.lang.String KEY_CONFIRM_LABEL -> KEY_CONFIRM_LABEL
    java.lang.String KEY_CANCEL_LABEL -> KEY_CANCEL_LABEL
    int FLAG_AVAILABLE_OFFLINE -> FLAG_AVAILABLE_OFFLINE
    int DEFAULT_FLAGS -> DEFAULT_FLAGS
    int mFlags -> mFlags
    java.lang.CharSequence mInProgressLabel -> mInProgressLabel
    java.lang.CharSequence mConfirmLabel -> mConfirmLabel
    java.lang.CharSequence mCancelLabel -> mCancelLabel
    android.support.v4.app.NotificationCompat$Action$Builder extend(android.support.v4.app.NotificationCompat$Action$Builder) -> extend
    android.support.v4.app.NotificationCompat$Action$WearableExtender clone() -> clone
    android.support.v4.app.NotificationCompat$Action$WearableExtender setAvailableOffline(boolean) -> setAvailableOffline
    boolean isAvailableOffline() -> isAvailableOffline
    void setFlag(int,boolean) -> setFlag
    android.support.v4.app.NotificationCompat$Action$WearableExtender setInProgressLabel(java.lang.CharSequence) -> setInProgressLabel
    java.lang.CharSequence getInProgressLabel() -> getInProgressLabel
    android.support.v4.app.NotificationCompat$Action$WearableExtender setConfirmLabel(java.lang.CharSequence) -> setConfirmLabel
    java.lang.CharSequence getConfirmLabel() -> getConfirmLabel
    android.support.v4.app.NotificationCompat$Action$WearableExtender setCancelLabel(java.lang.CharSequence) -> setCancelLabel
    java.lang.CharSequence getCancelLabel() -> getCancelLabel
    java.lang.Object clone() -> clone
android.support.v4.app.NotificationCompat$BigPictureStyle -> android.support.v4.app.NotificationCompat$BigPictureStyle:
    android.graphics.Bitmap mPicture -> mPicture
    android.graphics.Bitmap mBigLargeIcon -> mBigLargeIcon
    boolean mBigLargeIconSet -> mBigLargeIconSet
    android.support.v4.app.NotificationCompat$BigPictureStyle setBigContentTitle(java.lang.CharSequence) -> setBigContentTitle
    android.support.v4.app.NotificationCompat$BigPictureStyle setSummaryText(java.lang.CharSequence) -> setSummaryText
    android.support.v4.app.NotificationCompat$BigPictureStyle bigPicture(android.graphics.Bitmap) -> bigPicture
    android.support.v4.app.NotificationCompat$BigPictureStyle bigLargeIcon(android.graphics.Bitmap) -> bigLargeIcon
android.support.v4.app.NotificationCompat$BigTextStyle -> android.support.v4.app.NotificationCompat$BigTextStyle:
    java.lang.CharSequence mBigText -> mBigText
    android.support.v4.app.NotificationCompat$BigTextStyle setBigContentTitle(java.lang.CharSequence) -> setBigContentTitle
    android.support.v4.app.NotificationCompat$BigTextStyle setSummaryText(java.lang.CharSequence) -> setSummaryText
    android.support.v4.app.NotificationCompat$BigTextStyle bigText(java.lang.CharSequence) -> bigText
android.support.v4.app.NotificationCompat$Builder -> android.support.v4.app.NotificationCompat$Builder:
    int MAX_CHARSEQUENCE_LENGTH -> MAX_CHARSEQUENCE_LENGTH
    android.content.Context mContext -> mContext
    java.lang.CharSequence mContentTitle -> mContentTitle
    java.lang.CharSequence mContentText -> mContentText
    android.app.PendingIntent mContentIntent -> mContentIntent
    android.app.PendingIntent mFullScreenIntent -> mFullScreenIntent
    android.widget.RemoteViews mTickerView -> mTickerView
    android.graphics.Bitmap mLargeIcon -> mLargeIcon
    java.lang.CharSequence mContentInfo -> mContentInfo
    int mNumber -> mNumber
    int mPriority -> mPriority
    boolean mShowWhen -> mShowWhen
    boolean mUseChronometer -> mUseChronometer
    android.support.v4.app.NotificationCompat$Style mStyle -> mStyle
    java.lang.CharSequence mSubText -> mSubText
    int mProgressMax -> mProgressMax
    int mProgress -> mProgress
    boolean mProgressIndeterminate -> mProgressIndeterminate
    java.lang.String mGroupKey -> mGroupKey
    boolean mGroupSummary -> mGroupSummary
    java.lang.String mSortKey -> mSortKey
    java.util.ArrayList mActions -> mActions
    boolean mLocalOnly -> mLocalOnly
    java.lang.String mCategory -> mCategory
    android.os.Bundle mExtras -> mExtras
    int mColor -> mColor
    int mVisibility -> mVisibility
    android.app.Notification mPublicVersion -> mPublicVersion
    android.app.Notification mNotification -> mNotification
    java.util.ArrayList mPeople -> mPeople
    android.support.v4.app.NotificationCompat$Builder setWhen(long) -> setWhen
    android.support.v4.app.NotificationCompat$Builder setShowWhen(boolean) -> setShowWhen
    android.support.v4.app.NotificationCompat$Builder setUsesChronometer(boolean) -> setUsesChronometer
    android.support.v4.app.NotificationCompat$Builder setSmallIcon(int) -> setSmallIcon
    android.support.v4.app.NotificationCompat$Builder setSmallIcon(int,int) -> setSmallIcon
    android.support.v4.app.NotificationCompat$Builder setContentTitle(java.lang.CharSequence) -> setContentTitle
    android.support.v4.app.NotificationCompat$Builder setContentText(java.lang.CharSequence) -> setContentText
    android.support.v4.app.NotificationCompat$Builder setSubText(java.lang.CharSequence) -> setSubText
    android.support.v4.app.NotificationCompat$Builder setNumber(int) -> setNumber
    android.support.v4.app.NotificationCompat$Builder setContentInfo(java.lang.CharSequence) -> setContentInfo
    android.support.v4.app.NotificationCompat$Builder setProgress(int,int,boolean) -> setProgress
    android.support.v4.app.NotificationCompat$Builder setContent(android.widget.RemoteViews) -> setContent
    android.support.v4.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent) -> setContentIntent
    android.support.v4.app.NotificationCompat$Builder setDeleteIntent(android.app.PendingIntent) -> setDeleteIntent
    android.support.v4.app.NotificationCompat$Builder setFullScreenIntent(android.app.PendingIntent,boolean) -> setFullScreenIntent
    android.support.v4.app.NotificationCompat$Builder setTicker(java.lang.CharSequence) -> setTicker
    android.support.v4.app.NotificationCompat$Builder setTicker(java.lang.CharSequence,android.widget.RemoteViews) -> setTicker
    android.support.v4.app.NotificationCompat$Builder setLargeIcon(android.graphics.Bitmap) -> setLargeIcon
    android.support.v4.app.NotificationCompat$Builder setSound(android.net.Uri) -> setSound
    android.support.v4.app.NotificationCompat$Builder setSound(android.net.Uri,int) -> setSound
    android.support.v4.app.NotificationCompat$Builder setVibrate(long[]) -> setVibrate
    android.support.v4.app.NotificationCompat$Builder setLights(int,int,int) -> setLights
    android.support.v4.app.NotificationCompat$Builder setOngoing(boolean) -> setOngoing
    android.support.v4.app.NotificationCompat$Builder setOnlyAlertOnce(boolean) -> setOnlyAlertOnce
    android.support.v4.app.NotificationCompat$Builder setAutoCancel(boolean) -> setAutoCancel
    android.support.v4.app.NotificationCompat$Builder setLocalOnly(boolean) -> setLocalOnly
    android.support.v4.app.NotificationCompat$Builder setCategory(java.lang.String) -> setCategory
    android.support.v4.app.NotificationCompat$Builder setDefaults(int) -> setDefaults
    void setFlag(int,boolean) -> setFlag
    android.support.v4.app.NotificationCompat$Builder setPriority(int) -> setPriority
    android.support.v4.app.NotificationCompat$Builder addPerson(java.lang.String) -> addPerson
    android.support.v4.app.NotificationCompat$Builder setGroup(java.lang.String) -> setGroup
    android.support.v4.app.NotificationCompat$Builder setGroupSummary(boolean) -> setGroupSummary
    android.support.v4.app.NotificationCompat$Builder setSortKey(java.lang.String) -> setSortKey
    android.support.v4.app.NotificationCompat$Builder addExtras(android.os.Bundle) -> addExtras
    android.support.v4.app.NotificationCompat$Builder setExtras(android.os.Bundle) -> setExtras
    android.os.Bundle getExtras() -> getExtras
    android.support.v4.app.NotificationCompat$Builder addAction(int,java.lang.CharSequence,android.app.PendingIntent) -> addAction
    android.support.v4.app.NotificationCompat$Builder addAction(android.support.v4.app.NotificationCompat$Action) -> addAction
    android.support.v4.app.NotificationCompat$Builder setStyle(android.support.v4.app.NotificationCompat$Style) -> setStyle
    android.support.v4.app.NotificationCompat$Builder setColor(int) -> setColor
    android.support.v4.app.NotificationCompat$Builder setVisibility(int) -> setVisibility
    android.support.v4.app.NotificationCompat$Builder setPublicVersion(android.app.Notification) -> setPublicVersion
    android.support.v4.app.NotificationCompat$Builder extend(android.support.v4.app.NotificationCompat$Extender) -> extend
    android.app.Notification getNotification() -> getNotification
    android.app.Notification build() -> build
    java.lang.CharSequence limitCharSequenceLength(java.lang.CharSequence) -> limitCharSequenceLength
android.support.v4.app.NotificationCompat$CarExtender -> android.support.v4.app.NotificationCompat$CarExtender:
    java.lang.String TAG -> TAG
    java.lang.String EXTRA_CAR_EXTENDER -> EXTRA_CAR_EXTENDER
    java.lang.String EXTRA_LARGE_ICON -> EXTRA_LARGE_ICON
    java.lang.String EXTRA_CONVERSATION -> EXTRA_CONVERSATION
    java.lang.String EXTRA_COLOR -> EXTRA_COLOR
    android.graphics.Bitmap mLargeIcon -> mLargeIcon
    android.support.v4.app.NotificationCompat$CarExtender$UnreadConversation mUnreadConversation -> mUnreadConversation
    int mColor -> mColor
    android.support.v4.app.NotificationCompat$Builder extend(android.support.v4.app.NotificationCompat$Builder) -> extend
    android.support.v4.app.NotificationCompat$CarExtender setColor(int) -> setColor
    int getColor() -> getColor
    android.support.v4.app.NotificationCompat$CarExtender setLargeIcon(android.graphics.Bitmap) -> setLargeIcon
    android.graphics.Bitmap getLargeIcon() -> getLargeIcon
    android.support.v4.app.NotificationCompat$CarExtender setUnreadConversation(android.support.v4.app.NotificationCompat$CarExtender$UnreadConversation) -> setUnreadConversation
    android.support.v4.app.NotificationCompat$CarExtender$UnreadConversation getUnreadConversation() -> getUnreadConversation
android.support.v4.app.NotificationCompat$CarExtender$UnreadConversation -> android.support.v4.app.NotificationCompat$CarExtender$UnreadConversation:
    java.lang.String[] mMessages -> mMessages
    android.support.v4.app.RemoteInput mRemoteInput -> mRemoteInput
    android.app.PendingIntent mReplyPendingIntent -> mReplyPendingIntent
    android.app.PendingIntent mReadPendingIntent -> mReadPendingIntent
    java.lang.String[] mParticipants -> mParticipants
    long mLatestTimestamp -> mLatestTimestamp
    android.support.v4.app.NotificationCompatBase$UnreadConversation$Factory FACTORY -> FACTORY
    java.lang.String[] getMessages() -> getMessages
    android.support.v4.app.RemoteInput getRemoteInput() -> getRemoteInput
    android.app.PendingIntent getReplyPendingIntent() -> getReplyPendingIntent
    android.app.PendingIntent getReadPendingIntent() -> getReadPendingIntent
    java.lang.String[] getParticipants() -> getParticipants
    java.lang.String getParticipant() -> getParticipant
    long getLatestTimestamp() -> getLatestTimestamp
    android.support.v4.app.RemoteInputCompatBase$RemoteInput getRemoteInput() -> getRemoteInput
android.support.v4.app.NotificationCompat$CarExtender$UnreadConversation$1 -> android.support.v4.app.NotificationCompat$CarExtender$UnreadConversation$1:
    android.support.v4.app.NotificationCompat$CarExtender$UnreadConversation build(java.lang.String[],android.support.v4.app.RemoteInputCompatBase$RemoteInput,android.app.PendingIntent,android.app.PendingIntent,java.lang.String[],long) -> build
    android.support.v4.app.NotificationCompatBase$UnreadConversation build(java.lang.String[],android.support.v4.app.RemoteInputCompatBase$RemoteInput,android.app.PendingIntent,android.app.PendingIntent,java.lang.String[],long) -> build
android.support.v4.app.NotificationCompat$CarExtender$UnreadConversation$Builder -> android.support.v4.app.NotificationCompat$CarExtender$UnreadConversation$Builder:
    java.util.List mMessages -> mMessages
    java.lang.String mParticipant -> mParticipant
    android.support.v4.app.RemoteInput mRemoteInput -> mRemoteInput
    android.app.PendingIntent mReadPendingIntent -> mReadPendingIntent
    android.app.PendingIntent mReplyPendingIntent -> mReplyPendingIntent
    long mLatestTimestamp -> mLatestTimestamp
    android.support.v4.app.NotificationCompat$CarExtender$UnreadConversation$Builder addMessage(java.lang.String) -> addMessage
    android.support.v4.app.NotificationCompat$CarExtender$UnreadConversation$Builder setReplyAction(android.app.PendingIntent,android.support.v4.app.RemoteInput) -> setReplyAction
    android.support.v4.app.NotificationCompat$CarExtender$UnreadConversation$Builder setReadPendingIntent(android.app.PendingIntent) -> setReadPendingIntent
    android.support.v4.app.NotificationCompat$CarExtender$UnreadConversation$Builder setLatestTimestamp(long) -> setLatestTimestamp
    android.support.v4.app.NotificationCompat$CarExtender$UnreadConversation build() -> build
android.support.v4.app.NotificationCompat$Extender -> android.support.v4.app.NotificationCompat$Extender:
    android.support.v4.app.NotificationCompat$Builder extend(android.support.v4.app.NotificationCompat$Builder) -> extend
android.support.v4.app.NotificationCompat$InboxStyle -> android.support.v4.app.NotificationCompat$InboxStyle:
    java.util.ArrayList mTexts -> mTexts
    android.support.v4.app.NotificationCompat$InboxStyle setBigContentTitle(java.lang.CharSequence) -> setBigContentTitle
    android.support.v4.app.NotificationCompat$InboxStyle setSummaryText(java.lang.CharSequence) -> setSummaryText
    android.support.v4.app.NotificationCompat$InboxStyle addLine(java.lang.CharSequence) -> addLine
android.support.v4.app.NotificationCompat$NotificationCompatImpl -> android.support.v4.app.NotificationCompat$NotificationCompatImpl:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> build
    android.os.Bundle getExtras(android.app.Notification) -> getExtras
    int getActionCount(android.app.Notification) -> getActionCount
    android.support.v4.app.NotificationCompat$Action getAction(android.app.Notification,int) -> getAction
    android.support.v4.app.NotificationCompat$Action[] getActionsFromParcelableArrayList(java.util.ArrayList) -> getActionsFromParcelableArrayList
    java.util.ArrayList getParcelableArrayListForActions(android.support.v4.app.NotificationCompat$Action[]) -> getParcelableArrayListForActions
    java.lang.String getCategory(android.app.Notification) -> getCategory
    boolean getLocalOnly(android.app.Notification) -> getLocalOnly
    java.lang.String getGroup(android.app.Notification) -> getGroup
    boolean isGroupSummary(android.app.Notification) -> isGroupSummary
    java.lang.String getSortKey(android.app.Notification) -> getSortKey
    android.os.Bundle getBundleForUnreadConversation(android.support.v4.app.NotificationCompatBase$UnreadConversation) -> getBundleForUnreadConversation
    android.support.v4.app.NotificationCompatBase$UnreadConversation getUnreadConversationFromBundle(android.os.Bundle,android.support.v4.app.NotificationCompatBase$UnreadConversation$Factory,android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory) -> getUnreadConversationFromBundle
android.support.v4.app.NotificationCompat$NotificationCompatImplApi20 -> android.support.v4.app.NotificationCompat$NotificationCompatImplApi20:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> build
    android.support.v4.app.NotificationCompat$Action getAction(android.app.Notification,int) -> getAction
    android.support.v4.app.NotificationCompat$Action[] getActionsFromParcelableArrayList(java.util.ArrayList) -> getActionsFromParcelableArrayList
    java.util.ArrayList getParcelableArrayListForActions(android.support.v4.app.NotificationCompat$Action[]) -> getParcelableArrayListForActions
    boolean getLocalOnly(android.app.Notification) -> getLocalOnly
    java.lang.String getGroup(android.app.Notification) -> getGroup
    boolean isGroupSummary(android.app.Notification) -> isGroupSummary
    java.lang.String getSortKey(android.app.Notification) -> getSortKey
android.support.v4.app.NotificationCompat$NotificationCompatImplApi21 -> android.support.v4.app.NotificationCompat$NotificationCompatImplApi21:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> build
    java.lang.String getCategory(android.app.Notification) -> getCategory
    android.os.Bundle getBundleForUnreadConversation(android.support.v4.app.NotificationCompatBase$UnreadConversation) -> getBundleForUnreadConversation
    android.support.v4.app.NotificationCompatBase$UnreadConversation getUnreadConversationFromBundle(android.os.Bundle,android.support.v4.app.NotificationCompatBase$UnreadConversation$Factory,android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory) -> getUnreadConversationFromBundle
android.support.v4.app.NotificationCompat$NotificationCompatImplBase -> android.support.v4.app.NotificationCompat$NotificationCompatImplBase:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> build
    android.os.Bundle getExtras(android.app.Notification) -> getExtras
    int getActionCount(android.app.Notification) -> getActionCount
    android.support.v4.app.NotificationCompat$Action getAction(android.app.Notification,int) -> getAction
    android.support.v4.app.NotificationCompat$Action[] getActionsFromParcelableArrayList(java.util.ArrayList) -> getActionsFromParcelableArrayList
    java.util.ArrayList getParcelableArrayListForActions(android.support.v4.app.NotificationCompat$Action[]) -> getParcelableArrayListForActions
    java.lang.String getCategory(android.app.Notification) -> getCategory
    boolean getLocalOnly(android.app.Notification) -> getLocalOnly
    java.lang.String getGroup(android.app.Notification) -> getGroup
    boolean isGroupSummary(android.app.Notification) -> isGroupSummary
    java.lang.String getSortKey(android.app.Notification) -> getSortKey
    android.os.Bundle getBundleForUnreadConversation(android.support.v4.app.NotificationCompatBase$UnreadConversation) -> getBundleForUnreadConversation
    android.support.v4.app.NotificationCompatBase$UnreadConversation getUnreadConversationFromBundle(android.os.Bundle,android.support.v4.app.NotificationCompatBase$UnreadConversation$Factory,android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory) -> getUnreadConversationFromBundle
android.support.v4.app.NotificationCompat$NotificationCompatImplGingerbread -> android.support.v4.app.NotificationCompat$NotificationCompatImplGingerbread:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> build
android.support.v4.app.NotificationCompat$NotificationCompatImplHoneycomb -> android.support.v4.app.NotificationCompat$NotificationCompatImplHoneycomb:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> build
android.support.v4.app.NotificationCompat$NotificationCompatImplIceCreamSandwich -> android.support.v4.app.NotificationCompat$NotificationCompatImplIceCreamSandwich:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> build
android.support.v4.app.NotificationCompat$NotificationCompatImplJellybean -> android.support.v4.app.NotificationCompat$NotificationCompatImplJellybean:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> build
    android.os.Bundle getExtras(android.app.Notification) -> getExtras
    int getActionCount(android.app.Notification) -> getActionCount
    android.support.v4.app.NotificationCompat$Action getAction(android.app.Notification,int) -> getAction
    android.support.v4.app.NotificationCompat$Action[] getActionsFromParcelableArrayList(java.util.ArrayList) -> getActionsFromParcelableArrayList
    java.util.ArrayList getParcelableArrayListForActions(android.support.v4.app.NotificationCompat$Action[]) -> getParcelableArrayListForActions
    boolean getLocalOnly(android.app.Notification) -> getLocalOnly
    java.lang.String getGroup(android.app.Notification) -> getGroup
    boolean isGroupSummary(android.app.Notification) -> isGroupSummary
    java.lang.String getSortKey(android.app.Notification) -> getSortKey
android.support.v4.app.NotificationCompat$NotificationCompatImplKitKat -> android.support.v4.app.NotificationCompat$NotificationCompatImplKitKat:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> build
    android.os.Bundle getExtras(android.app.Notification) -> getExtras
    int getActionCount(android.app.Notification) -> getActionCount
    android.support.v4.app.NotificationCompat$Action getAction(android.app.Notification,int) -> getAction
    boolean getLocalOnly(android.app.Notification) -> getLocalOnly
    java.lang.String getGroup(android.app.Notification) -> getGroup
    boolean isGroupSummary(android.app.Notification) -> isGroupSummary
    java.lang.String getSortKey(android.app.Notification) -> getSortKey
android.support.v4.app.NotificationCompat$Style -> android.support.v4.app.NotificationCompat$Style:
    android.support.v4.app.NotificationCompat$Builder mBuilder -> mBuilder
    java.lang.CharSequence mBigContentTitle -> mBigContentTitle
    java.lang.CharSequence mSummaryText -> mSummaryText
    boolean mSummaryTextSet -> mSummaryTextSet
    void setBuilder(android.support.v4.app.NotificationCompat$Builder) -> setBuilder
    android.app.Notification build() -> build
android.support.v4.app.NotificationCompat$WearableExtender -> android.support.v4.app.NotificationCompat$WearableExtender:
    int UNSET_ACTION_INDEX -> UNSET_ACTION_INDEX
    int SIZE_DEFAULT -> SIZE_DEFAULT
    int SIZE_XSMALL -> SIZE_XSMALL
    int SIZE_SMALL -> SIZE_SMALL
    int SIZE_MEDIUM -> SIZE_MEDIUM
    int SIZE_LARGE -> SIZE_LARGE
    int SIZE_FULL_SCREEN -> SIZE_FULL_SCREEN
    java.lang.String EXTRA_WEARABLE_EXTENSIONS -> EXTRA_WEARABLE_EXTENSIONS
    java.lang.String KEY_ACTIONS -> KEY_ACTIONS
    java.lang.String KEY_FLAGS -> KEY_FLAGS
    java.lang.String KEY_DISPLAY_INTENT -> KEY_DISPLAY_INTENT
    java.lang.String KEY_PAGES -> KEY_PAGES
    java.lang.String KEY_BACKGROUND -> KEY_BACKGROUND
    java.lang.String KEY_CONTENT_ICON -> KEY_CONTENT_ICON
    java.lang.String KEY_CONTENT_ICON_GRAVITY -> KEY_CONTENT_ICON_GRAVITY
    java.lang.String KEY_CONTENT_ACTION_INDEX -> KEY_CONTENT_ACTION_INDEX
    java.lang.String KEY_CUSTOM_SIZE_PRESET -> KEY_CUSTOM_SIZE_PRESET
    java.lang.String KEY_CUSTOM_CONTENT_HEIGHT -> KEY_CUSTOM_CONTENT_HEIGHT
    java.lang.String KEY_GRAVITY -> KEY_GRAVITY
    int FLAG_CONTENT_INTENT_AVAILABLE_OFFLINE -> FLAG_CONTENT_INTENT_AVAILABLE_OFFLINE
    int FLAG_HINT_HIDE_ICON -> FLAG_HINT_HIDE_ICON
    int FLAG_HINT_SHOW_BACKGROUND_ONLY -> FLAG_HINT_SHOW_BACKGROUND_ONLY
    int FLAG_START_SCROLL_BOTTOM -> FLAG_START_SCROLL_BOTTOM
    int DEFAULT_FLAGS -> DEFAULT_FLAGS
    int DEFAULT_CONTENT_ICON_GRAVITY -> DEFAULT_CONTENT_ICON_GRAVITY
    int DEFAULT_GRAVITY -> DEFAULT_GRAVITY
    java.util.ArrayList mActions -> mActions
    int mFlags -> mFlags
    android.app.PendingIntent mDisplayIntent -> mDisplayIntent
    java.util.ArrayList mPages -> mPages
    android.graphics.Bitmap mBackground -> mBackground
    int mContentIcon -> mContentIcon
    int mContentIconGravity -> mContentIconGravity
    int mContentActionIndex -> mContentActionIndex
    int mCustomSizePreset -> mCustomSizePreset
    int mCustomContentHeight -> mCustomContentHeight
    int mGravity -> mGravity
    android.support.v4.app.NotificationCompat$Builder extend(android.support.v4.app.NotificationCompat$Builder) -> extend
    android.support.v4.app.NotificationCompat$WearableExtender clone() -> clone
    android.support.v4.app.NotificationCompat$WearableExtender addAction(android.support.v4.app.NotificationCompat$Action) -> addAction
    android.support.v4.app.NotificationCompat$WearableExtender addActions(java.util.List) -> addActions
    android.support.v4.app.NotificationCompat$WearableExtender clearActions() -> clearActions
    java.util.List getActions() -> getActions
    android.support.v4.app.NotificationCompat$WearableExtender setDisplayIntent(android.app.PendingIntent) -> setDisplayIntent
    android.app.PendingIntent getDisplayIntent() -> getDisplayIntent
    android.support.v4.app.NotificationCompat$WearableExtender addPage(android.app.Notification) -> addPage
    android.support.v4.app.NotificationCompat$WearableExtender addPages(java.util.List) -> addPages
    android.support.v4.app.NotificationCompat$WearableExtender clearPages() -> clearPages
    java.util.List getPages() -> getPages
    android.support.v4.app.NotificationCompat$WearableExtender setBackground(android.graphics.Bitmap) -> setBackground
    android.graphics.Bitmap getBackground() -> getBackground
    android.support.v4.app.NotificationCompat$WearableExtender setContentIcon(int) -> setContentIcon
    int getContentIcon() -> getContentIcon
    android.support.v4.app.NotificationCompat$WearableExtender setContentIconGravity(int) -> setContentIconGravity
    int getContentIconGravity() -> getContentIconGravity
    android.support.v4.app.NotificationCompat$WearableExtender setContentAction(int) -> setContentAction
    int getContentAction() -> getContentAction
    android.support.v4.app.NotificationCompat$WearableExtender setGravity(int) -> setGravity
    int getGravity() -> getGravity
    android.support.v4.app.NotificationCompat$WearableExtender setCustomSizePreset(int) -> setCustomSizePreset
    int getCustomSizePreset() -> getCustomSizePreset
    android.support.v4.app.NotificationCompat$WearableExtender setCustomContentHeight(int) -> setCustomContentHeight
    int getCustomContentHeight() -> getCustomContentHeight
    android.support.v4.app.NotificationCompat$WearableExtender setStartScrollBottom(boolean) -> setStartScrollBottom
    boolean getStartScrollBottom() -> getStartScrollBottom
    android.support.v4.app.NotificationCompat$WearableExtender setContentIntentAvailableOffline(boolean) -> setContentIntentAvailableOffline
    boolean getContentIntentAvailableOffline() -> getContentIntentAvailableOffline
    android.support.v4.app.NotificationCompat$WearableExtender setHintHideIcon(boolean) -> setHintHideIcon
    boolean getHintHideIcon() -> getHintHideIcon
    android.support.v4.app.NotificationCompat$WearableExtender setHintShowBackgroundOnly(boolean) -> setHintShowBackgroundOnly
    boolean getHintShowBackgroundOnly() -> getHintShowBackgroundOnly
    void setFlag(int,boolean) -> setFlag
    java.lang.Object clone() -> clone
android.support.v4.app.NotificationCompatApi20 -> android.support.v4.app.NotificationCompatApi20:
    void addAction(android.app.Notification$Builder,android.support.v4.app.NotificationCompatBase$Action) -> addAction
    android.support.v4.app.NotificationCompatBase$Action getAction(android.app.Notification,int,android.support.v4.app.NotificationCompatBase$Action$Factory,android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory) -> getAction
    android.support.v4.app.NotificationCompatBase$Action getActionCompatFromAction(android.app.Notification$Action,android.support.v4.app.NotificationCompatBase$Action$Factory,android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory) -> getActionCompatFromAction
    android.app.Notification$Action getActionFromActionCompat(android.support.v4.app.NotificationCompatBase$Action) -> getActionFromActionCompat
    android.support.v4.app.NotificationCompatBase$Action[] getActionsFromParcelableArrayList(java.util.ArrayList,android.support.v4.app.NotificationCompatBase$Action$Factory,android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory) -> getActionsFromParcelableArrayList
    java.util.ArrayList getParcelableArrayListForActions(android.support.v4.app.NotificationCompatBase$Action[]) -> getParcelableArrayListForActions
    boolean getLocalOnly(android.app.Notification) -> getLocalOnly
    java.lang.String getGroup(android.app.Notification) -> getGroup
    boolean isGroupSummary(android.app.Notification) -> isGroupSummary
    java.lang.String getSortKey(android.app.Notification) -> getSortKey
android.support.v4.app.NotificationCompatApi20$Builder -> android.support.v4.app.NotificationCompatApi20$Builder:
    android.app.Notification$Builder b -> b
    android.os.Bundle mExtras -> mExtras
    void addAction(android.support.v4.app.NotificationCompatBase$Action) -> addAction
    android.app.Notification$Builder getBuilder() -> getBuilder
    android.app.Notification build() -> build
android.support.v4.app.NotificationCompatApi21 -> android.support.v4.app.NotificationCompatApi21:
    java.lang.String CATEGORY_CALL -> CATEGORY_CALL
    java.lang.String CATEGORY_MESSAGE -> CATEGORY_MESSAGE
    java.lang.String CATEGORY_EMAIL -> CATEGORY_EMAIL
    java.lang.String CATEGORY_EVENT -> CATEGORY_EVENT
    java.lang.String CATEGORY_PROMO -> CATEGORY_PROMO
    java.lang.String CATEGORY_ALARM -> CATEGORY_ALARM
    java.lang.String CATEGORY_PROGRESS -> CATEGORY_PROGRESS
    java.lang.String CATEGORY_SOCIAL -> CATEGORY_SOCIAL
    java.lang.String CATEGORY_ERROR -> CATEGORY_ERROR
    java.lang.String CATEGORY_TRANSPORT -> CATEGORY_TRANSPORT
    java.lang.String CATEGORY_SYSTEM -> CATEGORY_SYSTEM
    java.lang.String CATEGORY_SERVICE -> CATEGORY_SERVICE
    java.lang.String CATEGORY_RECOMMENDATION -> CATEGORY_RECOMMENDATION
    java.lang.String CATEGORY_STATUS -> CATEGORY_STATUS
    java.lang.String KEY_AUTHOR -> KEY_AUTHOR
    java.lang.String KEY_TEXT -> KEY_TEXT
    java.lang.String KEY_MESSAGES -> KEY_MESSAGES
    java.lang.String KEY_REMOTE_INPUT -> KEY_REMOTE_INPUT
    java.lang.String KEY_ON_REPLY -> KEY_ON_REPLY
    java.lang.String KEY_ON_READ -> KEY_ON_READ
    java.lang.String KEY_PARTICIPANTS -> KEY_PARTICIPANTS
    java.lang.String KEY_TIMESTAMP -> KEY_TIMESTAMP
    java.lang.String getCategory(android.app.Notification) -> getCategory
    android.os.Bundle getBundleForUnreadConversation(android.support.v4.app.NotificationCompatBase$UnreadConversation) -> getBundleForUnreadConversation
    android.support.v4.app.NotificationCompatBase$UnreadConversation getUnreadConversationFromBundle(android.os.Bundle,android.support.v4.app.NotificationCompatBase$UnreadConversation$Factory,android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory) -> getUnreadConversationFromBundle
    android.app.RemoteInput fromCompatRemoteInput(android.support.v4.app.RemoteInputCompatBase$RemoteInput) -> fromCompatRemoteInput
    android.support.v4.app.RemoteInputCompatBase$RemoteInput toCompatRemoteInput(android.app.RemoteInput,android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory) -> toCompatRemoteInput
android.support.v4.app.NotificationCompatApi21$Builder -> android.support.v4.app.NotificationCompatApi21$Builder:
    android.app.Notification$Builder b -> b
    void addAction(android.support.v4.app.NotificationCompatBase$Action) -> addAction
    android.app.Notification$Builder getBuilder() -> getBuilder
    android.app.Notification build() -> build
android.support.v4.app.NotificationCompatBase -> android.support.v4.app.NotificationCompatBase:
android.support.v4.app.NotificationCompatBase$Action -> android.support.v4.app.NotificationCompatBase$Action:
    int getIcon() -> getIcon
    java.lang.CharSequence getTitle() -> getTitle
    android.app.PendingIntent getActionIntent() -> getActionIntent
    android.os.Bundle getExtras() -> getExtras
    android.support.v4.app.RemoteInputCompatBase$RemoteInput[] getRemoteInputs() -> getRemoteInputs
android.support.v4.app.NotificationCompatBase$Action$Factory -> android.support.v4.app.NotificationCompatBase$Action$Factory:
    android.support.v4.app.NotificationCompatBase$Action build(int,java.lang.CharSequence,android.app.PendingIntent,android.os.Bundle,android.support.v4.app.RemoteInputCompatBase$RemoteInput[]) -> build
    android.support.v4.app.NotificationCompatBase$Action[] newArray(int) -> newArray
android.support.v4.app.NotificationCompatBase$UnreadConversation -> android.support.v4.app.NotificationCompatBase$UnreadConversation:
    java.lang.String[] getParticipants() -> getParticipants
    java.lang.String getParticipant() -> getParticipant
    java.lang.String[] getMessages() -> getMessages
    android.support.v4.app.RemoteInputCompatBase$RemoteInput getRemoteInput() -> getRemoteInput
    android.app.PendingIntent getReplyPendingIntent() -> getReplyPendingIntent
    android.app.PendingIntent getReadPendingIntent() -> getReadPendingIntent
    long getLatestTimestamp() -> getLatestTimestamp
android.support.v4.app.NotificationCompatBase$UnreadConversation$Factory -> android.support.v4.app.NotificationCompatBase$UnreadConversation$Factory:
    android.support.v4.app.NotificationCompatBase$UnreadConversation build(java.lang.String[],android.support.v4.app.RemoteInputCompatBase$RemoteInput,android.app.PendingIntent,android.app.PendingIntent,java.lang.String[],long) -> build
android.support.v4.app.NotificationCompatExtras -> android.support.v4.app.NotificationCompatExtras:
    java.lang.String EXTRA_LOCAL_ONLY -> EXTRA_LOCAL_ONLY
    java.lang.String EXTRA_GROUP_KEY -> EXTRA_GROUP_KEY
    java.lang.String EXTRA_GROUP_SUMMARY -> EXTRA_GROUP_SUMMARY
    java.lang.String EXTRA_SORT_KEY -> EXTRA_SORT_KEY
    java.lang.String EXTRA_ACTION_EXTRAS -> EXTRA_ACTION_EXTRAS
    java.lang.String EXTRA_REMOTE_INPUTS -> EXTRA_REMOTE_INPUTS
android.support.v4.app.NotificationCompatGingerbread -> android.support.v4.app.NotificationCompatGingerbread:
    android.app.Notification add(android.app.Notification,android.content.Context,java.lang.CharSequence,java.lang.CharSequence,android.app.PendingIntent,android.app.PendingIntent) -> add
android.support.v4.app.NotificationCompatHoneycomb -> android.support.v4.app.NotificationCompatHoneycomb:
    android.app.Notification add(android.content.Context,android.app.Notification,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,android.widget.RemoteViews,int,android.app.PendingIntent,android.app.PendingIntent,android.graphics.Bitmap) -> add
android.support.v4.app.NotificationCompatIceCreamSandwich -> android.support.v4.app.NotificationCompatIceCreamSandwich:
    android.app.Notification add(android.content.Context,android.app.Notification,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,android.widget.RemoteViews,int,android.app.PendingIntent,android.app.PendingIntent,android.graphics.Bitmap,int,int,boolean) -> add
android.support.v4.app.NotificationCompatJellybean -> android.support.v4.app.NotificationCompatJellybean:
    java.lang.String TAG -> TAG
    java.lang.String EXTRA_LOCAL_ONLY -> EXTRA_LOCAL_ONLY
    java.lang.String EXTRA_ACTION_EXTRAS -> EXTRA_ACTION_EXTRAS
    java.lang.String EXTRA_REMOTE_INPUTS -> EXTRA_REMOTE_INPUTS
    java.lang.String EXTRA_GROUP_KEY -> EXTRA_GROUP_KEY
    java.lang.String EXTRA_GROUP_SUMMARY -> EXTRA_GROUP_SUMMARY
    java.lang.String EXTRA_SORT_KEY -> EXTRA_SORT_KEY
    java.lang.String EXTRA_USE_SIDE_CHANNEL -> EXTRA_USE_SIDE_CHANNEL
    java.lang.String KEY_ICON -> KEY_ICON
    java.lang.String KEY_TITLE -> KEY_TITLE
    java.lang.String KEY_ACTION_INTENT -> KEY_ACTION_INTENT
    java.lang.String KEY_EXTRAS -> KEY_EXTRAS
    java.lang.String KEY_REMOTE_INPUTS -> KEY_REMOTE_INPUTS
    java.lang.Object sExtrasLock -> sExtrasLock
    java.lang.reflect.Field sExtrasField -> sExtrasField
    boolean sExtrasFieldAccessFailed -> sExtrasFieldAccessFailed
    java.lang.Object sActionsLock -> sActionsLock
    java.lang.Class sActionClass -> sActionClass
    java.lang.reflect.Field sActionsField -> sActionsField
    java.lang.reflect.Field sActionIconField -> sActionIconField
    java.lang.reflect.Field sActionTitleField -> sActionTitleField
    java.lang.reflect.Field sActionIntentField -> sActionIntentField
    boolean sActionsAccessFailed -> sActionsAccessFailed
    void addBigTextStyle(android.support.v4.app.NotificationBuilderWithBuilderAccessor,java.lang.CharSequence,boolean,java.lang.CharSequence,java.lang.CharSequence) -> addBigTextStyle
    void addBigPictureStyle(android.support.v4.app.NotificationBuilderWithBuilderAccessor,java.lang.CharSequence,boolean,java.lang.CharSequence,android.graphics.Bitmap,android.graphics.Bitmap,boolean) -> addBigPictureStyle
    void addInboxStyle(android.support.v4.app.NotificationBuilderWithBuilderAccessor,java.lang.CharSequence,boolean,java.lang.CharSequence,java.util.ArrayList) -> addInboxStyle
    android.util.SparseArray buildActionExtrasMap(java.util.List) -> buildActionExtrasMap
    android.os.Bundle getExtras(android.app.Notification) -> getExtras
    android.support.v4.app.NotificationCompatBase$Action readAction(android.support.v4.app.NotificationCompatBase$Action$Factory,android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory,int,java.lang.CharSequence,android.app.PendingIntent,android.os.Bundle) -> readAction
    android.os.Bundle writeActionAndGetExtras(android.app.Notification$Builder,android.support.v4.app.NotificationCompatBase$Action) -> writeActionAndGetExtras
    int getActionCount(android.app.Notification) -> getActionCount
    android.support.v4.app.NotificationCompatBase$Action getAction(android.app.Notification,int,android.support.v4.app.NotificationCompatBase$Action$Factory,android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory) -> getAction
    java.lang.Object[] getActionObjectsLocked(android.app.Notification) -> getActionObjectsLocked
    boolean ensureActionReflectionReadyLocked() -> ensureActionReflectionReadyLocked
    android.support.v4.app.NotificationCompatBase$Action[] getActionsFromParcelableArrayList(java.util.ArrayList,android.support.v4.app.NotificationCompatBase$Action$Factory,android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory) -> getActionsFromParcelableArrayList
    android.support.v4.app.NotificationCompatBase$Action getActionFromBundle(android.os.Bundle,android.support.v4.app.NotificationCompatBase$Action$Factory,android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory) -> getActionFromBundle
    java.util.ArrayList getParcelableArrayListForActions(android.support.v4.app.NotificationCompatBase$Action[]) -> getParcelableArrayListForActions
    android.os.Bundle getBundleForAction(android.support.v4.app.NotificationCompatBase$Action) -> getBundleForAction
    boolean getLocalOnly(android.app.Notification) -> getLocalOnly
    java.lang.String getGroup(android.app.Notification) -> getGroup
    boolean isGroupSummary(android.app.Notification) -> isGroupSummary
    java.lang.String getSortKey(android.app.Notification) -> getSortKey
android.support.v4.app.NotificationCompatJellybean$Builder -> android.support.v4.app.NotificationCompatJellybean$Builder:
    android.app.Notification$Builder b -> b
    android.os.Bundle mExtras -> mExtras
    java.util.List mActionExtrasList -> mActionExtrasList
    void addAction(android.support.v4.app.NotificationCompatBase$Action) -> addAction
    android.app.Notification$Builder getBuilder() -> getBuilder
    android.app.Notification build() -> build
android.support.v4.app.NotificationCompatKitKat -> android.support.v4.app.NotificationCompatKitKat:
    android.os.Bundle getExtras(android.app.Notification) -> getExtras
    int getActionCount(android.app.Notification) -> getActionCount
    android.support.v4.app.NotificationCompatBase$Action getAction(android.app.Notification,int,android.support.v4.app.NotificationCompatBase$Action$Factory,android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory) -> getAction
    boolean getLocalOnly(android.app.Notification) -> getLocalOnly
    java.lang.String getGroup(android.app.Notification) -> getGroup
    boolean isGroupSummary(android.app.Notification) -> isGroupSummary
    java.lang.String getSortKey(android.app.Notification) -> getSortKey
android.support.v4.app.NotificationCompatKitKat$Builder -> android.support.v4.app.NotificationCompatKitKat$Builder:
    android.app.Notification$Builder b -> b
    android.os.Bundle mExtras -> mExtras
    java.util.List mActionExtrasList -> mActionExtrasList
    void addAction(android.support.v4.app.NotificationCompatBase$Action) -> addAction
    android.app.Notification$Builder getBuilder() -> getBuilder
    android.app.Notification build() -> build
android.support.v4.app.NotificationCompatSideChannelService -> android.support.v4.app.NotificationCompatSideChannelService:
    android.os.IBinder onBind(android.content.Intent) -> onBind
    void notify(java.lang.String,int,java.lang.String,android.app.Notification) -> notify
    void cancel(java.lang.String,int,java.lang.String) -> cancel
    void cancelAll(java.lang.String) -> cancelAll
    void checkPermission(int,java.lang.String) -> checkPermission
    void access$100(android.support.v4.app.NotificationCompatSideChannelService,int,java.lang.String) -> access$100
android.support.v4.app.NotificationCompatSideChannelService$1 -> android.support.v4.app.NotificationCompatSideChannelService$1:
android.support.v4.app.NotificationCompatSideChannelService$NotificationSideChannelStub -> android.support.v4.app.NotificationCompatSideChannelService$NotificationSideChannelStub:
    android.support.v4.app.NotificationCompatSideChannelService this$0 -> this$0
    void notify(java.lang.String,int,java.lang.String,android.app.Notification) -> notify
    void cancel(java.lang.String,int,java.lang.String) -> cancel
    void cancelAll(java.lang.String) -> cancelAll
android.support.v4.app.NotificationManagerCompat -> android.support.v4.app.NotificationManagerCompat:
    java.lang.String TAG -> TAG
    java.lang.String EXTRA_USE_SIDE_CHANNEL -> EXTRA_USE_SIDE_CHANNEL
    java.lang.String ACTION_BIND_SIDE_CHANNEL -> ACTION_BIND_SIDE_CHANNEL
    int MAX_SIDE_CHANNEL_SDK_VERSION -> MAX_SIDE_CHANNEL_SDK_VERSION
    int SIDE_CHANNEL_RETRY_BASE_INTERVAL_MS -> SIDE_CHANNEL_RETRY_BASE_INTERVAL_MS
    int SIDE_CHANNEL_RETRY_MAX_COUNT -> SIDE_CHANNEL_RETRY_MAX_COUNT
    java.lang.String SETTING_ENABLED_NOTIFICATION_LISTENERS -> SETTING_ENABLED_NOTIFICATION_LISTENERS
    int SIDE_CHANNEL_BIND_FLAGS -> SIDE_CHANNEL_BIND_FLAGS
    java.lang.Object sEnabledNotificationListenersLock -> sEnabledNotificationListenersLock
    java.lang.String sEnabledNotificationListeners -> sEnabledNotificationListeners
    java.util.Set sEnabledNotificationListenerPackages -> sEnabledNotificationListenerPackages
    android.content.Context mContext -> mContext
    android.app.NotificationManager mNotificationManager -> mNotificationManager
    java.lang.Object sLock -> sLock
    android.support.v4.app.NotificationManagerCompat$SideChannelManager sSideChannelManager -> sSideChannelManager
    android.support.v4.app.NotificationManagerCompat$Impl IMPL -> IMPL
    android.support.v4.app.NotificationManagerCompat from(android.content.Context) -> from
    void cancel(int) -> cancel
    void cancel(java.lang.String,int) -> cancel
    void cancelAll() -> cancelAll
    void notify(int,android.app.Notification) -> notify
    void notify(java.lang.String,int,android.app.Notification) -> notify
    java.util.Set getEnabledListenerPackages(android.content.Context) -> getEnabledListenerPackages
    boolean useSideChannelForNotification(android.app.Notification) -> useSideChannelForNotification
    void pushSideChannelQueue(android.support.v4.app.NotificationManagerCompat$Task) -> pushSideChannelQueue
    int access$000() -> access$000
android.support.v4.app.NotificationManagerCompat$CancelTask -> android.support.v4.app.NotificationManagerCompat$CancelTask:
    java.lang.String packageName -> packageName
    int id -> id
    java.lang.String tag -> tag
    boolean all -> all
    void send(android.support.v4.app.INotificationSideChannel) -> send
    java.lang.String toString() -> toString
android.support.v4.app.NotificationManagerCompat$Impl -> android.support.v4.app.NotificationManagerCompat$Impl:
    void cancelNotification(android.app.NotificationManager,java.lang.String,int) -> cancelNotification
    void postNotification(android.app.NotificationManager,java.lang.String,int,android.app.Notification) -> postNotification
    int getSideChannelBindFlags() -> getSideChannelBindFlags
android.support.v4.app.NotificationManagerCompat$ImplBase -> android.support.v4.app.NotificationManagerCompat$ImplBase:
    void cancelNotification(android.app.NotificationManager,java.lang.String,int) -> cancelNotification
    void postNotification(android.app.NotificationManager,java.lang.String,int,android.app.Notification) -> postNotification
    int getSideChannelBindFlags() -> getSideChannelBindFlags
android.support.v4.app.NotificationManagerCompat$ImplEclair -> android.support.v4.app.NotificationManagerCompat$ImplEclair:
    void cancelNotification(android.app.NotificationManager,java.lang.String,int) -> cancelNotification
    void postNotification(android.app.NotificationManager,java.lang.String,int,android.app.Notification) -> postNotification
android.support.v4.app.NotificationManagerCompat$ImplIceCreamSandwich -> android.support.v4.app.NotificationManagerCompat$ImplIceCreamSandwich:
    int getSideChannelBindFlags() -> getSideChannelBindFlags
android.support.v4.app.NotificationManagerCompat$NotifyTask -> android.support.v4.app.NotificationManagerCompat$NotifyTask:
    java.lang.String packageName -> packageName
    int id -> id
    java.lang.String tag -> tag
    android.app.Notification notif -> notif
    void send(android.support.v4.app.INotificationSideChannel) -> send
    java.lang.String toString() -> toString
android.support.v4.app.NotificationManagerCompat$ServiceConnectedEvent -> android.support.v4.app.NotificationManagerCompat$ServiceConnectedEvent:
    android.content.ComponentName componentName -> componentName
    android.os.IBinder iBinder -> iBinder
android.support.v4.app.NotificationManagerCompat$SideChannelManager -> android.support.v4.app.NotificationManagerCompat$SideChannelManager:
    int MSG_QUEUE_TASK -> MSG_QUEUE_TASK
    int MSG_SERVICE_CONNECTED -> MSG_SERVICE_CONNECTED
    int MSG_SERVICE_DISCONNECTED -> MSG_SERVICE_DISCONNECTED
    int MSG_RETRY_LISTENER_QUEUE -> MSG_RETRY_LISTENER_QUEUE
    java.lang.String KEY_BINDER -> KEY_BINDER
    android.content.Context mContext -> mContext
    android.os.HandlerThread mHandlerThread -> mHandlerThread
    android.os.Handler mHandler -> mHandler
    java.util.Map mRecordMap -> mRecordMap
    java.util.Set mCachedEnabledPackages -> mCachedEnabledPackages
    void queueTask(android.support.v4.app.NotificationManagerCompat$Task) -> queueTask
    boolean handleMessage(android.os.Message) -> handleMessage
    void handleQueueTask(android.support.v4.app.NotificationManagerCompat$Task) -> handleQueueTask
    void handleServiceConnected(android.content.ComponentName,android.os.IBinder) -> handleServiceConnected
    void handleServiceDisconnected(android.content.ComponentName) -> handleServiceDisconnected
    void handleRetryListenerQueue(android.content.ComponentName) -> handleRetryListenerQueue
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
    void updateListenerMap() -> updateListenerMap
    boolean ensureServiceBound(android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord) -> ensureServiceBound
    void ensureServiceUnbound(android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord) -> ensureServiceUnbound
    void scheduleListenerRetry(android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord) -> scheduleListenerRetry
    void processListenerQueue(android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord) -> processListenerQueue
android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord -> android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord:
    android.content.ComponentName componentName -> componentName
    boolean bound -> bound
    android.support.v4.app.INotificationSideChannel service -> service
    java.util.LinkedList taskQueue -> taskQueue
    int retryCount -> retryCount
android.support.v4.app.NotificationManagerCompat$Task -> android.support.v4.app.NotificationManagerCompat$Task:
    void send(android.support.v4.app.INotificationSideChannel) -> send
android.support.v4.app.NotificationManagerCompatEclair -> android.support.v4.app.NotificationManagerCompatEclair:
    void cancelNotification(android.app.NotificationManager,java.lang.String,int) -> cancelNotification
    void postNotification(android.app.NotificationManager,java.lang.String,int,android.app.Notification) -> postNotification
android.support.v4.app.NotificationManagerCompatIceCreamSandwich -> android.support.v4.app.NotificationManagerCompatIceCreamSandwich:
    int SIDE_CHANNEL_BIND_FLAGS -> SIDE_CHANNEL_BIND_FLAGS
android.support.v4.app.RemoteInput -> android.support.v4.app.RemoteInput:
    java.lang.String TAG -> TAG
    java.lang.String RESULTS_CLIP_LABEL -> RESULTS_CLIP_LABEL
    java.lang.String EXTRA_RESULTS_DATA -> EXTRA_RESULTS_DATA
    java.lang.String mResultKey -> mResultKey
    java.lang.CharSequence mLabel -> mLabel
    java.lang.CharSequence[] mChoices -> mChoices
    boolean mAllowFreeFormInput -> mAllowFreeFormInput
    android.os.Bundle mExtras -> mExtras
    android.support.v4.app.RemoteInput$Impl IMPL -> IMPL
    android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory FACTORY -> FACTORY
    java.lang.String getResultKey() -> getResultKey
    java.lang.CharSequence getLabel() -> getLabel
    java.lang.CharSequence[] getChoices() -> getChoices
    boolean getAllowFreeFormInput() -> getAllowFreeFormInput
    android.os.Bundle getExtras() -> getExtras
    android.os.Bundle getResultsFromIntent(android.content.Intent) -> getResultsFromIntent
    void addResultsToIntent(android.support.v4.app.RemoteInput[],android.content.Intent,android.os.Bundle) -> addResultsToIntent
android.support.v4.app.RemoteInput$1 -> android.support.v4.app.RemoteInput$1:
    android.support.v4.app.RemoteInput build(java.lang.String,java.lang.CharSequence,java.lang.CharSequence[],boolean,android.os.Bundle) -> build
    android.support.v4.app.RemoteInput[] newArray(int) -> newArray
    android.support.v4.app.RemoteInputCompatBase$RemoteInput[] newArray(int) -> newArray
    android.support.v4.app.RemoteInputCompatBase$RemoteInput build(java.lang.String,java.lang.CharSequence,java.lang.CharSequence[],boolean,android.os.Bundle) -> build
android.support.v4.app.RemoteInput$Builder -> android.support.v4.app.RemoteInput$Builder:
    java.lang.String mResultKey -> mResultKey
    java.lang.CharSequence mLabel -> mLabel
    java.lang.CharSequence[] mChoices -> mChoices
    boolean mAllowFreeFormInput -> mAllowFreeFormInput
    android.os.Bundle mExtras -> mExtras
    android.support.v4.app.RemoteInput$Builder setLabel(java.lang.CharSequence) -> setLabel
    android.support.v4.app.RemoteInput$Builder setChoices(java.lang.CharSequence[]) -> setChoices
    android.support.v4.app.RemoteInput$Builder setAllowFreeFormInput(boolean) -> setAllowFreeFormInput
    android.support.v4.app.RemoteInput$Builder addExtras(android.os.Bundle) -> addExtras
    android.os.Bundle getExtras() -> getExtras
    android.support.v4.app.RemoteInput build() -> build
android.support.v4.app.RemoteInput$Impl -> android.support.v4.app.RemoteInput$Impl:
    android.os.Bundle getResultsFromIntent(android.content.Intent) -> getResultsFromIntent
    void addResultsToIntent(android.support.v4.app.RemoteInput[],android.content.Intent,android.os.Bundle) -> addResultsToIntent
android.support.v4.app.RemoteInput$ImplApi20 -> android.support.v4.app.RemoteInput$ImplApi20:
    android.os.Bundle getResultsFromIntent(android.content.Intent) -> getResultsFromIntent
    void addResultsToIntent(android.support.v4.app.RemoteInput[],android.content.Intent,android.os.Bundle) -> addResultsToIntent
android.support.v4.app.RemoteInput$ImplBase -> android.support.v4.app.RemoteInput$ImplBase:
    android.os.Bundle getResultsFromIntent(android.content.Intent) -> getResultsFromIntent
    void addResultsToIntent(android.support.v4.app.RemoteInput[],android.content.Intent,android.os.Bundle) -> addResultsToIntent
android.support.v4.app.RemoteInput$ImplJellybean -> android.support.v4.app.RemoteInput$ImplJellybean:
    android.os.Bundle getResultsFromIntent(android.content.Intent) -> getResultsFromIntent
    void addResultsToIntent(android.support.v4.app.RemoteInput[],android.content.Intent,android.os.Bundle) -> addResultsToIntent
android.support.v4.app.RemoteInputCompatApi20 -> android.support.v4.app.RemoteInputCompatApi20:
    android.support.v4.app.RemoteInputCompatBase$RemoteInput[] toCompat(android.app.RemoteInput[],android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory) -> toCompat
    android.app.RemoteInput[] fromCompat(android.support.v4.app.RemoteInputCompatBase$RemoteInput[]) -> fromCompat
    android.os.Bundle getResultsFromIntent(android.content.Intent) -> getResultsFromIntent
    void addResultsToIntent(android.support.v4.app.RemoteInputCompatBase$RemoteInput[],android.content.Intent,android.os.Bundle) -> addResultsToIntent
android.support.v4.app.RemoteInputCompatBase -> android.support.v4.app.RemoteInputCompatBase:
android.support.v4.app.RemoteInputCompatBase$RemoteInput -> android.support.v4.app.RemoteInputCompatBase$RemoteInput:
    java.lang.String getResultKey() -> getResultKey
    java.lang.CharSequence getLabel() -> getLabel
    java.lang.CharSequence[] getChoices() -> getChoices
    boolean getAllowFreeFormInput() -> getAllowFreeFormInput
    android.os.Bundle getExtras() -> getExtras
android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory -> android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory:
    android.support.v4.app.RemoteInputCompatBase$RemoteInput build(java.lang.String,java.lang.CharSequence,java.lang.CharSequence[],boolean,android.os.Bundle) -> build
    android.support.v4.app.RemoteInputCompatBase$RemoteInput[] newArray(int) -> newArray
android.support.v4.app.RemoteInputCompatJellybean -> android.support.v4.app.RemoteInputCompatJellybean:
    java.lang.String RESULTS_CLIP_LABEL -> RESULTS_CLIP_LABEL
    java.lang.String EXTRA_RESULTS_DATA -> EXTRA_RESULTS_DATA
    java.lang.String KEY_RESULT_KEY -> KEY_RESULT_KEY
    java.lang.String KEY_LABEL -> KEY_LABEL
    java.lang.String KEY_CHOICES -> KEY_CHOICES
    java.lang.String KEY_ALLOW_FREE_FORM_INPUT -> KEY_ALLOW_FREE_FORM_INPUT
    java.lang.String KEY_EXTRAS -> KEY_EXTRAS
    android.support.v4.app.RemoteInputCompatBase$RemoteInput fromBundle(android.os.Bundle,android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory) -> fromBundle
    android.os.Bundle toBundle(android.support.v4.app.RemoteInputCompatBase$RemoteInput) -> toBundle
    android.support.v4.app.RemoteInputCompatBase$RemoteInput[] fromBundleArray(android.os.Bundle[],android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory) -> fromBundleArray
    android.os.Bundle[] toBundleArray(android.support.v4.app.RemoteInputCompatBase$RemoteInput[]) -> toBundleArray
    android.os.Bundle getResultsFromIntent(android.content.Intent) -> getResultsFromIntent
    void addResultsToIntent(android.support.v4.app.RemoteInputCompatBase$RemoteInput[],android.content.Intent,android.os.Bundle) -> addResultsToIntent
android.support.v4.app.ServiceCompat -> android.support.v4.app.ServiceCompat:
    int START_STICKY -> START_STICKY
android.support.v4.app.ShareCompat -> android.support.v4.app.ShareCompat:
    java.lang.String EXTRA_CALLING_PACKAGE -> EXTRA_CALLING_PACKAGE
    java.lang.String EXTRA_CALLING_ACTIVITY -> EXTRA_CALLING_ACTIVITY
    android.support.v4.app.ShareCompat$ShareCompatImpl IMPL -> IMPL
    java.lang.String getCallingPackage(android.app.Activity) -> getCallingPackage
    android.content.ComponentName getCallingActivity(android.app.Activity) -> getCallingActivity
    void configureMenuItem(android.view.MenuItem,android.support.v4.app.ShareCompat$IntentBuilder) -> configureMenuItem
    void configureMenuItem(android.view.Menu,int,android.support.v4.app.ShareCompat$IntentBuilder) -> configureMenuItem
    android.support.v4.app.ShareCompat$ShareCompatImpl access$000() -> access$000
android.support.v4.app.ShareCompat$IntentBuilder -> android.support.v4.app.ShareCompat$IntentBuilder:
    android.app.Activity mActivity -> mActivity
    android.content.Intent mIntent -> mIntent
    java.lang.CharSequence mChooserTitle -> mChooserTitle
    java.util.ArrayList mToAddresses -> mToAddresses
    java.util.ArrayList mCcAddresses -> mCcAddresses
    java.util.ArrayList mBccAddresses -> mBccAddresses
    java.util.ArrayList mStreams -> mStreams
    android.support.v4.app.ShareCompat$IntentBuilder from(android.app.Activity) -> from
    android.content.Intent getIntent() -> getIntent
    android.app.Activity getActivity() -> getActivity
    void combineArrayExtra(java.lang.String,java.util.ArrayList) -> combineArrayExtra
    void combineArrayExtra(java.lang.String,java.lang.String[]) -> combineArrayExtra
    android.content.Intent createChooserIntent() -> createChooserIntent
    void startChooser() -> startChooser
    android.support.v4.app.ShareCompat$IntentBuilder setChooserTitle(java.lang.CharSequence) -> setChooserTitle
    android.support.v4.app.ShareCompat$IntentBuilder setChooserTitle(int) -> setChooserTitle
    android.support.v4.app.ShareCompat$IntentBuilder setType(java.lang.String) -> setType
    android.support.v4.app.ShareCompat$IntentBuilder setText(java.lang.CharSequence) -> setText
    android.support.v4.app.ShareCompat$IntentBuilder setHtmlText(java.lang.String) -> setHtmlText
    android.support.v4.app.ShareCompat$IntentBuilder setStream(android.net.Uri) -> setStream
    android.support.v4.app.ShareCompat$IntentBuilder addStream(android.net.Uri) -> addStream
    android.support.v4.app.ShareCompat$IntentBuilder setEmailTo(java.lang.String[]) -> setEmailTo
    android.support.v4.app.ShareCompat$IntentBuilder addEmailTo(java.lang.String) -> addEmailTo
    android.support.v4.app.ShareCompat$IntentBuilder addEmailTo(java.lang.String[]) -> addEmailTo
    android.support.v4.app.ShareCompat$IntentBuilder setEmailCc(java.lang.String[]) -> setEmailCc
    android.support.v4.app.ShareCompat$IntentBuilder addEmailCc(java.lang.String) -> addEmailCc
    android.support.v4.app.ShareCompat$IntentBuilder addEmailCc(java.lang.String[]) -> addEmailCc
    android.support.v4.app.ShareCompat$IntentBuilder setEmailBcc(java.lang.String[]) -> setEmailBcc
    android.support.v4.app.ShareCompat$IntentBuilder addEmailBcc(java.lang.String) -> addEmailBcc
    android.support.v4.app.ShareCompat$IntentBuilder addEmailBcc(java.lang.String[]) -> addEmailBcc
    android.support.v4.app.ShareCompat$IntentBuilder setSubject(java.lang.String) -> setSubject
android.support.v4.app.ShareCompat$IntentReader -> android.support.v4.app.ShareCompat$IntentReader:
    java.lang.String TAG -> TAG
    android.app.Activity mActivity -> mActivity
    android.content.Intent mIntent -> mIntent
    java.lang.String mCallingPackage -> mCallingPackage
    android.content.ComponentName mCallingActivity -> mCallingActivity
    java.util.ArrayList mStreams -> mStreams
    android.support.v4.app.ShareCompat$IntentReader from(android.app.Activity) -> from
    boolean isShareIntent() -> isShareIntent
    boolean isSingleShare() -> isSingleShare
    boolean isMultipleShare() -> isMultipleShare
    java.lang.String getType() -> getType
    java.lang.CharSequence getText() -> getText
    java.lang.String getHtmlText() -> getHtmlText
    android.net.Uri getStream() -> getStream
    android.net.Uri getStream(int) -> getStream
    int getStreamCount() -> getStreamCount
    java.lang.String[] getEmailTo() -> getEmailTo
    java.lang.String[] getEmailCc() -> getEmailCc
    java.lang.String[] getEmailBcc() -> getEmailBcc
    java.lang.String getSubject() -> getSubject
    java.lang.String getCallingPackage() -> getCallingPackage
    android.content.ComponentName getCallingActivity() -> getCallingActivity
    android.graphics.drawable.Drawable getCallingActivityIcon() -> getCallingActivityIcon
    android.graphics.drawable.Drawable getCallingApplicationIcon() -> getCallingApplicationIcon
    java.lang.CharSequence getCallingApplicationLabel() -> getCallingApplicationLabel
android.support.v4.app.ShareCompat$ShareCompatImpl -> android.support.v4.app.ShareCompat$ShareCompatImpl:
    void configureMenuItem(android.view.MenuItem,android.support.v4.app.ShareCompat$IntentBuilder) -> configureMenuItem
    java.lang.String escapeHtml(java.lang.CharSequence) -> escapeHtml
android.support.v4.app.ShareCompat$ShareCompatImplBase -> android.support.v4.app.ShareCompat$ShareCompatImplBase:
    void configureMenuItem(android.view.MenuItem,android.support.v4.app.ShareCompat$IntentBuilder) -> configureMenuItem
    java.lang.String escapeHtml(java.lang.CharSequence) -> escapeHtml
    void withinStyle(java.lang.StringBuilder,java.lang.CharSequence,int,int) -> withinStyle
android.support.v4.app.ShareCompat$ShareCompatImplICS -> android.support.v4.app.ShareCompat$ShareCompatImplICS:
    void configureMenuItem(android.view.MenuItem,android.support.v4.app.ShareCompat$IntentBuilder) -> configureMenuItem
    boolean shouldAddChooserIntent(android.view.MenuItem) -> shouldAddChooserIntent
android.support.v4.app.ShareCompat$ShareCompatImplJB -> android.support.v4.app.ShareCompat$ShareCompatImplJB:
    java.lang.String escapeHtml(java.lang.CharSequence) -> escapeHtml
    boolean shouldAddChooserIntent(android.view.MenuItem) -> shouldAddChooserIntent
android.support.v4.app.ShareCompatICS -> android.support.v4.app.ShareCompatICS:
    java.lang.String HISTORY_FILENAME_PREFIX -> HISTORY_FILENAME_PREFIX
    void configureMenuItem(android.view.MenuItem,android.app.Activity,android.content.Intent) -> configureMenuItem
android.support.v4.app.ShareCompatJB -> android.support.v4.app.ShareCompatJB:
    java.lang.String escapeHtml(java.lang.CharSequence) -> escapeHtml
android.support.v4.app.SharedElementCallback -> android.support.v4.app.SharedElementCallback:
    android.graphics.Matrix mTempMatrix -> mTempMatrix
    void onSharedElementStart(java.util.List,java.util.List,java.util.List) -> onSharedElementStart
    void onSharedElementEnd(java.util.List,java.util.List,java.util.List) -> onSharedElementEnd
    void onRejectSharedElements(java.util.List) -> onRejectSharedElements
    void onMapSharedElements(java.util.List,java.util.Map) -> onMapSharedElements
    android.os.Parcelable onCaptureSharedElementSnapshot(android.view.View,android.graphics.Matrix,android.graphics.RectF) -> onCaptureSharedElementSnapshot
    android.view.View onCreateSnapshotView(android.content.Context,android.os.Parcelable) -> onCreateSnapshotView
android.support.v4.app.SuperNotCalledException -> android.support.v4.app.SuperNotCalledException:
android.support.v4.app.TaskStackBuilder -> android.support.v4.app.TaskStackBuilder:
    java.lang.String TAG -> TAG
    android.support.v4.app.TaskStackBuilder$TaskStackBuilderImpl IMPL -> IMPL
    java.util.ArrayList mIntents -> mIntents
    android.content.Context mSourceContext -> mSourceContext
    android.support.v4.app.TaskStackBuilder create(android.content.Context) -> create
    android.support.v4.app.TaskStackBuilder from(android.content.Context) -> from
    android.support.v4.app.TaskStackBuilder addNextIntent(android.content.Intent) -> addNextIntent
    android.support.v4.app.TaskStackBuilder addNextIntentWithParentStack(android.content.Intent) -> addNextIntentWithParentStack
    android.support.v4.app.TaskStackBuilder addParentStack(android.app.Activity) -> addParentStack
    android.support.v4.app.TaskStackBuilder addParentStack(java.lang.Class) -> addParentStack
    android.support.v4.app.TaskStackBuilder addParentStack(android.content.ComponentName) -> addParentStack
    int getIntentCount() -> getIntentCount
    android.content.Intent getIntent(int) -> getIntent
    android.content.Intent editIntentAt(int) -> editIntentAt
    java.util.Iterator iterator() -> iterator
    void startActivities() -> startActivities
    void startActivities(android.os.Bundle) -> startActivities
    android.app.PendingIntent getPendingIntent(int,int) -> getPendingIntent
    android.app.PendingIntent getPendingIntent(int,int,android.os.Bundle) -> getPendingIntent
    android.content.Intent[] getIntents() -> getIntents
android.support.v4.app.TaskStackBuilder$SupportParentable -> android.support.v4.app.TaskStackBuilder$SupportParentable:
    android.content.Intent getSupportParentActivityIntent() -> getSupportParentActivityIntent
android.support.v4.app.TaskStackBuilder$TaskStackBuilderImpl -> android.support.v4.app.TaskStackBuilder$TaskStackBuilderImpl:
    android.app.PendingIntent getPendingIntent(android.content.Context,android.content.Intent[],int,int,android.os.Bundle) -> getPendingIntent
android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplBase -> android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplBase:
    android.app.PendingIntent getPendingIntent(android.content.Context,android.content.Intent[],int,int,android.os.Bundle) -> getPendingIntent
android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplHoneycomb -> android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplHoneycomb:
    android.app.PendingIntent getPendingIntent(android.content.Context,android.content.Intent[],int,int,android.os.Bundle) -> getPendingIntent
android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplJellybean -> android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplJellybean:
    android.app.PendingIntent getPendingIntent(android.content.Context,android.content.Intent[],int,int,android.os.Bundle) -> getPendingIntent
android.support.v4.app.TaskStackBuilderHoneycomb -> android.support.v4.app.TaskStackBuilderHoneycomb:
    android.app.PendingIntent getActivitiesPendingIntent(android.content.Context,int,android.content.Intent[],int) -> getActivitiesPendingIntent
android.support.v4.app.TaskStackBuilderJellybean -> android.support.v4.app.TaskStackBuilderJellybean:
    android.app.PendingIntent getActivitiesPendingIntent(android.content.Context,int,android.content.Intent[],int,android.os.Bundle) -> getActivitiesPendingIntent
android.support.v4.content.AsyncTaskLoader -> android.support.v4.content.AsyncTaskLoader:
    java.lang.String TAG -> TAG
    boolean DEBUG -> DEBUG
    android.support.v4.content.AsyncTaskLoader$LoadTask mTask -> mTask
    android.support.v4.content.AsyncTaskLoader$LoadTask mCancellingTask -> mCancellingTask
    long mUpdateThrottle -> mUpdateThrottle
    long mLastLoadCompleteTime -> mLastLoadCompleteTime
    android.os.Handler mHandler -> mHandler
    void setUpdateThrottle(long) -> setUpdateThrottle
    void onForceLoad() -> onForceLoad
    boolean cancelLoad() -> cancelLoad
    void onCanceled(java.lang.Object) -> onCanceled
    void executePendingTask() -> executePendingTask
    void dispatchOnCancelled(android.support.v4.content.AsyncTaskLoader$LoadTask,java.lang.Object) -> dispatchOnCancelled
    void dispatchOnLoadComplete(android.support.v4.content.AsyncTaskLoader$LoadTask,java.lang.Object) -> dispatchOnLoadComplete
    java.lang.Object loadInBackground() -> loadInBackground
    java.lang.Object onLoadInBackground() -> onLoadInBackground
    void waitForLoader() -> waitForLoader
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
android.support.v4.content.AsyncTaskLoader$LoadTask -> android.support.v4.content.AsyncTaskLoader$LoadTask:
    java.lang.Object result -> result
    boolean waiting -> waiting
    java.util.concurrent.CountDownLatch done -> done
    android.support.v4.content.AsyncTaskLoader this$0 -> this$0
    java.lang.Object doInBackground(java.lang.Void[]) -> doInBackground
    void onPostExecute(java.lang.Object) -> onPostExecute
    void onCancelled() -> onCancelled
    void run() -> run
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    java.util.concurrent.CountDownLatch access$000(android.support.v4.content.AsyncTaskLoader$LoadTask) -> access$000
android.support.v4.content.ContextCompat -> android.support.v4.content.ContextCompat:
    java.lang.String TAG -> TAG
    java.lang.String DIR_ANDROID -> DIR_ANDROID
    java.lang.String DIR_DATA -> DIR_DATA
    java.lang.String DIR_OBB -> DIR_OBB
    java.lang.String DIR_FILES -> DIR_FILES
    java.lang.String DIR_CACHE -> DIR_CACHE
    boolean startActivities(android.content.Context,android.content.Intent[]) -> startActivities
    boolean startActivities(android.content.Context,android.content.Intent[],android.os.Bundle) -> startActivities
    java.io.File[] getObbDirs(android.content.Context) -> getObbDirs
    java.io.File[] getExternalFilesDirs(android.content.Context,java.lang.String) -> getExternalFilesDirs
    java.io.File[] getExternalCacheDirs(android.content.Context) -> getExternalCacheDirs
    java.io.File buildPath(java.io.File,java.lang.String[]) -> buildPath
    android.graphics.drawable.Drawable getDrawable(android.content.Context,int) -> getDrawable
    java.io.File getNoBackupFilesDir(android.content.Context) -> getNoBackupFilesDir
    java.io.File getCodeCacheDir(android.content.Context) -> getCodeCacheDir
    java.io.File createFilesDir(java.io.File) -> createFilesDir
android.support.v4.content.ContextCompatApi21 -> android.support.v4.content.ContextCompatApi21:
    android.graphics.drawable.Drawable getDrawable(android.content.Context,int) -> getDrawable
    java.io.File getNoBackupFilesDir(android.content.Context) -> getNoBackupFilesDir
    java.io.File getCodeCacheDir(android.content.Context) -> getCodeCacheDir
android.support.v4.content.ContextCompatFroyo -> android.support.v4.content.ContextCompatFroyo:
    java.io.File getExternalCacheDir(android.content.Context) -> getExternalCacheDir
    java.io.File getExternalFilesDir(android.content.Context,java.lang.String) -> getExternalFilesDir
android.support.v4.content.ContextCompatHoneycomb -> android.support.v4.content.ContextCompatHoneycomb:
    void startActivities(android.content.Context,android.content.Intent[]) -> startActivities
    java.io.File getObbDir(android.content.Context) -> getObbDir
android.support.v4.content.ContextCompatJellybean -> android.support.v4.content.ContextCompatJellybean:
    void startActivities(android.content.Context,android.content.Intent[],android.os.Bundle) -> startActivities
android.support.v4.content.ContextCompatKitKat -> android.support.v4.content.ContextCompatKitKat:
    java.io.File[] getExternalCacheDirs(android.content.Context) -> getExternalCacheDirs
    java.io.File[] getExternalFilesDirs(android.content.Context,java.lang.String) -> getExternalFilesDirs
    java.io.File[] getObbDirs(android.content.Context) -> getObbDirs
android.support.v4.content.CursorLoader -> android.support.v4.content.CursorLoader:
    android.support.v4.content.Loader$ForceLoadContentObserver mObserver -> mObserver
    android.net.Uri mUri -> mUri
    java.lang.String[] mProjection -> mProjection
    java.lang.String mSelection -> mSelection
    java.lang.String[] mSelectionArgs -> mSelectionArgs
    java.lang.String mSortOrder -> mSortOrder
    android.database.Cursor mCursor -> mCursor
    android.database.Cursor loadInBackground() -> loadInBackground
    void deliverResult(android.database.Cursor) -> deliverResult
    void onStartLoading() -> onStartLoading
    void onStopLoading() -> onStopLoading
    void onCanceled(android.database.Cursor) -> onCanceled
    void onReset() -> onReset
    android.net.Uri getUri() -> getUri
    void setUri(android.net.Uri) -> setUri
    java.lang.String[] getProjection() -> getProjection
    void setProjection(java.lang.String[]) -> setProjection
    java.lang.String getSelection() -> getSelection
    void setSelection(java.lang.String) -> setSelection
    java.lang.String[] getSelectionArgs() -> getSelectionArgs
    void setSelectionArgs(java.lang.String[]) -> setSelectionArgs
    java.lang.String getSortOrder() -> getSortOrder
    void setSortOrder(java.lang.String) -> setSortOrder
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    java.lang.Object loadInBackground() -> loadInBackground
    void onCanceled(java.lang.Object) -> onCanceled
    void deliverResult(java.lang.Object) -> deliverResult
android.support.v4.content.FileProvider -> android.support.v4.content.FileProvider:
    java.lang.String[] COLUMNS -> COLUMNS
    java.lang.String META_DATA_FILE_PROVIDER_PATHS -> META_DATA_FILE_PROVIDER_PATHS
    java.lang.String TAG_ROOT_PATH -> TAG_ROOT_PATH
    java.lang.String TAG_FILES_PATH -> TAG_FILES_PATH
    java.lang.String TAG_CACHE_PATH -> TAG_CACHE_PATH
    java.lang.String TAG_EXTERNAL -> TAG_EXTERNAL
    java.lang.String ATTR_NAME -> ATTR_NAME
    java.lang.String ATTR_PATH -> ATTR_PATH
    java.io.File DEVICE_ROOT -> DEVICE_ROOT
    java.util.HashMap sCache -> sCache
    android.support.v4.content.FileProvider$PathStrategy mStrategy -> mStrategy
    boolean onCreate() -> onCreate
    void attachInfo(android.content.Context,android.content.pm.ProviderInfo) -> attachInfo
    android.net.Uri getUriForFile(android.content.Context,java.lang.String,java.io.File) -> getUriForFile
    android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String) -> query
    java.lang.String getType(android.net.Uri) -> getType
    android.net.Uri insert(android.net.Uri,android.content.ContentValues) -> insert
    int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[]) -> update
    int delete(android.net.Uri,java.lang.String,java.lang.String[]) -> delete
    android.os.ParcelFileDescriptor openFile(android.net.Uri,java.lang.String) -> openFile
    android.support.v4.content.FileProvider$PathStrategy getPathStrategy(android.content.Context,java.lang.String) -> getPathStrategy
    android.support.v4.content.FileProvider$PathStrategy parsePathStrategy(android.content.Context,java.lang.String) -> parsePathStrategy
    int modeToMode(java.lang.String) -> modeToMode
    java.io.File buildPath(java.io.File,java.lang.String[]) -> buildPath
    java.lang.String[] copyOf(java.lang.String[],int) -> copyOf
    java.lang.Object[] copyOf(java.lang.Object[],int) -> copyOf
android.support.v4.content.FileProvider$PathStrategy -> android.support.v4.content.FileProvider$PathStrategy:
    android.net.Uri getUriForFile(java.io.File) -> getUriForFile
    java.io.File getFileForUri(android.net.Uri) -> getFileForUri
android.support.v4.content.FileProvider$SimplePathStrategy -> android.support.v4.content.FileProvider$SimplePathStrategy:
    java.lang.String mAuthority -> mAuthority
    java.util.HashMap mRoots -> mRoots
    void addRoot(java.lang.String,java.io.File) -> addRoot
    android.net.Uri getUriForFile(java.io.File) -> getUriForFile
    java.io.File getFileForUri(android.net.Uri) -> getFileForUri
android.support.v4.content.IntentCompat -> android.support.v4.content.IntentCompat:
    android.support.v4.content.IntentCompat$IntentCompatImpl IMPL -> IMPL
    java.lang.String ACTION_EXTERNAL_APPLICATIONS_AVAILABLE -> ACTION_EXTERNAL_APPLICATIONS_AVAILABLE
    java.lang.String ACTION_EXTERNAL_APPLICATIONS_UNAVAILABLE -> ACTION_EXTERNAL_APPLICATIONS_UNAVAILABLE
    java.lang.String EXTRA_CHANGED_PACKAGE_LIST -> EXTRA_CHANGED_PACKAGE_LIST
    java.lang.String EXTRA_CHANGED_UID_LIST -> EXTRA_CHANGED_UID_LIST
    java.lang.String EXTRA_HTML_TEXT -> EXTRA_HTML_TEXT
    int FLAG_ACTIVITY_TASK_ON_HOME -> FLAG_ACTIVITY_TASK_ON_HOME
    int FLAG_ACTIVITY_CLEAR_TASK -> FLAG_ACTIVITY_CLEAR_TASK
    android.content.Intent makeMainActivity(android.content.ComponentName) -> makeMainActivity
    android.content.Intent makeMainSelectorActivity(java.lang.String,java.lang.String) -> makeMainSelectorActivity
    android.content.Intent makeRestartActivityTask(android.content.ComponentName) -> makeRestartActivityTask
android.support.v4.content.IntentCompat$IntentCompatImpl -> android.support.v4.content.IntentCompat$IntentCompatImpl:
    android.content.Intent makeMainActivity(android.content.ComponentName) -> makeMainActivity
    android.content.Intent makeMainSelectorActivity(java.lang.String,java.lang.String) -> makeMainSelectorActivity
    android.content.Intent makeRestartActivityTask(android.content.ComponentName) -> makeRestartActivityTask
android.support.v4.content.IntentCompat$IntentCompatImplBase -> android.support.v4.content.IntentCompat$IntentCompatImplBase:
    android.content.Intent makeMainActivity(android.content.ComponentName) -> makeMainActivity
    android.content.Intent makeMainSelectorActivity(java.lang.String,java.lang.String) -> makeMainSelectorActivity
    android.content.Intent makeRestartActivityTask(android.content.ComponentName) -> makeRestartActivityTask
android.support.v4.content.IntentCompat$IntentCompatImplHC -> android.support.v4.content.IntentCompat$IntentCompatImplHC:
    android.content.Intent makeMainActivity(android.content.ComponentName) -> makeMainActivity
    android.content.Intent makeRestartActivityTask(android.content.ComponentName) -> makeRestartActivityTask
android.support.v4.content.IntentCompat$IntentCompatImplIcsMr1 -> android.support.v4.content.IntentCompat$IntentCompatImplIcsMr1:
    android.content.Intent makeMainSelectorActivity(java.lang.String,java.lang.String) -> makeMainSelectorActivity
android.support.v4.content.IntentCompatHoneycomb -> android.support.v4.content.IntentCompatHoneycomb:
    android.content.Intent makeMainActivity(android.content.ComponentName) -> makeMainActivity
    android.content.Intent makeRestartActivityTask(android.content.ComponentName) -> makeRestartActivityTask
android.support.v4.content.IntentCompatIcsMr1 -> android.support.v4.content.IntentCompatIcsMr1:
    android.content.Intent makeMainSelectorActivity(java.lang.String,java.lang.String) -> makeMainSelectorActivity
android.support.v4.content.Loader -> android.support.v4.content.Loader:
    int mId -> mId
    android.support.v4.content.Loader$OnLoadCompleteListener mListener -> mListener
    android.content.Context mContext -> mContext
    boolean mStarted -> mStarted
    boolean mAbandoned -> mAbandoned
    boolean mReset -> mReset
    boolean mContentChanged -> mContentChanged
    boolean mProcessingChange -> mProcessingChange
    void deliverResult(java.lang.Object) -> deliverResult
    android.content.Context getContext() -> getContext
    int getId() -> getId
    void registerListener(int,android.support.v4.content.Loader$OnLoadCompleteListener) -> registerListener
    void unregisterListener(android.support.v4.content.Loader$OnLoadCompleteListener) -> unregisterListener
    boolean isStarted() -> isStarted
    boolean isAbandoned() -> isAbandoned
    boolean isReset() -> isReset
    void startLoading() -> startLoading
    void onStartLoading() -> onStartLoading
    void forceLoad() -> forceLoad
    void onForceLoad() -> onForceLoad
    void stopLoading() -> stopLoading
    void onStopLoading() -> onStopLoading
    void abandon() -> abandon
    void onAbandon() -> onAbandon
    void reset() -> reset
    void onReset() -> onReset
    boolean takeContentChanged() -> takeContentChanged
    void commitContentChanged() -> commitContentChanged
    void rollbackContentChanged() -> rollbackContentChanged
    void onContentChanged() -> onContentChanged
    java.lang.String dataToString(java.lang.Object) -> dataToString
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
android.support.v4.content.Loader$ForceLoadContentObserver -> android.support.v4.content.Loader$ForceLoadContentObserver:
    android.support.v4.content.Loader this$0 -> this$0
    boolean deliverSelfNotifications() -> deliverSelfNotifications
    void onChange(boolean) -> onChange
android.support.v4.content.Loader$OnLoadCompleteListener -> android.support.v4.content.Loader$OnLoadCompleteListener:
    void onLoadComplete(android.support.v4.content.Loader,java.lang.Object) -> onLoadComplete
android.support.v4.content.LocalBroadcastManager -> android.support.v4.content.LocalBroadcastManager:
    java.lang.String TAG -> TAG
    boolean DEBUG -> DEBUG
    android.content.Context mAppContext -> mAppContext
    java.util.HashMap mReceivers -> mReceivers
    java.util.HashMap mActions -> mActions
    java.util.ArrayList mPendingBroadcasts -> mPendingBroadcasts
    int MSG_EXEC_PENDING_BROADCASTS -> MSG_EXEC_PENDING_BROADCASTS
    android.os.Handler mHandler -> mHandler
    java.lang.Object mLock -> mLock
    android.support.v4.content.LocalBroadcastManager mInstance -> mInstance
    android.support.v4.content.LocalBroadcastManager getInstance(android.content.Context) -> getInstance
    void registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter) -> registerReceiver
    void unregisterReceiver(android.content.BroadcastReceiver) -> unregisterReceiver
    boolean sendBroadcast(android.content.Intent) -> sendBroadcast
    void sendBroadcastSync(android.content.Intent) -> sendBroadcastSync
    void executePendingBroadcasts() -> executePendingBroadcasts
    void access$000(android.support.v4.content.LocalBroadcastManager) -> access$000
android.support.v4.content.LocalBroadcastManager$1 -> android.support.v4.content.LocalBroadcastManager$1:
    android.support.v4.content.LocalBroadcastManager this$0 -> this$0
    void handleMessage(android.os.Message) -> handleMessage
android.support.v4.content.LocalBroadcastManager$BroadcastRecord -> android.support.v4.content.LocalBroadcastManager$BroadcastRecord:
    android.content.Intent intent -> intent
    java.util.ArrayList receivers -> receivers
android.support.v4.content.LocalBroadcastManager$ReceiverRecord -> android.support.v4.content.LocalBroadcastManager$ReceiverRecord:
    android.content.IntentFilter filter -> filter
    android.content.BroadcastReceiver receiver -> receiver
    boolean broadcasting -> broadcasting
    java.lang.String toString() -> toString
android.support.v4.content.ModernAsyncTask -> android.support.v4.content.ModernAsyncTask:
    java.lang.String LOG_TAG -> LOG_TAG
    int CORE_POOL_SIZE -> CORE_POOL_SIZE
    int MAXIMUM_POOL_SIZE -> MAXIMUM_POOL_SIZE
    int KEEP_ALIVE -> KEEP_ALIVE
    java.util.concurrent.ThreadFactory sThreadFactory -> sThreadFactory
    java.util.concurrent.BlockingQueue sPoolWorkQueue -> sPoolWorkQueue
    java.util.concurrent.Executor THREAD_POOL_EXECUTOR -> THREAD_POOL_EXECUTOR
    int MESSAGE_POST_RESULT -> MESSAGE_POST_RESULT
    int MESSAGE_POST_PROGRESS -> MESSAGE_POST_PROGRESS
    android.support.v4.content.ModernAsyncTask$InternalHandler sHandler -> sHandler
    java.util.concurrent.Executor sDefaultExecutor -> sDefaultExecutor
    android.support.v4.content.ModernAsyncTask$WorkerRunnable mWorker -> mWorker
    java.util.concurrent.FutureTask mFuture -> mFuture
    android.support.v4.content.ModernAsyncTask$Status mStatus -> mStatus
    java.util.concurrent.atomic.AtomicBoolean mTaskInvoked -> mTaskInvoked
    void init() -> init
    void setDefaultExecutor(java.util.concurrent.Executor) -> setDefaultExecutor
    void postResultIfNotInvoked(java.lang.Object) -> postResultIfNotInvoked
    java.lang.Object postResult(java.lang.Object) -> postResult
    android.support.v4.content.ModernAsyncTask$Status getStatus() -> getStatus
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    void onPreExecute() -> onPreExecute
    void onPostExecute(java.lang.Object) -> onPostExecute
    void onProgressUpdate(java.lang.Object[]) -> onProgressUpdate
    void onCancelled(java.lang.Object) -> onCancelled
    void onCancelled() -> onCancelled
    boolean isCancelled() -> isCancelled
    boolean cancel(boolean) -> cancel
    java.lang.Object get() -> get
    java.lang.Object get(long,java.util.concurrent.TimeUnit) -> get
    android.support.v4.content.ModernAsyncTask execute(java.lang.Object[]) -> execute
    android.support.v4.content.ModernAsyncTask executeOnExecutor(java.util.concurrent.Executor,java.lang.Object[]) -> executeOnExecutor
    void execute(java.lang.Runnable) -> execute
    void publishProgress(java.lang.Object[]) -> publishProgress
    void finish(java.lang.Object) -> finish
    java.util.concurrent.atomic.AtomicBoolean access$200(android.support.v4.content.ModernAsyncTask) -> access$200
    java.lang.Object access$300(android.support.v4.content.ModernAsyncTask,java.lang.Object) -> access$300
    void access$400(android.support.v4.content.ModernAsyncTask,java.lang.Object) -> access$400
    void access$500(android.support.v4.content.ModernAsyncTask,java.lang.Object) -> access$500
android.support.v4.content.ModernAsyncTask$1 -> android.support.v4.content.ModernAsyncTask$1:
    java.util.concurrent.atomic.AtomicInteger mCount -> mCount
    java.lang.Thread newThread(java.lang.Runnable) -> newThread
android.support.v4.content.ModernAsyncTask$2 -> android.support.v4.content.ModernAsyncTask$2:
    android.support.v4.content.ModernAsyncTask this$0 -> this$0
    java.lang.Object call() -> call
android.support.v4.content.ModernAsyncTask$3 -> android.support.v4.content.ModernAsyncTask$3:
    android.support.v4.content.ModernAsyncTask this$0 -> this$0
    void done() -> done
android.support.v4.content.ModernAsyncTask$4 -> android.support.v4.content.ModernAsyncTask$4:
    int[] $SwitchMap$android$support$v4$content$ModernAsyncTask$Status -> $SwitchMap$android$support$v4$content$ModernAsyncTask$Status
android.support.v4.content.ModernAsyncTask$AsyncTaskResult -> android.support.v4.content.ModernAsyncTask$AsyncTaskResult:
    android.support.v4.content.ModernAsyncTask mTask -> mTask
    java.lang.Object[] mData -> mData
android.support.v4.content.ModernAsyncTask$InternalHandler -> android.support.v4.content.ModernAsyncTask$InternalHandler:
    void handleMessage(android.os.Message) -> handleMessage
android.support.v4.content.ModernAsyncTask$Status -> android.support.v4.content.ModernAsyncTask$Status:
    android.support.v4.content.ModernAsyncTask$Status PENDING -> PENDING
    android.support.v4.content.ModernAsyncTask$Status RUNNING -> RUNNING
    android.support.v4.content.ModernAsyncTask$Status FINISHED -> FINISHED
    android.support.v4.content.ModernAsyncTask$Status[] $VALUES -> $VALUES
    android.support.v4.content.ModernAsyncTask$Status[] values() -> values
    android.support.v4.content.ModernAsyncTask$Status valueOf(java.lang.String) -> valueOf
android.support.v4.content.ModernAsyncTask$WorkerRunnable -> android.support.v4.content.ModernAsyncTask$WorkerRunnable:
    java.lang.Object[] mParams -> mParams
android.support.v4.content.WakefulBroadcastReceiver -> android.support.v4.content.WakefulBroadcastReceiver:
    java.lang.String EXTRA_WAKE_LOCK_ID -> EXTRA_WAKE_LOCK_ID
    android.util.SparseArray mActiveWakeLocks -> mActiveWakeLocks
    int mNextId -> mNextId
    android.content.ComponentName startWakefulService(android.content.Context,android.content.Intent) -> startWakefulService
    boolean completeWakefulIntent(android.content.Intent) -> completeWakefulIntent
android.support.v4.content.pm.ActivityInfoCompat -> android.support.v4.content.pm.ActivityInfoCompat:
    int CONFIG_UI_MODE -> CONFIG_UI_MODE
android.support.v4.content.res.ResourcesCompat -> android.support.v4.content.res.ResourcesCompat:
    android.graphics.drawable.Drawable getDrawable(android.content.res.Resources,int,android.content.res.Resources$Theme) -> getDrawable
android.support.v4.content.res.ResourcesCompatApi21 -> android.support.v4.content.res.ResourcesCompatApi21:
    android.graphics.drawable.Drawable getDrawable(android.content.res.Resources,int,android.content.res.Resources$Theme) -> getDrawable
android.support.v4.database.DatabaseUtilsCompat -> android.support.v4.database.DatabaseUtilsCompat:
    java.lang.String concatenateWhere(java.lang.String,java.lang.String) -> concatenateWhere
    java.lang.String[] appendSelectionArgs(java.lang.String[],java.lang.String[]) -> appendSelectionArgs
android.support.v4.graphics.BitmapCompat -> android.support.v4.graphics.BitmapCompat:
    android.support.v4.graphics.BitmapCompat$BitmapImpl IMPL -> IMPL
    boolean hasMipMap(android.graphics.Bitmap) -> hasMipMap
    void setHasMipMap(android.graphics.Bitmap,boolean) -> setHasMipMap
    int getAllocationByteCount(android.graphics.Bitmap) -> getAllocationByteCount
android.support.v4.graphics.BitmapCompat$BaseBitmapImpl -> android.support.v4.graphics.BitmapCompat$BaseBitmapImpl:
    boolean hasMipMap(android.graphics.Bitmap) -> hasMipMap
    void setHasMipMap(android.graphics.Bitmap,boolean) -> setHasMipMap
    int getAllocationByteCount(android.graphics.Bitmap) -> getAllocationByteCount
android.support.v4.graphics.BitmapCompat$BitmapImpl -> android.support.v4.graphics.BitmapCompat$BitmapImpl:
    boolean hasMipMap(android.graphics.Bitmap) -> hasMipMap
    void setHasMipMap(android.graphics.Bitmap,boolean) -> setHasMipMap
    int getAllocationByteCount(android.graphics.Bitmap) -> getAllocationByteCount
android.support.v4.graphics.BitmapCompat$HcMr1BitmapCompatImpl -> android.support.v4.graphics.BitmapCompat$HcMr1BitmapCompatImpl:
    int getAllocationByteCount(android.graphics.Bitmap) -> getAllocationByteCount
android.support.v4.graphics.BitmapCompat$JbMr2BitmapCompatImpl -> android.support.v4.graphics.BitmapCompat$JbMr2BitmapCompatImpl:
    boolean hasMipMap(android.graphics.Bitmap) -> hasMipMap
    void setHasMipMap(android.graphics.Bitmap,boolean) -> setHasMipMap
android.support.v4.graphics.BitmapCompat$KitKatBitmapCompatImpl -> android.support.v4.graphics.BitmapCompat$KitKatBitmapCompatImpl:
    int getAllocationByteCount(android.graphics.Bitmap) -> getAllocationByteCount
android.support.v4.graphics.BitmapCompatHoneycombMr1 -> android.support.v4.graphics.BitmapCompatHoneycombMr1:
    int getAllocationByteCount(android.graphics.Bitmap) -> getAllocationByteCount
android.support.v4.graphics.BitmapCompatJellybeanMR2 -> android.support.v4.graphics.BitmapCompatJellybeanMR2:
    boolean hasMipMap(android.graphics.Bitmap) -> hasMipMap
    void setHasMipMap(android.graphics.Bitmap,boolean) -> setHasMipMap
android.support.v4.graphics.BitmapCompatKitKat -> android.support.v4.graphics.BitmapCompatKitKat:
    int getAllocationByteCount(android.graphics.Bitmap) -> getAllocationByteCount
android.support.v4.graphics.drawable.DrawableCompat -> android.support.v4.graphics.drawable.DrawableCompat:
    android.support.v4.graphics.drawable.DrawableCompat$DrawableImpl IMPL -> IMPL
    void jumpToCurrentState(android.graphics.drawable.Drawable) -> jumpToCurrentState
    void setAutoMirrored(android.graphics.drawable.Drawable,boolean) -> setAutoMirrored
    boolean isAutoMirrored(android.graphics.drawable.Drawable) -> isAutoMirrored
    void setHotspot(android.graphics.drawable.Drawable,float,float) -> setHotspot
    void setHotspotBounds(android.graphics.drawable.Drawable,int,int,int,int) -> setHotspotBounds
    void setTint(android.graphics.drawable.Drawable,int) -> setTint
    void setTintList(android.graphics.drawable.Drawable,android.content.res.ColorStateList) -> setTintList
    void setTintMode(android.graphics.drawable.Drawable,android.graphics.PorterDuff$Mode) -> setTintMode
android.support.v4.graphics.drawable.DrawableCompat$BaseDrawableImpl -> android.support.v4.graphics.drawable.DrawableCompat$BaseDrawableImpl:
    void jumpToCurrentState(android.graphics.drawable.Drawable) -> jumpToCurrentState
    void setAutoMirrored(android.graphics.drawable.Drawable,boolean) -> setAutoMirrored
    boolean isAutoMirrored(android.graphics.drawable.Drawable) -> isAutoMirrored
    void setHotspot(android.graphics.drawable.Drawable,float,float) -> setHotspot
    void setHotspotBounds(android.graphics.drawable.Drawable,int,int,int,int) -> setHotspotBounds
    void setTint(android.graphics.drawable.Drawable,int) -> setTint
    void setTintList(android.graphics.drawable.Drawable,android.content.res.ColorStateList) -> setTintList
    void setTintMode(android.graphics.drawable.Drawable,android.graphics.PorterDuff$Mode) -> setTintMode
android.support.v4.graphics.drawable.DrawableCompat$DrawableImpl -> android.support.v4.graphics.drawable.DrawableCompat$DrawableImpl:
    void jumpToCurrentState(android.graphics.drawable.Drawable) -> jumpToCurrentState
    void setAutoMirrored(android.graphics.drawable.Drawable,boolean) -> setAutoMirrored
    boolean isAutoMirrored(android.graphics.drawable.Drawable) -> isAutoMirrored
    void setHotspot(android.graphics.drawable.Drawable,float,float) -> setHotspot
    void setHotspotBounds(android.graphics.drawable.Drawable,int,int,int,int) -> setHotspotBounds
    void setTint(android.graphics.drawable.Drawable,int) -> setTint
    void setTintList(android.graphics.drawable.Drawable,android.content.res.ColorStateList) -> setTintList
    void setTintMode(android.graphics.drawable.Drawable,android.graphics.PorterDuff$Mode) -> setTintMode
android.support.v4.graphics.drawable.DrawableCompat$HoneycombDrawableImpl -> android.support.v4.graphics.drawable.DrawableCompat$HoneycombDrawableImpl:
    void jumpToCurrentState(android.graphics.drawable.Drawable) -> jumpToCurrentState
android.support.v4.graphics.drawable.DrawableCompat$KitKatDrawableImpl -> android.support.v4.graphics.drawable.DrawableCompat$KitKatDrawableImpl:
    void setAutoMirrored(android.graphics.drawable.Drawable,boolean) -> setAutoMirrored
    boolean isAutoMirrored(android.graphics.drawable.Drawable) -> isAutoMirrored
android.support.v4.graphics.drawable.DrawableCompat$LDrawableImpl -> android.support.v4.graphics.drawable.DrawableCompat$LDrawableImpl:
    void setHotspot(android.graphics.drawable.Drawable,float,float) -> setHotspot
    void setHotspotBounds(android.graphics.drawable.Drawable,int,int,int,int) -> setHotspotBounds
    void setTint(android.graphics.drawable.Drawable,int) -> setTint
    void setTintList(android.graphics.drawable.Drawable,android.content.res.ColorStateList) -> setTintList
    void setTintMode(android.graphics.drawable.Drawable,android.graphics.PorterDuff$Mode) -> setTintMode
android.support.v4.graphics.drawable.DrawableCompatHoneycomb -> android.support.v4.graphics.drawable.DrawableCompatHoneycomb:
    void jumpToCurrentState(android.graphics.drawable.Drawable) -> jumpToCurrentState
android.support.v4.graphics.drawable.DrawableCompatKitKat -> android.support.v4.graphics.drawable.DrawableCompatKitKat:
    void setAutoMirrored(android.graphics.drawable.Drawable,boolean) -> setAutoMirrored
    boolean isAutoMirrored(android.graphics.drawable.Drawable) -> isAutoMirrored
android.support.v4.graphics.drawable.DrawableCompatL -> android.support.v4.graphics.drawable.DrawableCompatL:
    void setHotspot(android.graphics.drawable.Drawable,float,float) -> setHotspot
    void setHotspotBounds(android.graphics.drawable.Drawable,int,int,int,int) -> setHotspotBounds
    void setTint(android.graphics.drawable.Drawable,int) -> setTint
    void setTintList(android.graphics.drawable.Drawable,android.content.res.ColorStateList) -> setTintList
    void setTintMode(android.graphics.drawable.Drawable,android.graphics.PorterDuff$Mode) -> setTintMode
android.support.v4.graphics.drawable.RoundedBitmapDrawable -> android.support.v4.graphics.drawable.RoundedBitmapDrawable:
    int DEFAULT_PAINT_FLAGS -> DEFAULT_PAINT_FLAGS
    android.graphics.Bitmap mBitmap -> mBitmap
    int mTargetDensity -> mTargetDensity
    int mGravity -> mGravity
    android.graphics.Paint mPaint -> mPaint
    android.graphics.BitmapShader mBitmapShader -> mBitmapShader
    float mCornerRadius -> mCornerRadius
    android.graphics.Rect mDstRect -> mDstRect
    android.graphics.RectF mDstRectF -> mDstRectF
    boolean mApplyGravity -> mApplyGravity
    int mBitmapWidth -> mBitmapWidth
    int mBitmapHeight -> mBitmapHeight
    android.graphics.Paint getPaint() -> getPaint
    android.graphics.Bitmap getBitmap() -> getBitmap
    void computeBitmapSize() -> computeBitmapSize
    void setTargetDensity(android.graphics.Canvas) -> setTargetDensity
    void setTargetDensity(android.util.DisplayMetrics) -> setTargetDensity
    void setTargetDensity(int) -> setTargetDensity
    int getGravity() -> getGravity
    void setGravity(int) -> setGravity
    void setMipMap(boolean) -> setMipMap
    boolean hasMipMap() -> hasMipMap
    void setAntiAlias(boolean) -> setAntiAlias
    boolean hasAntiAlias() -> hasAntiAlias
    void setFilterBitmap(boolean) -> setFilterBitmap
    void setDither(boolean) -> setDither
    void gravityCompatApply(int,int,int,android.graphics.Rect,android.graphics.Rect) -> gravityCompatApply
    void updateDstRect() -> updateDstRect
    void draw(android.graphics.Canvas) -> draw
    void setAlpha(int) -> setAlpha
    int getAlpha() -> getAlpha
    void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    android.graphics.ColorFilter getColorFilter() -> getColorFilter
    void setCornerRadius(float) -> setCornerRadius
    float getCornerRadius() -> getCornerRadius
    int getIntrinsicWidth() -> getIntrinsicWidth
    int getIntrinsicHeight() -> getIntrinsicHeight
    int getOpacity() -> getOpacity
    boolean isGreaterThanZero(float) -> isGreaterThanZero
android.support.v4.graphics.drawable.RoundedBitmapDrawable21 -> android.support.v4.graphics.drawable.RoundedBitmapDrawable21:
    void getOutline(android.graphics.Outline) -> getOutline
    void setMipMap(boolean) -> setMipMap
    boolean hasMipMap() -> hasMipMap
    void gravityCompatApply(int,int,int,android.graphics.Rect,android.graphics.Rect) -> gravityCompatApply
android.support.v4.graphics.drawable.RoundedBitmapDrawableFactory -> android.support.v4.graphics.drawable.RoundedBitmapDrawableFactory:
    java.lang.String TAG -> TAG
    android.support.v4.graphics.drawable.RoundedBitmapDrawable create(android.content.res.Resources,android.graphics.Bitmap) -> create
    android.support.v4.graphics.drawable.RoundedBitmapDrawable create(android.content.res.Resources,java.lang.String) -> create
    android.support.v4.graphics.drawable.RoundedBitmapDrawable create(android.content.res.Resources,java.io.InputStream) -> create
android.support.v4.graphics.drawable.RoundedBitmapDrawableFactory$DefaultRoundedBitmapDrawable -> android.support.v4.graphics.drawable.RoundedBitmapDrawableFactory$DefaultRoundedBitmapDrawable:
    void setMipMap(boolean) -> setMipMap
    boolean hasMipMap() -> hasMipMap
    void gravityCompatApply(int,int,int,android.graphics.Rect,android.graphics.Rect) -> gravityCompatApply
android.support.v4.hardware.display.DisplayManagerCompat -> android.support.v4.hardware.display.DisplayManagerCompat:
    java.util.WeakHashMap sInstances -> sInstances
    java.lang.String DISPLAY_CATEGORY_PRESENTATION -> DISPLAY_CATEGORY_PRESENTATION
    android.support.v4.hardware.display.DisplayManagerCompat getInstance(android.content.Context) -> getInstance
    android.view.Display getDisplay(int) -> getDisplay
    android.view.Display[] getDisplays() -> getDisplays
    android.view.Display[] getDisplays(java.lang.String) -> getDisplays
android.support.v4.hardware.display.DisplayManagerCompat$JellybeanMr1Impl -> android.support.v4.hardware.display.DisplayManagerCompat$JellybeanMr1Impl:
    java.lang.Object mDisplayManagerObj -> mDisplayManagerObj
    android.view.Display getDisplay(int) -> getDisplay
    android.view.Display[] getDisplays() -> getDisplays
    android.view.Display[] getDisplays(java.lang.String) -> getDisplays
android.support.v4.hardware.display.DisplayManagerCompat$LegacyImpl -> android.support.v4.hardware.display.DisplayManagerCompat$LegacyImpl:
    android.view.WindowManager mWindowManager -> mWindowManager
    android.view.Display getDisplay(int) -> getDisplay
    android.view.Display[] getDisplays() -> getDisplays
    android.view.Display[] getDisplays(java.lang.String) -> getDisplays
android.support.v4.hardware.display.DisplayManagerJellybeanMr1 -> android.support.v4.hardware.display.DisplayManagerJellybeanMr1:
    java.lang.Object getDisplayManager(android.content.Context) -> getDisplayManager
    android.view.Display getDisplay(java.lang.Object,int) -> getDisplay
    android.view.Display[] getDisplays(java.lang.Object) -> getDisplays
    android.view.Display[] getDisplays(java.lang.Object,java.lang.String) -> getDisplays
android.support.v4.internal.view.SupportMenu -> android.support.v4.internal.view.SupportMenu:
    int USER_MASK -> USER_MASK
    int USER_SHIFT -> USER_SHIFT
    int CATEGORY_MASK -> CATEGORY_MASK
    int CATEGORY_SHIFT -> CATEGORY_SHIFT
android.support.v4.internal.view.SupportMenuItem -> android.support.v4.internal.view.SupportMenuItem:
    int SHOW_AS_ACTION_NEVER -> SHOW_AS_ACTION_NEVER
    int SHOW_AS_ACTION_IF_ROOM -> SHOW_AS_ACTION_IF_ROOM
    int SHOW_AS_ACTION_ALWAYS -> SHOW_AS_ACTION_ALWAYS
    int SHOW_AS_ACTION_WITH_TEXT -> SHOW_AS_ACTION_WITH_TEXT
    int SHOW_AS_ACTION_COLLAPSE_ACTION_VIEW -> SHOW_AS_ACTION_COLLAPSE_ACTION_VIEW
    void setShowAsAction(int) -> setShowAsAction
    android.view.MenuItem setShowAsActionFlags(int) -> setShowAsActionFlags
    android.view.MenuItem setActionView(android.view.View) -> setActionView
    android.view.MenuItem setActionView(int) -> setActionView
    android.view.View getActionView() -> getActionView
    android.support.v4.internal.view.SupportMenuItem setSupportActionProvider(android.support.v4.view.ActionProvider) -> setSupportActionProvider
    android.support.v4.view.ActionProvider getSupportActionProvider() -> getSupportActionProvider
    boolean expandActionView() -> expandActionView
    boolean collapseActionView() -> collapseActionView
    boolean isActionViewExpanded() -> isActionViewExpanded
    android.support.v4.internal.view.SupportMenuItem setSupportOnActionExpandListener(android.support.v4.view.MenuItemCompat$OnActionExpandListener) -> setSupportOnActionExpandListener
android.support.v4.internal.view.SupportSubMenu -> android.support.v4.internal.view.SupportSubMenu:
android.support.v4.media.MediaMetadataCompat -> android.support.v4.media.MediaMetadataCompat:
    java.lang.String TAG -> TAG
    java.lang.String METADATA_KEY_TITLE -> METADATA_KEY_TITLE
    java.lang.String METADATA_KEY_ARTIST -> METADATA_KEY_ARTIST
    java.lang.String METADATA_KEY_DURATION -> METADATA_KEY_DURATION
    java.lang.String METADATA_KEY_ALBUM -> METADATA_KEY_ALBUM
    java.lang.String METADATA_KEY_AUTHOR -> METADATA_KEY_AUTHOR
    java.lang.String METADATA_KEY_WRITER -> METADATA_KEY_WRITER
    java.lang.String METADATA_KEY_COMPOSER -> METADATA_KEY_COMPOSER
    java.lang.String METADATA_KEY_COMPILATION -> METADATA_KEY_COMPILATION
    java.lang.String METADATA_KEY_DATE -> METADATA_KEY_DATE
    java.lang.String METADATA_KEY_YEAR -> METADATA_KEY_YEAR
    java.lang.String METADATA_KEY_GENRE -> METADATA_KEY_GENRE
    java.lang.String METADATA_KEY_TRACK_NUMBER -> METADATA_KEY_TRACK_NUMBER
    java.lang.String METADATA_KEY_NUM_TRACKS -> METADATA_KEY_NUM_TRACKS
    java.lang.String METADATA_KEY_DISC_NUMBER -> METADATA_KEY_DISC_NUMBER
    java.lang.String METADATA_KEY_ALBUM_ARTIST -> METADATA_KEY_ALBUM_ARTIST
    java.lang.String METADATA_KEY_ART -> METADATA_KEY_ART
    java.lang.String METADATA_KEY_ART_URI -> METADATA_KEY_ART_URI
    java.lang.String METADATA_KEY_ALBUM_ART -> METADATA_KEY_ALBUM_ART
    java.lang.String METADATA_KEY_ALBUM_ART_URI -> METADATA_KEY_ALBUM_ART_URI
    java.lang.String METADATA_KEY_USER_RATING -> METADATA_KEY_USER_RATING
    java.lang.String METADATA_KEY_RATING -> METADATA_KEY_RATING
    java.lang.String METADATA_KEY_DISPLAY_TITLE -> METADATA_KEY_DISPLAY_TITLE
    java.lang.String METADATA_KEY_DISPLAY_SUBTITLE -> METADATA_KEY_DISPLAY_SUBTITLE
    java.lang.String METADATA_KEY_DISPLAY_DESCRIPTION -> METADATA_KEY_DISPLAY_DESCRIPTION
    java.lang.String METADATA_KEY_DISPLAY_ICON -> METADATA_KEY_DISPLAY_ICON
    java.lang.String METADATA_KEY_DISPLAY_ICON_URI -> METADATA_KEY_DISPLAY_ICON_URI
    int METADATA_TYPE_LONG -> METADATA_TYPE_LONG
    int METADATA_TYPE_TEXT -> METADATA_TYPE_TEXT
    int METADATA_TYPE_BITMAP -> METADATA_TYPE_BITMAP
    int METADATA_TYPE_RATING -> METADATA_TYPE_RATING
    android.support.v4.util.ArrayMap METADATA_KEYS_TYPE -> METADATA_KEYS_TYPE
    android.os.Bundle mBundle -> mBundle
    java.lang.Object mMetadataObj -> mMetadataObj
    android.os.Parcelable$Creator CREATOR -> CREATOR
    boolean containsKey(java.lang.String) -> containsKey
    java.lang.CharSequence getText(java.lang.String) -> getText
    java.lang.String getString(java.lang.String) -> getString
    long getLong(java.lang.String) -> getLong
    android.support.v4.media.RatingCompat getRating(java.lang.String) -> getRating
    android.graphics.Bitmap getBitmap(java.lang.String) -> getBitmap
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    int size() -> size
    java.util.Set keySet() -> keySet
    android.support.v4.media.MediaMetadataCompat fromMediaMetadata(java.lang.Object) -> fromMediaMetadata
    java.lang.Object getMediaMetadata() -> getMediaMetadata
    android.os.Bundle access$100(android.support.v4.media.MediaMetadataCompat) -> access$100
    android.support.v4.util.ArrayMap access$200() -> access$200
android.support.v4.media.MediaMetadataCompat$1 -> android.support.v4.media.MediaMetadataCompat$1:
    android.support.v4.media.MediaMetadataCompat createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.media.MediaMetadataCompat[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.media.MediaMetadataCompat$Builder -> android.support.v4.media.MediaMetadataCompat$Builder:
    android.os.Bundle mBundle -> mBundle
    android.support.v4.media.MediaMetadataCompat$Builder putText(java.lang.String,java.lang.CharSequence) -> putText
    android.support.v4.media.MediaMetadataCompat$Builder putString(java.lang.String,java.lang.String) -> putString
    android.support.v4.media.MediaMetadataCompat$Builder putLong(java.lang.String,long) -> putLong
    android.support.v4.media.MediaMetadataCompat$Builder putRating(java.lang.String,android.support.v4.media.RatingCompat) -> putRating
    android.support.v4.media.MediaMetadataCompat$Builder putBitmap(java.lang.String,android.graphics.Bitmap) -> putBitmap
    android.support.v4.media.MediaMetadataCompat build() -> build
android.support.v4.media.MediaMetadataCompatApi21 -> android.support.v4.media.MediaMetadataCompatApi21:
    java.util.Set keySet(java.lang.Object) -> keySet
    android.graphics.Bitmap getBitmap(java.lang.Object,java.lang.String) -> getBitmap
    long getLong(java.lang.Object,java.lang.String) -> getLong
    java.lang.Object getRating(java.lang.Object,java.lang.String) -> getRating
    java.lang.CharSequence getText(java.lang.Object,java.lang.String) -> getText
android.support.v4.media.MediaMetadataCompatApi21$Builder -> android.support.v4.media.MediaMetadataCompatApi21$Builder:
    java.lang.Object newInstance() -> newInstance
    void putBitmap(java.lang.Object,java.lang.String,android.graphics.Bitmap) -> putBitmap
    void putLong(java.lang.Object,java.lang.String,long) -> putLong
    void putRating(java.lang.Object,java.lang.String,java.lang.Object) -> putRating
    void putText(java.lang.Object,java.lang.String,java.lang.CharSequence) -> putText
    void putString(java.lang.Object,java.lang.String,java.lang.String) -> putString
    java.lang.Object build(java.lang.Object) -> build
android.support.v4.media.RatingCompat -> android.support.v4.media.RatingCompat:
    java.lang.String TAG -> TAG
    int RATING_NONE -> RATING_NONE
    int RATING_HEART -> RATING_HEART
    int RATING_THUMB_UP_DOWN -> RATING_THUMB_UP_DOWN
    int RATING_3_STARS -> RATING_3_STARS
    int RATING_4_STARS -> RATING_4_STARS
    int RATING_5_STARS -> RATING_5_STARS
    int RATING_PERCENTAGE -> RATING_PERCENTAGE
    float RATING_NOT_RATED -> RATING_NOT_RATED
    int mRatingStyle -> mRatingStyle
    float mRatingValue -> mRatingValue
    java.lang.Object mRatingObj -> mRatingObj
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.lang.String toString() -> toString
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    android.support.v4.media.RatingCompat newUnratedRating(int) -> newUnratedRating
    android.support.v4.media.RatingCompat newHeartRating(boolean) -> newHeartRating
    android.support.v4.media.RatingCompat newThumbRating(boolean) -> newThumbRating
    android.support.v4.media.RatingCompat newStarRating(int,float) -> newStarRating
    android.support.v4.media.RatingCompat newPercentageRating(float) -> newPercentageRating
    boolean isRated() -> isRated
    int getRatingStyle() -> getRatingStyle
    boolean hasHeart() -> hasHeart
    boolean isThumbUp() -> isThumbUp
    float getStarRating() -> getStarRating
    float getPercentRating() -> getPercentRating
    android.support.v4.media.RatingCompat fromRating(java.lang.Object) -> fromRating
    java.lang.Object getRating() -> getRating
android.support.v4.media.RatingCompat$1 -> android.support.v4.media.RatingCompat$1:
    android.support.v4.media.RatingCompat createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.media.RatingCompat[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.media.RatingCompatApi21 -> android.support.v4.media.RatingCompatApi21:
    java.lang.Object newUnratedRating(int) -> newUnratedRating
    java.lang.Object newHeartRating(boolean) -> newHeartRating
    java.lang.Object newThumbRating(boolean) -> newThumbRating
    java.lang.Object newStarRating(int,float) -> newStarRating
    java.lang.Object newPercentageRating(float) -> newPercentageRating
    boolean isRated(java.lang.Object) -> isRated
    int getRatingStyle(java.lang.Object) -> getRatingStyle
    boolean hasHeart(java.lang.Object) -> hasHeart
    boolean isThumbUp(java.lang.Object) -> isThumbUp
    float getStarRating(java.lang.Object) -> getStarRating
    float getPercentRating(java.lang.Object) -> getPercentRating
android.support.v4.media.TransportController -> android.support.v4.media.TransportController:
    void registerStateListener(android.support.v4.media.TransportStateListener) -> registerStateListener
    void unregisterStateListener(android.support.v4.media.TransportStateListener) -> unregisterStateListener
    void startPlaying() -> startPlaying
    void pausePlaying() -> pausePlaying
    void stopPlaying() -> stopPlaying
    long getDuration() -> getDuration
    long getCurrentPosition() -> getCurrentPosition
    void seekTo(long) -> seekTo
    boolean isPlaying() -> isPlaying
    int getBufferPercentage() -> getBufferPercentage
    int getTransportControlFlags() -> getTransportControlFlags
android.support.v4.media.TransportMediator -> android.support.v4.media.TransportMediator:
    android.content.Context mContext -> mContext
    android.support.v4.media.TransportPerformer mCallbacks -> mCallbacks
    android.media.AudioManager mAudioManager -> mAudioManager
    android.view.View mView -> mView
    java.lang.Object mDispatcherState -> mDispatcherState
    android.support.v4.media.TransportMediatorJellybeanMR2 mController -> mController
    java.util.ArrayList mListeners -> mListeners
    android.support.v4.media.TransportMediatorCallback mTransportKeyCallback -> mTransportKeyCallback
    int KEYCODE_MEDIA_PLAY -> KEYCODE_MEDIA_PLAY
    int KEYCODE_MEDIA_PAUSE -> KEYCODE_MEDIA_PAUSE
    int KEYCODE_MEDIA_RECORD -> KEYCODE_MEDIA_RECORD
    int FLAG_KEY_MEDIA_PREVIOUS -> FLAG_KEY_MEDIA_PREVIOUS
    int FLAG_KEY_MEDIA_REWIND -> FLAG_KEY_MEDIA_REWIND
    int FLAG_KEY_MEDIA_PLAY -> FLAG_KEY_MEDIA_PLAY
    int FLAG_KEY_MEDIA_PLAY_PAUSE -> FLAG_KEY_MEDIA_PLAY_PAUSE
    int FLAG_KEY_MEDIA_PAUSE -> FLAG_KEY_MEDIA_PAUSE
    int FLAG_KEY_MEDIA_STOP -> FLAG_KEY_MEDIA_STOP
    int FLAG_KEY_MEDIA_FAST_FORWARD -> FLAG_KEY_MEDIA_FAST_FORWARD
    int FLAG_KEY_MEDIA_NEXT -> FLAG_KEY_MEDIA_NEXT
    android.view.KeyEvent$Callback mKeyEventCallback -> mKeyEventCallback
    boolean isMediaKey(int) -> isMediaKey
    java.lang.Object getRemoteControlClient() -> getRemoteControlClient
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    void registerStateListener(android.support.v4.media.TransportStateListener) -> registerStateListener
    void unregisterStateListener(android.support.v4.media.TransportStateListener) -> unregisterStateListener
    android.support.v4.media.TransportStateListener[] getListeners() -> getListeners
    void reportPlayingChanged() -> reportPlayingChanged
    void reportTransportControlsChanged() -> reportTransportControlsChanged
    void pushControllerState() -> pushControllerState
    void refreshState() -> refreshState
    void startPlaying() -> startPlaying
    void pausePlaying() -> pausePlaying
    void stopPlaying() -> stopPlaying
    long getDuration() -> getDuration
    long getCurrentPosition() -> getCurrentPosition
    void seekTo(long) -> seekTo
    boolean isPlaying() -> isPlaying
    int getBufferPercentage() -> getBufferPercentage
    int getTransportControlFlags() -> getTransportControlFlags
    void destroy() -> destroy
android.support.v4.media.TransportMediator$1 -> android.support.v4.media.TransportMediator$1:
    android.support.v4.media.TransportMediator this$0 -> this$0
    void handleKey(android.view.KeyEvent) -> handleKey
    void handleAudioFocusChange(int) -> handleAudioFocusChange
    long getPlaybackPosition() -> getPlaybackPosition
    void playbackPositionUpdate(long) -> playbackPositionUpdate
android.support.v4.media.TransportMediator$2 -> android.support.v4.media.TransportMediator$2:
    android.support.v4.media.TransportMediator this$0 -> this$0
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    boolean onKeyLongPress(int,android.view.KeyEvent) -> onKeyLongPress
    boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    boolean onKeyMultiple(int,int,android.view.KeyEvent) -> onKeyMultiple
android.support.v4.media.TransportMediatorCallback -> android.support.v4.media.TransportMediatorCallback:
    void handleKey(android.view.KeyEvent) -> handleKey
    void handleAudioFocusChange(int) -> handleAudioFocusChange
    long getPlaybackPosition() -> getPlaybackPosition
    void playbackPositionUpdate(long) -> playbackPositionUpdate
android.support.v4.media.TransportMediatorJellybeanMR2 -> android.support.v4.media.TransportMediatorJellybeanMR2:
    android.content.Context mContext -> mContext
    android.media.AudioManager mAudioManager -> mAudioManager
    android.view.View mTargetView -> mTargetView
    android.support.v4.media.TransportMediatorCallback mTransportCallback -> mTransportCallback
    java.lang.String mReceiverAction -> mReceiverAction
    android.content.IntentFilter mReceiverFilter -> mReceiverFilter
    android.content.Intent mIntent -> mIntent
    android.view.ViewTreeObserver$OnWindowAttachListener mWindowAttachListener -> mWindowAttachListener
    android.view.ViewTreeObserver$OnWindowFocusChangeListener mWindowFocusListener -> mWindowFocusListener
    android.content.BroadcastReceiver mMediaButtonReceiver -> mMediaButtonReceiver
    android.media.AudioManager$OnAudioFocusChangeListener mAudioFocusChangeListener -> mAudioFocusChangeListener
    android.app.PendingIntent mPendingIntent -> mPendingIntent
    android.media.RemoteControlClient mRemoteControl -> mRemoteControl
    boolean mFocused -> mFocused
    int mPlayState -> mPlayState
    boolean mAudioFocused -> mAudioFocused
    java.lang.Object getRemoteControlClient() -> getRemoteControlClient
    void destroy() -> destroy
    void windowAttached() -> windowAttached
    void gainFocus() -> gainFocus
    void takeAudioFocus() -> takeAudioFocus
    void startPlaying() -> startPlaying
    long onGetPlaybackPosition() -> onGetPlaybackPosition
    void onPlaybackPositionUpdate(long) -> onPlaybackPositionUpdate
    void refreshState(boolean,long,int) -> refreshState
    void pausePlaying() -> pausePlaying
    void stopPlaying() -> stopPlaying
    void dropAudioFocus() -> dropAudioFocus
    void loseFocus() -> loseFocus
    void windowDetached() -> windowDetached
android.support.v4.media.TransportMediatorJellybeanMR2$1 -> android.support.v4.media.TransportMediatorJellybeanMR2$1:
    android.support.v4.media.TransportMediatorJellybeanMR2 this$0 -> this$0
    void onWindowAttached() -> onWindowAttached
    void onWindowDetached() -> onWindowDetached
android.support.v4.media.TransportMediatorJellybeanMR2$2 -> android.support.v4.media.TransportMediatorJellybeanMR2$2:
    android.support.v4.media.TransportMediatorJellybeanMR2 this$0 -> this$0
    void onWindowFocusChanged(boolean) -> onWindowFocusChanged
android.support.v4.media.TransportMediatorJellybeanMR2$3 -> android.support.v4.media.TransportMediatorJellybeanMR2$3:
    android.support.v4.media.TransportMediatorJellybeanMR2 this$0 -> this$0
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
android.support.v4.media.TransportMediatorJellybeanMR2$4 -> android.support.v4.media.TransportMediatorJellybeanMR2$4:
    android.support.v4.media.TransportMediatorJellybeanMR2 this$0 -> this$0
    void onAudioFocusChange(int) -> onAudioFocusChange
android.support.v4.media.TransportPerformer -> android.support.v4.media.TransportPerformer:
    int AUDIOFOCUS_GAIN -> AUDIOFOCUS_GAIN
    int AUDIOFOCUS_GAIN_TRANSIENT -> AUDIOFOCUS_GAIN_TRANSIENT
    int AUDIOFOCUS_GAIN_TRANSIENT_MAY_DUCK -> AUDIOFOCUS_GAIN_TRANSIENT_MAY_DUCK
    int AUDIOFOCUS_LOSS -> AUDIOFOCUS_LOSS
    int AUDIOFOCUS_LOSS_TRANSIENT -> AUDIOFOCUS_LOSS_TRANSIENT
    int AUDIOFOCUS_LOSS_TRANSIENT_CAN_DUCK -> AUDIOFOCUS_LOSS_TRANSIENT_CAN_DUCK
    void onStart() -> onStart
    void onPause() -> onPause
    void onStop() -> onStop
    long onGetDuration() -> onGetDuration
    long onGetCurrentPosition() -> onGetCurrentPosition
    void onSeekTo(long) -> onSeekTo
    boolean onIsPlaying() -> onIsPlaying
    int onGetBufferPercentage() -> onGetBufferPercentage
    int onGetTransportControlFlags() -> onGetTransportControlFlags
    boolean onMediaButtonDown(int,android.view.KeyEvent) -> onMediaButtonDown
    boolean onMediaButtonUp(int,android.view.KeyEvent) -> onMediaButtonUp
    void onAudioFocusChange(int) -> onAudioFocusChange
android.support.v4.media.TransportStateListener -> android.support.v4.media.TransportStateListener:
    void onPlayingChanged(android.support.v4.media.TransportController) -> onPlayingChanged
    void onTransportControlsChanged(android.support.v4.media.TransportController) -> onTransportControlsChanged
android.support.v4.media.VolumeProviderCompat -> android.support.v4.media.VolumeProviderCompat:
    int VOLUME_CONTROL_FIXED -> VOLUME_CONTROL_FIXED
    int VOLUME_CONTROL_RELATIVE -> VOLUME_CONTROL_RELATIVE
    int VOLUME_CONTROL_ABSOLUTE -> VOLUME_CONTROL_ABSOLUTE
    int mControlType -> mControlType
    int mMaxVolume -> mMaxVolume
    int mCurrentVolume -> mCurrentVolume
    android.support.v4.media.VolumeProviderCompat$Callback mCallback -> mCallback
    java.lang.Object mVolumeProviderObj -> mVolumeProviderObj
    int getCurrentVolume() -> getCurrentVolume
    int getVolumeControl() -> getVolumeControl
    int getMaxVolume() -> getMaxVolume
    void setCurrentVolume(int) -> setCurrentVolume
    void onSetVolumeTo(int) -> onSetVolumeTo
    void onAdjustVolume(int) -> onAdjustVolume
    void setCallback(android.support.v4.media.VolumeProviderCompat$Callback) -> setCallback
    java.lang.Object getVolumeProvider() -> getVolumeProvider
android.support.v4.media.VolumeProviderCompat$1 -> android.support.v4.media.VolumeProviderCompat$1:
    android.support.v4.media.VolumeProviderCompat this$0 -> this$0
    void onSetVolumeTo(int) -> onSetVolumeTo
    void onAdjustVolume(int) -> onAdjustVolume
android.support.v4.media.VolumeProviderCompat$Callback -> android.support.v4.media.VolumeProviderCompat$Callback:
    void onVolumeChanged(android.support.v4.media.VolumeProviderCompat) -> onVolumeChanged
android.support.v4.media.VolumeProviderCompatApi21 -> android.support.v4.media.VolumeProviderCompatApi21:
    java.lang.Object createVolumeProvider(int,int,int,android.support.v4.media.VolumeProviderCompatApi21$Delegate) -> createVolumeProvider
    void setCurrentVolume(java.lang.Object,int) -> setCurrentVolume
android.support.v4.media.VolumeProviderCompatApi21$1 -> android.support.v4.media.VolumeProviderCompatApi21$1:
    android.support.v4.media.VolumeProviderCompatApi21$Delegate val$delegate -> val$delegate
    void onSetVolumeTo(int) -> onSetVolumeTo
    void onAdjustVolume(int) -> onAdjustVolume
android.support.v4.media.VolumeProviderCompatApi21$Delegate -> android.support.v4.media.VolumeProviderCompatApi21$Delegate:
    void onSetVolumeTo(int) -> onSetVolumeTo
    void onAdjustVolume(int) -> onAdjustVolume
android.support.v4.media.routing.MediaRouterJellybean -> android.support.v4.media.routing.MediaRouterJellybean:
    java.lang.String TAG -> TAG
    int ROUTE_TYPE_LIVE_AUDIO -> ROUTE_TYPE_LIVE_AUDIO
    int ROUTE_TYPE_LIVE_VIDEO -> ROUTE_TYPE_LIVE_VIDEO
    int ROUTE_TYPE_USER -> ROUTE_TYPE_USER
    int ALL_ROUTE_TYPES -> ALL_ROUTE_TYPES
    java.lang.Object getMediaRouter(android.content.Context) -> getMediaRouter
    java.util.List getRoutes(java.lang.Object) -> getRoutes
    java.util.List getCategories(java.lang.Object) -> getCategories
    java.lang.Object getSelectedRoute(java.lang.Object,int) -> getSelectedRoute
    void selectRoute(java.lang.Object,int,java.lang.Object) -> selectRoute
    void addCallback(java.lang.Object,int,java.lang.Object) -> addCallback
    void removeCallback(java.lang.Object,java.lang.Object) -> removeCallback
    java.lang.Object createRouteCategory(java.lang.Object,java.lang.String,boolean) -> createRouteCategory
    java.lang.Object createUserRoute(java.lang.Object,java.lang.Object) -> createUserRoute
    void addUserRoute(java.lang.Object,java.lang.Object) -> addUserRoute
    void removeUserRoute(java.lang.Object,java.lang.Object) -> removeUserRoute
    java.lang.Object createCallback(android.support.v4.media.routing.MediaRouterJellybean$Callback) -> createCallback
    java.lang.Object createVolumeCallback(android.support.v4.media.routing.MediaRouterJellybean$VolumeCallback) -> createVolumeCallback
android.support.v4.media.routing.MediaRouterJellybean$Callback -> android.support.v4.media.routing.MediaRouterJellybean$Callback:
    void onRouteSelected(int,java.lang.Object) -> onRouteSelected
    void onRouteUnselected(int,java.lang.Object) -> onRouteUnselected
    void onRouteAdded(java.lang.Object) -> onRouteAdded
    void onRouteRemoved(java.lang.Object) -> onRouteRemoved
    void onRouteChanged(java.lang.Object) -> onRouteChanged
    void onRouteGrouped(java.lang.Object,java.lang.Object,int) -> onRouteGrouped
    void onRouteUngrouped(java.lang.Object,java.lang.Object) -> onRouteUngrouped
    void onRouteVolumeChanged(java.lang.Object) -> onRouteVolumeChanged
android.support.v4.media.routing.MediaRouterJellybean$CallbackProxy -> android.support.v4.media.routing.MediaRouterJellybean$CallbackProxy:
    android.support.v4.media.routing.MediaRouterJellybean$Callback mCallback -> mCallback
    void onRouteSelected(android.media.MediaRouter,int,android.media.MediaRouter$RouteInfo) -> onRouteSelected
    void onRouteUnselected(android.media.MediaRouter,int,android.media.MediaRouter$RouteInfo) -> onRouteUnselected
    void onRouteAdded(android.media.MediaRouter,android.media.MediaRouter$RouteInfo) -> onRouteAdded
    void onRouteRemoved(android.media.MediaRouter,android.media.MediaRouter$RouteInfo) -> onRouteRemoved
    void onRouteChanged(android.media.MediaRouter,android.media.MediaRouter$RouteInfo) -> onRouteChanged
    void onRouteGrouped(android.media.MediaRouter,android.media.MediaRouter$RouteInfo,android.media.MediaRouter$RouteGroup,int) -> onRouteGrouped
    void onRouteUngrouped(android.media.MediaRouter,android.media.MediaRouter$RouteInfo,android.media.MediaRouter$RouteGroup) -> onRouteUngrouped
    void onRouteVolumeChanged(android.media.MediaRouter,android.media.MediaRouter$RouteInfo) -> onRouteVolumeChanged
android.support.v4.media.routing.MediaRouterJellybean$GetDefaultRouteWorkaround -> android.support.v4.media.routing.MediaRouterJellybean$GetDefaultRouteWorkaround:
    java.lang.reflect.Method mGetSystemAudioRouteMethod -> mGetSystemAudioRouteMethod
    java.lang.Object getDefaultRoute(java.lang.Object) -> getDefaultRoute
android.support.v4.media.routing.MediaRouterJellybean$RouteCategory -> android.support.v4.media.routing.MediaRouterJellybean$RouteCategory:
    java.lang.CharSequence getName(java.lang.Object,android.content.Context) -> getName
    java.util.List getRoutes(java.lang.Object) -> getRoutes
    int getSupportedTypes(java.lang.Object) -> getSupportedTypes
    boolean isGroupable(java.lang.Object) -> isGroupable
android.support.v4.media.routing.MediaRouterJellybean$RouteGroup -> android.support.v4.media.routing.MediaRouterJellybean$RouteGroup:
    java.util.List getGroupedRoutes(java.lang.Object) -> getGroupedRoutes
android.support.v4.media.routing.MediaRouterJellybean$RouteInfo -> android.support.v4.media.routing.MediaRouterJellybean$RouteInfo:
    java.lang.CharSequence getName(java.lang.Object,android.content.Context) -> getName
    java.lang.CharSequence getStatus(java.lang.Object) -> getStatus
    int getSupportedTypes(java.lang.Object) -> getSupportedTypes
    java.lang.Object getCategory(java.lang.Object) -> getCategory
    android.graphics.drawable.Drawable getIconDrawable(java.lang.Object) -> getIconDrawable
    int getPlaybackType(java.lang.Object) -> getPlaybackType
    int getPlaybackStream(java.lang.Object) -> getPlaybackStream
    int getVolume(java.lang.Object) -> getVolume
    int getVolumeMax(java.lang.Object) -> getVolumeMax
    int getVolumeHandling(java.lang.Object) -> getVolumeHandling
    java.lang.Object getTag(java.lang.Object) -> getTag
    void setTag(java.lang.Object,java.lang.Object) -> setTag
    void requestSetVolume(java.lang.Object,int) -> requestSetVolume
    void requestUpdateVolume(java.lang.Object,int) -> requestUpdateVolume
    java.lang.Object getGroup(java.lang.Object) -> getGroup
    boolean isGroup(java.lang.Object) -> isGroup
android.support.v4.media.routing.MediaRouterJellybean$SelectRouteWorkaround -> android.support.v4.media.routing.MediaRouterJellybean$SelectRouteWorkaround:
    java.lang.reflect.Method mSelectRouteIntMethod -> mSelectRouteIntMethod
    void selectRoute(java.lang.Object,int,java.lang.Object) -> selectRoute
android.support.v4.media.routing.MediaRouterJellybean$UserRouteInfo -> android.support.v4.media.routing.MediaRouterJellybean$UserRouteInfo:
    void setName(java.lang.Object,java.lang.CharSequence) -> setName
    void setStatus(java.lang.Object,java.lang.CharSequence) -> setStatus
    void setIconDrawable(java.lang.Object,android.graphics.drawable.Drawable) -> setIconDrawable
    void setPlaybackType(java.lang.Object,int) -> setPlaybackType
    void setPlaybackStream(java.lang.Object,int) -> setPlaybackStream
    void setVolume(java.lang.Object,int) -> setVolume
    void setVolumeMax(java.lang.Object,int) -> setVolumeMax
    void setVolumeHandling(java.lang.Object,int) -> setVolumeHandling
    void setVolumeCallback(java.lang.Object,java.lang.Object) -> setVolumeCallback
    void setRemoteControlClient(java.lang.Object,java.lang.Object) -> setRemoteControlClient
android.support.v4.media.routing.MediaRouterJellybean$VolumeCallback -> android.support.v4.media.routing.MediaRouterJellybean$VolumeCallback:
    void onVolumeSetRequest(java.lang.Object,int) -> onVolumeSetRequest
    void onVolumeUpdateRequest(java.lang.Object,int) -> onVolumeUpdateRequest
android.support.v4.media.routing.MediaRouterJellybean$VolumeCallbackProxy -> android.support.v4.media.routing.MediaRouterJellybean$VolumeCallbackProxy:
    android.support.v4.media.routing.MediaRouterJellybean$VolumeCallback mCallback -> mCallback
    void onVolumeSetRequest(android.media.MediaRouter$RouteInfo,int) -> onVolumeSetRequest
    void onVolumeUpdateRequest(android.media.MediaRouter$RouteInfo,int) -> onVolumeUpdateRequest
android.support.v4.media.routing.MediaRouterJellybeanMr1 -> android.support.v4.media.routing.MediaRouterJellybeanMr1:
    java.lang.String TAG -> TAG
    java.lang.Object createCallback(android.support.v4.media.routing.MediaRouterJellybeanMr1$Callback) -> createCallback
android.support.v4.media.routing.MediaRouterJellybeanMr1$ActiveScanWorkaround -> android.support.v4.media.routing.MediaRouterJellybeanMr1$ActiveScanWorkaround:
    int WIFI_DISPLAY_SCAN_INTERVAL -> WIFI_DISPLAY_SCAN_INTERVAL
    android.hardware.display.DisplayManager mDisplayManager -> mDisplayManager
    android.os.Handler mHandler -> mHandler
    java.lang.reflect.Method mScanWifiDisplaysMethod -> mScanWifiDisplaysMethod
    boolean mActivelyScanningWifiDisplays -> mActivelyScanningWifiDisplays
    void setActiveScanRouteTypes(int) -> setActiveScanRouteTypes
    void run() -> run
android.support.v4.media.routing.MediaRouterJellybeanMr1$Callback -> android.support.v4.media.routing.MediaRouterJellybeanMr1$Callback:
    void onRoutePresentationDisplayChanged(java.lang.Object) -> onRoutePresentationDisplayChanged
android.support.v4.media.routing.MediaRouterJellybeanMr1$CallbackProxy -> android.support.v4.media.routing.MediaRouterJellybeanMr1$CallbackProxy:
    void onRoutePresentationDisplayChanged(android.media.MediaRouter,android.media.MediaRouter$RouteInfo) -> onRoutePresentationDisplayChanged
android.support.v4.media.routing.MediaRouterJellybeanMr1$IsConnectingWorkaround -> android.support.v4.media.routing.MediaRouterJellybeanMr1$IsConnectingWorkaround:
    java.lang.reflect.Method mGetStatusCodeMethod -> mGetStatusCodeMethod
    int mStatusConnecting -> mStatusConnecting
    boolean isConnecting(java.lang.Object) -> isConnecting
android.support.v4.media.routing.MediaRouterJellybeanMr1$RouteInfo -> android.support.v4.media.routing.MediaRouterJellybeanMr1$RouteInfo:
    boolean isEnabled(java.lang.Object) -> isEnabled
    android.view.Display getPresentationDisplay(java.lang.Object) -> getPresentationDisplay
android.support.v4.media.routing.MediaRouterJellybeanMr2 -> android.support.v4.media.routing.MediaRouterJellybeanMr2:
    java.lang.Object getDefaultRoute(java.lang.Object) -> getDefaultRoute
    void addCallback(java.lang.Object,int,java.lang.Object,int) -> addCallback
android.support.v4.media.routing.MediaRouterJellybeanMr2$RouteInfo -> android.support.v4.media.routing.MediaRouterJellybeanMr2$RouteInfo:
    java.lang.CharSequence getDescription(java.lang.Object) -> getDescription
    boolean isConnecting(java.lang.Object) -> isConnecting
android.support.v4.media.routing.MediaRouterJellybeanMr2$UserRouteInfo -> android.support.v4.media.routing.MediaRouterJellybeanMr2$UserRouteInfo:
    void setDescription(java.lang.Object,java.lang.CharSequence) -> setDescription
android.support.v4.media.session.MediaControllerCompat -> android.support.v4.media.session.MediaControllerCompat:
    android.support.v4.media.session.MediaControllerCompat$MediaControllerImpl mImpl -> mImpl
    android.support.v4.media.session.MediaControllerCompat$TransportControls getTransportControls() -> getTransportControls
    boolean dispatchMediaButtonEvent(android.view.KeyEvent) -> dispatchMediaButtonEvent
    android.support.v4.media.session.PlaybackStateCompat getPlaybackState() -> getPlaybackState
    android.support.v4.media.MediaMetadataCompat getMetadata() -> getMetadata
    int getRatingType() -> getRatingType
    android.support.v4.media.session.MediaControllerCompat$PlaybackInfo getPlaybackInfo() -> getPlaybackInfo
    void registerCallback(android.support.v4.media.session.MediaControllerCompat$Callback) -> registerCallback
    void registerCallback(android.support.v4.media.session.MediaControllerCompat$Callback,android.os.Handler) -> registerCallback
    void unregisterCallback(android.support.v4.media.session.MediaControllerCompat$Callback) -> unregisterCallback
    void sendCommand(java.lang.String,android.os.Bundle,android.os.ResultReceiver) -> sendCommand
    java.lang.Object getMediaController() -> getMediaController
android.support.v4.media.session.MediaControllerCompat$1 -> android.support.v4.media.session.MediaControllerCompat$1:
android.support.v4.media.session.MediaControllerCompat$Callback -> android.support.v4.media.session.MediaControllerCompat$Callback:
    java.lang.Object mCallbackObj -> mCallbackObj
    void onSessionDestroyed() -> onSessionDestroyed
    void onSessionEvent(java.lang.String,android.os.Bundle) -> onSessionEvent
    void onPlaybackStateChanged(android.support.v4.media.session.PlaybackStateCompat) -> onPlaybackStateChanged
    void onMetadataChanged(android.support.v4.media.MediaMetadataCompat) -> onMetadataChanged
android.support.v4.media.session.MediaControllerCompat$Callback$StubApi21 -> android.support.v4.media.session.MediaControllerCompat$Callback$StubApi21:
    android.support.v4.media.session.MediaControllerCompat$Callback this$0 -> this$0
    void onSessionDestroyed() -> onSessionDestroyed
    void onSessionEvent(java.lang.String,android.os.Bundle) -> onSessionEvent
    void onPlaybackStateChanged(java.lang.Object) -> onPlaybackStateChanged
    void onMetadataChanged(java.lang.Object) -> onMetadataChanged
android.support.v4.media.session.MediaControllerCompat$MediaControllerImpl -> android.support.v4.media.session.MediaControllerCompat$MediaControllerImpl:
    void registerCallback(android.support.v4.media.session.MediaControllerCompat$Callback,android.os.Handler) -> registerCallback
    void unregisterCallback(android.support.v4.media.session.MediaControllerCompat$Callback) -> unregisterCallback
    boolean dispatchMediaButtonEvent(android.view.KeyEvent) -> dispatchMediaButtonEvent
    android.support.v4.media.session.MediaControllerCompat$TransportControls getTransportControls() -> getTransportControls
    android.support.v4.media.session.PlaybackStateCompat getPlaybackState() -> getPlaybackState
    android.support.v4.media.MediaMetadataCompat getMetadata() -> getMetadata
    int getRatingType() -> getRatingType
    android.support.v4.media.session.MediaControllerCompat$PlaybackInfo getPlaybackInfo() -> getPlaybackInfo
    void sendCommand(java.lang.String,android.os.Bundle,android.os.ResultReceiver) -> sendCommand
    java.lang.Object getMediaController() -> getMediaController
android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21 -> android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21:
    java.lang.Object mControllerObj -> mControllerObj
    void registerCallback(android.support.v4.media.session.MediaControllerCompat$Callback,android.os.Handler) -> registerCallback
    void unregisterCallback(android.support.v4.media.session.MediaControllerCompat$Callback) -> unregisterCallback
    boolean dispatchMediaButtonEvent(android.view.KeyEvent) -> dispatchMediaButtonEvent
    android.support.v4.media.session.MediaControllerCompat$TransportControls getTransportControls() -> getTransportControls
    android.support.v4.media.session.PlaybackStateCompat getPlaybackState() -> getPlaybackState
    android.support.v4.media.MediaMetadataCompat getMetadata() -> getMetadata
    int getRatingType() -> getRatingType
    android.support.v4.media.session.MediaControllerCompat$PlaybackInfo getPlaybackInfo() -> getPlaybackInfo
    void sendCommand(java.lang.String,android.os.Bundle,android.os.ResultReceiver) -> sendCommand
    java.lang.Object getMediaController() -> getMediaController
android.support.v4.media.session.MediaControllerCompat$MediaControllerImplBase -> android.support.v4.media.session.MediaControllerCompat$MediaControllerImplBase:
    void registerCallback(android.support.v4.media.session.MediaControllerCompat$Callback,android.os.Handler) -> registerCallback
    void unregisterCallback(android.support.v4.media.session.MediaControllerCompat$Callback) -> unregisterCallback
    boolean dispatchMediaButtonEvent(android.view.KeyEvent) -> dispatchMediaButtonEvent
    android.support.v4.media.session.MediaControllerCompat$TransportControls getTransportControls() -> getTransportControls
    android.support.v4.media.session.PlaybackStateCompat getPlaybackState() -> getPlaybackState
    android.support.v4.media.MediaMetadataCompat getMetadata() -> getMetadata
    int getRatingType() -> getRatingType
    android.support.v4.media.session.MediaControllerCompat$PlaybackInfo getPlaybackInfo() -> getPlaybackInfo
    void sendCommand(java.lang.String,android.os.Bundle,android.os.ResultReceiver) -> sendCommand
    java.lang.Object getMediaController() -> getMediaController
android.support.v4.media.session.MediaControllerCompat$PlaybackInfo -> android.support.v4.media.session.MediaControllerCompat$PlaybackInfo:
    int PLAYBACK_TYPE_LOCAL -> PLAYBACK_TYPE_LOCAL
    int PLAYBACK_TYPE_REMOTE -> PLAYBACK_TYPE_REMOTE
    int mPlaybackType -> mPlaybackType
    int mAudioStream -> mAudioStream
    int mVolumeControl -> mVolumeControl
    int mMaxVolume -> mMaxVolume
    int mCurrentVolume -> mCurrentVolume
    int getPlaybackType() -> getPlaybackType
    int getAudioStream() -> getAudioStream
    int getVolumeControl() -> getVolumeControl
    int getMaxVolume() -> getMaxVolume
    int getCurrentVolume() -> getCurrentVolume
android.support.v4.media.session.MediaControllerCompat$TransportControls -> android.support.v4.media.session.MediaControllerCompat$TransportControls:
    void play() -> play
    void pause() -> pause
    void stop() -> stop
    void seekTo(long) -> seekTo
    void fastForward() -> fastForward
    void skipToNext() -> skipToNext
    void rewind() -> rewind
    void skipToPrevious() -> skipToPrevious
    void setRating(android.support.v4.media.RatingCompat) -> setRating
android.support.v4.media.session.MediaControllerCompat$TransportControlsApi21 -> android.support.v4.media.session.MediaControllerCompat$TransportControlsApi21:
    java.lang.Object mControlsObj -> mControlsObj
    void play() -> play
    void pause() -> pause
    void stop() -> stop
    void seekTo(long) -> seekTo
    void fastForward() -> fastForward
    void rewind() -> rewind
    void skipToNext() -> skipToNext
    void skipToPrevious() -> skipToPrevious
    void setRating(android.support.v4.media.RatingCompat) -> setRating
android.support.v4.media.session.MediaControllerCompatApi21 -> android.support.v4.media.session.MediaControllerCompatApi21:
    java.lang.Object fromToken(android.content.Context,java.lang.Object) -> fromToken
    java.lang.Object createCallback(android.support.v4.media.session.MediaControllerCompatApi21$Callback) -> createCallback
    void registerCallback(java.lang.Object,java.lang.Object,android.os.Handler) -> registerCallback
    void unregisterCallback(java.lang.Object,java.lang.Object) -> unregisterCallback
    java.lang.Object getTransportControls(java.lang.Object) -> getTransportControls
    java.lang.Object getPlaybackState(java.lang.Object) -> getPlaybackState
    java.lang.Object getMetadata(java.lang.Object) -> getMetadata
    int getRatingType(java.lang.Object) -> getRatingType
    java.lang.Object getPlaybackInfo(java.lang.Object) -> getPlaybackInfo
    boolean dispatchMediaButtonEvent(java.lang.Object,android.view.KeyEvent) -> dispatchMediaButtonEvent
    void sendCommand(java.lang.Object,java.lang.String,android.os.Bundle,android.os.ResultReceiver) -> sendCommand
android.support.v4.media.session.MediaControllerCompatApi21$Callback -> android.support.v4.media.session.MediaControllerCompatApi21$Callback:
    void onSessionDestroyed() -> onSessionDestroyed
    void onSessionEvent(java.lang.String,android.os.Bundle) -> onSessionEvent
    void onPlaybackStateChanged(java.lang.Object) -> onPlaybackStateChanged
    void onMetadataChanged(java.lang.Object) -> onMetadataChanged
android.support.v4.media.session.MediaControllerCompatApi21$CallbackProxy -> android.support.v4.media.session.MediaControllerCompatApi21$CallbackProxy:
    android.support.v4.media.session.MediaControllerCompatApi21$Callback mCallback -> mCallback
    void onSessionDestroyed() -> onSessionDestroyed
    void onSessionEvent(java.lang.String,android.os.Bundle) -> onSessionEvent
    void onPlaybackStateChanged(android.media.session.PlaybackState) -> onPlaybackStateChanged
    void onMetadataChanged(android.media.MediaMetadata) -> onMetadataChanged
android.support.v4.media.session.MediaControllerCompatApi21$PlaybackInfo -> android.support.v4.media.session.MediaControllerCompatApi21$PlaybackInfo:
    int FLAG_SCO -> FLAG_SCO
    int STREAM_BLUETOOTH_SCO -> STREAM_BLUETOOTH_SCO
    int STREAM_SYSTEM_ENFORCED -> STREAM_SYSTEM_ENFORCED
    int getPlaybackType(java.lang.Object) -> getPlaybackType
    android.media.AudioAttributes getAudioAttributes(java.lang.Object) -> getAudioAttributes
    int getLegacyAudioStream(java.lang.Object) -> getLegacyAudioStream
    int getVolumeControl(java.lang.Object) -> getVolumeControl
    int getMaxVolume(java.lang.Object) -> getMaxVolume
    int getCurrentVolume(java.lang.Object) -> getCurrentVolume
    int toLegacyStreamType(android.media.AudioAttributes) -> toLegacyStreamType
android.support.v4.media.session.MediaControllerCompatApi21$TransportControls -> android.support.v4.media.session.MediaControllerCompatApi21$TransportControls:
    void play(java.lang.Object) -> play
    void pause(java.lang.Object) -> pause
    void stop(java.lang.Object) -> stop
    void seekTo(java.lang.Object,long) -> seekTo
    void fastForward(java.lang.Object) -> fastForward
    void rewind(java.lang.Object) -> rewind
    void skipToNext(java.lang.Object) -> skipToNext
    void skipToPrevious(java.lang.Object) -> skipToPrevious
    void setRating(java.lang.Object,java.lang.Object) -> setRating
android.support.v4.media.session.MediaSessionCompat -> android.support.v4.media.session.MediaSessionCompat:
    android.support.v4.media.session.MediaSessionCompat$MediaSessionImpl mImpl -> mImpl
    int FLAG_HANDLES_MEDIA_BUTTONS -> FLAG_HANDLES_MEDIA_BUTTONS
    int FLAG_HANDLES_TRANSPORT_CONTROLS -> FLAG_HANDLES_TRANSPORT_CONTROLS
    void setCallback(android.support.v4.media.session.MediaSessionCompat$Callback) -> setCallback
    void setCallback(android.support.v4.media.session.MediaSessionCompat$Callback,android.os.Handler) -> setCallback
    void setFlags(int) -> setFlags
    void setPlaybackToLocal(int) -> setPlaybackToLocal
    void setPlaybackToRemote(android.support.v4.media.VolumeProviderCompat) -> setPlaybackToRemote
    void setActive(boolean) -> setActive
    boolean isActive() -> isActive
    void sendSessionEvent(java.lang.String,android.os.Bundle) -> sendSessionEvent
    void release() -> release
    android.support.v4.media.session.MediaSessionCompat$Token getSessionToken() -> getSessionToken
    void setPlaybackState(android.support.v4.media.session.PlaybackStateCompat) -> setPlaybackState
    void setMetadata(android.support.v4.media.MediaMetadataCompat) -> setMetadata
    java.lang.Object getMediaSession() -> getMediaSession
    android.support.v4.media.session.MediaSessionCompat obtain(java.lang.Object) -> obtain
android.support.v4.media.session.MediaSessionCompat$1 -> android.support.v4.media.session.MediaSessionCompat$1:
android.support.v4.media.session.MediaSessionCompat$Callback -> android.support.v4.media.session.MediaSessionCompat$Callback:
    java.lang.Object mCallbackObj -> mCallbackObj
    void onCommand(java.lang.String,android.os.Bundle,android.os.ResultReceiver) -> onCommand
    boolean onMediaButtonEvent(android.content.Intent) -> onMediaButtonEvent
    void onPlay() -> onPlay
    void onPause() -> onPause
    void onSkipToNext() -> onSkipToNext
    void onSkipToPrevious() -> onSkipToPrevious
    void onFastForward() -> onFastForward
    void onRewind() -> onRewind
    void onStop() -> onStop
    void onSeekTo(long) -> onSeekTo
    void onSetRating(android.support.v4.media.RatingCompat) -> onSetRating
android.support.v4.media.session.MediaSessionCompat$Callback$StubApi21 -> android.support.v4.media.session.MediaSessionCompat$Callback$StubApi21:
    android.support.v4.media.session.MediaSessionCompat$Callback this$0 -> this$0
    void onCommand(java.lang.String,android.os.Bundle,android.os.ResultReceiver) -> onCommand
    boolean onMediaButtonEvent(android.content.Intent) -> onMediaButtonEvent
    void onPlay() -> onPlay
    void onPause() -> onPause
    void onSkipToNext() -> onSkipToNext
    void onSkipToPrevious() -> onSkipToPrevious
    void onFastForward() -> onFastForward
    void onRewind() -> onRewind
    void onStop() -> onStop
    void onSeekTo(long) -> onSeekTo
    void onSetRating(java.lang.Object) -> onSetRating
android.support.v4.media.session.MediaSessionCompat$MediaSessionImpl -> android.support.v4.media.session.MediaSessionCompat$MediaSessionImpl:
    void setCallback(android.support.v4.media.session.MediaSessionCompat$Callback,android.os.Handler) -> setCallback
    void setFlags(int) -> setFlags
    void setPlaybackToLocal(int) -> setPlaybackToLocal
    void setPlaybackToRemote(android.support.v4.media.VolumeProviderCompat) -> setPlaybackToRemote
    void setActive(boolean) -> setActive
    boolean isActive() -> isActive
    void sendSessionEvent(java.lang.String,android.os.Bundle) -> sendSessionEvent
    void release() -> release
    android.support.v4.media.session.MediaSessionCompat$Token getSessionToken() -> getSessionToken
    void setPlaybackState(android.support.v4.media.session.PlaybackStateCompat) -> setPlaybackState
    void setMetadata(android.support.v4.media.MediaMetadataCompat) -> setMetadata
    java.lang.Object getMediaSession() -> getMediaSession
android.support.v4.media.session.MediaSessionCompat$MediaSessionImplApi21 -> android.support.v4.media.session.MediaSessionCompat$MediaSessionImplApi21:
    java.lang.Object mSessionObj -> mSessionObj
    android.support.v4.media.session.MediaSessionCompat$Token mToken -> mToken
    void setCallback(android.support.v4.media.session.MediaSessionCompat$Callback,android.os.Handler) -> setCallback
    void setFlags(int) -> setFlags
    void setPlaybackToLocal(int) -> setPlaybackToLocal
    void setPlaybackToRemote(android.support.v4.media.VolumeProviderCompat) -> setPlaybackToRemote
    void setActive(boolean) -> setActive
    boolean isActive() -> isActive
    void sendSessionEvent(java.lang.String,android.os.Bundle) -> sendSessionEvent
    void release() -> release
    android.support.v4.media.session.MediaSessionCompat$Token getSessionToken() -> getSessionToken
    void setPlaybackState(android.support.v4.media.session.PlaybackStateCompat) -> setPlaybackState
    void setMetadata(android.support.v4.media.MediaMetadataCompat) -> setMetadata
    java.lang.Object getMediaSession() -> getMediaSession
android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase -> android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase:
    void setCallback(android.support.v4.media.session.MediaSessionCompat$Callback,android.os.Handler) -> setCallback
    void setFlags(int) -> setFlags
    void setPlaybackToLocal(int) -> setPlaybackToLocal
    void setPlaybackToRemote(android.support.v4.media.VolumeProviderCompat) -> setPlaybackToRemote
    void setActive(boolean) -> setActive
    boolean isActive() -> isActive
    void sendSessionEvent(java.lang.String,android.os.Bundle) -> sendSessionEvent
    void release() -> release
    android.support.v4.media.session.MediaSessionCompat$Token getSessionToken() -> getSessionToken
    void setPlaybackState(android.support.v4.media.session.PlaybackStateCompat) -> setPlaybackState
    void setMetadata(android.support.v4.media.MediaMetadataCompat) -> setMetadata
    java.lang.Object getMediaSession() -> getMediaSession
android.support.v4.media.session.MediaSessionCompat$Token -> android.support.v4.media.session.MediaSessionCompat$Token:
    android.os.Parcelable mInner -> mInner
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.Object getToken() -> getToken
android.support.v4.media.session.MediaSessionCompat$Token$1 -> android.support.v4.media.session.MediaSessionCompat$Token$1:
    android.support.v4.media.session.MediaSessionCompat$Token createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.media.session.MediaSessionCompat$Token[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.media.session.MediaSessionCompatApi21 -> android.support.v4.media.session.MediaSessionCompatApi21:
    java.lang.Object createSession(android.content.Context,java.lang.String) -> createSession
    java.lang.Object verifySession(java.lang.Object) -> verifySession
    java.lang.Object createCallback(android.support.v4.media.session.MediaSessionCompatApi21$Callback) -> createCallback
    void setCallback(java.lang.Object,java.lang.Object,android.os.Handler) -> setCallback
    void setFlags(java.lang.Object,int) -> setFlags
    void setPlaybackToLocal(java.lang.Object,int) -> setPlaybackToLocal
    void setPlaybackToRemote(java.lang.Object,java.lang.Object) -> setPlaybackToRemote
    void setActive(java.lang.Object,boolean) -> setActive
    boolean isActive(java.lang.Object) -> isActive
    void sendSessionEvent(java.lang.Object,java.lang.String,android.os.Bundle) -> sendSessionEvent
    void release(java.lang.Object) -> release
    android.os.Parcelable getSessionToken(java.lang.Object) -> getSessionToken
    void setPlaybackState(java.lang.Object,java.lang.Object) -> setPlaybackState
    void setMetadata(java.lang.Object,java.lang.Object) -> setMetadata
android.support.v4.media.session.MediaSessionCompatApi21$Callback -> android.support.v4.media.session.MediaSessionCompatApi21$Callback:
    void onCommand(java.lang.String,android.os.Bundle,android.os.ResultReceiver) -> onCommand
    boolean onMediaButtonEvent(android.content.Intent) -> onMediaButtonEvent
    void onPlay() -> onPlay
    void onPause() -> onPause
    void onSkipToNext() -> onSkipToNext
    void onSkipToPrevious() -> onSkipToPrevious
    void onFastForward() -> onFastForward
    void onRewind() -> onRewind
    void onStop() -> onStop
    void onSeekTo(long) -> onSeekTo
    void onSetRating(java.lang.Object) -> onSetRating
android.support.v4.media.session.MediaSessionCompatApi21$CallbackProxy -> android.support.v4.media.session.MediaSessionCompatApi21$CallbackProxy:
    android.support.v4.media.session.MediaSessionCompatApi21$Callback mCallback -> mCallback
    void onCommand(java.lang.String,android.os.Bundle,android.os.ResultReceiver) -> onCommand
    boolean onMediaButtonEvent(android.content.Intent) -> onMediaButtonEvent
    void onPlay() -> onPlay
    void onPause() -> onPause
    void onSkipToNext() -> onSkipToNext
    void onSkipToPrevious() -> onSkipToPrevious
    void onFastForward() -> onFastForward
    void onRewind() -> onRewind
    void onStop() -> onStop
    void onSeekTo(long) -> onSeekTo
    void onSetRating(android.media.Rating) -> onSetRating
android.support.v4.media.session.PlaybackStateCompat -> android.support.v4.media.session.PlaybackStateCompat:
    long ACTION_STOP -> ACTION_STOP
    long ACTION_PAUSE -> ACTION_PAUSE
    long ACTION_PLAY -> ACTION_PLAY
    long ACTION_REWIND -> ACTION_REWIND
    long ACTION_SKIP_TO_PREVIOUS -> ACTION_SKIP_TO_PREVIOUS
    long ACTION_SKIP_TO_NEXT -> ACTION_SKIP_TO_NEXT
    long ACTION_FAST_FORWARD -> ACTION_FAST_FORWARD
    long ACTION_SET_RATING -> ACTION_SET_RATING
    long ACTION_SEEK_TO -> ACTION_SEEK_TO
    long ACTION_PLAY_PAUSE -> ACTION_PLAY_PAUSE
    long ACTION_PLAY_FROM_MEDIA_ID -> ACTION_PLAY_FROM_MEDIA_ID
    long ACTION_PLAY_FROM_SEARCH -> ACTION_PLAY_FROM_SEARCH
    long ACTION_SKIP_TO_QUEUE_ITEM -> ACTION_SKIP_TO_QUEUE_ITEM
    int STATE_NONE -> STATE_NONE
    int STATE_STOPPED -> STATE_STOPPED
    int STATE_PAUSED -> STATE_PAUSED
    int STATE_PLAYING -> STATE_PLAYING
    int STATE_FAST_FORWARDING -> STATE_FAST_FORWARDING
    int STATE_REWINDING -> STATE_REWINDING
    int STATE_BUFFERING -> STATE_BUFFERING
    int STATE_ERROR -> STATE_ERROR
    int STATE_CONNECTING -> STATE_CONNECTING
    int STATE_SKIPPING_TO_PREVIOUS -> STATE_SKIPPING_TO_PREVIOUS
    int STATE_SKIPPING_TO_NEXT -> STATE_SKIPPING_TO_NEXT
    long PLAYBACK_POSITION_UNKNOWN -> PLAYBACK_POSITION_UNKNOWN
    int mState -> mState
    long mPosition -> mPosition
    long mBufferedPosition -> mBufferedPosition
    float mSpeed -> mSpeed
    long mActions -> mActions
    java.lang.CharSequence mErrorMessage -> mErrorMessage
    long mUpdateTime -> mUpdateTime
    java.lang.Object mStateObj -> mStateObj
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.lang.String toString() -> toString
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    int getState() -> getState
    long getPosition() -> getPosition
    long getBufferedPosition() -> getBufferedPosition
    float getPlaybackSpeed() -> getPlaybackSpeed
    long getActions() -> getActions
    java.lang.CharSequence getErrorMessage() -> getErrorMessage
    long getLastPositionUpdateTime() -> getLastPositionUpdateTime
    android.support.v4.media.session.PlaybackStateCompat fromPlaybackState(java.lang.Object) -> fromPlaybackState
    java.lang.Object getPlaybackState() -> getPlaybackState
    int access$100(android.support.v4.media.session.PlaybackStateCompat) -> access$100
    long access$200(android.support.v4.media.session.PlaybackStateCompat) -> access$200
    float access$300(android.support.v4.media.session.PlaybackStateCompat) -> access$300
    long access$400(android.support.v4.media.session.PlaybackStateCompat) -> access$400
    long access$500(android.support.v4.media.session.PlaybackStateCompat) -> access$500
    long access$600(android.support.v4.media.session.PlaybackStateCompat) -> access$600
    java.lang.CharSequence access$700(android.support.v4.media.session.PlaybackStateCompat) -> access$700
android.support.v4.media.session.PlaybackStateCompat$1 -> android.support.v4.media.session.PlaybackStateCompat$1:
    android.support.v4.media.session.PlaybackStateCompat createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.media.session.PlaybackStateCompat[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.media.session.PlaybackStateCompat$Builder -> android.support.v4.media.session.PlaybackStateCompat$Builder:
    int mState -> mState
    long mPosition -> mPosition
    long mBufferedPosition -> mBufferedPosition
    float mRate -> mRate
    long mActions -> mActions
    java.lang.CharSequence mErrorMessage -> mErrorMessage
    long mUpdateTime -> mUpdateTime
    void setState(int,long,float) -> setState
    void setBufferedPosition(long) -> setBufferedPosition
    void setActions(long) -> setActions
    void setErrorMessage(java.lang.CharSequence) -> setErrorMessage
    android.support.v4.media.session.PlaybackStateCompat build() -> build
android.support.v4.media.session.PlaybackStateCompatApi21 -> android.support.v4.media.session.PlaybackStateCompatApi21:
    int getState(java.lang.Object) -> getState
    long getPosition(java.lang.Object) -> getPosition
    long getBufferedPosition(java.lang.Object) -> getBufferedPosition
    float getPlaybackSpeed(java.lang.Object) -> getPlaybackSpeed
    long getActions(java.lang.Object) -> getActions
    java.lang.CharSequence getErrorMessage(java.lang.Object) -> getErrorMessage
    long getLastPositionUpdateTime(java.lang.Object) -> getLastPositionUpdateTime
    java.lang.Object newInstance(int,long,long,float,long,java.lang.CharSequence,long) -> newInstance
android.support.v4.net.ConnectivityManagerCompat -> android.support.v4.net.ConnectivityManagerCompat:
    android.support.v4.net.ConnectivityManagerCompat$ConnectivityManagerCompatImpl IMPL -> IMPL
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
    android.net.NetworkInfo getNetworkInfoFromBroadcast(android.net.ConnectivityManager,android.content.Intent) -> getNetworkInfoFromBroadcast
android.support.v4.net.ConnectivityManagerCompat$BaseConnectivityManagerCompatImpl -> android.support.v4.net.ConnectivityManagerCompat$BaseConnectivityManagerCompatImpl:
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
android.support.v4.net.ConnectivityManagerCompat$ConnectivityManagerCompatImpl -> android.support.v4.net.ConnectivityManagerCompat$ConnectivityManagerCompatImpl:
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
android.support.v4.net.ConnectivityManagerCompat$GingerbreadConnectivityManagerCompatImpl -> android.support.v4.net.ConnectivityManagerCompat$GingerbreadConnectivityManagerCompatImpl:
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
android.support.v4.net.ConnectivityManagerCompat$HoneycombMR2ConnectivityManagerCompatImpl -> android.support.v4.net.ConnectivityManagerCompat$HoneycombMR2ConnectivityManagerCompatImpl:
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
android.support.v4.net.ConnectivityManagerCompat$JellyBeanConnectivityManagerCompatImpl -> android.support.v4.net.ConnectivityManagerCompat$JellyBeanConnectivityManagerCompatImpl:
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
android.support.v4.net.ConnectivityManagerCompatGingerbread -> android.support.v4.net.ConnectivityManagerCompatGingerbread:
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
android.support.v4.net.ConnectivityManagerCompatHoneycombMR2 -> android.support.v4.net.ConnectivityManagerCompatHoneycombMR2:
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
android.support.v4.net.ConnectivityManagerCompatJellyBean -> android.support.v4.net.ConnectivityManagerCompatJellyBean:
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
android.support.v4.net.TrafficStatsCompat -> android.support.v4.net.TrafficStatsCompat:
    android.support.v4.net.TrafficStatsCompat$TrafficStatsCompatImpl IMPL -> IMPL
    void clearThreadStatsTag() -> clearThreadStatsTag
    int getThreadStatsTag() -> getThreadStatsTag
    void incrementOperationCount(int) -> incrementOperationCount
    void incrementOperationCount(int,int) -> incrementOperationCount
    void setThreadStatsTag(int) -> setThreadStatsTag
    void tagSocket(java.net.Socket) -> tagSocket
    void untagSocket(java.net.Socket) -> untagSocket
android.support.v4.net.TrafficStatsCompat$1 -> android.support.v4.net.TrafficStatsCompat$1:
android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl -> android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl:
    java.lang.ThreadLocal mThreadSocketTags -> mThreadSocketTags
    void clearThreadStatsTag() -> clearThreadStatsTag
    int getThreadStatsTag() -> getThreadStatsTag
    void incrementOperationCount(int) -> incrementOperationCount
    void incrementOperationCount(int,int) -> incrementOperationCount
    void setThreadStatsTag(int) -> setThreadStatsTag
    void tagSocket(java.net.Socket) -> tagSocket
    void untagSocket(java.net.Socket) -> untagSocket
android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl$1 -> android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl$1:
    android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl this$0 -> this$0
    android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl$SocketTags initialValue() -> initialValue
    java.lang.Object initialValue() -> initialValue
android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl$SocketTags -> android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl$SocketTags:
    int statsTag -> statsTag
android.support.v4.net.TrafficStatsCompat$IcsTrafficStatsCompatImpl -> android.support.v4.net.TrafficStatsCompat$IcsTrafficStatsCompatImpl:
    void clearThreadStatsTag() -> clearThreadStatsTag
    int getThreadStatsTag() -> getThreadStatsTag
    void incrementOperationCount(int) -> incrementOperationCount
    void incrementOperationCount(int,int) -> incrementOperationCount
    void setThreadStatsTag(int) -> setThreadStatsTag
    void tagSocket(java.net.Socket) -> tagSocket
    void untagSocket(java.net.Socket) -> untagSocket
android.support.v4.net.TrafficStatsCompat$TrafficStatsCompatImpl -> android.support.v4.net.TrafficStatsCompat$TrafficStatsCompatImpl:
    void clearThreadStatsTag() -> clearThreadStatsTag
    int getThreadStatsTag() -> getThreadStatsTag
    void incrementOperationCount(int) -> incrementOperationCount
    void incrementOperationCount(int,int) -> incrementOperationCount
    void setThreadStatsTag(int) -> setThreadStatsTag
    void tagSocket(java.net.Socket) -> tagSocket
    void untagSocket(java.net.Socket) -> untagSocket
android.support.v4.net.TrafficStatsCompatIcs -> android.support.v4.net.TrafficStatsCompatIcs:
    void clearThreadStatsTag() -> clearThreadStatsTag
    int getThreadStatsTag() -> getThreadStatsTag
    void incrementOperationCount(int) -> incrementOperationCount
    void incrementOperationCount(int,int) -> incrementOperationCount
    void setThreadStatsTag(int) -> setThreadStatsTag
    void tagSocket(java.net.Socket) -> tagSocket
    void untagSocket(java.net.Socket) -> untagSocket
android.support.v4.os.AsyncTaskCompat -> android.support.v4.os.AsyncTaskCompat:
    android.os.AsyncTask executeParallel(android.os.AsyncTask,java.lang.Object[]) -> executeParallel
android.support.v4.os.AsyncTaskCompatHoneycomb -> android.support.v4.os.AsyncTaskCompatHoneycomb:
    void executeParallel(android.os.AsyncTask,java.lang.Object[]) -> executeParallel
android.support.v4.os.EnvironmentCompat -> android.support.v4.os.EnvironmentCompat:
    java.lang.String TAG -> TAG
    java.lang.String MEDIA_UNKNOWN -> MEDIA_UNKNOWN
    java.lang.String getStorageState(java.io.File) -> getStorageState
android.support.v4.os.EnvironmentCompatKitKat -> android.support.v4.os.EnvironmentCompatKitKat:
    java.lang.String getStorageState(java.io.File) -> getStorageState
android.support.v4.os.ParcelableCompat -> android.support.v4.os.ParcelableCompat:
    android.os.Parcelable$Creator newCreator(android.support.v4.os.ParcelableCompatCreatorCallbacks) -> newCreator
android.support.v4.os.ParcelableCompat$CompatCreator -> android.support.v4.os.ParcelableCompat$CompatCreator:
    android.support.v4.os.ParcelableCompatCreatorCallbacks mCallbacks -> mCallbacks
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.v4.os.ParcelableCompatCreatorCallbacks -> android.support.v4.os.ParcelableCompatCreatorCallbacks:
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.v4.os.ParcelableCompatCreatorHoneycombMR2 -> android.support.v4.os.ParcelableCompatCreatorHoneycombMR2:
    android.support.v4.os.ParcelableCompatCreatorCallbacks mCallbacks -> mCallbacks
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.v4.os.ParcelableCompatCreatorHoneycombMR2Stub -> android.support.v4.os.ParcelableCompatCreatorHoneycombMR2Stub:
    android.os.Parcelable$Creator instantiate(android.support.v4.os.ParcelableCompatCreatorCallbacks) -> instantiate
android.support.v4.print.PrintHelper -> android.support.v4.print.PrintHelper:
    int SCALE_MODE_FIT -> SCALE_MODE_FIT
    int SCALE_MODE_FILL -> SCALE_MODE_FILL
    int COLOR_MODE_MONOCHROME -> COLOR_MODE_MONOCHROME
    int COLOR_MODE_COLOR -> COLOR_MODE_COLOR
    int ORIENTATION_LANDSCAPE -> ORIENTATION_LANDSCAPE
    int ORIENTATION_PORTRAIT -> ORIENTATION_PORTRAIT
    android.support.v4.print.PrintHelper$PrintHelperVersionImpl mImpl -> mImpl
    boolean systemSupportsPrint() -> systemSupportsPrint
    void setScaleMode(int) -> setScaleMode
    int getScaleMode() -> getScaleMode
    void setColorMode(int) -> setColorMode
    int getColorMode() -> getColorMode
    void setOrientation(int) -> setOrientation
    int getOrientation() -> getOrientation
    void printBitmap(java.lang.String,android.graphics.Bitmap) -> printBitmap
    void printBitmap(java.lang.String,android.graphics.Bitmap,android.support.v4.print.PrintHelper$OnPrintFinishCallback) -> printBitmap
    void printBitmap(java.lang.String,android.net.Uri) -> printBitmap
    void printBitmap(java.lang.String,android.net.Uri,android.support.v4.print.PrintHelper$OnPrintFinishCallback) -> printBitmap
android.support.v4.print.PrintHelper$1 -> android.support.v4.print.PrintHelper$1:
android.support.v4.print.PrintHelper$OnPrintFinishCallback -> android.support.v4.print.PrintHelper$OnPrintFinishCallback:
    void onFinish() -> onFinish
android.support.v4.print.PrintHelper$PrintHelperKitkatImpl -> android.support.v4.print.PrintHelper$PrintHelperKitkatImpl:
    android.support.v4.print.PrintHelperKitkat mPrintHelper -> mPrintHelper
    void setScaleMode(int) -> setScaleMode
    int getScaleMode() -> getScaleMode
    void setColorMode(int) -> setColorMode
    int getColorMode() -> getColorMode
    void setOrientation(int) -> setOrientation
    int getOrientation() -> getOrientation
    void printBitmap(java.lang.String,android.graphics.Bitmap,android.support.v4.print.PrintHelper$OnPrintFinishCallback) -> printBitmap
    void printBitmap(java.lang.String,android.net.Uri,android.support.v4.print.PrintHelper$OnPrintFinishCallback) -> printBitmap
android.support.v4.print.PrintHelper$PrintHelperKitkatImpl$1 -> android.support.v4.print.PrintHelper$PrintHelperKitkatImpl$1:
    android.support.v4.print.PrintHelper$OnPrintFinishCallback val$callback -> val$callback
    android.support.v4.print.PrintHelper$PrintHelperKitkatImpl this$0 -> this$0
    void onFinish() -> onFinish
android.support.v4.print.PrintHelper$PrintHelperKitkatImpl$2 -> android.support.v4.print.PrintHelper$PrintHelperKitkatImpl$2:
    android.support.v4.print.PrintHelper$OnPrintFinishCallback val$callback -> val$callback
    android.support.v4.print.PrintHelper$PrintHelperKitkatImpl this$0 -> this$0
    void onFinish() -> onFinish
android.support.v4.print.PrintHelper$PrintHelperStubImpl -> android.support.v4.print.PrintHelper$PrintHelperStubImpl:
    int mScaleMode -> mScaleMode
    int mColorMode -> mColorMode
    int mOrientation -> mOrientation
    void setScaleMode(int) -> setScaleMode
    int getColorMode() -> getColorMode
    void setColorMode(int) -> setColorMode
    void setOrientation(int) -> setOrientation
    int getOrientation() -> getOrientation
    int getScaleMode() -> getScaleMode
    void printBitmap(java.lang.String,android.graphics.Bitmap,android.support.v4.print.PrintHelper$OnPrintFinishCallback) -> printBitmap
    void printBitmap(java.lang.String,android.net.Uri,android.support.v4.print.PrintHelper$OnPrintFinishCallback) -> printBitmap
android.support.v4.print.PrintHelper$PrintHelperVersionImpl -> android.support.v4.print.PrintHelper$PrintHelperVersionImpl:
    void setScaleMode(int) -> setScaleMode
    int getScaleMode() -> getScaleMode
    void setColorMode(int) -> setColorMode
    int getColorMode() -> getColorMode
    void setOrientation(int) -> setOrientation
    int getOrientation() -> getOrientation
    void printBitmap(java.lang.String,android.graphics.Bitmap,android.support.v4.print.PrintHelper$OnPrintFinishCallback) -> printBitmap
    void printBitmap(java.lang.String,android.net.Uri,android.support.v4.print.PrintHelper$OnPrintFinishCallback) -> printBitmap
android.support.v4.print.PrintHelperKitkat -> android.support.v4.print.PrintHelperKitkat:
    java.lang.String LOG_TAG -> LOG_TAG
    int MAX_PRINT_SIZE -> MAX_PRINT_SIZE
    android.content.Context mContext -> mContext
    android.graphics.BitmapFactory$Options mDecodeOptions -> mDecodeOptions
    java.lang.Object mLock -> mLock
    int SCALE_MODE_FIT -> SCALE_MODE_FIT
    int SCALE_MODE_FILL -> SCALE_MODE_FILL
    int ORIENTATION_LANDSCAPE -> ORIENTATION_LANDSCAPE
    int ORIENTATION_PORTRAIT -> ORIENTATION_PORTRAIT
    int COLOR_MODE_MONOCHROME -> COLOR_MODE_MONOCHROME
    int COLOR_MODE_COLOR -> COLOR_MODE_COLOR
    int mScaleMode -> mScaleMode
    int mColorMode -> mColorMode
    int mOrientation -> mOrientation
    void setScaleMode(int) -> setScaleMode
    int getScaleMode() -> getScaleMode
    void setColorMode(int) -> setColorMode
    void setOrientation(int) -> setOrientation
    int getOrientation() -> getOrientation
    int getColorMode() -> getColorMode
    void printBitmap(java.lang.String,android.graphics.Bitmap,android.support.v4.print.PrintHelperKitkat$OnPrintFinishCallback) -> printBitmap
    android.graphics.Matrix getMatrix(int,int,android.graphics.RectF,int) -> getMatrix
    void printBitmap(java.lang.String,android.net.Uri,android.support.v4.print.PrintHelperKitkat$OnPrintFinishCallback) -> printBitmap
    android.graphics.Bitmap loadConstrainedBitmap(android.net.Uri,int) -> loadConstrainedBitmap
    android.graphics.Bitmap loadBitmap(android.net.Uri,android.graphics.BitmapFactory$Options) -> loadBitmap
    android.graphics.Matrix access$000(android.support.v4.print.PrintHelperKitkat,int,int,android.graphics.RectF,int) -> access$000
    android.graphics.Bitmap access$200(android.support.v4.print.PrintHelperKitkat,android.net.Uri,int) -> access$200
    java.lang.Object access$300(android.support.v4.print.PrintHelperKitkat) -> access$300
android.support.v4.print.PrintHelperKitkat$1 -> android.support.v4.print.PrintHelperKitkat$1:
    android.print.PrintAttributes mAttributes -> mAttributes
    java.lang.String val$jobName -> val$jobName
    android.graphics.Bitmap val$bitmap -> val$bitmap
    int val$fittingMode -> val$fittingMode
    android.support.v4.print.PrintHelperKitkat$OnPrintFinishCallback val$callback -> val$callback
    android.support.v4.print.PrintHelperKitkat this$0 -> this$0
    void onLayout(android.print.PrintAttributes,android.print.PrintAttributes,android.os.CancellationSignal,android.print.PrintDocumentAdapter$LayoutResultCallback,android.os.Bundle) -> onLayout
    void onWrite(android.print.PageRange[],android.os.ParcelFileDescriptor,android.os.CancellationSignal,android.print.PrintDocumentAdapter$WriteResultCallback) -> onWrite
    void onFinish() -> onFinish
android.support.v4.print.PrintHelperKitkat$2 -> android.support.v4.print.PrintHelperKitkat$2:
    android.print.PrintAttributes mAttributes -> mAttributes
    android.os.AsyncTask loadBitmap -> loadBitmap
    android.graphics.Bitmap mBitmap -> mBitmap
    java.lang.String val$jobName -> val$jobName
    android.net.Uri val$imageFile -> val$imageFile
    android.support.v4.print.PrintHelperKitkat$OnPrintFinishCallback val$callback -> val$callback
    int val$fittingMode -> val$fittingMode
    android.support.v4.print.PrintHelperKitkat this$0 -> this$0
    void onLayout(android.print.PrintAttributes,android.print.PrintAttributes,android.os.CancellationSignal,android.print.PrintDocumentAdapter$LayoutResultCallback,android.os.Bundle) -> onLayout
    void cancelLoad() -> cancelLoad
    void onFinish() -> onFinish
    void onWrite(android.print.PageRange[],android.os.ParcelFileDescriptor,android.os.CancellationSignal,android.print.PrintDocumentAdapter$WriteResultCallback) -> onWrite
    void access$100(android.support.v4.print.PrintHelperKitkat$2) -> access$100
android.support.v4.print.PrintHelperKitkat$2$1 -> android.support.v4.print.PrintHelperKitkat$2$1:
    android.os.CancellationSignal val$cancellationSignal -> val$cancellationSignal
    android.print.PrintAttributes val$newPrintAttributes -> val$newPrintAttributes
    android.print.PrintAttributes val$oldPrintAttributes -> val$oldPrintAttributes
    android.print.PrintDocumentAdapter$LayoutResultCallback val$layoutResultCallback -> val$layoutResultCallback
    android.support.v4.print.PrintHelperKitkat$2 this$1 -> this$1
    void onPreExecute() -> onPreExecute
    android.graphics.Bitmap doInBackground(android.net.Uri[]) -> doInBackground
    void onPostExecute(android.graphics.Bitmap) -> onPostExecute
    void onCancelled(android.graphics.Bitmap) -> onCancelled
    void onCancelled(java.lang.Object) -> onCancelled
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
android.support.v4.print.PrintHelperKitkat$2$1$1 -> android.support.v4.print.PrintHelperKitkat$2$1$1:
    android.support.v4.print.PrintHelperKitkat$2$1 this$2 -> this$2
    void onCancel() -> onCancel
android.support.v4.print.PrintHelperKitkat$OnPrintFinishCallback -> android.support.v4.print.PrintHelperKitkat$OnPrintFinishCallback:
    void onFinish() -> onFinish
android.support.v4.provider.DocumentFile -> android.support.v4.provider.DocumentFile:
    java.lang.String TAG -> TAG
    android.support.v4.provider.DocumentFile mParent -> mParent
    android.support.v4.provider.DocumentFile fromFile(java.io.File) -> fromFile
    android.support.v4.provider.DocumentFile fromSingleUri(android.content.Context,android.net.Uri) -> fromSingleUri
    android.support.v4.provider.DocumentFile fromTreeUri(android.content.Context,android.net.Uri) -> fromTreeUri
    boolean isDocumentUri(android.content.Context,android.net.Uri) -> isDocumentUri
    android.support.v4.provider.DocumentFile createFile(java.lang.String,java.lang.String) -> createFile
    android.support.v4.provider.DocumentFile createDirectory(java.lang.String) -> createDirectory
    android.net.Uri getUri() -> getUri
    java.lang.String getName() -> getName
    java.lang.String getType() -> getType
    android.support.v4.provider.DocumentFile getParentFile() -> getParentFile
    boolean isDirectory() -> isDirectory
    boolean isFile() -> isFile
    long lastModified() -> lastModified
    long length() -> length
    boolean canRead() -> canRead
    boolean canWrite() -> canWrite
    boolean delete() -> delete
    boolean exists() -> exists
    android.support.v4.provider.DocumentFile[] listFiles() -> listFiles
    android.support.v4.provider.DocumentFile findFile(java.lang.String) -> findFile
    boolean renameTo(java.lang.String) -> renameTo
android.support.v4.provider.DocumentsContractApi19 -> android.support.v4.provider.DocumentsContractApi19:
    java.lang.String TAG -> TAG
    boolean isDocumentUri(android.content.Context,android.net.Uri) -> isDocumentUri
    java.lang.String getName(android.content.Context,android.net.Uri) -> getName
    java.lang.String getRawType(android.content.Context,android.net.Uri) -> getRawType
    java.lang.String getType(android.content.Context,android.net.Uri) -> getType
    boolean isDirectory(android.content.Context,android.net.Uri) -> isDirectory
    boolean isFile(android.content.Context,android.net.Uri) -> isFile
    long lastModified(android.content.Context,android.net.Uri) -> lastModified
    long length(android.content.Context,android.net.Uri) -> length
    boolean canRead(android.content.Context,android.net.Uri) -> canRead
    boolean canWrite(android.content.Context,android.net.Uri) -> canWrite
    boolean delete(android.content.Context,android.net.Uri) -> delete
    boolean exists(android.content.Context,android.net.Uri) -> exists
    java.lang.String queryForString(android.content.Context,android.net.Uri,java.lang.String,java.lang.String) -> queryForString
    int queryForInt(android.content.Context,android.net.Uri,java.lang.String,int) -> queryForInt
    long queryForLong(android.content.Context,android.net.Uri,java.lang.String,long) -> queryForLong
    void closeQuietly(java.lang.AutoCloseable) -> closeQuietly
android.support.v4.provider.DocumentsContractApi21 -> android.support.v4.provider.DocumentsContractApi21:
    java.lang.String TAG -> TAG
    android.net.Uri createFile(android.content.Context,android.net.Uri,java.lang.String,java.lang.String) -> createFile
    android.net.Uri createDirectory(android.content.Context,android.net.Uri,java.lang.String) -> createDirectory
    android.net.Uri prepareTreeUri(android.net.Uri) -> prepareTreeUri
    android.net.Uri[] listFiles(android.content.Context,android.net.Uri) -> listFiles
    android.net.Uri renameTo(android.content.Context,android.net.Uri,java.lang.String) -> renameTo
    void closeQuietly(java.lang.AutoCloseable) -> closeQuietly
android.support.v4.provider.RawDocumentFile -> android.support.v4.provider.RawDocumentFile:
    java.io.File mFile -> mFile
    android.support.v4.provider.DocumentFile createFile(java.lang.String,java.lang.String) -> createFile
    android.support.v4.provider.DocumentFile createDirectory(java.lang.String) -> createDirectory
    android.net.Uri getUri() -> getUri
    java.lang.String getName() -> getName
    java.lang.String getType() -> getType
    boolean isDirectory() -> isDirectory
    boolean isFile() -> isFile
    long lastModified() -> lastModified
    long length() -> length
    boolean canRead() -> canRead
    boolean canWrite() -> canWrite
    boolean delete() -> delete
    boolean exists() -> exists
    android.support.v4.provider.DocumentFile[] listFiles() -> listFiles
    boolean renameTo(java.lang.String) -> renameTo
    java.lang.String getTypeForName(java.lang.String) -> getTypeForName
    boolean deleteContents(java.io.File) -> deleteContents
android.support.v4.provider.SingleDocumentFile -> android.support.v4.provider.SingleDocumentFile:
    android.content.Context mContext -> mContext
    android.net.Uri mUri -> mUri
    android.support.v4.provider.DocumentFile createFile(java.lang.String,java.lang.String) -> createFile
    android.support.v4.provider.DocumentFile createDirectory(java.lang.String) -> createDirectory
    android.net.Uri getUri() -> getUri
    java.lang.String getName() -> getName
    java.lang.String getType() -> getType
    boolean isDirectory() -> isDirectory
    boolean isFile() -> isFile
    long lastModified() -> lastModified
    long length() -> length
    boolean canRead() -> canRead
    boolean canWrite() -> canWrite
    boolean delete() -> delete
    boolean exists() -> exists
    android.support.v4.provider.DocumentFile[] listFiles() -> listFiles
    boolean renameTo(java.lang.String) -> renameTo
android.support.v4.provider.TreeDocumentFile -> android.support.v4.provider.TreeDocumentFile:
    android.content.Context mContext -> mContext
    android.net.Uri mUri -> mUri
    android.support.v4.provider.DocumentFile createFile(java.lang.String,java.lang.String) -> createFile
    android.support.v4.provider.DocumentFile createDirectory(java.lang.String) -> createDirectory
    android.net.Uri getUri() -> getUri
    java.lang.String getName() -> getName
    java.lang.String getType() -> getType
    boolean isDirectory() -> isDirectory
    boolean isFile() -> isFile
    long lastModified() -> lastModified
    long length() -> length
    boolean canRead() -> canRead
    boolean canWrite() -> canWrite
    boolean delete() -> delete
    boolean exists() -> exists
    android.support.v4.provider.DocumentFile[] listFiles() -> listFiles
    boolean renameTo(java.lang.String) -> renameTo
android.support.v4.speech.tts.TextToSpeechICS -> android.support.v4.speech.tts.TextToSpeechICS:
    java.lang.String TAG -> TAG
    android.speech.tts.TextToSpeech construct(android.content.Context,android.speech.tts.TextToSpeech$OnInitListener,java.lang.String) -> construct
android.support.v4.speech.tts.TextToSpeechICSMR1 -> android.support.v4.speech.tts.TextToSpeechICSMR1:
    java.lang.String KEY_FEATURE_EMBEDDED_SYNTHESIS -> KEY_FEATURE_EMBEDDED_SYNTHESIS
    java.lang.String KEY_FEATURE_NETWORK_SYNTHESIS -> KEY_FEATURE_NETWORK_SYNTHESIS
    java.util.Set getFeatures(android.speech.tts.TextToSpeech,java.util.Locale) -> getFeatures
    void setUtteranceProgressListener(android.speech.tts.TextToSpeech,android.support.v4.speech.tts.TextToSpeechICSMR1$UtteranceProgressListenerICSMR1) -> setUtteranceProgressListener
android.support.v4.speech.tts.TextToSpeechICSMR1$1 -> android.support.v4.speech.tts.TextToSpeechICSMR1$1:
    android.support.v4.speech.tts.TextToSpeechICSMR1$UtteranceProgressListenerICSMR1 val$listener -> val$listener
    void onStart(java.lang.String) -> onStart
    void onError(java.lang.String) -> onError
    void onDone(java.lang.String) -> onDone
android.support.v4.speech.tts.TextToSpeechICSMR1$2 -> android.support.v4.speech.tts.TextToSpeechICSMR1$2:
    android.support.v4.speech.tts.TextToSpeechICSMR1$UtteranceProgressListenerICSMR1 val$listener -> val$listener
    void onUtteranceCompleted(java.lang.String) -> onUtteranceCompleted
android.support.v4.speech.tts.TextToSpeechICSMR1$UtteranceProgressListenerICSMR1 -> android.support.v4.speech.tts.TextToSpeechICSMR1$UtteranceProgressListenerICSMR1:
    void onDone(java.lang.String) -> onDone
    void onError(java.lang.String) -> onError
    void onStart(java.lang.String) -> onStart
android.support.v4.text.BidiFormatter -> android.support.v4.text.BidiFormatter:
    android.support.v4.text.TextDirectionHeuristicCompat DEFAULT_TEXT_DIRECTION_HEURISTIC -> DEFAULT_TEXT_DIRECTION_HEURISTIC
    char LRE -> LRE
    char RLE -> RLE
    char PDF -> PDF
    char LRM -> LRM
    char RLM -> RLM
    java.lang.String LRM_STRING -> LRM_STRING
    java.lang.String RLM_STRING -> RLM_STRING
    java.lang.String EMPTY_STRING -> EMPTY_STRING
    int FLAG_STEREO_RESET -> FLAG_STEREO_RESET
    int DEFAULT_FLAGS -> DEFAULT_FLAGS
    android.support.v4.text.BidiFormatter DEFAULT_LTR_INSTANCE -> DEFAULT_LTR_INSTANCE
    android.support.v4.text.BidiFormatter DEFAULT_RTL_INSTANCE -> DEFAULT_RTL_INSTANCE
    boolean mIsRtlContext -> mIsRtlContext
    int mFlags -> mFlags
    android.support.v4.text.TextDirectionHeuristicCompat mDefaultTextDirectionHeuristicCompat -> mDefaultTextDirectionHeuristicCompat
    int DIR_LTR -> DIR_LTR
    int DIR_UNKNOWN -> DIR_UNKNOWN
    int DIR_RTL -> DIR_RTL
    android.support.v4.text.BidiFormatter getInstance() -> getInstance
    android.support.v4.text.BidiFormatter getInstance(boolean) -> getInstance
    android.support.v4.text.BidiFormatter getInstance(java.util.Locale) -> getInstance
    boolean isRtlContext() -> isRtlContext
    boolean getStereoReset() -> getStereoReset
    java.lang.String markAfter(java.lang.String,android.support.v4.text.TextDirectionHeuristicCompat) -> markAfter
    java.lang.String markBefore(java.lang.String,android.support.v4.text.TextDirectionHeuristicCompat) -> markBefore
    boolean isRtl(java.lang.String) -> isRtl
    java.lang.String unicodeWrap(java.lang.String,android.support.v4.text.TextDirectionHeuristicCompat,boolean) -> unicodeWrap
    java.lang.String unicodeWrap(java.lang.String,android.support.v4.text.TextDirectionHeuristicCompat) -> unicodeWrap
    java.lang.String unicodeWrap(java.lang.String,boolean) -> unicodeWrap
    java.lang.String unicodeWrap(java.lang.String) -> unicodeWrap
    boolean isRtlLocale(java.util.Locale) -> isRtlLocale
    int getExitDir(java.lang.String) -> getExitDir
    int getEntryDir(java.lang.String) -> getEntryDir
    boolean access$000(java.util.Locale) -> access$000
    android.support.v4.text.TextDirectionHeuristicCompat access$100() -> access$100
    android.support.v4.text.BidiFormatter access$200() -> access$200
    android.support.v4.text.BidiFormatter access$300() -> access$300
android.support.v4.text.BidiFormatter$1 -> android.support.v4.text.BidiFormatter$1:
android.support.v4.text.BidiFormatter$Builder -> android.support.v4.text.BidiFormatter$Builder:
    boolean mIsRtlContext -> mIsRtlContext
    int mFlags -> mFlags
    android.support.v4.text.TextDirectionHeuristicCompat mTextDirectionHeuristicCompat -> mTextDirectionHeuristicCompat
    void initialize(boolean) -> initialize
    android.support.v4.text.BidiFormatter$Builder stereoReset(boolean) -> stereoReset
    android.support.v4.text.BidiFormatter$Builder setTextDirectionHeuristic(android.support.v4.text.TextDirectionHeuristicCompat) -> setTextDirectionHeuristic
    android.support.v4.text.BidiFormatter getDefaultInstanceFromContext(boolean) -> getDefaultInstanceFromContext
    android.support.v4.text.BidiFormatter build() -> build
android.support.v4.text.BidiFormatter$DirectionalityEstimator -> android.support.v4.text.BidiFormatter$DirectionalityEstimator:
    int DIR_TYPE_CACHE_SIZE -> DIR_TYPE_CACHE_SIZE
    byte[] DIR_TYPE_CACHE -> DIR_TYPE_CACHE
    java.lang.String text -> text
    boolean isHtml -> isHtml
    int length -> length
    int charIndex -> charIndex
    char lastChar -> lastChar
    int getEntryDir() -> getEntryDir
    int getExitDir() -> getExitDir
    byte getCachedDirectionality(char) -> getCachedDirectionality
    byte dirTypeForward() -> dirTypeForward
    byte dirTypeBackward() -> dirTypeBackward
    byte skipTagForward() -> skipTagForward
    byte skipTagBackward() -> skipTagBackward
    byte skipEntityForward() -> skipEntityForward
    byte skipEntityBackward() -> skipEntityBackward
android.support.v4.text.ICUCompat -> android.support.v4.text.ICUCompat:
    android.support.v4.text.ICUCompat$ICUCompatImpl IMPL -> IMPL
    java.lang.String getScript(java.lang.String) -> getScript
    java.lang.String addLikelySubtags(java.lang.String) -> addLikelySubtags
android.support.v4.text.ICUCompat$ICUCompatImpl -> android.support.v4.text.ICUCompat$ICUCompatImpl:
    java.lang.String getScript(java.lang.String) -> getScript
    java.lang.String addLikelySubtags(java.lang.String) -> addLikelySubtags
android.support.v4.text.ICUCompat$ICUCompatImplBase -> android.support.v4.text.ICUCompat$ICUCompatImplBase:
    java.lang.String getScript(java.lang.String) -> getScript
    java.lang.String addLikelySubtags(java.lang.String) -> addLikelySubtags
android.support.v4.text.ICUCompat$ICUCompatImplIcs -> android.support.v4.text.ICUCompat$ICUCompatImplIcs:
    java.lang.String getScript(java.lang.String) -> getScript
    java.lang.String addLikelySubtags(java.lang.String) -> addLikelySubtags
android.support.v4.text.ICUCompatIcs -> android.support.v4.text.ICUCompatIcs:
    java.lang.String TAG -> TAG
    java.lang.reflect.Method sGetScriptMethod -> sGetScriptMethod
    java.lang.reflect.Method sAddLikelySubtagsMethod -> sAddLikelySubtagsMethod
    java.lang.String getScript(java.lang.String) -> getScript
    java.lang.String addLikelySubtags(java.lang.String) -> addLikelySubtags
android.support.v4.text.TextDirectionHeuristicCompat -> android.support.v4.text.TextDirectionHeuristicCompat:
    boolean isRtl(char[],int,int) -> isRtl
    boolean isRtl(java.lang.CharSequence,int,int) -> isRtl
android.support.v4.text.TextDirectionHeuristicsCompat -> android.support.v4.text.TextDirectionHeuristicsCompat:
    android.support.v4.text.TextDirectionHeuristicCompat LTR -> LTR
    android.support.v4.text.TextDirectionHeuristicCompat RTL -> RTL
    android.support.v4.text.TextDirectionHeuristicCompat FIRSTSTRONG_LTR -> FIRSTSTRONG_LTR
    android.support.v4.text.TextDirectionHeuristicCompat FIRSTSTRONG_RTL -> FIRSTSTRONG_RTL
    android.support.v4.text.TextDirectionHeuristicCompat ANYRTL_LTR -> ANYRTL_LTR
    android.support.v4.text.TextDirectionHeuristicCompat LOCALE -> LOCALE
    int STATE_TRUE -> STATE_TRUE
    int STATE_FALSE -> STATE_FALSE
    int STATE_UNKNOWN -> STATE_UNKNOWN
    int isRtlText(int) -> isRtlText
    int isRtlTextOrFormat(int) -> isRtlTextOrFormat
    int access$100(int) -> access$100
    int access$200(int) -> access$200
android.support.v4.text.TextDirectionHeuristicsCompat$1 -> android.support.v4.text.TextDirectionHeuristicsCompat$1:
android.support.v4.text.TextDirectionHeuristicsCompat$AnyStrong -> android.support.v4.text.TextDirectionHeuristicsCompat$AnyStrong:
    boolean mLookForRtl -> mLookForRtl
    android.support.v4.text.TextDirectionHeuristicsCompat$AnyStrong INSTANCE_RTL -> INSTANCE_RTL
    android.support.v4.text.TextDirectionHeuristicsCompat$AnyStrong INSTANCE_LTR -> INSTANCE_LTR
    int checkRtl(java.lang.CharSequence,int,int) -> checkRtl
android.support.v4.text.TextDirectionHeuristicsCompat$FirstStrong -> android.support.v4.text.TextDirectionHeuristicsCompat$FirstStrong:
    android.support.v4.text.TextDirectionHeuristicsCompat$FirstStrong INSTANCE -> INSTANCE
    int checkRtl(java.lang.CharSequence,int,int) -> checkRtl
android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionAlgorithm -> android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionAlgorithm:
    int checkRtl(java.lang.CharSequence,int,int) -> checkRtl
android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicImpl -> android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicImpl:
    android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionAlgorithm mAlgorithm -> mAlgorithm
    boolean defaultIsRtl() -> defaultIsRtl
    boolean isRtl(char[],int,int) -> isRtl
    boolean isRtl(java.lang.CharSequence,int,int) -> isRtl
    boolean doCheck(java.lang.CharSequence,int,int) -> doCheck
android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicInternal -> android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicInternal:
    boolean mDefaultIsRtl -> mDefaultIsRtl
    boolean defaultIsRtl() -> defaultIsRtl
android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicLocale -> android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicLocale:
    android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicLocale INSTANCE -> INSTANCE
    boolean defaultIsRtl() -> defaultIsRtl
android.support.v4.text.TextUtilsCompat -> android.support.v4.text.TextUtilsCompat:
    java.util.Locale ROOT -> ROOT
    java.lang.String ARAB_SCRIPT_SUBTAG -> ARAB_SCRIPT_SUBTAG
    java.lang.String HEBR_SCRIPT_SUBTAG -> HEBR_SCRIPT_SUBTAG
    java.lang.String htmlEncode(java.lang.String) -> htmlEncode
    int getLayoutDirectionFromLocale(java.util.Locale) -> getLayoutDirectionFromLocale
    int getLayoutDirectionFromFirstChar(java.util.Locale) -> getLayoutDirectionFromFirstChar
android.support.v4.util.ArrayMap -> android.support.v4.util.ArrayMap:
    android.support.v4.util.MapCollections mCollections -> mCollections
    android.support.v4.util.MapCollections getCollection() -> getCollection
    boolean containsAll(java.util.Collection) -> containsAll
    void putAll(java.util.Map) -> putAll
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    java.util.Set entrySet() -> entrySet
    java.util.Set keySet() -> keySet
    java.util.Collection values() -> values
android.support.v4.util.ArrayMap$1 -> android.support.v4.util.ArrayMap$1:
    android.support.v4.util.ArrayMap this$0 -> this$0
    int colGetSize() -> colGetSize
    java.lang.Object colGetEntry(int,int) -> colGetEntry
    int colIndexOfKey(java.lang.Object) -> colIndexOfKey
    int colIndexOfValue(java.lang.Object) -> colIndexOfValue
    java.util.Map colGetMap() -> colGetMap
    void colPut(java.lang.Object,java.lang.Object) -> colPut
    java.lang.Object colSetValue(int,java.lang.Object) -> colSetValue
    void colRemoveAt(int) -> colRemoveAt
    void colClear() -> colClear
android.support.v4.util.AtomicFile -> android.support.v4.util.AtomicFile:
    java.io.File mBaseName -> mBaseName
    java.io.File mBackupName -> mBackupName
    java.io.File getBaseFile() -> getBaseFile
    void delete() -> delete
    java.io.FileOutputStream startWrite() -> startWrite
    void finishWrite(java.io.FileOutputStream) -> finishWrite
    void failWrite(java.io.FileOutputStream) -> failWrite
    java.io.FileInputStream openRead() -> openRead
    byte[] readFully() -> readFully
    boolean sync(java.io.FileOutputStream) -> sync
android.support.v4.util.CircularArray -> android.support.v4.util.CircularArray:
    java.lang.Object[] mElements -> mElements
    int mHead -> mHead
    int mTail -> mTail
    int mCapacityBitmask -> mCapacityBitmask
    void doubleCapacity() -> doubleCapacity
    void addFirst(java.lang.Object) -> addFirst
    void addLast(java.lang.Object) -> addLast
    java.lang.Object popFirst() -> popFirst
    java.lang.Object popLast() -> popLast
    java.lang.Object getFirst() -> getFirst
    java.lang.Object getLast() -> getLast
    java.lang.Object get(int) -> get
    int size() -> size
    boolean isEmpty() -> isEmpty
android.support.v4.util.ContainerHelpers -> android.support.v4.util.ContainerHelpers:
    int[] EMPTY_INTS -> EMPTY_INTS
    long[] EMPTY_LONGS -> EMPTY_LONGS
    java.lang.Object[] EMPTY_OBJECTS -> EMPTY_OBJECTS
    int idealIntArraySize(int) -> idealIntArraySize
    int idealLongArraySize(int) -> idealLongArraySize
    int idealByteArraySize(int) -> idealByteArraySize
    boolean equal(java.lang.Object,java.lang.Object) -> equal
    int binarySearch(int[],int,int) -> binarySearch
    int binarySearch(long[],int,long) -> binarySearch
android.support.v4.util.DebugUtils -> android.support.v4.util.DebugUtils:
    void buildShortClassTag(java.lang.Object,java.lang.StringBuilder) -> buildShortClassTag
android.support.v4.util.LogWriter -> android.support.v4.util.LogWriter:
    java.lang.String mTag -> mTag
    java.lang.StringBuilder mBuilder -> mBuilder
    void close() -> close
    void flush() -> flush
    void write(char[],int,int) -> write
    void flushBuilder() -> flushBuilder
android.support.v4.util.LongSparseArray -> android.support.v4.util.LongSparseArray:
    java.lang.Object DELETED -> DELETED
    boolean mGarbage -> mGarbage
    long[] mKeys -> mKeys
    java.lang.Object[] mValues -> mValues
    int mSize -> mSize
    android.support.v4.util.LongSparseArray clone() -> clone
    java.lang.Object get(long) -> get
    java.lang.Object get(long,java.lang.Object) -> get
    void delete(long) -> delete
    void remove(long) -> remove
    void removeAt(int) -> removeAt
    void gc() -> gc
    void put(long,java.lang.Object) -> put
    int size() -> size
    long keyAt(int) -> keyAt
    java.lang.Object valueAt(int) -> valueAt
    void setValueAt(int,java.lang.Object) -> setValueAt
    int indexOfKey(long) -> indexOfKey
    int indexOfValue(java.lang.Object) -> indexOfValue
    void clear() -> clear
    void append(long,java.lang.Object) -> append
    java.lang.String toString() -> toString
    java.lang.Object clone() -> clone
android.support.v4.util.LruCache -> android.support.v4.util.LruCache:
    java.util.LinkedHashMap map -> map
    int size -> size
    int maxSize -> maxSize
    int putCount -> putCount
    int createCount -> createCount
    int evictionCount -> evictionCount
    int hitCount -> hitCount
    int missCount -> missCount
    void resize(int) -> resize
    java.lang.Object get(java.lang.Object) -> get
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    void trimToSize(int) -> trimToSize
    java.lang.Object remove(java.lang.Object) -> remove
    void entryRemoved(boolean,java.lang.Object,java.lang.Object,java.lang.Object) -> entryRemoved
    java.lang.Object create(java.lang.Object) -> create
    int safeSizeOf(java.lang.Object,java.lang.Object) -> safeSizeOf
    int sizeOf(java.lang.Object,java.lang.Object) -> sizeOf
    void evictAll() -> evictAll
    int size() -> size
    int maxSize() -> maxSize
    int hitCount() -> hitCount
    int missCount() -> missCount
    int createCount() -> createCount
    int putCount() -> putCount
    int evictionCount() -> evictionCount
    java.util.Map snapshot() -> snapshot
    java.lang.String toString() -> toString
android.support.v4.util.MapCollections -> android.support.v4.util.MapCollections:
    android.support.v4.util.MapCollections$EntrySet mEntrySet -> mEntrySet
    android.support.v4.util.MapCollections$KeySet mKeySet -> mKeySet
    android.support.v4.util.MapCollections$ValuesCollection mValues -> mValues
    boolean containsAllHelper(java.util.Map,java.util.Collection) -> containsAllHelper
    boolean removeAllHelper(java.util.Map,java.util.Collection) -> removeAllHelper
    boolean retainAllHelper(java.util.Map,java.util.Collection) -> retainAllHelper
    java.lang.Object[] toArrayHelper(int) -> toArrayHelper
    java.lang.Object[] toArrayHelper(java.lang.Object[],int) -> toArrayHelper
    boolean equalsSetHelper(java.util.Set,java.lang.Object) -> equalsSetHelper
    java.util.Set getEntrySet() -> getEntrySet
    java.util.Set getKeySet() -> getKeySet
    java.util.Collection getValues() -> getValues
    int colGetSize() -> colGetSize
    java.lang.Object colGetEntry(int,int) -> colGetEntry
    int colIndexOfKey(java.lang.Object) -> colIndexOfKey
    int colIndexOfValue(java.lang.Object) -> colIndexOfValue
    java.util.Map colGetMap() -> colGetMap
    void colPut(java.lang.Object,java.lang.Object) -> colPut
    java.lang.Object colSetValue(int,java.lang.Object) -> colSetValue
    void colRemoveAt(int) -> colRemoveAt
    void colClear() -> colClear
android.support.v4.util.MapCollections$ArrayIterator -> android.support.v4.util.MapCollections$ArrayIterator:
    int mOffset -> mOffset
    int mSize -> mSize
    int mIndex -> mIndex
    boolean mCanRemove -> mCanRemove
    android.support.v4.util.MapCollections this$0 -> this$0
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    void remove() -> remove
android.support.v4.util.MapCollections$EntrySet -> android.support.v4.util.MapCollections$EntrySet:
    android.support.v4.util.MapCollections this$0 -> this$0
    boolean add(java.util.Map$Entry) -> add
    boolean addAll(java.util.Collection) -> addAll
    void clear() -> clear
    boolean contains(java.lang.Object) -> contains
    boolean containsAll(java.util.Collection) -> containsAll
    boolean isEmpty() -> isEmpty
    java.util.Iterator iterator() -> iterator
    boolean remove(java.lang.Object) -> remove
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    int size() -> size
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    boolean add(java.lang.Object) -> add
android.support.v4.util.MapCollections$KeySet -> android.support.v4.util.MapCollections$KeySet:
    android.support.v4.util.MapCollections this$0 -> this$0
    boolean add(java.lang.Object) -> add
    boolean addAll(java.util.Collection) -> addAll
    void clear() -> clear
    boolean contains(java.lang.Object) -> contains
    boolean containsAll(java.util.Collection) -> containsAll
    boolean isEmpty() -> isEmpty
    java.util.Iterator iterator() -> iterator
    boolean remove(java.lang.Object) -> remove
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    int size() -> size
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
android.support.v4.util.MapCollections$MapIterator -> android.support.v4.util.MapCollections$MapIterator:
    int mEnd -> mEnd
    int mIndex -> mIndex
    boolean mEntryValid -> mEntryValid
    android.support.v4.util.MapCollections this$0 -> this$0
    boolean hasNext() -> hasNext
    java.util.Map$Entry next() -> next
    void remove() -> remove
    java.lang.Object getKey() -> getKey
    java.lang.Object getValue() -> getValue
    java.lang.Object setValue(java.lang.Object) -> setValue
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    java.lang.Object next() -> next
android.support.v4.util.MapCollections$ValuesCollection -> android.support.v4.util.MapCollections$ValuesCollection:
    android.support.v4.util.MapCollections this$0 -> this$0
    boolean add(java.lang.Object) -> add
    boolean addAll(java.util.Collection) -> addAll
    void clear() -> clear
    boolean contains(java.lang.Object) -> contains
    boolean containsAll(java.util.Collection) -> containsAll
    boolean isEmpty() -> isEmpty
    java.util.Iterator iterator() -> iterator
    boolean remove(java.lang.Object) -> remove
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    int size() -> size
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
android.support.v4.util.Pair -> android.support.v4.util.Pair:
    java.lang.Object first -> first
    java.lang.Object second -> second
    boolean equals(java.lang.Object) -> equals
    boolean objectsEqual(java.lang.Object,java.lang.Object) -> objectsEqual
    int hashCode() -> hashCode
    android.support.v4.util.Pair create(java.lang.Object,java.lang.Object) -> create
android.support.v4.util.Pools -> android.support.v4.util.Pools:
android.support.v4.util.Pools$Pool -> android.support.v4.util.Pools$Pool:
    java.lang.Object acquire() -> acquire
    boolean release(java.lang.Object) -> release
android.support.v4.util.Pools$SimplePool -> android.support.v4.util.Pools$SimplePool:
    java.lang.Object[] mPool -> mPool
    int mPoolSize -> mPoolSize
    java.lang.Object acquire() -> acquire
    boolean release(java.lang.Object) -> release
    boolean isInPool(java.lang.Object) -> isInPool
android.support.v4.util.Pools$SynchronizedPool -> android.support.v4.util.Pools$SynchronizedPool:
    java.lang.Object mLock -> mLock
    java.lang.Object acquire() -> acquire
    boolean release(java.lang.Object) -> release
android.support.v4.util.SimpleArrayMap -> android.support.v4.util.SimpleArrayMap:
    boolean DEBUG -> DEBUG
    java.lang.String TAG -> TAG
    int BASE_SIZE -> BASE_SIZE
    int CACHE_SIZE -> CACHE_SIZE
    java.lang.Object[] mBaseCache -> mBaseCache
    int mBaseCacheSize -> mBaseCacheSize
    java.lang.Object[] mTwiceBaseCache -> mTwiceBaseCache
    int mTwiceBaseCacheSize -> mTwiceBaseCacheSize
    int[] mHashes -> mHashes
    java.lang.Object[] mArray -> mArray
    int mSize -> mSize
    int indexOf(java.lang.Object,int) -> indexOf
    int indexOfNull() -> indexOfNull
    void allocArrays(int) -> allocArrays
    void freeArrays(int[],java.lang.Object[],int) -> freeArrays
    void clear() -> clear
    void ensureCapacity(int) -> ensureCapacity
    boolean containsKey(java.lang.Object) -> containsKey
    int indexOfKey(java.lang.Object) -> indexOfKey
    int indexOfValue(java.lang.Object) -> indexOfValue
    boolean containsValue(java.lang.Object) -> containsValue
    java.lang.Object get(java.lang.Object) -> get
    java.lang.Object keyAt(int) -> keyAt
    java.lang.Object valueAt(int) -> valueAt
    java.lang.Object setValueAt(int,java.lang.Object) -> setValueAt
    boolean isEmpty() -> isEmpty
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    void putAll(android.support.v4.util.SimpleArrayMap) -> putAll
    java.lang.Object remove(java.lang.Object) -> remove
    java.lang.Object removeAt(int) -> removeAt
    int size() -> size
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
android.support.v4.util.SparseArrayCompat -> android.support.v4.util.SparseArrayCompat:
    java.lang.Object DELETED -> DELETED
    boolean mGarbage -> mGarbage
    int[] mKeys -> mKeys
    java.lang.Object[] mValues -> mValues
    int mSize -> mSize
    android.support.v4.util.SparseArrayCompat clone() -> clone
    java.lang.Object get(int) -> get
    java.lang.Object get(int,java.lang.Object) -> get
    void delete(int) -> delete
    void remove(int) -> remove
    void removeAt(int) -> removeAt
    void removeAtRange(int,int) -> removeAtRange
    void gc() -> gc
    void put(int,java.lang.Object) -> put
    int size() -> size
    int keyAt(int) -> keyAt
    java.lang.Object valueAt(int) -> valueAt
    void setValueAt(int,java.lang.Object) -> setValueAt
    int indexOfKey(int) -> indexOfKey
    int indexOfValue(java.lang.Object) -> indexOfValue
    void clear() -> clear
    void append(int,java.lang.Object) -> append
    java.lang.String toString() -> toString
    java.lang.Object clone() -> clone
android.support.v4.util.TimeUtils -> android.support.v4.util.TimeUtils:
    int HUNDRED_DAY_FIELD_LEN -> HUNDRED_DAY_FIELD_LEN
    int SECONDS_PER_MINUTE -> SECONDS_PER_MINUTE
    int SECONDS_PER_HOUR -> SECONDS_PER_HOUR
    int SECONDS_PER_DAY -> SECONDS_PER_DAY
    java.lang.Object sFormatSync -> sFormatSync
    char[] sFormatStr -> sFormatStr
    int accumField(int,int,boolean,int) -> accumField
    int printField(char[],int,char,int,boolean,int) -> printField
    int formatDurationLocked(long,int) -> formatDurationLocked
    void formatDuration(long,java.lang.StringBuilder) -> formatDuration
    void formatDuration(long,java.io.PrintWriter,int) -> formatDuration
    void formatDuration(long,java.io.PrintWriter) -> formatDuration
    void formatDuration(long,long,java.io.PrintWriter) -> formatDuration
android.support.v4.view.AccessibilityDelegateCompat -> android.support.v4.view.AccessibilityDelegateCompat:
    android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateImpl IMPL -> IMPL
    java.lang.Object DEFAULT_DELEGATE -> DEFAULT_DELEGATE
    java.lang.Object mBridge -> mBridge
    java.lang.Object getBridge() -> getBridge
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl -> android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl:
    java.lang.Object newAccessiblityDelegateDefaultImpl() -> newAccessiblityDelegateDefaultImpl
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> newAccessiblityDelegateBridge
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl$1 -> android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl$1:
    android.support.v4.view.AccessibilityDelegateCompat val$compat -> val$compat
    android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl this$0 -> this$0
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateImpl -> android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateImpl:
    java.lang.Object newAccessiblityDelegateDefaultImpl() -> newAccessiblityDelegateDefaultImpl
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> newAccessiblityDelegateBridge
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl -> android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl:
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> newAccessiblityDelegateBridge
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl$1 -> android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl$1:
    android.support.v4.view.AccessibilityDelegateCompat val$compat -> val$compat
    android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl this$0 -> this$0
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
    java.lang.Object getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateStubImpl -> android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateStubImpl:
    java.lang.Object newAccessiblityDelegateDefaultImpl() -> newAccessiblityDelegateDefaultImpl
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> newAccessiblityDelegateBridge
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.AccessibilityDelegateCompatIcs -> android.support.v4.view.AccessibilityDelegateCompatIcs:
    java.lang.Object newAccessibilityDelegateDefaultImpl() -> newAccessibilityDelegateDefaultImpl
    java.lang.Object newAccessibilityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge) -> newAccessibilityDelegateBridge
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,java.lang.Object) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
android.support.v4.view.AccessibilityDelegateCompatIcs$1 -> android.support.v4.view.AccessibilityDelegateCompatIcs$1:
    android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge val$bridge -> val$bridge
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge -> android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge:
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
android.support.v4.view.AccessibilityDelegateCompatJellyBean -> android.support.v4.view.AccessibilityDelegateCompatJellyBean:
    java.lang.Object newAccessibilityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean) -> newAccessibilityDelegateBridge
    java.lang.Object getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.AccessibilityDelegateCompatJellyBean$1 -> android.support.v4.view.AccessibilityDelegateCompatJellyBean$1:
    android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean val$bridge -> val$bridge
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
    android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean -> android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean:
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
    java.lang.Object getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.ActionProvider -> android.support.v4.view.ActionProvider:
    java.lang.String TAG -> TAG
    android.content.Context mContext -> mContext
    android.support.v4.view.ActionProvider$SubUiVisibilityListener mSubUiVisibilityListener -> mSubUiVisibilityListener
    android.support.v4.view.ActionProvider$VisibilityListener mVisibilityListener -> mVisibilityListener
    android.content.Context getContext() -> getContext
    android.view.View onCreateActionView() -> onCreateActionView
    android.view.View onCreateActionView(android.view.MenuItem) -> onCreateActionView
    boolean overridesItemVisibility() -> overridesItemVisibility
    boolean isVisible() -> isVisible
    void refreshVisibility() -> refreshVisibility
    boolean onPerformDefaultAction() -> onPerformDefaultAction
    boolean hasSubMenu() -> hasSubMenu
    void onPrepareSubMenu(android.view.SubMenu) -> onPrepareSubMenu
    void subUiVisibilityChanged(boolean) -> subUiVisibilityChanged
    void setSubUiVisibilityListener(android.support.v4.view.ActionProvider$SubUiVisibilityListener) -> setSubUiVisibilityListener
    void setVisibilityListener(android.support.v4.view.ActionProvider$VisibilityListener) -> setVisibilityListener
android.support.v4.view.ActionProvider$SubUiVisibilityListener -> android.support.v4.view.ActionProvider$SubUiVisibilityListener:
    void onSubUiVisibilityChanged(boolean) -> onSubUiVisibilityChanged
android.support.v4.view.ActionProvider$VisibilityListener -> android.support.v4.view.ActionProvider$VisibilityListener:
    void onActionProviderVisibilityChanged(boolean) -> onActionProviderVisibilityChanged
android.support.v4.view.GestureDetectorCompat -> android.support.v4.view.GestureDetectorCompat:
    android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImpl mImpl -> mImpl
    boolean isLongpressEnabled() -> isLongpressEnabled
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void setIsLongpressEnabled(boolean) -> setIsLongpressEnabled
    void setOnDoubleTapListener(android.view.GestureDetector$OnDoubleTapListener) -> setOnDoubleTapListener
android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImpl -> android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImpl:
    boolean isLongpressEnabled() -> isLongpressEnabled
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void setIsLongpressEnabled(boolean) -> setIsLongpressEnabled
    void setOnDoubleTapListener(android.view.GestureDetector$OnDoubleTapListener) -> setOnDoubleTapListener
android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase -> android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase:
    int mTouchSlopSquare -> mTouchSlopSquare
    int mDoubleTapSlopSquare -> mDoubleTapSlopSquare
    int mMinimumFlingVelocity -> mMinimumFlingVelocity
    int mMaximumFlingVelocity -> mMaximumFlingVelocity
    int LONGPRESS_TIMEOUT -> LONGPRESS_TIMEOUT
    int TAP_TIMEOUT -> TAP_TIMEOUT
    int DOUBLE_TAP_TIMEOUT -> DOUBLE_TAP_TIMEOUT
    int SHOW_PRESS -> SHOW_PRESS
    int LONG_PRESS -> LONG_PRESS
    int TAP -> TAP
    android.os.Handler mHandler -> mHandler
    android.view.GestureDetector$OnGestureListener mListener -> mListener
    android.view.GestureDetector$OnDoubleTapListener mDoubleTapListener -> mDoubleTapListener
    boolean mStillDown -> mStillDown
    boolean mDeferConfirmSingleTap -> mDeferConfirmSingleTap
    boolean mInLongPress -> mInLongPress
    boolean mAlwaysInTapRegion -> mAlwaysInTapRegion
    boolean mAlwaysInBiggerTapRegion -> mAlwaysInBiggerTapRegion
    android.view.MotionEvent mCurrentDownEvent -> mCurrentDownEvent
    android.view.MotionEvent mPreviousUpEvent -> mPreviousUpEvent
    boolean mIsDoubleTapping -> mIsDoubleTapping
    float mLastFocusX -> mLastFocusX
    float mLastFocusY -> mLastFocusY
    float mDownFocusX -> mDownFocusX
    float mDownFocusY -> mDownFocusY
    boolean mIsLongpressEnabled -> mIsLongpressEnabled
    android.view.VelocityTracker mVelocityTracker -> mVelocityTracker
    void init(android.content.Context) -> init
    void setOnDoubleTapListener(android.view.GestureDetector$OnDoubleTapListener) -> setOnDoubleTapListener
    void setIsLongpressEnabled(boolean) -> setIsLongpressEnabled
    boolean isLongpressEnabled() -> isLongpressEnabled
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void cancel() -> cancel
    void cancelTaps() -> cancelTaps
    boolean isConsideredDoubleTap(android.view.MotionEvent,android.view.MotionEvent,android.view.MotionEvent) -> isConsideredDoubleTap
    void dispatchLongPress() -> dispatchLongPress
    android.view.MotionEvent access$000(android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase) -> access$000
    android.view.GestureDetector$OnGestureListener access$100(android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase) -> access$100
    void access$200(android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase) -> access$200
    android.view.GestureDetector$OnDoubleTapListener access$300(android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase) -> access$300
    boolean access$400(android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase) -> access$400
    boolean access$502(android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase,boolean) -> access$502
android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase$GestureHandler -> android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase$GestureHandler:
    android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase this$0 -> this$0
    void handleMessage(android.os.Message) -> handleMessage
android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplJellybeanMr2 -> android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplJellybeanMr2:
    android.view.GestureDetector mDetector -> mDetector
    boolean isLongpressEnabled() -> isLongpressEnabled
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void setIsLongpressEnabled(boolean) -> setIsLongpressEnabled
    void setOnDoubleTapListener(android.view.GestureDetector$OnDoubleTapListener) -> setOnDoubleTapListener
android.support.v4.view.GravityCompat -> android.support.v4.view.GravityCompat:
    android.support.v4.view.GravityCompat$GravityCompatImpl IMPL -> IMPL
    int RELATIVE_LAYOUT_DIRECTION -> RELATIVE_LAYOUT_DIRECTION
    int START -> START
    int END -> END
    int RELATIVE_HORIZONTAL_GRAVITY_MASK -> RELATIVE_HORIZONTAL_GRAVITY_MASK
    void apply(int,int,int,android.graphics.Rect,android.graphics.Rect,int) -> apply
    void apply(int,int,int,android.graphics.Rect,int,int,android.graphics.Rect,int) -> apply
    void applyDisplay(int,android.graphics.Rect,android.graphics.Rect,int) -> applyDisplay
    int getAbsoluteGravity(int,int) -> getAbsoluteGravity
android.support.v4.view.GravityCompat$GravityCompatImpl -> android.support.v4.view.GravityCompat$GravityCompatImpl:
    int getAbsoluteGravity(int,int) -> getAbsoluteGravity
    void apply(int,int,int,android.graphics.Rect,android.graphics.Rect,int) -> apply
    void apply(int,int,int,android.graphics.Rect,int,int,android.graphics.Rect,int) -> apply
    void applyDisplay(int,android.graphics.Rect,android.graphics.Rect,int) -> applyDisplay
android.support.v4.view.GravityCompat$GravityCompatImplBase -> android.support.v4.view.GravityCompat$GravityCompatImplBase:
    int getAbsoluteGravity(int,int) -> getAbsoluteGravity
    void apply(int,int,int,android.graphics.Rect,android.graphics.Rect,int) -> apply
    void apply(int,int,int,android.graphics.Rect,int,int,android.graphics.Rect,int) -> apply
    void applyDisplay(int,android.graphics.Rect,android.graphics.Rect,int) -> applyDisplay
android.support.v4.view.GravityCompat$GravityCompatImplJellybeanMr1 -> android.support.v4.view.GravityCompat$GravityCompatImplJellybeanMr1:
    int getAbsoluteGravity(int,int) -> getAbsoluteGravity
    void apply(int,int,int,android.graphics.Rect,android.graphics.Rect,int) -> apply
    void apply(int,int,int,android.graphics.Rect,int,int,android.graphics.Rect,int) -> apply
    void applyDisplay(int,android.graphics.Rect,android.graphics.Rect,int) -> applyDisplay
android.support.v4.view.GravityCompatJellybeanMr1 -> android.support.v4.view.GravityCompatJellybeanMr1:
    int getAbsoluteGravity(int,int) -> getAbsoluteGravity
    void apply(int,int,int,android.graphics.Rect,android.graphics.Rect,int) -> apply
    void apply(int,int,int,android.graphics.Rect,int,int,android.graphics.Rect,int) -> apply
    void applyDisplay(int,android.graphics.Rect,android.graphics.Rect,int) -> applyDisplay
android.support.v4.view.KeyEventCompat -> android.support.v4.view.KeyEventCompat:
    android.support.v4.view.KeyEventCompat$KeyEventVersionImpl IMPL -> IMPL
    int normalizeMetaState(int) -> normalizeMetaState
    boolean metaStateHasModifiers(int,int) -> metaStateHasModifiers
    boolean metaStateHasNoModifiers(int) -> metaStateHasNoModifiers
    boolean hasModifiers(android.view.KeyEvent,int) -> hasModifiers
    boolean hasNoModifiers(android.view.KeyEvent) -> hasNoModifiers
    void startTracking(android.view.KeyEvent) -> startTracking
    boolean isTracking(android.view.KeyEvent) -> isTracking
    java.lang.Object getKeyDispatcherState(android.view.View) -> getKeyDispatcherState
    boolean dispatch(android.view.KeyEvent,android.view.KeyEvent$Callback,java.lang.Object,java.lang.Object) -> dispatch
android.support.v4.view.KeyEventCompat$BaseKeyEventVersionImpl -> android.support.v4.view.KeyEventCompat$BaseKeyEventVersionImpl:
    int META_MODIFIER_MASK -> META_MODIFIER_MASK
    int META_ALL_MASK -> META_ALL_MASK
    int metaStateFilterDirectionalModifiers(int,int,int,int,int) -> metaStateFilterDirectionalModifiers
    int normalizeMetaState(int) -> normalizeMetaState
    boolean metaStateHasModifiers(int,int) -> metaStateHasModifiers
    boolean metaStateHasNoModifiers(int) -> metaStateHasNoModifiers
    void startTracking(android.view.KeyEvent) -> startTracking
    boolean isTracking(android.view.KeyEvent) -> isTracking
    java.lang.Object getKeyDispatcherState(android.view.View) -> getKeyDispatcherState
    boolean dispatch(android.view.KeyEvent,android.view.KeyEvent$Callback,java.lang.Object,java.lang.Object) -> dispatch
android.support.v4.view.KeyEventCompat$EclairKeyEventVersionImpl -> android.support.v4.view.KeyEventCompat$EclairKeyEventVersionImpl:
    void startTracking(android.view.KeyEvent) -> startTracking
    boolean isTracking(android.view.KeyEvent) -> isTracking
    java.lang.Object getKeyDispatcherState(android.view.View) -> getKeyDispatcherState
    boolean dispatch(android.view.KeyEvent,android.view.KeyEvent$Callback,java.lang.Object,java.lang.Object) -> dispatch
android.support.v4.view.KeyEventCompat$HoneycombKeyEventVersionImpl -> android.support.v4.view.KeyEventCompat$HoneycombKeyEventVersionImpl:
    int normalizeMetaState(int) -> normalizeMetaState
    boolean metaStateHasModifiers(int,int) -> metaStateHasModifiers
    boolean metaStateHasNoModifiers(int) -> metaStateHasNoModifiers
android.support.v4.view.KeyEventCompat$KeyEventVersionImpl -> android.support.v4.view.KeyEventCompat$KeyEventVersionImpl:
    int normalizeMetaState(int) -> normalizeMetaState
    boolean metaStateHasModifiers(int,int) -> metaStateHasModifiers
    boolean metaStateHasNoModifiers(int) -> metaStateHasNoModifiers
    void startTracking(android.view.KeyEvent) -> startTracking
    boolean isTracking(android.view.KeyEvent) -> isTracking
    java.lang.Object getKeyDispatcherState(android.view.View) -> getKeyDispatcherState
    boolean dispatch(android.view.KeyEvent,android.view.KeyEvent$Callback,java.lang.Object,java.lang.Object) -> dispatch
android.support.v4.view.KeyEventCompatEclair -> android.support.v4.view.KeyEventCompatEclair:
    java.lang.Object getKeyDispatcherState(android.view.View) -> getKeyDispatcherState
    boolean dispatch(android.view.KeyEvent,android.view.KeyEvent$Callback,java.lang.Object,java.lang.Object) -> dispatch
    void startTracking(android.view.KeyEvent) -> startTracking
    boolean isTracking(android.view.KeyEvent) -> isTracking
android.support.v4.view.KeyEventCompatHoneycomb -> android.support.v4.view.KeyEventCompatHoneycomb:
    int normalizeMetaState(int) -> normalizeMetaState
    boolean metaStateHasModifiers(int,int) -> metaStateHasModifiers
    boolean metaStateHasNoModifiers(int) -> metaStateHasNoModifiers
android.support.v4.view.MarginLayoutParamsCompat -> android.support.v4.view.MarginLayoutParamsCompat:
    android.support.v4.view.MarginLayoutParamsCompat$MarginLayoutParamsCompatImpl IMPL -> IMPL
    int getMarginStart(android.view.ViewGroup$MarginLayoutParams) -> getMarginStart
    int getMarginEnd(android.view.ViewGroup$MarginLayoutParams) -> getMarginEnd
    void setMarginStart(android.view.ViewGroup$MarginLayoutParams,int) -> setMarginStart
    void setMarginEnd(android.view.ViewGroup$MarginLayoutParams,int) -> setMarginEnd
    boolean isMarginRelative(android.view.ViewGroup$MarginLayoutParams) -> isMarginRelative
    int getLayoutDirection(android.view.ViewGroup$MarginLayoutParams) -> getLayoutDirection
    void setLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int) -> setLayoutDirection
    void resolveLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int) -> resolveLayoutDirection
android.support.v4.view.MarginLayoutParamsCompat$MarginLayoutParamsCompatImpl -> android.support.v4.view.MarginLayoutParamsCompat$MarginLayoutParamsCompatImpl:
    int getMarginStart(android.view.ViewGroup$MarginLayoutParams) -> getMarginStart
    int getMarginEnd(android.view.ViewGroup$MarginLayoutParams) -> getMarginEnd
    void setMarginStart(android.view.ViewGroup$MarginLayoutParams,int) -> setMarginStart
    void setMarginEnd(android.view.ViewGroup$MarginLayoutParams,int) -> setMarginEnd
    boolean isMarginRelative(android.view.ViewGroup$MarginLayoutParams) -> isMarginRelative
    int getLayoutDirection(android.view.ViewGroup$MarginLayoutParams) -> getLayoutDirection
    void setLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int) -> setLayoutDirection
    void resolveLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int) -> resolveLayoutDirection
android.support.v4.view.MarginLayoutParamsCompat$MarginLayoutParamsCompatImplBase -> android.support.v4.view.MarginLayoutParamsCompat$MarginLayoutParamsCompatImplBase:
    int getMarginStart(android.view.ViewGroup$MarginLayoutParams) -> getMarginStart
    int getMarginEnd(android.view.ViewGroup$MarginLayoutParams) -> getMarginEnd
    void setMarginStart(android.view.ViewGroup$MarginLayoutParams,int) -> setMarginStart
    void setMarginEnd(android.view.ViewGroup$MarginLayoutParams,int) -> setMarginEnd
    boolean isMarginRelative(android.view.ViewGroup$MarginLayoutParams) -> isMarginRelative
    int getLayoutDirection(android.view.ViewGroup$MarginLayoutParams) -> getLayoutDirection
    void setLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int) -> setLayoutDirection
    void resolveLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int) -> resolveLayoutDirection
android.support.v4.view.MarginLayoutParamsCompat$MarginLayoutParamsCompatImplJbMr1 -> android.support.v4.view.MarginLayoutParamsCompat$MarginLayoutParamsCompatImplJbMr1:
    int getMarginStart(android.view.ViewGroup$MarginLayoutParams) -> getMarginStart
    int getMarginEnd(android.view.ViewGroup$MarginLayoutParams) -> getMarginEnd
    void setMarginStart(android.view.ViewGroup$MarginLayoutParams,int) -> setMarginStart
    void setMarginEnd(android.view.ViewGroup$MarginLayoutParams,int) -> setMarginEnd
    boolean isMarginRelative(android.view.ViewGroup$MarginLayoutParams) -> isMarginRelative
    int getLayoutDirection(android.view.ViewGroup$MarginLayoutParams) -> getLayoutDirection
    void setLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int) -> setLayoutDirection
    void resolveLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int) -> resolveLayoutDirection
android.support.v4.view.MarginLayoutParamsCompatJellybeanMr1 -> android.support.v4.view.MarginLayoutParamsCompatJellybeanMr1:
    int getMarginStart(android.view.ViewGroup$MarginLayoutParams) -> getMarginStart
    int getMarginEnd(android.view.ViewGroup$MarginLayoutParams) -> getMarginEnd
    void setMarginStart(android.view.ViewGroup$MarginLayoutParams,int) -> setMarginStart
    void setMarginEnd(android.view.ViewGroup$MarginLayoutParams,int) -> setMarginEnd
    boolean isMarginRelative(android.view.ViewGroup$MarginLayoutParams) -> isMarginRelative
    int getLayoutDirection(android.view.ViewGroup$MarginLayoutParams) -> getLayoutDirection
    void setLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int) -> setLayoutDirection
    void resolveLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int) -> resolveLayoutDirection
android.support.v4.view.MenuCompat -> android.support.v4.view.MenuCompat:
    void setShowAsAction(android.view.MenuItem,int) -> setShowAsAction
android.support.v4.view.MenuItemCompat -> android.support.v4.view.MenuItemCompat:
    java.lang.String TAG -> TAG
    int SHOW_AS_ACTION_NEVER -> SHOW_AS_ACTION_NEVER
    int SHOW_AS_ACTION_IF_ROOM -> SHOW_AS_ACTION_IF_ROOM
    int SHOW_AS_ACTION_ALWAYS -> SHOW_AS_ACTION_ALWAYS
    int SHOW_AS_ACTION_WITH_TEXT -> SHOW_AS_ACTION_WITH_TEXT
    int SHOW_AS_ACTION_COLLAPSE_ACTION_VIEW -> SHOW_AS_ACTION_COLLAPSE_ACTION_VIEW
    android.support.v4.view.MenuItemCompat$MenuVersionImpl IMPL -> IMPL
    void setShowAsAction(android.view.MenuItem,int) -> setShowAsAction
    android.view.MenuItem setActionView(android.view.MenuItem,android.view.View) -> setActionView
    android.view.MenuItem setActionView(android.view.MenuItem,int) -> setActionView
    android.view.View getActionView(android.view.MenuItem) -> getActionView
    android.view.MenuItem setActionProvider(android.view.MenuItem,android.support.v4.view.ActionProvider) -> setActionProvider
    android.support.v4.view.ActionProvider getActionProvider(android.view.MenuItem) -> getActionProvider
    boolean expandActionView(android.view.MenuItem) -> expandActionView
    boolean collapseActionView(android.view.MenuItem) -> collapseActionView
    boolean isActionViewExpanded(android.view.MenuItem) -> isActionViewExpanded
    android.view.MenuItem setOnActionExpandListener(android.view.MenuItem,android.support.v4.view.MenuItemCompat$OnActionExpandListener) -> setOnActionExpandListener
android.support.v4.view.MenuItemCompat$BaseMenuVersionImpl -> android.support.v4.view.MenuItemCompat$BaseMenuVersionImpl:
    void setShowAsAction(android.view.MenuItem,int) -> setShowAsAction
    android.view.MenuItem setActionView(android.view.MenuItem,android.view.View) -> setActionView
    android.view.MenuItem setActionView(android.view.MenuItem,int) -> setActionView
    android.view.View getActionView(android.view.MenuItem) -> getActionView
    boolean expandActionView(android.view.MenuItem) -> expandActionView
    boolean collapseActionView(android.view.MenuItem) -> collapseActionView
    boolean isActionViewExpanded(android.view.MenuItem) -> isActionViewExpanded
    android.view.MenuItem setOnActionExpandListener(android.view.MenuItem,android.support.v4.view.MenuItemCompat$OnActionExpandListener) -> setOnActionExpandListener
android.support.v4.view.MenuItemCompat$HoneycombMenuVersionImpl -> android.support.v4.view.MenuItemCompat$HoneycombMenuVersionImpl:
    void setShowAsAction(android.view.MenuItem,int) -> setShowAsAction
    android.view.MenuItem setActionView(android.view.MenuItem,android.view.View) -> setActionView
    android.view.MenuItem setActionView(android.view.MenuItem,int) -> setActionView
    android.view.View getActionView(android.view.MenuItem) -> getActionView
    boolean expandActionView(android.view.MenuItem) -> expandActionView
    boolean collapseActionView(android.view.MenuItem) -> collapseActionView
    boolean isActionViewExpanded(android.view.MenuItem) -> isActionViewExpanded
    android.view.MenuItem setOnActionExpandListener(android.view.MenuItem,android.support.v4.view.MenuItemCompat$OnActionExpandListener) -> setOnActionExpandListener
android.support.v4.view.MenuItemCompat$IcsMenuVersionImpl -> android.support.v4.view.MenuItemCompat$IcsMenuVersionImpl:
    boolean expandActionView(android.view.MenuItem) -> expandActionView
    boolean collapseActionView(android.view.MenuItem) -> collapseActionView
    boolean isActionViewExpanded(android.view.MenuItem) -> isActionViewExpanded
    android.view.MenuItem setOnActionExpandListener(android.view.MenuItem,android.support.v4.view.MenuItemCompat$OnActionExpandListener) -> setOnActionExpandListener
android.support.v4.view.MenuItemCompat$IcsMenuVersionImpl$1 -> android.support.v4.view.MenuItemCompat$IcsMenuVersionImpl$1:
    android.support.v4.view.MenuItemCompat$OnActionExpandListener val$listener -> val$listener
    android.support.v4.view.MenuItemCompat$IcsMenuVersionImpl this$0 -> this$0
    boolean onMenuItemActionExpand(android.view.MenuItem) -> onMenuItemActionExpand
    boolean onMenuItemActionCollapse(android.view.MenuItem) -> onMenuItemActionCollapse
android.support.v4.view.MenuItemCompat$MenuVersionImpl -> android.support.v4.view.MenuItemCompat$MenuVersionImpl:
    void setShowAsAction(android.view.MenuItem,int) -> setShowAsAction
    android.view.MenuItem setActionView(android.view.MenuItem,android.view.View) -> setActionView
    android.view.MenuItem setActionView(android.view.MenuItem,int) -> setActionView
    android.view.View getActionView(android.view.MenuItem) -> getActionView
    boolean expandActionView(android.view.MenuItem) -> expandActionView
    boolean collapseActionView(android.view.MenuItem) -> collapseActionView
    boolean isActionViewExpanded(android.view.MenuItem) -> isActionViewExpanded
    android.view.MenuItem setOnActionExpandListener(android.view.MenuItem,android.support.v4.view.MenuItemCompat$OnActionExpandListener) -> setOnActionExpandListener
android.support.v4.view.MenuItemCompat$OnActionExpandListener -> android.support.v4.view.MenuItemCompat$OnActionExpandListener:
    boolean onMenuItemActionExpand(android.view.MenuItem) -> onMenuItemActionExpand
    boolean onMenuItemActionCollapse(android.view.MenuItem) -> onMenuItemActionCollapse
android.support.v4.view.MenuItemCompatHoneycomb -> android.support.v4.view.MenuItemCompatHoneycomb:
    void setShowAsAction(android.view.MenuItem,int) -> setShowAsAction
    android.view.MenuItem setActionView(android.view.MenuItem,android.view.View) -> setActionView
    android.view.MenuItem setActionView(android.view.MenuItem,int) -> setActionView
    android.view.View getActionView(android.view.MenuItem) -> getActionView
android.support.v4.view.MenuItemCompatIcs -> android.support.v4.view.MenuItemCompatIcs:
    boolean expandActionView(android.view.MenuItem) -> expandActionView
    boolean collapseActionView(android.view.MenuItem) -> collapseActionView
    boolean isActionViewExpanded(android.view.MenuItem) -> isActionViewExpanded
    android.view.MenuItem setOnActionExpandListener(android.view.MenuItem,android.support.v4.view.MenuItemCompatIcs$SupportActionExpandProxy) -> setOnActionExpandListener
android.support.v4.view.MenuItemCompatIcs$OnActionExpandListenerWrapper -> android.support.v4.view.MenuItemCompatIcs$OnActionExpandListenerWrapper:
    android.support.v4.view.MenuItemCompatIcs$SupportActionExpandProxy mWrapped -> mWrapped
    boolean onMenuItemActionExpand(android.view.MenuItem) -> onMenuItemActionExpand
    boolean onMenuItemActionCollapse(android.view.MenuItem) -> onMenuItemActionCollapse
android.support.v4.view.MenuItemCompatIcs$SupportActionExpandProxy -> android.support.v4.view.MenuItemCompatIcs$SupportActionExpandProxy:
    boolean onMenuItemActionExpand(android.view.MenuItem) -> onMenuItemActionExpand
    boolean onMenuItemActionCollapse(android.view.MenuItem) -> onMenuItemActionCollapse
android.support.v4.view.MotionEventCompat -> android.support.v4.view.MotionEventCompat:
    android.support.v4.view.MotionEventCompat$MotionEventVersionImpl IMPL -> IMPL
    int ACTION_MASK -> ACTION_MASK
    int ACTION_POINTER_DOWN -> ACTION_POINTER_DOWN
    int ACTION_POINTER_UP -> ACTION_POINTER_UP
    int ACTION_HOVER_MOVE -> ACTION_HOVER_MOVE
    int ACTION_SCROLL -> ACTION_SCROLL
    int ACTION_POINTER_INDEX_MASK -> ACTION_POINTER_INDEX_MASK
    int ACTION_POINTER_INDEX_SHIFT -> ACTION_POINTER_INDEX_SHIFT
    int ACTION_HOVER_ENTER -> ACTION_HOVER_ENTER
    int ACTION_HOVER_EXIT -> ACTION_HOVER_EXIT
    int getActionMasked(android.view.MotionEvent) -> getActionMasked
    int getActionIndex(android.view.MotionEvent) -> getActionIndex
    int findPointerIndex(android.view.MotionEvent,int) -> findPointerIndex
    int getPointerId(android.view.MotionEvent,int) -> getPointerId
    float getX(android.view.MotionEvent,int) -> getX
    float getY(android.view.MotionEvent,int) -> getY
    int getPointerCount(android.view.MotionEvent) -> getPointerCount
android.support.v4.view.MotionEventCompat$BaseMotionEventVersionImpl -> android.support.v4.view.MotionEventCompat$BaseMotionEventVersionImpl:
    int findPointerIndex(android.view.MotionEvent,int) -> findPointerIndex
    int getPointerId(android.view.MotionEvent,int) -> getPointerId
    float getX(android.view.MotionEvent,int) -> getX
    float getY(android.view.MotionEvent,int) -> getY
    int getPointerCount(android.view.MotionEvent) -> getPointerCount
android.support.v4.view.MotionEventCompat$EclairMotionEventVersionImpl -> android.support.v4.view.MotionEventCompat$EclairMotionEventVersionImpl:
    int findPointerIndex(android.view.MotionEvent,int) -> findPointerIndex
    int getPointerId(android.view.MotionEvent,int) -> getPointerId
    float getX(android.view.MotionEvent,int) -> getX
    float getY(android.view.MotionEvent,int) -> getY
    int getPointerCount(android.view.MotionEvent) -> getPointerCount
android.support.v4.view.MotionEventCompat$MotionEventVersionImpl -> android.support.v4.view.MotionEventCompat$MotionEventVersionImpl:
    int findPointerIndex(android.view.MotionEvent,int) -> findPointerIndex
    int getPointerId(android.view.MotionEvent,int) -> getPointerId
    float getX(android.view.MotionEvent,int) -> getX
    float getY(android.view.MotionEvent,int) -> getY
    int getPointerCount(android.view.MotionEvent) -> getPointerCount
android.support.v4.view.MotionEventCompatEclair -> android.support.v4.view.MotionEventCompatEclair:
    int findPointerIndex(android.view.MotionEvent,int) -> findPointerIndex
    int getPointerId(android.view.MotionEvent,int) -> getPointerId
    float getX(android.view.MotionEvent,int) -> getX
    float getY(android.view.MotionEvent,int) -> getY
    int getPointerCount(android.view.MotionEvent) -> getPointerCount
android.support.v4.view.OnApplyWindowInsetsListener -> android.support.v4.view.OnApplyWindowInsetsListener:
    android.support.v4.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,android.support.v4.view.WindowInsetsCompat) -> onApplyWindowInsets
android.support.v4.view.PagerAdapter -> android.support.v4.view.PagerAdapter:
    android.database.DataSetObservable mObservable -> mObservable
    int POSITION_UNCHANGED -> POSITION_UNCHANGED
    int POSITION_NONE -> POSITION_NONE
    int getCount() -> getCount
    void startUpdate(android.view.ViewGroup) -> startUpdate
    java.lang.Object instantiateItem(android.view.ViewGroup,int) -> instantiateItem
    void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> destroyItem
    void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object) -> setPrimaryItem
    void finishUpdate(android.view.ViewGroup) -> finishUpdate
    void startUpdate(android.view.View) -> startUpdate
    java.lang.Object instantiateItem(android.view.View,int) -> instantiateItem
    void destroyItem(android.view.View,int,java.lang.Object) -> destroyItem
    void setPrimaryItem(android.view.View,int,java.lang.Object) -> setPrimaryItem
    void finishUpdate(android.view.View) -> finishUpdate
    boolean isViewFromObject(android.view.View,java.lang.Object) -> isViewFromObject
    android.os.Parcelable saveState() -> saveState
    void restoreState(android.os.Parcelable,java.lang.ClassLoader) -> restoreState
    int getItemPosition(java.lang.Object) -> getItemPosition
    void notifyDataSetChanged() -> notifyDataSetChanged
    void registerDataSetObserver(android.database.DataSetObserver) -> registerDataSetObserver
    void unregisterDataSetObserver(android.database.DataSetObserver) -> unregisterDataSetObserver
    java.lang.CharSequence getPageTitle(int) -> getPageTitle
    float getPageWidth(int) -> getPageWidth
android.support.v4.view.PagerTabStrip -> android.support.v4.view.PagerTabStrip:
    java.lang.String TAG -> TAG
    int INDICATOR_HEIGHT -> INDICATOR_HEIGHT
    int MIN_PADDING_BOTTOM -> MIN_PADDING_BOTTOM
    int TAB_PADDING -> TAB_PADDING
    int TAB_SPACING -> TAB_SPACING
    int MIN_TEXT_SPACING -> MIN_TEXT_SPACING
    int FULL_UNDERLINE_HEIGHT -> FULL_UNDERLINE_HEIGHT
    int MIN_STRIP_HEIGHT -> MIN_STRIP_HEIGHT
    int mIndicatorColor -> mIndicatorColor
    int mIndicatorHeight -> mIndicatorHeight
    int mMinPaddingBottom -> mMinPaddingBottom
    int mMinTextSpacing -> mMinTextSpacing
    int mMinStripHeight -> mMinStripHeight
    int mTabPadding -> mTabPadding
    android.graphics.Paint mTabPaint -> mTabPaint
    android.graphics.Rect mTempRect -> mTempRect
    int mTabAlpha -> mTabAlpha
    boolean mDrawFullUnderline -> mDrawFullUnderline
    boolean mDrawFullUnderlineSet -> mDrawFullUnderlineSet
    int mFullUnderlineHeight -> mFullUnderlineHeight
    boolean mIgnoreTap -> mIgnoreTap
    float mInitialMotionX -> mInitialMotionX
    float mInitialMotionY -> mInitialMotionY
    int mTouchSlop -> mTouchSlop
    void setTabIndicatorColor(int) -> setTabIndicatorColor
    void setTabIndicatorColorResource(int) -> setTabIndicatorColorResource
    int getTabIndicatorColor() -> getTabIndicatorColor
    void setPadding(int,int,int,int) -> setPadding
    void setTextSpacing(int) -> setTextSpacing
    void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    void setBackgroundColor(int) -> setBackgroundColor
    void setBackgroundResource(int) -> setBackgroundResource
    void setDrawFullUnderline(boolean) -> setDrawFullUnderline
    boolean getDrawFullUnderline() -> getDrawFullUnderline
    int getMinHeight() -> getMinHeight
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void onDraw(android.graphics.Canvas) -> onDraw
    void updateTextPositions(int,float,boolean) -> updateTextPositions
android.support.v4.view.PagerTabStrip$1 -> android.support.v4.view.PagerTabStrip$1:
    android.support.v4.view.PagerTabStrip this$0 -> this$0
    void onClick(android.view.View) -> onClick
android.support.v4.view.PagerTabStrip$2 -> android.support.v4.view.PagerTabStrip$2:
    android.support.v4.view.PagerTabStrip this$0 -> this$0
    void onClick(android.view.View) -> onClick
android.support.v4.view.PagerTitleStrip -> android.support.v4.view.PagerTitleStrip:
    java.lang.String TAG -> TAG
    android.support.v4.view.ViewPager mPager -> mPager
    android.widget.TextView mPrevText -> mPrevText
    android.widget.TextView mCurrText -> mCurrText
    android.widget.TextView mNextText -> mNextText
    int mLastKnownCurrentPage -> mLastKnownCurrentPage
    float mLastKnownPositionOffset -> mLastKnownPositionOffset
    int mScaledTextSpacing -> mScaledTextSpacing
    int mGravity -> mGravity
    boolean mUpdatingText -> mUpdatingText
    boolean mUpdatingPositions -> mUpdatingPositions
    android.support.v4.view.PagerTitleStrip$PageListener mPageListener -> mPageListener
    java.lang.ref.WeakReference mWatchingAdapter -> mWatchingAdapter
    int[] ATTRS -> ATTRS
    int[] TEXT_ATTRS -> TEXT_ATTRS
    float SIDE_ALPHA -> SIDE_ALPHA
    int TEXT_SPACING -> TEXT_SPACING
    int mNonPrimaryAlpha -> mNonPrimaryAlpha
    int mTextColor -> mTextColor
    android.support.v4.view.PagerTitleStrip$PagerTitleStripImpl IMPL -> IMPL
    void setSingleLineAllCaps(android.widget.TextView) -> setSingleLineAllCaps
    void setTextSpacing(int) -> setTextSpacing
    int getTextSpacing() -> getTextSpacing
    void setNonPrimaryAlpha(float) -> setNonPrimaryAlpha
    void setTextColor(int) -> setTextColor
    void setTextSize(int,float) -> setTextSize
    void setGravity(int) -> setGravity
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void updateText(int,android.support.v4.view.PagerAdapter) -> updateText
    void requestLayout() -> requestLayout
    void updateAdapter(android.support.v4.view.PagerAdapter,android.support.v4.view.PagerAdapter) -> updateAdapter
    void updateTextPositions(int,float,boolean) -> updateTextPositions
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    int getMinHeight() -> getMinHeight
    float access$100(android.support.v4.view.PagerTitleStrip) -> access$100
android.support.v4.view.PagerTitleStrip$1 -> android.support.v4.view.PagerTitleStrip$1:
android.support.v4.view.PagerTitleStrip$PageListener -> android.support.v4.view.PagerTitleStrip$PageListener:
    int mScrollState -> mScrollState
    android.support.v4.view.PagerTitleStrip this$0 -> this$0
    void onPageScrolled(int,float,int) -> onPageScrolled
    void onPageSelected(int) -> onPageSelected
    void onPageScrollStateChanged(int) -> onPageScrollStateChanged
    void onAdapterChanged(android.support.v4.view.PagerAdapter,android.support.v4.view.PagerAdapter) -> onAdapterChanged
    void onChanged() -> onChanged
android.support.v4.view.PagerTitleStrip$PagerTitleStripImpl -> android.support.v4.view.PagerTitleStrip$PagerTitleStripImpl:
    void setSingleLineAllCaps(android.widget.TextView) -> setSingleLineAllCaps
android.support.v4.view.PagerTitleStrip$PagerTitleStripImplBase -> android.support.v4.view.PagerTitleStrip$PagerTitleStripImplBase:
    void setSingleLineAllCaps(android.widget.TextView) -> setSingleLineAllCaps
android.support.v4.view.PagerTitleStrip$PagerTitleStripImplIcs -> android.support.v4.view.PagerTitleStrip$PagerTitleStripImplIcs:
    void setSingleLineAllCaps(android.widget.TextView) -> setSingleLineAllCaps
android.support.v4.view.PagerTitleStripIcs -> android.support.v4.view.PagerTitleStripIcs:
    void setSingleLineAllCaps(android.widget.TextView) -> setSingleLineAllCaps
android.support.v4.view.PagerTitleStripIcs$SingleLineAllCapsTransform -> android.support.v4.view.PagerTitleStripIcs$SingleLineAllCapsTransform:
    java.lang.String TAG -> TAG
    java.util.Locale mLocale -> mLocale
    java.lang.CharSequence getTransformation(java.lang.CharSequence,android.view.View) -> getTransformation
android.support.v4.view.ScaleGestureDetectorCompat -> android.support.v4.view.ScaleGestureDetectorCompat:
    android.support.v4.view.ScaleGestureDetectorCompat$ScaleGestureDetectorImpl IMPL -> IMPL
    void setQuickScaleEnabled(java.lang.Object,boolean) -> setQuickScaleEnabled
    boolean isQuickScaleEnabled(java.lang.Object) -> isQuickScaleEnabled
android.support.v4.view.ScaleGestureDetectorCompat$1 -> android.support.v4.view.ScaleGestureDetectorCompat$1:
android.support.v4.view.ScaleGestureDetectorCompat$BaseScaleGestureDetectorImpl -> android.support.v4.view.ScaleGestureDetectorCompat$BaseScaleGestureDetectorImpl:
    void setQuickScaleEnabled(java.lang.Object,boolean) -> setQuickScaleEnabled
    boolean isQuickScaleEnabled(java.lang.Object) -> isQuickScaleEnabled
android.support.v4.view.ScaleGestureDetectorCompat$ScaleGestureDetectorCompatKitKatImpl -> android.support.v4.view.ScaleGestureDetectorCompat$ScaleGestureDetectorCompatKitKatImpl:
    void setQuickScaleEnabled(java.lang.Object,boolean) -> setQuickScaleEnabled
    boolean isQuickScaleEnabled(java.lang.Object) -> isQuickScaleEnabled
android.support.v4.view.ScaleGestureDetectorCompat$ScaleGestureDetectorImpl -> android.support.v4.view.ScaleGestureDetectorCompat$ScaleGestureDetectorImpl:
    void setQuickScaleEnabled(java.lang.Object,boolean) -> setQuickScaleEnabled
    boolean isQuickScaleEnabled(java.lang.Object) -> isQuickScaleEnabled
android.support.v4.view.ScaleGestureDetectorCompatKitKat -> android.support.v4.view.ScaleGestureDetectorCompatKitKat:
    void setQuickScaleEnabled(java.lang.Object,boolean) -> setQuickScaleEnabled
    boolean isQuickScaleEnabled(java.lang.Object) -> isQuickScaleEnabled
android.support.v4.view.VelocityTrackerCompat -> android.support.v4.view.VelocityTrackerCompat:
    android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl IMPL -> IMPL
    float getXVelocity(android.view.VelocityTracker,int) -> getXVelocity
    float getYVelocity(android.view.VelocityTracker,int) -> getYVelocity
android.support.v4.view.VelocityTrackerCompat$BaseVelocityTrackerVersionImpl -> android.support.v4.view.VelocityTrackerCompat$BaseVelocityTrackerVersionImpl:
    float getXVelocity(android.view.VelocityTracker,int) -> getXVelocity
    float getYVelocity(android.view.VelocityTracker,int) -> getYVelocity
android.support.v4.view.VelocityTrackerCompat$HoneycombVelocityTrackerVersionImpl -> android.support.v4.view.VelocityTrackerCompat$HoneycombVelocityTrackerVersionImpl:
    float getXVelocity(android.view.VelocityTracker,int) -> getXVelocity
    float getYVelocity(android.view.VelocityTracker,int) -> getYVelocity
android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl -> android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl:
    float getXVelocity(android.view.VelocityTracker,int) -> getXVelocity
    float getYVelocity(android.view.VelocityTracker,int) -> getYVelocity
android.support.v4.view.VelocityTrackerCompatHoneycomb -> android.support.v4.view.VelocityTrackerCompatHoneycomb:
    float getXVelocity(android.view.VelocityTracker,int) -> getXVelocity
    float getYVelocity(android.view.VelocityTracker,int) -> getYVelocity
android.support.v4.view.ViewCompat -> android.support.v4.view.ViewCompat:
    java.lang.String TAG -> TAG
    int OVER_SCROLL_ALWAYS -> OVER_SCROLL_ALWAYS
    int OVER_SCROLL_IF_CONTENT_SCROLLS -> OVER_SCROLL_IF_CONTENT_SCROLLS
    int OVER_SCROLL_NEVER -> OVER_SCROLL_NEVER
    long FAKE_FRAME_TIME -> FAKE_FRAME_TIME
    int IMPORTANT_FOR_ACCESSIBILITY_AUTO -> IMPORTANT_FOR_ACCESSIBILITY_AUTO
    int IMPORTANT_FOR_ACCESSIBILITY_YES -> IMPORTANT_FOR_ACCESSIBILITY_YES
    int IMPORTANT_FOR_ACCESSIBILITY_NO -> IMPORTANT_FOR_ACCESSIBILITY_NO
    int IMPORTANT_FOR_ACCESSIBILITY_NO_HIDE_DESCENDANTS -> IMPORTANT_FOR_ACCESSIBILITY_NO_HIDE_DESCENDANTS
    int ACCESSIBILITY_LIVE_REGION_NONE -> ACCESSIBILITY_LIVE_REGION_NONE
    int ACCESSIBILITY_LIVE_REGION_POLITE -> ACCESSIBILITY_LIVE_REGION_POLITE
    int ACCESSIBILITY_LIVE_REGION_ASSERTIVE -> ACCESSIBILITY_LIVE_REGION_ASSERTIVE
    int LAYER_TYPE_NONE -> LAYER_TYPE_NONE
    int LAYER_TYPE_SOFTWARE -> LAYER_TYPE_SOFTWARE
    int LAYER_TYPE_HARDWARE -> LAYER_TYPE_HARDWARE
    int LAYOUT_DIRECTION_LTR -> LAYOUT_DIRECTION_LTR
    int LAYOUT_DIRECTION_RTL -> LAYOUT_DIRECTION_RTL
    int LAYOUT_DIRECTION_INHERIT -> LAYOUT_DIRECTION_INHERIT
    int LAYOUT_DIRECTION_LOCALE -> LAYOUT_DIRECTION_LOCALE
    int MEASURED_SIZE_MASK -> MEASURED_SIZE_MASK
    int MEASURED_STATE_MASK -> MEASURED_STATE_MASK
    int MEASURED_HEIGHT_STATE_SHIFT -> MEASURED_HEIGHT_STATE_SHIFT
    int MEASURED_STATE_TOO_SMALL -> MEASURED_STATE_TOO_SMALL
    android.support.v4.view.ViewCompat$ViewCompatImpl IMPL -> IMPL
    boolean canScrollHorizontally(android.view.View,int) -> canScrollHorizontally
    boolean canScrollVertically(android.view.View,int) -> canScrollVertically
    int getOverScrollMode(android.view.View) -> getOverScrollMode
    void setOverScrollMode(android.view.View,int) -> setOverScrollMode
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> setAccessibilityDelegate
    boolean hasAccessibilityDelegate(android.view.View) -> hasAccessibilityDelegate
    boolean hasTransientState(android.view.View) -> hasTransientState
    void setHasTransientState(android.view.View,boolean) -> setHasTransientState
    void postInvalidateOnAnimation(android.view.View) -> postInvalidateOnAnimation
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> postInvalidateOnAnimation
    void postOnAnimation(android.view.View,java.lang.Runnable) -> postOnAnimation
    void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long) -> postOnAnimationDelayed
    int getImportantForAccessibility(android.view.View) -> getImportantForAccessibility
    void setImportantForAccessibility(android.view.View,int) -> setImportantForAccessibility
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    float getAlpha(android.view.View) -> getAlpha
    void setLayerType(android.view.View,int,android.graphics.Paint) -> setLayerType
    int getLayerType(android.view.View) -> getLayerType
    int getLabelFor(android.view.View) -> getLabelFor
    void setLabelFor(android.view.View,int) -> setLabelFor
    void setLayerPaint(android.view.View,android.graphics.Paint) -> setLayerPaint
    int getLayoutDirection(android.view.View) -> getLayoutDirection
    void setLayoutDirection(android.view.View,int) -> setLayoutDirection
    android.view.ViewParent getParentForAccessibility(android.view.View) -> getParentForAccessibility
    boolean isOpaque(android.view.View) -> isOpaque
    int resolveSizeAndState(int,int,int) -> resolveSizeAndState
    int getMeasuredWidthAndState(android.view.View) -> getMeasuredWidthAndState
    int getMeasuredHeightAndState(android.view.View) -> getMeasuredHeightAndState
    int getMeasuredState(android.view.View) -> getMeasuredState
    int getAccessibilityLiveRegion(android.view.View) -> getAccessibilityLiveRegion
    void setAccessibilityLiveRegion(android.view.View,int) -> setAccessibilityLiveRegion
    int getPaddingStart(android.view.View) -> getPaddingStart
    int getPaddingEnd(android.view.View) -> getPaddingEnd
    void setPaddingRelative(android.view.View,int,int,int,int) -> setPaddingRelative
    void dispatchStartTemporaryDetach(android.view.View) -> dispatchStartTemporaryDetach
    void dispatchFinishTemporaryDetach(android.view.View) -> dispatchFinishTemporaryDetach
    float getTranslationX(android.view.View) -> getTranslationX
    float getTranslationY(android.view.View) -> getTranslationY
    int getMinimumWidth(android.view.View) -> getMinimumWidth
    int getMinimumHeight(android.view.View) -> getMinimumHeight
    android.support.v4.view.ViewPropertyAnimatorCompat animate(android.view.View) -> animate
    void setTranslationX(android.view.View,float) -> setTranslationX
    void setTranslationY(android.view.View,float) -> setTranslationY
    void setAlpha(android.view.View,float) -> setAlpha
    void setX(android.view.View,float) -> setX
    void setY(android.view.View,float) -> setY
    void setRotation(android.view.View,float) -> setRotation
    void setRotationX(android.view.View,float) -> setRotationX
    void setRotationY(android.view.View,float) -> setRotationY
    void setScaleX(android.view.View,float) -> setScaleX
    void setScaleY(android.view.View,float) -> setScaleY
    float getPivotX(android.view.View) -> getPivotX
    void setPivotX(android.view.View,float) -> setPivotX
    float getPivotY(android.view.View) -> getPivotY
    void setPivotY(android.view.View,float) -> setPivotY
    float getRotation(android.view.View) -> getRotation
    float getRotationX(android.view.View) -> getRotationX
    float getRotationY(android.view.View) -> getRotationY
    float getScaleX(android.view.View) -> getScaleX
    float getScaleY(android.view.View) -> getScaleY
    float getX(android.view.View) -> getX
    float getY(android.view.View) -> getY
    void setElevation(android.view.View,float) -> setElevation
    float getElevation(android.view.View) -> getElevation
    void setTranslationZ(android.view.View,float) -> setTranslationZ
    float getTranslationZ(android.view.View) -> getTranslationZ
    void setTransitionName(android.view.View,java.lang.String) -> setTransitionName
    java.lang.String getTransitionName(android.view.View) -> getTransitionName
    int getWindowSystemUiVisibility(android.view.View) -> getWindowSystemUiVisibility
    void requestApplyInsets(android.view.View) -> requestApplyInsets
    void setChildrenDrawingOrderEnabled(android.view.ViewGroup,boolean) -> setChildrenDrawingOrderEnabled
    boolean getFitsSystemWindows(android.view.View) -> getFitsSystemWindows
    void jumpDrawablesToCurrentState(android.view.View) -> jumpDrawablesToCurrentState
    void setOnApplyWindowInsetsListener(android.view.View,android.support.v4.view.OnApplyWindowInsetsListener) -> setOnApplyWindowInsetsListener
android.support.v4.view.ViewCompat$AccessibilityLiveRegion -> android.support.v4.view.ViewCompat$AccessibilityLiveRegion:
android.support.v4.view.ViewCompat$Api21ViewCompatImpl -> android.support.v4.view.ViewCompat$Api21ViewCompatImpl:
    void setTransitionName(android.view.View,java.lang.String) -> setTransitionName
    java.lang.String getTransitionName(android.view.View) -> getTransitionName
    void requestApplyInsets(android.view.View) -> requestApplyInsets
    void setElevation(android.view.View,float) -> setElevation
    float getElevation(android.view.View) -> getElevation
    void setTranslationZ(android.view.View,float) -> setTranslationZ
    float getTranslationZ(android.view.View) -> getTranslationZ
    void setOnApplyWindowInsetsListener(android.view.View,android.support.v4.view.OnApplyWindowInsetsListener) -> setOnApplyWindowInsetsListener
android.support.v4.view.ViewCompat$BaseViewCompatImpl -> android.support.v4.view.ViewCompat$BaseViewCompatImpl:
    java.lang.reflect.Method mDispatchStartTemporaryDetach -> mDispatchStartTemporaryDetach
    java.lang.reflect.Method mDispatchFinishTemporaryDetach -> mDispatchFinishTemporaryDetach
    boolean mTempDetachBound -> mTempDetachBound
    java.util.WeakHashMap mViewPropertyAnimatorCompatMap -> mViewPropertyAnimatorCompatMap
    boolean canScrollHorizontally(android.view.View,int) -> canScrollHorizontally
    boolean canScrollVertically(android.view.View,int) -> canScrollVertically
    int getOverScrollMode(android.view.View) -> getOverScrollMode
    void setOverScrollMode(android.view.View,int) -> setOverScrollMode
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> setAccessibilityDelegate
    boolean hasAccessibilityDelegate(android.view.View) -> hasAccessibilityDelegate
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    boolean hasTransientState(android.view.View) -> hasTransientState
    void setHasTransientState(android.view.View,boolean) -> setHasTransientState
    void postInvalidateOnAnimation(android.view.View) -> postInvalidateOnAnimation
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> postInvalidateOnAnimation
    void postOnAnimation(android.view.View,java.lang.Runnable) -> postOnAnimation
    void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long) -> postOnAnimationDelayed
    long getFrameTime() -> getFrameTime
    int getImportantForAccessibility(android.view.View) -> getImportantForAccessibility
    void setImportantForAccessibility(android.view.View,int) -> setImportantForAccessibility
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    float getAlpha(android.view.View) -> getAlpha
    void setLayerType(android.view.View,int,android.graphics.Paint) -> setLayerType
    int getLayerType(android.view.View) -> getLayerType
    int getLabelFor(android.view.View) -> getLabelFor
    void setLabelFor(android.view.View,int) -> setLabelFor
    void setLayerPaint(android.view.View,android.graphics.Paint) -> setLayerPaint
    int getLayoutDirection(android.view.View) -> getLayoutDirection
    void setLayoutDirection(android.view.View,int) -> setLayoutDirection
    android.view.ViewParent getParentForAccessibility(android.view.View) -> getParentForAccessibility
    boolean isOpaque(android.view.View) -> isOpaque
    int resolveSizeAndState(int,int,int) -> resolveSizeAndState
    int getMeasuredWidthAndState(android.view.View) -> getMeasuredWidthAndState
    int getMeasuredHeightAndState(android.view.View) -> getMeasuredHeightAndState
    int getMeasuredState(android.view.View) -> getMeasuredState
    int getAccessibilityLiveRegion(android.view.View) -> getAccessibilityLiveRegion
    void setAccessibilityLiveRegion(android.view.View,int) -> setAccessibilityLiveRegion
    int getPaddingStart(android.view.View) -> getPaddingStart
    int getPaddingEnd(android.view.View) -> getPaddingEnd
    void setPaddingRelative(android.view.View,int,int,int,int) -> setPaddingRelative
    void dispatchStartTemporaryDetach(android.view.View) -> dispatchStartTemporaryDetach
    void dispatchFinishTemporaryDetach(android.view.View) -> dispatchFinishTemporaryDetach
    void bindTempDetach() -> bindTempDetach
    float getTranslationX(android.view.View) -> getTranslationX
    float getTranslationY(android.view.View) -> getTranslationY
    float getX(android.view.View) -> getX
    float getY(android.view.View) -> getY
    float getRotation(android.view.View) -> getRotation
    float getRotationX(android.view.View) -> getRotationX
    float getRotationY(android.view.View) -> getRotationY
    float getScaleX(android.view.View) -> getScaleX
    float getScaleY(android.view.View) -> getScaleY
    int getMinimumWidth(android.view.View) -> getMinimumWidth
    int getMinimumHeight(android.view.View) -> getMinimumHeight
    android.support.v4.view.ViewPropertyAnimatorCompat animate(android.view.View) -> animate
    void setRotation(android.view.View,float) -> setRotation
    void setTranslationX(android.view.View,float) -> setTranslationX
    void setTranslationY(android.view.View,float) -> setTranslationY
    void setAlpha(android.view.View,float) -> setAlpha
    void setRotationX(android.view.View,float) -> setRotationX
    void setRotationY(android.view.View,float) -> setRotationY
    void setScaleX(android.view.View,float) -> setScaleX
    void setScaleY(android.view.View,float) -> setScaleY
    void setX(android.view.View,float) -> setX
    void setY(android.view.View,float) -> setY
    void setPivotX(android.view.View,float) -> setPivotX
    void setPivotY(android.view.View,float) -> setPivotY
    float getPivotX(android.view.View) -> getPivotX
    float getPivotY(android.view.View) -> getPivotY
    void setTransitionName(android.view.View,java.lang.String) -> setTransitionName
    java.lang.String getTransitionName(android.view.View) -> getTransitionName
    int getWindowSystemUiVisibility(android.view.View) -> getWindowSystemUiVisibility
    void requestApplyInsets(android.view.View) -> requestApplyInsets
    void setElevation(android.view.View,float) -> setElevation
    float getElevation(android.view.View) -> getElevation
    void setTranslationZ(android.view.View,float) -> setTranslationZ
    float getTranslationZ(android.view.View) -> getTranslationZ
    void setChildrenDrawingOrderEnabled(android.view.ViewGroup,boolean) -> setChildrenDrawingOrderEnabled
    boolean getFitsSystemWindows(android.view.View) -> getFitsSystemWindows
    void jumpDrawablesToCurrentState(android.view.View) -> jumpDrawablesToCurrentState
    void setOnApplyWindowInsetsListener(android.view.View,android.support.v4.view.OnApplyWindowInsetsListener) -> setOnApplyWindowInsetsListener
android.support.v4.view.ViewCompat$EclairMr1ViewCompatImpl -> android.support.v4.view.ViewCompat$EclairMr1ViewCompatImpl:
    boolean isOpaque(android.view.View) -> isOpaque
    void setChildrenDrawingOrderEnabled(android.view.ViewGroup,boolean) -> setChildrenDrawingOrderEnabled
android.support.v4.view.ViewCompat$GBViewCompatImpl -> android.support.v4.view.ViewCompat$GBViewCompatImpl:
    int getOverScrollMode(android.view.View) -> getOverScrollMode
    void setOverScrollMode(android.view.View,int) -> setOverScrollMode
android.support.v4.view.ViewCompat$HCViewCompatImpl -> android.support.v4.view.ViewCompat$HCViewCompatImpl:
    long getFrameTime() -> getFrameTime
    float getAlpha(android.view.View) -> getAlpha
    void setLayerType(android.view.View,int,android.graphics.Paint) -> setLayerType
    int getLayerType(android.view.View) -> getLayerType
    void setLayerPaint(android.view.View,android.graphics.Paint) -> setLayerPaint
    int resolveSizeAndState(int,int,int) -> resolveSizeAndState
    int getMeasuredWidthAndState(android.view.View) -> getMeasuredWidthAndState
    int getMeasuredHeightAndState(android.view.View) -> getMeasuredHeightAndState
    int getMeasuredState(android.view.View) -> getMeasuredState
    float getTranslationX(android.view.View) -> getTranslationX
    float getTranslationY(android.view.View) -> getTranslationY
    void setTranslationX(android.view.View,float) -> setTranslationX
    void setTranslationY(android.view.View,float) -> setTranslationY
    void setAlpha(android.view.View,float) -> setAlpha
    void setX(android.view.View,float) -> setX
    void setY(android.view.View,float) -> setY
    void setRotation(android.view.View,float) -> setRotation
    void setRotationX(android.view.View,float) -> setRotationX
    void setRotationY(android.view.View,float) -> setRotationY
    void setScaleX(android.view.View,float) -> setScaleX
    void setScaleY(android.view.View,float) -> setScaleY
    void setPivotX(android.view.View,float) -> setPivotX
    void setPivotY(android.view.View,float) -> setPivotY
    float getX(android.view.View) -> getX
    float getY(android.view.View) -> getY
    float getRotation(android.view.View) -> getRotation
    float getRotationX(android.view.View) -> getRotationX
    float getRotationY(android.view.View) -> getRotationY
    float getScaleX(android.view.View) -> getScaleX
    float getScaleY(android.view.View) -> getScaleY
    float getPivotX(android.view.View) -> getPivotX
    float getPivotY(android.view.View) -> getPivotY
    void jumpDrawablesToCurrentState(android.view.View) -> jumpDrawablesToCurrentState
android.support.v4.view.ViewCompat$ICSViewCompatImpl -> android.support.v4.view.ViewCompat$ICSViewCompatImpl:
    java.lang.reflect.Field mAccessibilityDelegateField -> mAccessibilityDelegateField
    boolean accessibilityDelegateCheckFailed -> accessibilityDelegateCheckFailed
    boolean canScrollHorizontally(android.view.View,int) -> canScrollHorizontally
    boolean canScrollVertically(android.view.View,int) -> canScrollVertically
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> setAccessibilityDelegate
    boolean hasAccessibilityDelegate(android.view.View) -> hasAccessibilityDelegate
    android.support.v4.view.ViewPropertyAnimatorCompat animate(android.view.View) -> animate
android.support.v4.view.ViewCompat$ImportantForAccessibility -> android.support.v4.view.ViewCompat$ImportantForAccessibility:
android.support.v4.view.ViewCompat$JBViewCompatImpl -> android.support.v4.view.ViewCompat$JBViewCompatImpl:
    boolean hasTransientState(android.view.View) -> hasTransientState
    void setHasTransientState(android.view.View,boolean) -> setHasTransientState
    void postInvalidateOnAnimation(android.view.View) -> postInvalidateOnAnimation
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> postInvalidateOnAnimation
    void postOnAnimation(android.view.View,java.lang.Runnable) -> postOnAnimation
    void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long) -> postOnAnimationDelayed
    int getImportantForAccessibility(android.view.View) -> getImportantForAccessibility
    void setImportantForAccessibility(android.view.View,int) -> setImportantForAccessibility
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    android.view.ViewParent getParentForAccessibility(android.view.View) -> getParentForAccessibility
    int getMinimumWidth(android.view.View) -> getMinimumWidth
    int getMinimumHeight(android.view.View) -> getMinimumHeight
    void requestApplyInsets(android.view.View) -> requestApplyInsets
    boolean getFitsSystemWindows(android.view.View) -> getFitsSystemWindows
android.support.v4.view.ViewCompat$JbMr1ViewCompatImpl -> android.support.v4.view.ViewCompat$JbMr1ViewCompatImpl:
    int getLabelFor(android.view.View) -> getLabelFor
    void setLabelFor(android.view.View,int) -> setLabelFor
    void setLayerPaint(android.view.View,android.graphics.Paint) -> setLayerPaint
    int getLayoutDirection(android.view.View) -> getLayoutDirection
    void setLayoutDirection(android.view.View,int) -> setLayoutDirection
    int getPaddingStart(android.view.View) -> getPaddingStart
    int getPaddingEnd(android.view.View) -> getPaddingEnd
    void setPaddingRelative(android.view.View,int,int,int,int) -> setPaddingRelative
    int getWindowSystemUiVisibility(android.view.View) -> getWindowSystemUiVisibility
android.support.v4.view.ViewCompat$KitKatViewCompatImpl -> android.support.v4.view.ViewCompat$KitKatViewCompatImpl:
    int getAccessibilityLiveRegion(android.view.View) -> getAccessibilityLiveRegion
    void setAccessibilityLiveRegion(android.view.View,int) -> setAccessibilityLiveRegion
    void setImportantForAccessibility(android.view.View,int) -> setImportantForAccessibility
android.support.v4.view.ViewCompat$LayerType -> android.support.v4.view.ViewCompat$LayerType:
android.support.v4.view.ViewCompat$LayoutDirectionMode -> android.support.v4.view.ViewCompat$LayoutDirectionMode:
android.support.v4.view.ViewCompat$OverScroll -> android.support.v4.view.ViewCompat$OverScroll:
android.support.v4.view.ViewCompat$ResolvedLayoutDirectionMode -> android.support.v4.view.ViewCompat$ResolvedLayoutDirectionMode:
android.support.v4.view.ViewCompat$ViewCompatImpl -> android.support.v4.view.ViewCompat$ViewCompatImpl:
    boolean canScrollHorizontally(android.view.View,int) -> canScrollHorizontally
    boolean canScrollVertically(android.view.View,int) -> canScrollVertically
    int getOverScrollMode(android.view.View) -> getOverScrollMode
    void setOverScrollMode(android.view.View,int) -> setOverScrollMode
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> setAccessibilityDelegate
    boolean hasAccessibilityDelegate(android.view.View) -> hasAccessibilityDelegate
    boolean hasTransientState(android.view.View) -> hasTransientState
    void setHasTransientState(android.view.View,boolean) -> setHasTransientState
    void postInvalidateOnAnimation(android.view.View) -> postInvalidateOnAnimation
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> postInvalidateOnAnimation
    void postOnAnimation(android.view.View,java.lang.Runnable) -> postOnAnimation
    void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long) -> postOnAnimationDelayed
    int getImportantForAccessibility(android.view.View) -> getImportantForAccessibility
    void setImportantForAccessibility(android.view.View,int) -> setImportantForAccessibility
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    float getAlpha(android.view.View) -> getAlpha
    void setLayerType(android.view.View,int,android.graphics.Paint) -> setLayerType
    int getLayerType(android.view.View) -> getLayerType
    int getLabelFor(android.view.View) -> getLabelFor
    void setLabelFor(android.view.View,int) -> setLabelFor
    void setLayerPaint(android.view.View,android.graphics.Paint) -> setLayerPaint
    int getLayoutDirection(android.view.View) -> getLayoutDirection
    void setLayoutDirection(android.view.View,int) -> setLayoutDirection
    android.view.ViewParent getParentForAccessibility(android.view.View) -> getParentForAccessibility
    boolean isOpaque(android.view.View) -> isOpaque
    int resolveSizeAndState(int,int,int) -> resolveSizeAndState
    int getMeasuredWidthAndState(android.view.View) -> getMeasuredWidthAndState
    int getMeasuredHeightAndState(android.view.View) -> getMeasuredHeightAndState
    int getMeasuredState(android.view.View) -> getMeasuredState
    int getAccessibilityLiveRegion(android.view.View) -> getAccessibilityLiveRegion
    void setAccessibilityLiveRegion(android.view.View,int) -> setAccessibilityLiveRegion
    int getPaddingStart(android.view.View) -> getPaddingStart
    int getPaddingEnd(android.view.View) -> getPaddingEnd
    void setPaddingRelative(android.view.View,int,int,int,int) -> setPaddingRelative
    void dispatchStartTemporaryDetach(android.view.View) -> dispatchStartTemporaryDetach
    void dispatchFinishTemporaryDetach(android.view.View) -> dispatchFinishTemporaryDetach
    float getX(android.view.View) -> getX
    float getY(android.view.View) -> getY
    float getRotation(android.view.View) -> getRotation
    float getRotationX(android.view.View) -> getRotationX
    float getRotationY(android.view.View) -> getRotationY
    float getScaleX(android.view.View) -> getScaleX
    float getScaleY(android.view.View) -> getScaleY
    float getTranslationX(android.view.View) -> getTranslationX
    float getTranslationY(android.view.View) -> getTranslationY
    int getMinimumWidth(android.view.View) -> getMinimumWidth
    int getMinimumHeight(android.view.View) -> getMinimumHeight
    android.support.v4.view.ViewPropertyAnimatorCompat animate(android.view.View) -> animate
    void setRotation(android.view.View,float) -> setRotation
    void setRotationX(android.view.View,float) -> setRotationX
    void setRotationY(android.view.View,float) -> setRotationY
    void setScaleX(android.view.View,float) -> setScaleX
    void setScaleY(android.view.View,float) -> setScaleY
    void setTranslationX(android.view.View,float) -> setTranslationX
    void setTranslationY(android.view.View,float) -> setTranslationY
    void setX(android.view.View,float) -> setX
    void setY(android.view.View,float) -> setY
    void setAlpha(android.view.View,float) -> setAlpha
    void setPivotX(android.view.View,float) -> setPivotX
    void setPivotY(android.view.View,float) -> setPivotY
    float getPivotX(android.view.View) -> getPivotX
    float getPivotY(android.view.View) -> getPivotY
    void setElevation(android.view.View,float) -> setElevation
    float getElevation(android.view.View) -> getElevation
    void setTranslationZ(android.view.View,float) -> setTranslationZ
    float getTranslationZ(android.view.View) -> getTranslationZ
    void setTransitionName(android.view.View,java.lang.String) -> setTransitionName
    java.lang.String getTransitionName(android.view.View) -> getTransitionName
    int getWindowSystemUiVisibility(android.view.View) -> getWindowSystemUiVisibility
    void requestApplyInsets(android.view.View) -> requestApplyInsets
    void setChildrenDrawingOrderEnabled(android.view.ViewGroup,boolean) -> setChildrenDrawingOrderEnabled
    boolean getFitsSystemWindows(android.view.View) -> getFitsSystemWindows
    void jumpDrawablesToCurrentState(android.view.View) -> jumpDrawablesToCurrentState
    void setOnApplyWindowInsetsListener(android.view.View,android.support.v4.view.OnApplyWindowInsetsListener) -> setOnApplyWindowInsetsListener
android.support.v4.view.ViewCompatApi21 -> android.support.v4.view.ViewCompatApi21:
    void setTransitionName(android.view.View,java.lang.String) -> setTransitionName
    java.lang.String getTransitionName(android.view.View) -> getTransitionName
    void requestApplyInsets(android.view.View) -> requestApplyInsets
    void setElevation(android.view.View,float) -> setElevation
    float getElevation(android.view.View) -> getElevation
    void setTranslationZ(android.view.View,float) -> setTranslationZ
    float getTranslationZ(android.view.View) -> getTranslationZ
    void setOnApplyWindowInsetsListener(android.view.View,android.support.v4.view.OnApplyWindowInsetsListener) -> setOnApplyWindowInsetsListener
android.support.v4.view.ViewCompatApi21$1 -> android.support.v4.view.ViewCompatApi21$1:
    android.support.v4.view.OnApplyWindowInsetsListener val$listener -> val$listener
    android.view.WindowInsets onApplyWindowInsets(android.view.View,android.view.WindowInsets) -> onApplyWindowInsets
android.support.v4.view.ViewCompatEclairMr1 -> android.support.v4.view.ViewCompatEclairMr1:
    java.lang.String TAG -> TAG
    java.lang.reflect.Method sChildrenDrawingOrderMethod -> sChildrenDrawingOrderMethod
    boolean isOpaque(android.view.View) -> isOpaque
    void setChildrenDrawingOrderEnabled(android.view.ViewGroup,boolean) -> setChildrenDrawingOrderEnabled
android.support.v4.view.ViewCompatGingerbread -> android.support.v4.view.ViewCompatGingerbread:
    int getOverScrollMode(android.view.View) -> getOverScrollMode
    void setOverScrollMode(android.view.View,int) -> setOverScrollMode
android.support.v4.view.ViewCompatHC -> android.support.v4.view.ViewCompatHC:
    long getFrameTime() -> getFrameTime
    float getAlpha(android.view.View) -> getAlpha
    void setLayerType(android.view.View,int,android.graphics.Paint) -> setLayerType
    int getLayerType(android.view.View) -> getLayerType
    int resolveSizeAndState(int,int,int) -> resolveSizeAndState
    int getMeasuredWidthAndState(android.view.View) -> getMeasuredWidthAndState
    int getMeasuredHeightAndState(android.view.View) -> getMeasuredHeightAndState
    int getMeasuredState(android.view.View) -> getMeasuredState
    float getTranslationX(android.view.View) -> getTranslationX
    float getTranslationY(android.view.View) -> getTranslationY
    float getX(android.view.View) -> getX
    float getY(android.view.View) -> getY
    float getRotation(android.view.View) -> getRotation
    float getRotationX(android.view.View) -> getRotationX
    float getRotationY(android.view.View) -> getRotationY
    float getScaleX(android.view.View) -> getScaleX
    float getScaleY(android.view.View) -> getScaleY
    void setTranslationX(android.view.View,float) -> setTranslationX
    void setTranslationY(android.view.View,float) -> setTranslationY
    void setAlpha(android.view.View,float) -> setAlpha
    void setX(android.view.View,float) -> setX
    void setY(android.view.View,float) -> setY
    void setRotation(android.view.View,float) -> setRotation
    void setRotationX(android.view.View,float) -> setRotationX
    void setRotationY(android.view.View,float) -> setRotationY
    void setScaleX(android.view.View,float) -> setScaleX
    void setScaleY(android.view.View,float) -> setScaleY
    void setPivotX(android.view.View,float) -> setPivotX
    void setPivotY(android.view.View,float) -> setPivotY
    float getPivotX(android.view.View) -> getPivotX
    float getPivotY(android.view.View) -> getPivotY
    void jumpDrawablesToCurrentState(android.view.View) -> jumpDrawablesToCurrentState
android.support.v4.view.ViewCompatICS -> android.support.v4.view.ViewCompatICS:
    boolean canScrollHorizontally(android.view.View,int) -> canScrollHorizontally
    boolean canScrollVertically(android.view.View,int) -> canScrollVertically
    void setAccessibilityDelegate(android.view.View,java.lang.Object) -> setAccessibilityDelegate
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> onInitializeAccessibilityNodeInfo
android.support.v4.view.ViewCompatJB -> android.support.v4.view.ViewCompatJB:
    boolean hasTransientState(android.view.View) -> hasTransientState
    void setHasTransientState(android.view.View,boolean) -> setHasTransientState
    void postInvalidateOnAnimation(android.view.View) -> postInvalidateOnAnimation
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> postInvalidateOnAnimation
    void postOnAnimation(android.view.View,java.lang.Runnable) -> postOnAnimation
    void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long) -> postOnAnimationDelayed
    int getImportantForAccessibility(android.view.View) -> getImportantForAccessibility
    void setImportantForAccessibility(android.view.View,int) -> setImportantForAccessibility
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    java.lang.Object getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    android.view.ViewParent getParentForAccessibility(android.view.View) -> getParentForAccessibility
    int getMinimumWidth(android.view.View) -> getMinimumWidth
    int getMinimumHeight(android.view.View) -> getMinimumHeight
    void requestApplyInsets(android.view.View) -> requestApplyInsets
    boolean getFitsSystemWindows(android.view.View) -> getFitsSystemWindows
android.support.v4.view.ViewCompatJellybeanMr1 -> android.support.v4.view.ViewCompatJellybeanMr1:
    int getLabelFor(android.view.View) -> getLabelFor
    void setLabelFor(android.view.View,int) -> setLabelFor
    void setLayerPaint(android.view.View,android.graphics.Paint) -> setLayerPaint
    int getLayoutDirection(android.view.View) -> getLayoutDirection
    void setLayoutDirection(android.view.View,int) -> setLayoutDirection
    int getPaddingStart(android.view.View) -> getPaddingStart
    int getPaddingEnd(android.view.View) -> getPaddingEnd
    void setPaddingRelative(android.view.View,int,int,int,int) -> setPaddingRelative
    int getWindowSystemUiVisibility(android.view.View) -> getWindowSystemUiVisibility
android.support.v4.view.ViewCompatKitKat -> android.support.v4.view.ViewCompatKitKat:
    int getAccessibilityLiveRegion(android.view.View) -> getAccessibilityLiveRegion
    void setAccessibilityLiveRegion(android.view.View,int) -> setAccessibilityLiveRegion
android.support.v4.view.ViewConfigurationCompat -> android.support.v4.view.ViewConfigurationCompat:
    android.support.v4.view.ViewConfigurationCompat$ViewConfigurationVersionImpl IMPL -> IMPL
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> getScaledPagingTouchSlop
    boolean hasPermanentMenuKey(android.view.ViewConfiguration) -> hasPermanentMenuKey
android.support.v4.view.ViewConfigurationCompat$BaseViewConfigurationVersionImpl -> android.support.v4.view.ViewConfigurationCompat$BaseViewConfigurationVersionImpl:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> getScaledPagingTouchSlop
    boolean hasPermanentMenuKey(android.view.ViewConfiguration) -> hasPermanentMenuKey
android.support.v4.view.ViewConfigurationCompat$FroyoViewConfigurationVersionImpl -> android.support.v4.view.ViewConfigurationCompat$FroyoViewConfigurationVersionImpl:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> getScaledPagingTouchSlop
android.support.v4.view.ViewConfigurationCompat$HoneycombViewConfigurationVersionImpl -> android.support.v4.view.ViewConfigurationCompat$HoneycombViewConfigurationVersionImpl:
    boolean hasPermanentMenuKey(android.view.ViewConfiguration) -> hasPermanentMenuKey
android.support.v4.view.ViewConfigurationCompat$IcsViewConfigurationVersionImpl -> android.support.v4.view.ViewConfigurationCompat$IcsViewConfigurationVersionImpl:
    boolean hasPermanentMenuKey(android.view.ViewConfiguration) -> hasPermanentMenuKey
android.support.v4.view.ViewConfigurationCompat$ViewConfigurationVersionImpl -> android.support.v4.view.ViewConfigurationCompat$ViewConfigurationVersionImpl:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> getScaledPagingTouchSlop
    boolean hasPermanentMenuKey(android.view.ViewConfiguration) -> hasPermanentMenuKey
android.support.v4.view.ViewConfigurationCompatFroyo -> android.support.v4.view.ViewConfigurationCompatFroyo:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> getScaledPagingTouchSlop
android.support.v4.view.ViewConfigurationCompatICS -> android.support.v4.view.ViewConfigurationCompatICS:
    boolean hasPermanentMenuKey(android.view.ViewConfiguration) -> hasPermanentMenuKey
android.support.v4.view.ViewGroupCompat -> android.support.v4.view.ViewGroupCompat:
    int LAYOUT_MODE_CLIP_BOUNDS -> LAYOUT_MODE_CLIP_BOUNDS
    int LAYOUT_MODE_OPTICAL_BOUNDS -> LAYOUT_MODE_OPTICAL_BOUNDS
    android.support.v4.view.ViewGroupCompat$ViewGroupCompatImpl IMPL -> IMPL
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void setMotionEventSplittingEnabled(android.view.ViewGroup,boolean) -> setMotionEventSplittingEnabled
    int getLayoutMode(android.view.ViewGroup) -> getLayoutMode
    void setLayoutMode(android.view.ViewGroup,int) -> setLayoutMode
    void setTransitionGroup(android.view.ViewGroup,boolean) -> setTransitionGroup
    boolean isTransitionGroup(android.view.ViewGroup) -> isTransitionGroup
android.support.v4.view.ViewGroupCompat$ViewGroupCompatApi21Impl -> android.support.v4.view.ViewGroupCompat$ViewGroupCompatApi21Impl:
    void setTransitionGroup(android.view.ViewGroup,boolean) -> setTransitionGroup
    boolean isTransitionGroup(android.view.ViewGroup) -> isTransitionGroup
android.support.v4.view.ViewGroupCompat$ViewGroupCompatHCImpl -> android.support.v4.view.ViewGroupCompat$ViewGroupCompatHCImpl:
    void setMotionEventSplittingEnabled(android.view.ViewGroup,boolean) -> setMotionEventSplittingEnabled
android.support.v4.view.ViewGroupCompat$ViewGroupCompatIcsImpl -> android.support.v4.view.ViewGroupCompat$ViewGroupCompatIcsImpl:
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
android.support.v4.view.ViewGroupCompat$ViewGroupCompatImpl -> android.support.v4.view.ViewGroupCompat$ViewGroupCompatImpl:
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void setMotionEventSplittingEnabled(android.view.ViewGroup,boolean) -> setMotionEventSplittingEnabled
    int getLayoutMode(android.view.ViewGroup) -> getLayoutMode
    void setLayoutMode(android.view.ViewGroup,int) -> setLayoutMode
    void setTransitionGroup(android.view.ViewGroup,boolean) -> setTransitionGroup
    boolean isTransitionGroup(android.view.ViewGroup) -> isTransitionGroup
android.support.v4.view.ViewGroupCompat$ViewGroupCompatJellybeanMR2Impl -> android.support.v4.view.ViewGroupCompat$ViewGroupCompatJellybeanMR2Impl:
    int getLayoutMode(android.view.ViewGroup) -> getLayoutMode
    void setLayoutMode(android.view.ViewGroup,int) -> setLayoutMode
android.support.v4.view.ViewGroupCompat$ViewGroupCompatStubImpl -> android.support.v4.view.ViewGroupCompat$ViewGroupCompatStubImpl:
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void setMotionEventSplittingEnabled(android.view.ViewGroup,boolean) -> setMotionEventSplittingEnabled
    int getLayoutMode(android.view.ViewGroup) -> getLayoutMode
    void setLayoutMode(android.view.ViewGroup,int) -> setLayoutMode
    void setTransitionGroup(android.view.ViewGroup,boolean) -> setTransitionGroup
    boolean isTransitionGroup(android.view.ViewGroup) -> isTransitionGroup
android.support.v4.view.ViewGroupCompatApi21 -> android.support.v4.view.ViewGroupCompatApi21:
    void setTransitionGroup(android.view.ViewGroup,boolean) -> setTransitionGroup
    boolean isTransitionGroup(android.view.ViewGroup) -> isTransitionGroup
android.support.v4.view.ViewGroupCompatHC -> android.support.v4.view.ViewGroupCompatHC:
    void setMotionEventSplittingEnabled(android.view.ViewGroup,boolean) -> setMotionEventSplittingEnabled
android.support.v4.view.ViewGroupCompatIcs -> android.support.v4.view.ViewGroupCompatIcs:
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
android.support.v4.view.ViewGroupCompatJellybeanMR2 -> android.support.v4.view.ViewGroupCompatJellybeanMR2:
    int getLayoutMode(android.view.ViewGroup) -> getLayoutMode
    void setLayoutMode(android.view.ViewGroup,int) -> setLayoutMode
android.support.v4.view.ViewPager -> android.support.v4.view.ViewPager:
    java.lang.String TAG -> TAG
    boolean DEBUG -> DEBUG
    boolean USE_CACHE -> USE_CACHE
    int DEFAULT_OFFSCREEN_PAGES -> DEFAULT_OFFSCREEN_PAGES
    int MAX_SETTLE_DURATION -> MAX_SETTLE_DURATION
    int MIN_DISTANCE_FOR_FLING -> MIN_DISTANCE_FOR_FLING
    int DEFAULT_GUTTER_SIZE -> DEFAULT_GUTTER_SIZE
    int MIN_FLING_VELOCITY -> MIN_FLING_VELOCITY
    int[] LAYOUT_ATTRS -> LAYOUT_ATTRS
    int mExpectedAdapterCount -> mExpectedAdapterCount
    java.util.Comparator COMPARATOR -> COMPARATOR
    android.view.animation.Interpolator sInterpolator -> sInterpolator
    java.util.ArrayList mItems -> mItems
    android.support.v4.view.ViewPager$ItemInfo mTempItem -> mTempItem
    android.graphics.Rect mTempRect -> mTempRect
    android.support.v4.view.PagerAdapter mAdapter -> mAdapter
    int mCurItem -> mCurItem
    int mRestoredCurItem -> mRestoredCurItem
    android.os.Parcelable mRestoredAdapterState -> mRestoredAdapterState
    java.lang.ClassLoader mRestoredClassLoader -> mRestoredClassLoader
    android.widget.Scroller mScroller -> mScroller
    android.support.v4.view.ViewPager$PagerObserver mObserver -> mObserver
    int mPageMargin -> mPageMargin
    android.graphics.drawable.Drawable mMarginDrawable -> mMarginDrawable
    int mTopPageBounds -> mTopPageBounds
    int mBottomPageBounds -> mBottomPageBounds
    float mFirstOffset -> mFirstOffset
    float mLastOffset -> mLastOffset
    int mChildWidthMeasureSpec -> mChildWidthMeasureSpec
    int mChildHeightMeasureSpec -> mChildHeightMeasureSpec
    boolean mInLayout -> mInLayout
    boolean mScrollingCacheEnabled -> mScrollingCacheEnabled
    boolean mPopulatePending -> mPopulatePending
    int mOffscreenPageLimit -> mOffscreenPageLimit
    boolean mIsBeingDragged -> mIsBeingDragged
    boolean mIsUnableToDrag -> mIsUnableToDrag
    boolean mIgnoreGutter -> mIgnoreGutter
    int mDefaultGutterSize -> mDefaultGutterSize
    int mGutterSize -> mGutterSize
    int mTouchSlop -> mTouchSlop
    float mLastMotionX -> mLastMotionX
    float mLastMotionY -> mLastMotionY
    float mInitialMotionX -> mInitialMotionX
    float mInitialMotionY -> mInitialMotionY
    int mActivePointerId -> mActivePointerId
    int INVALID_POINTER -> INVALID_POINTER
    android.view.VelocityTracker mVelocityTracker -> mVelocityTracker
    int mMinimumVelocity -> mMinimumVelocity
    int mMaximumVelocity -> mMaximumVelocity
    int mFlingDistance -> mFlingDistance
    int mCloseEnough -> mCloseEnough
    int CLOSE_ENOUGH -> CLOSE_ENOUGH
    boolean mFakeDragging -> mFakeDragging
    long mFakeDragBeginTime -> mFakeDragBeginTime
    android.support.v4.widget.EdgeEffectCompat mLeftEdge -> mLeftEdge
    android.support.v4.widget.EdgeEffectCompat mRightEdge -> mRightEdge
    boolean mFirstLayout -> mFirstLayout
    boolean mNeedCalculatePageOffsets -> mNeedCalculatePageOffsets
    boolean mCalledSuper -> mCalledSuper
    int mDecorChildCount -> mDecorChildCount
    android.support.v4.view.ViewPager$OnPageChangeListener mOnPageChangeListener -> mOnPageChangeListener
    android.support.v4.view.ViewPager$OnPageChangeListener mInternalPageChangeListener -> mInternalPageChangeListener
    android.support.v4.view.ViewPager$OnAdapterChangeListener mAdapterChangeListener -> mAdapterChangeListener
    android.support.v4.view.ViewPager$PageTransformer mPageTransformer -> mPageTransformer
    java.lang.reflect.Method mSetChildrenDrawingOrderEnabled -> mSetChildrenDrawingOrderEnabled
    int DRAW_ORDER_DEFAULT -> DRAW_ORDER_DEFAULT
    int DRAW_ORDER_FORWARD -> DRAW_ORDER_FORWARD
    int DRAW_ORDER_REVERSE -> DRAW_ORDER_REVERSE
    int mDrawingOrder -> mDrawingOrder
    java.util.ArrayList mDrawingOrderedChildren -> mDrawingOrderedChildren
    android.support.v4.view.ViewPager$ViewPositionComparator sPositionComparator -> sPositionComparator
    int SCROLL_STATE_IDLE -> SCROLL_STATE_IDLE
    int SCROLL_STATE_DRAGGING -> SCROLL_STATE_DRAGGING
    int SCROLL_STATE_SETTLING -> SCROLL_STATE_SETTLING
    java.lang.Runnable mEndScrollRunnable -> mEndScrollRunnable
    int mScrollState -> mScrollState
    void initViewPager() -> initViewPager
    void onDetachedFromWindow() -> onDetachedFromWindow
    void setScrollState(int) -> setScrollState
    void setAdapter(android.support.v4.view.PagerAdapter) -> setAdapter
    void removeNonDecorViews() -> removeNonDecorViews
    android.support.v4.view.PagerAdapter getAdapter() -> getAdapter
    void setOnAdapterChangeListener(android.support.v4.view.ViewPager$OnAdapterChangeListener) -> setOnAdapterChangeListener
    int getClientWidth() -> getClientWidth
    void setCurrentItem(int) -> setCurrentItem
    void setCurrentItem(int,boolean) -> setCurrentItem
    int getCurrentItem() -> getCurrentItem
    void setCurrentItemInternal(int,boolean,boolean) -> setCurrentItemInternal
    void setCurrentItemInternal(int,boolean,boolean,int) -> setCurrentItemInternal
    void scrollToItem(int,boolean,int,boolean) -> scrollToItem
    void setOnPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener) -> setOnPageChangeListener
    void setPageTransformer(boolean,android.support.v4.view.ViewPager$PageTransformer) -> setPageTransformer
    void setChildrenDrawingOrderEnabledCompat(boolean) -> setChildrenDrawingOrderEnabledCompat
    int getChildDrawingOrder(int,int) -> getChildDrawingOrder
    android.support.v4.view.ViewPager$OnPageChangeListener setInternalPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener) -> setInternalPageChangeListener
    int getOffscreenPageLimit() -> getOffscreenPageLimit
    void setOffscreenPageLimit(int) -> setOffscreenPageLimit
    void setPageMargin(int) -> setPageMargin
    int getPageMargin() -> getPageMargin
    void setPageMarginDrawable(android.graphics.drawable.Drawable) -> setPageMarginDrawable
    void setPageMarginDrawable(int) -> setPageMarginDrawable
    boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
    void drawableStateChanged() -> drawableStateChanged
    float distanceInfluenceForSnapDuration(float) -> distanceInfluenceForSnapDuration
    void smoothScrollTo(int,int) -> smoothScrollTo
    void smoothScrollTo(int,int,int) -> smoothScrollTo
    android.support.v4.view.ViewPager$ItemInfo addNewItem(int,int) -> addNewItem
    void dataSetChanged() -> dataSetChanged
    void populate() -> populate
    void populate(int) -> populate
    void sortChildDrawingOrder() -> sortChildDrawingOrder
    void calculatePageOffsets(android.support.v4.view.ViewPager$ItemInfo,int,android.support.v4.view.ViewPager$ItemInfo) -> calculatePageOffsets
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    void removeView(android.view.View) -> removeView
    android.support.v4.view.ViewPager$ItemInfo infoForChild(android.view.View) -> infoForChild
    android.support.v4.view.ViewPager$ItemInfo infoForAnyChild(android.view.View) -> infoForAnyChild
    android.support.v4.view.ViewPager$ItemInfo infoForPosition(int) -> infoForPosition
    void onAttachedToWindow() -> onAttachedToWindow
    void onMeasure(int,int) -> onMeasure
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void recomputeScrollPosition(int,int,int,int) -> recomputeScrollPosition
    void onLayout(boolean,int,int,int,int) -> onLayout
    void computeScroll() -> computeScroll
    boolean pageScrolled(int) -> pageScrolled
    void onPageScrolled(int,float,int) -> onPageScrolled
    void completeScroll(boolean) -> completeScroll
    boolean isGutterDrag(float,float) -> isGutterDrag
    void enableLayers(boolean) -> enableLayers
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void requestParentDisallowInterceptTouchEvent(boolean) -> requestParentDisallowInterceptTouchEvent
    boolean performDrag(float) -> performDrag
    android.support.v4.view.ViewPager$ItemInfo infoForCurrentScrollPosition() -> infoForCurrentScrollPosition
    int determineTargetPage(int,float,int,int) -> determineTargetPage
    void draw(android.graphics.Canvas) -> draw
    void onDraw(android.graphics.Canvas) -> onDraw
    boolean beginFakeDrag() -> beginFakeDrag
    void endFakeDrag() -> endFakeDrag
    void fakeDragBy(float) -> fakeDragBy
    boolean isFakeDragging() -> isFakeDragging
    void onSecondaryPointerUp(android.view.MotionEvent) -> onSecondaryPointerUp
    void endDrag() -> endDrag
    void setScrollingCacheEnabled(boolean) -> setScrollingCacheEnabled
    boolean canScrollHorizontally(int) -> canScrollHorizontally
    boolean canScroll(android.view.View,boolean,int,int,int) -> canScroll
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    boolean executeKeyEvent(android.view.KeyEvent) -> executeKeyEvent
    boolean arrowScroll(int) -> arrowScroll
    android.graphics.Rect getChildRectInPagerCoordinates(android.graphics.Rect,android.view.View) -> getChildRectInPagerCoordinates
    boolean pageLeft() -> pageLeft
    boolean pageRight() -> pageRight
    void addFocusables(java.util.ArrayList,int,int) -> addFocusables
    void addTouchables(java.util.ArrayList) -> addTouchables
    boolean onRequestFocusInDescendants(int,android.graphics.Rect) -> onRequestFocusInDescendants
    boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    void access$000(android.support.v4.view.ViewPager,int) -> access$000
    android.support.v4.view.PagerAdapter access$200(android.support.v4.view.ViewPager) -> access$200
    int access$300(android.support.v4.view.ViewPager) -> access$300
    int[] access$400() -> access$400
android.support.v4.view.ViewPager$1 -> android.support.v4.view.ViewPager$1:
    int compare(android.support.v4.view.ViewPager$ItemInfo,android.support.v4.view.ViewPager$ItemInfo) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
android.support.v4.view.ViewPager$2 -> android.support.v4.view.ViewPager$2:
    float getInterpolation(float) -> getInterpolation
android.support.v4.view.ViewPager$3 -> android.support.v4.view.ViewPager$3:
    android.support.v4.view.ViewPager this$0 -> this$0
    void run() -> run
android.support.v4.view.ViewPager$Decor -> android.support.v4.view.ViewPager$Decor:
android.support.v4.view.ViewPager$ItemInfo -> android.support.v4.view.ViewPager$ItemInfo:
    java.lang.Object object -> object
    int position -> position
    boolean scrolling -> scrolling
    float widthFactor -> widthFactor
    float offset -> offset
android.support.v4.view.ViewPager$LayoutParams -> android.support.v4.view.ViewPager$LayoutParams:
    boolean isDecor -> isDecor
    int gravity -> gravity
    float widthFactor -> widthFactor
    boolean needsMeasure -> needsMeasure
    int position -> position
    int childIndex -> childIndex
android.support.v4.view.ViewPager$MyAccessibilityDelegate -> android.support.v4.view.ViewPager$MyAccessibilityDelegate:
    android.support.v4.view.ViewPager this$0 -> this$0
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    boolean canScroll() -> canScroll
android.support.v4.view.ViewPager$OnAdapterChangeListener -> android.support.v4.view.ViewPager$OnAdapterChangeListener:
    void onAdapterChanged(android.support.v4.view.PagerAdapter,android.support.v4.view.PagerAdapter) -> onAdapterChanged
android.support.v4.view.ViewPager$OnPageChangeListener -> android.support.v4.view.ViewPager$OnPageChangeListener:
    void onPageScrolled(int,float,int) -> onPageScrolled
    void onPageSelected(int) -> onPageSelected
    void onPageScrollStateChanged(int) -> onPageScrollStateChanged
android.support.v4.view.ViewPager$PageTransformer -> android.support.v4.view.ViewPager$PageTransformer:
    void transformPage(android.view.View,float) -> transformPage
android.support.v4.view.ViewPager$PagerObserver -> android.support.v4.view.ViewPager$PagerObserver:
    android.support.v4.view.ViewPager this$0 -> this$0
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
android.support.v4.view.ViewPager$SavedState -> android.support.v4.view.ViewPager$SavedState:
    int position -> position
    android.os.Parcelable adapterState -> adapterState
    java.lang.ClassLoader loader -> loader
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
android.support.v4.view.ViewPager$SavedState$1 -> android.support.v4.view.ViewPager$SavedState$1:
    android.support.v4.view.ViewPager$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    android.support.v4.view.ViewPager$SavedState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
android.support.v4.view.ViewPager$SimpleOnPageChangeListener -> android.support.v4.view.ViewPager$SimpleOnPageChangeListener:
    void onPageScrolled(int,float,int) -> onPageScrolled
    void onPageSelected(int) -> onPageSelected
    void onPageScrollStateChanged(int) -> onPageScrollStateChanged
android.support.v4.view.ViewPager$ViewPositionComparator -> android.support.v4.view.ViewPager$ViewPositionComparator:
    int compare(android.view.View,android.view.View) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
android.support.v4.view.ViewParentCompat -> android.support.v4.view.ViewParentCompat:
    android.support.v4.view.ViewParentCompat$ViewParentCompatImpl IMPL -> IMPL
    boolean requestSendAccessibilityEvent(android.view.ViewParent,android.view.View,android.view.accessibility.AccessibilityEvent) -> requestSendAccessibilityEvent
android.support.v4.view.ViewParentCompat$ViewParentCompatICSImpl -> android.support.v4.view.ViewParentCompat$ViewParentCompatICSImpl:
    boolean requestSendAccessibilityEvent(android.view.ViewParent,android.view.View,android.view.accessibility.AccessibilityEvent) -> requestSendAccessibilityEvent
android.support.v4.view.ViewParentCompat$ViewParentCompatImpl -> android.support.v4.view.ViewParentCompat$ViewParentCompatImpl:
    boolean requestSendAccessibilityEvent(android.view.ViewParent,android.view.View,android.view.accessibility.AccessibilityEvent) -> requestSendAccessibilityEvent
android.support.v4.view.ViewParentCompat$ViewParentCompatStubImpl -> android.support.v4.view.ViewParentCompat$ViewParentCompatStubImpl:
    boolean requestSendAccessibilityEvent(android.view.ViewParent,android.view.View,android.view.accessibility.AccessibilityEvent) -> requestSendAccessibilityEvent
android.support.v4.view.ViewParentCompatICS -> android.support.v4.view.ViewParentCompatICS:
    boolean requestSendAccessibilityEvent(android.view.ViewParent,android.view.View,android.view.accessibility.AccessibilityEvent) -> requestSendAccessibilityEvent
android.support.v4.view.ViewPropertyAnimatorCompat -> android.support.v4.view.ViewPropertyAnimatorCompat:
    java.lang.String TAG -> TAG
    java.lang.ref.WeakReference mView -> mView
    java.lang.Runnable mStartAction -> mStartAction
    java.lang.Runnable mEndAction -> mEndAction
    int mOldLayerType -> mOldLayerType
    int LISTENER_TAG_ID -> LISTENER_TAG_ID
    android.support.v4.view.ViewPropertyAnimatorCompat$ViewPropertyAnimatorCompatImpl IMPL -> IMPL
    android.support.v4.view.ViewPropertyAnimatorCompat setDuration(long) -> setDuration
    android.support.v4.view.ViewPropertyAnimatorCompat alpha(float) -> alpha
    android.support.v4.view.ViewPropertyAnimatorCompat alphaBy(float) -> alphaBy
    android.support.v4.view.ViewPropertyAnimatorCompat translationX(float) -> translationX
    android.support.v4.view.ViewPropertyAnimatorCompat translationY(float) -> translationY
    android.support.v4.view.ViewPropertyAnimatorCompat withEndAction(java.lang.Runnable) -> withEndAction
    long getDuration() -> getDuration
    android.support.v4.view.ViewPropertyAnimatorCompat setInterpolator(android.view.animation.Interpolator) -> setInterpolator
    android.view.animation.Interpolator getInterpolator() -> getInterpolator
    android.support.v4.view.ViewPropertyAnimatorCompat setStartDelay(long) -> setStartDelay
    long getStartDelay() -> getStartDelay
    android.support.v4.view.ViewPropertyAnimatorCompat rotation(float) -> rotation
    android.support.v4.view.ViewPropertyAnimatorCompat rotationBy(float) -> rotationBy
    android.support.v4.view.ViewPropertyAnimatorCompat rotationX(float) -> rotationX
    android.support.v4.view.ViewPropertyAnimatorCompat rotationXBy(float) -> rotationXBy
    android.support.v4.view.ViewPropertyAnimatorCompat rotationY(float) -> rotationY
    android.support.v4.view.ViewPropertyAnimatorCompat rotationYBy(float) -> rotationYBy
    android.support.v4.view.ViewPropertyAnimatorCompat scaleX(float) -> scaleX
    android.support.v4.view.ViewPropertyAnimatorCompat scaleXBy(float) -> scaleXBy
    android.support.v4.view.ViewPropertyAnimatorCompat scaleY(float) -> scaleY
    android.support.v4.view.ViewPropertyAnimatorCompat scaleYBy(float) -> scaleYBy
    void cancel() -> cancel
    android.support.v4.view.ViewPropertyAnimatorCompat x(float) -> x
    android.support.v4.view.ViewPropertyAnimatorCompat xBy(float) -> xBy
    android.support.v4.view.ViewPropertyAnimatorCompat y(float) -> y
    android.support.v4.view.ViewPropertyAnimatorCompat yBy(float) -> yBy
    android.support.v4.view.ViewPropertyAnimatorCompat translationXBy(float) -> translationXBy
    android.support.v4.view.ViewPropertyAnimatorCompat translationYBy(float) -> translationYBy
    void start() -> start
    android.support.v4.view.ViewPropertyAnimatorCompat withLayer() -> withLayer
    android.support.v4.view.ViewPropertyAnimatorCompat withStartAction(java.lang.Runnable) -> withStartAction
    android.support.v4.view.ViewPropertyAnimatorCompat setListener(android.support.v4.view.ViewPropertyAnimatorListener) -> setListener
    android.support.v4.view.ViewPropertyAnimatorCompat setUpdateListener(android.support.v4.view.ViewPropertyAnimatorUpdateListener) -> setUpdateListener
    java.lang.Runnable access$002(android.support.v4.view.ViewPropertyAnimatorCompat,java.lang.Runnable) -> access$002
    java.lang.Runnable access$102(android.support.v4.view.ViewPropertyAnimatorCompat,java.lang.Runnable) -> access$102
    java.lang.Runnable access$100(android.support.v4.view.ViewPropertyAnimatorCompat) -> access$100
    java.lang.Runnable access$000(android.support.v4.view.ViewPropertyAnimatorCompat) -> access$000
    int access$402(android.support.v4.view.ViewPropertyAnimatorCompat,int) -> access$402
    int access$400(android.support.v4.view.ViewPropertyAnimatorCompat) -> access$400
android.support.v4.view.ViewPropertyAnimatorCompat$1 -> android.support.v4.view.ViewPropertyAnimatorCompat$1:
android.support.v4.view.ViewPropertyAnimatorCompat$BaseViewPropertyAnimatorCompatImpl -> android.support.v4.view.ViewPropertyAnimatorCompat$BaseViewPropertyAnimatorCompatImpl:
    java.util.WeakHashMap mStarterMap -> mStarterMap
    void setDuration(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,long) -> setDuration
    void alpha(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> alpha
    void translationX(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> translationX
    void translationY(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> translationY
    void withEndAction(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,java.lang.Runnable) -> withEndAction
    long getDuration(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View) -> getDuration
    void setInterpolator(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,android.view.animation.Interpolator) -> setInterpolator
    android.view.animation.Interpolator getInterpolator(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View) -> getInterpolator
    void setStartDelay(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,long) -> setStartDelay
    long getStartDelay(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View) -> getStartDelay
    void alphaBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> alphaBy
    void rotation(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> rotation
    void rotationBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> rotationBy
    void rotationX(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> rotationX
    void rotationXBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> rotationXBy
    void rotationY(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> rotationY
    void rotationYBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> rotationYBy
    void scaleX(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> scaleX
    void scaleXBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> scaleXBy
    void scaleY(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> scaleY
    void scaleYBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> scaleYBy
    void cancel(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View) -> cancel
    void x(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> x
    void xBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> xBy
    void y(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> y
    void yBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> yBy
    void translationXBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> translationXBy
    void translationYBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> translationYBy
    void start(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View) -> start
    void withLayer(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View) -> withLayer
    void withStartAction(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,java.lang.Runnable) -> withStartAction
    void setListener(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,android.support.v4.view.ViewPropertyAnimatorListener) -> setListener
    void setUpdateListener(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,android.support.v4.view.ViewPropertyAnimatorUpdateListener) -> setUpdateListener
    void startAnimation(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View) -> startAnimation
    void removeStartMessage(android.view.View) -> removeStartMessage
    void postStartMessage(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View) -> postStartMessage
    void access$200(android.support.v4.view.ViewPropertyAnimatorCompat$BaseViewPropertyAnimatorCompatImpl,android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View) -> access$200
android.support.v4.view.ViewPropertyAnimatorCompat$BaseViewPropertyAnimatorCompatImpl$Starter -> android.support.v4.view.ViewPropertyAnimatorCompat$BaseViewPropertyAnimatorCompatImpl$Starter:
    java.lang.ref.WeakReference mViewRef -> mViewRef
    android.support.v4.view.ViewPropertyAnimatorCompat mVpa -> mVpa
    android.support.v4.view.ViewPropertyAnimatorCompat$BaseViewPropertyAnimatorCompatImpl this$0 -> this$0
    void run() -> run
android.support.v4.view.ViewPropertyAnimatorCompat$ICSViewPropertyAnimatorCompatImpl -> android.support.v4.view.ViewPropertyAnimatorCompat$ICSViewPropertyAnimatorCompatImpl:
    java.util.WeakHashMap mLayerMap -> mLayerMap
    void setDuration(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,long) -> setDuration
    void alpha(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> alpha
    void translationX(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> translationX
    void translationY(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> translationY
    long getDuration(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View) -> getDuration
    void setInterpolator(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,android.view.animation.Interpolator) -> setInterpolator
    void setStartDelay(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,long) -> setStartDelay
    long getStartDelay(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View) -> getStartDelay
    void alphaBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> alphaBy
    void rotation(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> rotation
    void rotationBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> rotationBy
    void rotationX(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> rotationX
    void rotationXBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> rotationXBy
    void rotationY(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> rotationY
    void rotationYBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> rotationYBy
    void scaleX(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> scaleX
    void scaleXBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> scaleXBy
    void scaleY(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> scaleY
    void scaleYBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> scaleYBy
    void cancel(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View) -> cancel
    void x(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> x
    void xBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> xBy
    void y(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> y
    void yBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> yBy
    void translationXBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> translationXBy
    void translationYBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> translationYBy
    void start(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View) -> start
    void setListener(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,android.support.v4.view.ViewPropertyAnimatorListener) -> setListener
    void withEndAction(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,java.lang.Runnable) -> withEndAction
    void withStartAction(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,java.lang.Runnable) -> withStartAction
    void withLayer(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View) -> withLayer
android.support.v4.view.ViewPropertyAnimatorCompat$ICSViewPropertyAnimatorCompatImpl$MyVpaListener -> android.support.v4.view.ViewPropertyAnimatorCompat$ICSViewPropertyAnimatorCompatImpl$MyVpaListener:
    android.support.v4.view.ViewPropertyAnimatorCompat mVpa -> mVpa
    void onAnimationStart(android.view.View) -> onAnimationStart
    void onAnimationEnd(android.view.View) -> onAnimationEnd
    void onAnimationCancel(android.view.View) -> onAnimationCancel
android.support.v4.view.ViewPropertyAnimatorCompat$JBMr2ViewPropertyAnimatorCompatImpl -> android.support.v4.view.ViewPropertyAnimatorCompat$JBMr2ViewPropertyAnimatorCompatImpl:
    android.view.animation.Interpolator getInterpolator(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View) -> getInterpolator
android.support.v4.view.ViewPropertyAnimatorCompat$JBViewPropertyAnimatorCompatImpl -> android.support.v4.view.ViewPropertyAnimatorCompat$JBViewPropertyAnimatorCompatImpl:
    void setListener(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,android.support.v4.view.ViewPropertyAnimatorListener) -> setListener
    void withStartAction(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,java.lang.Runnable) -> withStartAction
    void withEndAction(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,java.lang.Runnable) -> withEndAction
    void withLayer(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View) -> withLayer
android.support.v4.view.ViewPropertyAnimatorCompat$KitKatViewPropertyAnimatorCompatImpl -> android.support.v4.view.ViewPropertyAnimatorCompat$KitKatViewPropertyAnimatorCompatImpl:
    void setUpdateListener(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,android.support.v4.view.ViewPropertyAnimatorUpdateListener) -> setUpdateListener
android.support.v4.view.ViewPropertyAnimatorCompat$ViewPropertyAnimatorCompatImpl -> android.support.v4.view.ViewPropertyAnimatorCompat$ViewPropertyAnimatorCompatImpl:
    void setDuration(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,long) -> setDuration
    long getDuration(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View) -> getDuration
    void setInterpolator(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,android.view.animation.Interpolator) -> setInterpolator
    android.view.animation.Interpolator getInterpolator(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View) -> getInterpolator
    void setStartDelay(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,long) -> setStartDelay
    long getStartDelay(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View) -> getStartDelay
    void alpha(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> alpha
    void alphaBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> alphaBy
    void rotation(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> rotation
    void rotationBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> rotationBy
    void rotationX(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> rotationX
    void rotationXBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> rotationXBy
    void rotationY(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> rotationY
    void rotationYBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> rotationYBy
    void scaleX(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> scaleX
    void scaleXBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> scaleXBy
    void scaleY(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> scaleY
    void scaleYBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> scaleYBy
    void cancel(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View) -> cancel
    void x(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> x
    void xBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> xBy
    void y(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> y
    void yBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> yBy
    void translationX(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> translationX
    void translationXBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> translationXBy
    void translationY(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> translationY
    void translationYBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> translationYBy
    void start(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View) -> start
    void withLayer(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View) -> withLayer
    void withStartAction(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,java.lang.Runnable) -> withStartAction
    void withEndAction(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,java.lang.Runnable) -> withEndAction
    void setListener(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,android.support.v4.view.ViewPropertyAnimatorListener) -> setListener
    void setUpdateListener(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,android.support.v4.view.ViewPropertyAnimatorUpdateListener) -> setUpdateListener
android.support.v4.view.ViewPropertyAnimatorCompatICS -> android.support.v4.view.ViewPropertyAnimatorCompatICS:
    void setDuration(android.view.View,long) -> setDuration
    void alpha(android.view.View,float) -> alpha
    void translationX(android.view.View,float) -> translationX
    void translationY(android.view.View,float) -> translationY
    long getDuration(android.view.View) -> getDuration
    void setInterpolator(android.view.View,android.view.animation.Interpolator) -> setInterpolator
    void setStartDelay(android.view.View,long) -> setStartDelay
    long getStartDelay(android.view.View) -> getStartDelay
    void alphaBy(android.view.View,float) -> alphaBy
    void rotation(android.view.View,float) -> rotation
    void rotationBy(android.view.View,float) -> rotationBy
    void rotationX(android.view.View,float) -> rotationX
    void rotationXBy(android.view.View,float) -> rotationXBy
    void rotationY(android.view.View,float) -> rotationY
    void rotationYBy(android.view.View,float) -> rotationYBy
    void scaleX(android.view.View,float) -> scaleX
    void scaleXBy(android.view.View,float) -> scaleXBy
    void scaleY(android.view.View,float) -> scaleY
    void scaleYBy(android.view.View,float) -> scaleYBy
    void cancel(android.view.View) -> cancel
    void x(android.view.View,float) -> x
    void xBy(android.view.View,float) -> xBy
    void y(android.view.View,float) -> y
    void yBy(android.view.View,float) -> yBy
    void translationXBy(android.view.View,float) -> translationXBy
    void translationYBy(android.view.View,float) -> translationYBy
    void start(android.view.View) -> start
    void setListener(android.view.View,android.support.v4.view.ViewPropertyAnimatorListener) -> setListener
android.support.v4.view.ViewPropertyAnimatorCompatICS$1 -> android.support.v4.view.ViewPropertyAnimatorCompatICS$1:
    android.support.v4.view.ViewPropertyAnimatorListener val$listener -> val$listener
    android.view.View val$view -> val$view
    void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    void onAnimationStart(android.animation.Animator) -> onAnimationStart
android.support.v4.view.ViewPropertyAnimatorCompatJB -> android.support.v4.view.ViewPropertyAnimatorCompatJB:
    void withStartAction(android.view.View,java.lang.Runnable) -> withStartAction
    void withEndAction(android.view.View,java.lang.Runnable) -> withEndAction
    void withLayer(android.view.View) -> withLayer
    void setListener(android.view.View,android.support.v4.view.ViewPropertyAnimatorListener) -> setListener
android.support.v4.view.ViewPropertyAnimatorCompatJB$1 -> android.support.v4.view.ViewPropertyAnimatorCompatJB$1:
    android.support.v4.view.ViewPropertyAnimatorListener val$listener -> val$listener
    android.view.View val$view -> val$view
    void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    void onAnimationStart(android.animation.Animator) -> onAnimationStart
android.support.v4.view.ViewPropertyAnimatorCompatJellybeanMr2 -> android.support.v4.view.ViewPropertyAnimatorCompatJellybeanMr2:
    android.view.animation.Interpolator getInterpolator(android.view.View) -> getInterpolator
android.support.v4.view.ViewPropertyAnimatorCompatKK -> android.support.v4.view.ViewPropertyAnimatorCompatKK:
    void setUpdateListener(android.view.View,android.support.v4.view.ViewPropertyAnimatorUpdateListener) -> setUpdateListener
android.support.v4.view.ViewPropertyAnimatorCompatKK$1 -> android.support.v4.view.ViewPropertyAnimatorCompatKK$1:
    android.support.v4.view.ViewPropertyAnimatorUpdateListener val$listener -> val$listener
    android.view.View val$view -> val$view
    void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
android.support.v4.view.ViewPropertyAnimatorListener -> android.support.v4.view.ViewPropertyAnimatorListener:
    void onAnimationStart(android.view.View) -> onAnimationStart
    void onAnimationEnd(android.view.View) -> onAnimationEnd
    void onAnimationCancel(android.view.View) -> onAnimationCancel
android.support.v4.view.ViewPropertyAnimatorListenerAdapter -> android.support.v4.view.ViewPropertyAnimatorListenerAdapter:
    void onAnimationStart(android.view.View) -> onAnimationStart
    void onAnimationEnd(android.view.View) -> onAnimationEnd
    void onAnimationCancel(android.view.View) -> onAnimationCancel
android.support.v4.view.ViewPropertyAnimatorUpdateListener -> android.support.v4.view.ViewPropertyAnimatorUpdateListener:
    void onAnimationUpdate(android.view.View) -> onAnimationUpdate
android.support.v4.view.WindowCompat -> android.support.v4.view.WindowCompat:
    int FEATURE_ACTION_BAR -> FEATURE_ACTION_BAR
    int FEATURE_ACTION_BAR_OVERLAY -> FEATURE_ACTION_BAR_OVERLAY
    int FEATURE_ACTION_MODE_OVERLAY -> FEATURE_ACTION_MODE_OVERLAY
android.support.v4.view.WindowInsetsCompat -> android.support.v4.view.WindowInsetsCompat:
    int getSystemWindowInsetLeft() -> getSystemWindowInsetLeft
    int getSystemWindowInsetTop() -> getSystemWindowInsetTop
    int getSystemWindowInsetRight() -> getSystemWindowInsetRight
    int getSystemWindowInsetBottom() -> getSystemWindowInsetBottom
    boolean hasSystemWindowInsets() -> hasSystemWindowInsets
    boolean hasInsets() -> hasInsets
    boolean isConsumed() -> isConsumed
    boolean isRound() -> isRound
    android.support.v4.view.WindowInsetsCompat consumeSystemWindowInsets() -> consumeSystemWindowInsets
    android.support.v4.view.WindowInsetsCompat replaceSystemWindowInsets(int,int,int,int) -> replaceSystemWindowInsets
    android.support.v4.view.WindowInsetsCompat replaceSystemWindowInsets(android.graphics.Rect) -> replaceSystemWindowInsets
    int getStableInsetTop() -> getStableInsetTop
    int getStableInsetLeft() -> getStableInsetLeft
    int getStableInsetRight() -> getStableInsetRight
    int getStableInsetBottom() -> getStableInsetBottom
    boolean hasStableInsets() -> hasStableInsets
    android.support.v4.view.WindowInsetsCompat consumeStableInsets() -> consumeStableInsets
android.support.v4.view.WindowInsetsCompatApi21 -> android.support.v4.view.WindowInsetsCompatApi21:
    android.view.WindowInsets mSource -> mSource
    int getSystemWindowInsetLeft() -> getSystemWindowInsetLeft
    int getSystemWindowInsetTop() -> getSystemWindowInsetTop
    int getSystemWindowInsetRight() -> getSystemWindowInsetRight
    int getSystemWindowInsetBottom() -> getSystemWindowInsetBottom
    boolean hasSystemWindowInsets() -> hasSystemWindowInsets
    boolean hasInsets() -> hasInsets
    boolean isConsumed() -> isConsumed
    boolean isRound() -> isRound
    android.support.v4.view.WindowInsetsCompat consumeSystemWindowInsets() -> consumeSystemWindowInsets
    android.support.v4.view.WindowInsetsCompat replaceSystemWindowInsets(int,int,int,int) -> replaceSystemWindowInsets
    android.support.v4.view.WindowInsetsCompat replaceSystemWindowInsets(android.graphics.Rect) -> replaceSystemWindowInsets
    int getStableInsetTop() -> getStableInsetTop
    int getStableInsetLeft() -> getStableInsetLeft
    int getStableInsetRight() -> getStableInsetRight
    int getStableInsetBottom() -> getStableInsetBottom
    boolean hasStableInsets() -> hasStableInsets
    android.support.v4.view.WindowInsetsCompat consumeStableInsets() -> consumeStableInsets
    android.view.WindowInsets unwrap() -> unwrap
android.support.v4.view.accessibility.AccessibilityEventCompat -> android.support.v4.view.accessibility.AccessibilityEventCompat:
    android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventVersionImpl IMPL -> IMPL
    int TYPE_VIEW_HOVER_ENTER -> TYPE_VIEW_HOVER_ENTER
    int TYPE_VIEW_HOVER_EXIT -> TYPE_VIEW_HOVER_EXIT
    int TYPE_TOUCH_EXPLORATION_GESTURE_START -> TYPE_TOUCH_EXPLORATION_GESTURE_START
    int TYPE_TOUCH_EXPLORATION_GESTURE_END -> TYPE_TOUCH_EXPLORATION_GESTURE_END
    int TYPE_WINDOW_CONTENT_CHANGED -> TYPE_WINDOW_CONTENT_CHANGED
    int TYPE_VIEW_SCROLLED -> TYPE_VIEW_SCROLLED
    int TYPE_VIEW_TEXT_SELECTION_CHANGED -> TYPE_VIEW_TEXT_SELECTION_CHANGED
    int TYPE_ANNOUNCEMENT -> TYPE_ANNOUNCEMENT
    int TYPE_VIEW_ACCESSIBILITY_FOCUSED -> TYPE_VIEW_ACCESSIBILITY_FOCUSED
    int TYPE_VIEW_ACCESSIBILITY_FOCUS_CLEARED -> TYPE_VIEW_ACCESSIBILITY_FOCUS_CLEARED
    int TYPE_VIEW_TEXT_TRAVERSED_AT_MOVEMENT_GRANULARITY -> TYPE_VIEW_TEXT_TRAVERSED_AT_MOVEMENT_GRANULARITY
    int TYPE_GESTURE_DETECTION_START -> TYPE_GESTURE_DETECTION_START
    int TYPE_GESTURE_DETECTION_END -> TYPE_GESTURE_DETECTION_END
    int TYPE_TOUCH_INTERACTION_START -> TYPE_TOUCH_INTERACTION_START
    int TYPE_TOUCH_INTERACTION_END -> TYPE_TOUCH_INTERACTION_END
    int TYPES_ALL_MASK -> TYPES_ALL_MASK
    int getRecordCount(android.view.accessibility.AccessibilityEvent) -> getRecordCount
    void appendRecord(android.view.accessibility.AccessibilityEvent,android.support.v4.view.accessibility.AccessibilityRecordCompat) -> appendRecord
    android.support.v4.view.accessibility.AccessibilityRecordCompat getRecord(android.view.accessibility.AccessibilityEvent,int) -> getRecord
    android.support.v4.view.accessibility.AccessibilityRecordCompat asRecord(android.view.accessibility.AccessibilityEvent) -> asRecord
android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventIcsImpl -> android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventIcsImpl:
    void appendRecord(android.view.accessibility.AccessibilityEvent,java.lang.Object) -> appendRecord
    java.lang.Object getRecord(android.view.accessibility.AccessibilityEvent,int) -> getRecord
    int getRecordCount(android.view.accessibility.AccessibilityEvent) -> getRecordCount
android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventStubImpl -> android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventStubImpl:
    void appendRecord(android.view.accessibility.AccessibilityEvent,java.lang.Object) -> appendRecord
    java.lang.Object getRecord(android.view.accessibility.AccessibilityEvent,int) -> getRecord
    int getRecordCount(android.view.accessibility.AccessibilityEvent) -> getRecordCount
android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventVersionImpl -> android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventVersionImpl:
    int getRecordCount(android.view.accessibility.AccessibilityEvent) -> getRecordCount
    void appendRecord(android.view.accessibility.AccessibilityEvent,java.lang.Object) -> appendRecord
    java.lang.Object getRecord(android.view.accessibility.AccessibilityEvent,int) -> getRecord
android.support.v4.view.accessibility.AccessibilityEventCompatIcs -> android.support.v4.view.accessibility.AccessibilityEventCompatIcs:
    int getRecordCount(android.view.accessibility.AccessibilityEvent) -> getRecordCount
    void appendRecord(android.view.accessibility.AccessibilityEvent,java.lang.Object) -> appendRecord
    java.lang.Object getRecord(android.view.accessibility.AccessibilityEvent,int) -> getRecord
    void setScrollable(android.view.accessibility.AccessibilityEvent,boolean) -> setScrollable
android.support.v4.view.accessibility.AccessibilityManagerCompat -> android.support.v4.view.accessibility.AccessibilityManagerCompat:
    android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerVersionImpl IMPL -> IMPL
    boolean addAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> addAccessibilityStateChangeListener
    boolean removeAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> removeAccessibilityStateChangeListener
    java.util.List getInstalledAccessibilityServiceList(android.view.accessibility.AccessibilityManager) -> getInstalledAccessibilityServiceList
    java.util.List getEnabledAccessibilityServiceList(android.view.accessibility.AccessibilityManager,int) -> getEnabledAccessibilityServiceList
    boolean isTouchExplorationEnabled(android.view.accessibility.AccessibilityManager) -> isTouchExplorationEnabled
    android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerVersionImpl access$000() -> access$000
android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerIcsImpl -> android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerIcsImpl:
    java.lang.Object newAccessiblityStateChangeListener(android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> newAccessiblityStateChangeListener
    boolean addAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> addAccessibilityStateChangeListener
    boolean removeAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> removeAccessibilityStateChangeListener
    java.util.List getEnabledAccessibilityServiceList(android.view.accessibility.AccessibilityManager,int) -> getEnabledAccessibilityServiceList
    java.util.List getInstalledAccessibilityServiceList(android.view.accessibility.AccessibilityManager) -> getInstalledAccessibilityServiceList
    boolean isTouchExplorationEnabled(android.view.accessibility.AccessibilityManager) -> isTouchExplorationEnabled
android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerIcsImpl$1 -> android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerIcsImpl$1:
    android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat val$listener -> val$listener
    android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerIcsImpl this$0 -> this$0
    void onAccessibilityStateChanged(boolean) -> onAccessibilityStateChanged
android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerStubImpl -> android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerStubImpl:
    java.lang.Object newAccessiblityStateChangeListener(android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> newAccessiblityStateChangeListener
    boolean addAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> addAccessibilityStateChangeListener
    boolean removeAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> removeAccessibilityStateChangeListener
    java.util.List getEnabledAccessibilityServiceList(android.view.accessibility.AccessibilityManager,int) -> getEnabledAccessibilityServiceList
    java.util.List getInstalledAccessibilityServiceList(android.view.accessibility.AccessibilityManager) -> getInstalledAccessibilityServiceList
    boolean isTouchExplorationEnabled(android.view.accessibility.AccessibilityManager) -> isTouchExplorationEnabled
android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerVersionImpl -> android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerVersionImpl:
    java.lang.Object newAccessiblityStateChangeListener(android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> newAccessiblityStateChangeListener
    boolean addAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> addAccessibilityStateChangeListener
    boolean removeAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> removeAccessibilityStateChangeListener
    java.util.List getEnabledAccessibilityServiceList(android.view.accessibility.AccessibilityManager,int) -> getEnabledAccessibilityServiceList
    java.util.List getInstalledAccessibilityServiceList(android.view.accessibility.AccessibilityManager) -> getInstalledAccessibilityServiceList
    boolean isTouchExplorationEnabled(android.view.accessibility.AccessibilityManager) -> isTouchExplorationEnabled
android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat -> android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat:
    java.lang.Object mListener -> mListener
    void onAccessibilityStateChanged(boolean) -> onAccessibilityStateChanged
android.support.v4.view.accessibility.AccessibilityManagerCompatIcs -> android.support.v4.view.accessibility.AccessibilityManagerCompatIcs:
    java.lang.Object newAccessibilityStateChangeListener(android.support.v4.view.accessibility.AccessibilityManagerCompatIcs$AccessibilityStateChangeListenerBridge) -> newAccessibilityStateChangeListener
    boolean addAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,java.lang.Object) -> addAccessibilityStateChangeListener
    boolean removeAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,java.lang.Object) -> removeAccessibilityStateChangeListener
    java.util.List getEnabledAccessibilityServiceList(android.view.accessibility.AccessibilityManager,int) -> getEnabledAccessibilityServiceList
    java.util.List getInstalledAccessibilityServiceList(android.view.accessibility.AccessibilityManager) -> getInstalledAccessibilityServiceList
    boolean isTouchExplorationEnabled(android.view.accessibility.AccessibilityManager) -> isTouchExplorationEnabled
android.support.v4.view.accessibility.AccessibilityManagerCompatIcs$1 -> android.support.v4.view.accessibility.AccessibilityManagerCompatIcs$1:
    android.support.v4.view.accessibility.AccessibilityManagerCompatIcs$AccessibilityStateChangeListenerBridge val$bridge -> val$bridge
    void onAccessibilityStateChanged(boolean) -> onAccessibilityStateChanged
android.support.v4.view.accessibility.AccessibilityManagerCompatIcs$AccessibilityStateChangeListenerBridge -> android.support.v4.view.accessibility.AccessibilityManagerCompatIcs$AccessibilityStateChangeListenerBridge:
    void onAccessibilityStateChanged(boolean) -> onAccessibilityStateChanged
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompat:
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl IMPL -> IMPL
    java.lang.Object mInfo -> mInfo
    int ACTION_FOCUS -> ACTION_FOCUS
    int ACTION_CLEAR_FOCUS -> ACTION_CLEAR_FOCUS
    int ACTION_SELECT -> ACTION_SELECT
    int ACTION_CLEAR_SELECTION -> ACTION_CLEAR_SELECTION
    int ACTION_CLICK -> ACTION_CLICK
    int ACTION_LONG_CLICK -> ACTION_LONG_CLICK
    int ACTION_ACCESSIBILITY_FOCUS -> ACTION_ACCESSIBILITY_FOCUS
    int ACTION_CLEAR_ACCESSIBILITY_FOCUS -> ACTION_CLEAR_ACCESSIBILITY_FOCUS
    int ACTION_NEXT_AT_MOVEMENT_GRANULARITY -> ACTION_NEXT_AT_MOVEMENT_GRANULARITY
    int ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY -> ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY
    int ACTION_NEXT_HTML_ELEMENT -> ACTION_NEXT_HTML_ELEMENT
    int ACTION_PREVIOUS_HTML_ELEMENT -> ACTION_PREVIOUS_HTML_ELEMENT
    int ACTION_SCROLL_FORWARD -> ACTION_SCROLL_FORWARD
    int ACTION_SCROLL_BACKWARD -> ACTION_SCROLL_BACKWARD
    int ACTION_COPY -> ACTION_COPY
    int ACTION_PASTE -> ACTION_PASTE
    int ACTION_CUT -> ACTION_CUT
    int ACTION_SET_SELECTION -> ACTION_SET_SELECTION
    int ACTION_SET_TEXT -> ACTION_SET_TEXT
    java.lang.String ACTION_ARGUMENT_MOVEMENT_GRANULARITY_INT -> ACTION_ARGUMENT_MOVEMENT_GRANULARITY_INT
    java.lang.String ACTION_ARGUMENT_HTML_ELEMENT_STRING -> ACTION_ARGUMENT_HTML_ELEMENT_STRING
    java.lang.String ACTION_ARGUMENT_EXTEND_SELECTION_BOOLEAN -> ACTION_ARGUMENT_EXTEND_SELECTION_BOOLEAN
    java.lang.String ACTION_ARGUMENT_SELECTION_START_INT -> ACTION_ARGUMENT_SELECTION_START_INT
    java.lang.String ACTION_ARGUMENT_SELECTION_END_INT -> ACTION_ARGUMENT_SELECTION_END_INT
    java.lang.String ACTION_ARGUMENT_SET_TEXT_CHARSEQUENCE -> ACTION_ARGUMENT_SET_TEXT_CHARSEQUENCE
    int FOCUS_INPUT -> FOCUS_INPUT
    int FOCUS_ACCESSIBILITY -> FOCUS_ACCESSIBILITY
    int MOVEMENT_GRANULARITY_CHARACTER -> MOVEMENT_GRANULARITY_CHARACTER
    int MOVEMENT_GRANULARITY_WORD -> MOVEMENT_GRANULARITY_WORD
    int MOVEMENT_GRANULARITY_LINE -> MOVEMENT_GRANULARITY_LINE
    int MOVEMENT_GRANULARITY_PARAGRAPH -> MOVEMENT_GRANULARITY_PARAGRAPH
    int MOVEMENT_GRANULARITY_PAGE -> MOVEMENT_GRANULARITY_PAGE
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat wrapNonNullInstance(java.lang.Object) -> wrapNonNullInstance
    java.lang.Object getInfo() -> getInfo
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat obtain(android.view.View) -> obtain
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat obtain(android.view.View,int) -> obtain
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat obtain() -> obtain
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat obtain(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> obtain
    void setSource(android.view.View) -> setSource
    void setSource(android.view.View,int) -> setSource
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat findFocus(int) -> findFocus
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat focusSearch(int) -> focusSearch
    int getWindowId() -> getWindowId
    int getChildCount() -> getChildCount
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getChild(int) -> getChild
    void addChild(android.view.View) -> addChild
    void addChild(android.view.View,int) -> addChild
    int getActions() -> getActions
    void addAction(int) -> addAction
    boolean performAction(int) -> performAction
    boolean performAction(int,android.os.Bundle) -> performAction
    void setMovementGranularities(int) -> setMovementGranularities
    int getMovementGranularities() -> getMovementGranularities
    java.util.List findAccessibilityNodeInfosByText(java.lang.String) -> findAccessibilityNodeInfosByText
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getParent() -> getParent
    void setParent(android.view.View) -> setParent
    void setParent(android.view.View,int) -> setParent
    void getBoundsInParent(android.graphics.Rect) -> getBoundsInParent
    void setBoundsInParent(android.graphics.Rect) -> setBoundsInParent
    void getBoundsInScreen(android.graphics.Rect) -> getBoundsInScreen
    void setBoundsInScreen(android.graphics.Rect) -> setBoundsInScreen
    boolean isCheckable() -> isCheckable
    void setCheckable(boolean) -> setCheckable
    boolean isChecked() -> isChecked
    void setChecked(boolean) -> setChecked
    boolean isFocusable() -> isFocusable
    void setFocusable(boolean) -> setFocusable
    boolean isFocused() -> isFocused
    void setFocused(boolean) -> setFocused
    boolean isVisibleToUser() -> isVisibleToUser
    void setVisibleToUser(boolean) -> setVisibleToUser
    boolean isAccessibilityFocused() -> isAccessibilityFocused
    void setAccessibilityFocused(boolean) -> setAccessibilityFocused
    boolean isSelected() -> isSelected
    void setSelected(boolean) -> setSelected
    boolean isClickable() -> isClickable
    void setClickable(boolean) -> setClickable
    boolean isLongClickable() -> isLongClickable
    void setLongClickable(boolean) -> setLongClickable
    boolean isEnabled() -> isEnabled
    void setEnabled(boolean) -> setEnabled
    boolean isPassword() -> isPassword
    void setPassword(boolean) -> setPassword
    boolean isScrollable() -> isScrollable
    void setScrollable(boolean) -> setScrollable
    java.lang.CharSequence getPackageName() -> getPackageName
    void setPackageName(java.lang.CharSequence) -> setPackageName
    java.lang.CharSequence getClassName() -> getClassName
    void setClassName(java.lang.CharSequence) -> setClassName
    java.lang.CharSequence getText() -> getText
    void setText(java.lang.CharSequence) -> setText
    java.lang.CharSequence getContentDescription() -> getContentDescription
    void setContentDescription(java.lang.CharSequence) -> setContentDescription
    void recycle() -> recycle
    void setViewIdResourceName(java.lang.String) -> setViewIdResourceName
    java.lang.String getViewIdResourceName() -> getViewIdResourceName
    int getLiveRegion() -> getLiveRegion
    void setLiveRegion(int) -> setLiveRegion
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat getCollectionInfo() -> getCollectionInfo
    void setCollectionInfo(java.lang.Object) -> setCollectionInfo
    void setCollectionItemInfo(java.lang.Object) -> setCollectionItemInfo
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat getCollectionItemInfo() -> getCollectionItemInfo
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$RangeInfoCompat getRangeInfo() -> getRangeInfo
    java.util.List getActionList() -> getActionList
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
    java.lang.String getActionSymbolicName(int) -> getActionSymbolicName
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl access$000() -> access$000
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$1 -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$1:
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat:
    java.lang.Object mAction -> mAction
    int getId() -> getId
    java.lang.CharSequence getLabel() -> getLabel
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoApi21Impl -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoApi21Impl:
    java.util.List getActionList(java.lang.Object) -> getActionList
    java.lang.Object obtainCollectionInfo(int,int,boolean,int) -> obtainCollectionInfo
    void addAction(java.lang.Object,int,java.lang.CharSequence) -> addAction
    java.lang.Object obtainCollectionItemInfo(int,int,int,int,boolean,boolean) -> obtainCollectionItemInfo
    boolean isCollectionItemSelected(java.lang.Object) -> isCollectionItemSelected
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoIcsImpl -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoIcsImpl:
    java.lang.Object obtain() -> obtain
    java.lang.Object obtain(android.view.View) -> obtain
    java.lang.Object obtain(java.lang.Object) -> obtain
    void addAction(java.lang.Object,int) -> addAction
    void addChild(java.lang.Object,android.view.View) -> addChild
    java.util.List findAccessibilityNodeInfosByText(java.lang.Object,java.lang.String) -> findAccessibilityNodeInfosByText
    int getActions(java.lang.Object) -> getActions
    void getBoundsInParent(java.lang.Object,android.graphics.Rect) -> getBoundsInParent
    void getBoundsInScreen(java.lang.Object,android.graphics.Rect) -> getBoundsInScreen
    java.lang.Object getChild(java.lang.Object,int) -> getChild
    int getChildCount(java.lang.Object) -> getChildCount
    java.lang.CharSequence getClassName(java.lang.Object) -> getClassName
    java.lang.CharSequence getContentDescription(java.lang.Object) -> getContentDescription
    java.lang.CharSequence getPackageName(java.lang.Object) -> getPackageName
    java.lang.Object getParent(java.lang.Object) -> getParent
    java.lang.CharSequence getText(java.lang.Object) -> getText
    int getWindowId(java.lang.Object) -> getWindowId
    boolean isCheckable(java.lang.Object) -> isCheckable
    boolean isChecked(java.lang.Object) -> isChecked
    boolean isClickable(java.lang.Object) -> isClickable
    boolean isEnabled(java.lang.Object) -> isEnabled
    boolean isFocusable(java.lang.Object) -> isFocusable
    boolean isFocused(java.lang.Object) -> isFocused
    boolean isLongClickable(java.lang.Object) -> isLongClickable
    boolean isPassword(java.lang.Object) -> isPassword
    boolean isScrollable(java.lang.Object) -> isScrollable
    boolean isSelected(java.lang.Object) -> isSelected
    boolean performAction(java.lang.Object,int) -> performAction
    void setBoundsInParent(java.lang.Object,android.graphics.Rect) -> setBoundsInParent
    void setBoundsInScreen(java.lang.Object,android.graphics.Rect) -> setBoundsInScreen
    void setCheckable(java.lang.Object,boolean) -> setCheckable
    void setChecked(java.lang.Object,boolean) -> setChecked
    void setClassName(java.lang.Object,java.lang.CharSequence) -> setClassName
    void setClickable(java.lang.Object,boolean) -> setClickable
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> setContentDescription
    void setEnabled(java.lang.Object,boolean) -> setEnabled
    void setFocusable(java.lang.Object,boolean) -> setFocusable
    void setFocused(java.lang.Object,boolean) -> setFocused
    void setLongClickable(java.lang.Object,boolean) -> setLongClickable
    void setPackageName(java.lang.Object,java.lang.CharSequence) -> setPackageName
    void setParent(java.lang.Object,android.view.View) -> setParent
    void setPassword(java.lang.Object,boolean) -> setPassword
    void setScrollable(java.lang.Object,boolean) -> setScrollable
    void setSelected(java.lang.Object,boolean) -> setSelected
    void setSource(java.lang.Object,android.view.View) -> setSource
    void setText(java.lang.Object,java.lang.CharSequence) -> setText
    void recycle(java.lang.Object) -> recycle
    void addAction(java.lang.Object,int,java.lang.CharSequence) -> addAction
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl:
    java.lang.Object obtain() -> obtain
    java.lang.Object obtain(android.view.View) -> obtain
    java.lang.Object obtain(java.lang.Object) -> obtain
    java.lang.Object obtain(android.view.View,int) -> obtain
    void setSource(java.lang.Object,android.view.View) -> setSource
    void setSource(java.lang.Object,android.view.View,int) -> setSource
    java.lang.Object findFocus(java.lang.Object,int) -> findFocus
    java.lang.Object focusSearch(java.lang.Object,int) -> focusSearch
    int getWindowId(java.lang.Object) -> getWindowId
    int getChildCount(java.lang.Object) -> getChildCount
    java.lang.Object getChild(java.lang.Object,int) -> getChild
    void addChild(java.lang.Object,android.view.View) -> addChild
    void addChild(java.lang.Object,android.view.View,int) -> addChild
    int getActions(java.lang.Object) -> getActions
    void addAction(java.lang.Object,int) -> addAction
    boolean performAction(java.lang.Object,int) -> performAction
    boolean performAction(java.lang.Object,int,android.os.Bundle) -> performAction
    void setMovementGranularities(java.lang.Object,int) -> setMovementGranularities
    int getMovementGranularities(java.lang.Object) -> getMovementGranularities
    java.util.List findAccessibilityNodeInfosByText(java.lang.Object,java.lang.String) -> findAccessibilityNodeInfosByText
    java.lang.Object getParent(java.lang.Object) -> getParent
    void setParent(java.lang.Object,android.view.View,int) -> setParent
    void setParent(java.lang.Object,android.view.View) -> setParent
    void getBoundsInParent(java.lang.Object,android.graphics.Rect) -> getBoundsInParent
    void setBoundsInParent(java.lang.Object,android.graphics.Rect) -> setBoundsInParent
    void getBoundsInScreen(java.lang.Object,android.graphics.Rect) -> getBoundsInScreen
    void setBoundsInScreen(java.lang.Object,android.graphics.Rect) -> setBoundsInScreen
    boolean isCheckable(java.lang.Object) -> isCheckable
    void setCheckable(java.lang.Object,boolean) -> setCheckable
    boolean isChecked(java.lang.Object) -> isChecked
    void setChecked(java.lang.Object,boolean) -> setChecked
    boolean isFocusable(java.lang.Object) -> isFocusable
    void setFocusable(java.lang.Object,boolean) -> setFocusable
    boolean isFocused(java.lang.Object) -> isFocused
    void setFocused(java.lang.Object,boolean) -> setFocused
    boolean isVisibleToUser(java.lang.Object) -> isVisibleToUser
    void setVisibleToUser(java.lang.Object,boolean) -> setVisibleToUser
    boolean isAccessibilityFocused(java.lang.Object) -> isAccessibilityFocused
    void setAccessibilityFocused(java.lang.Object,boolean) -> setAccessibilityFocused
    boolean isSelected(java.lang.Object) -> isSelected
    void setSelected(java.lang.Object,boolean) -> setSelected
    boolean isClickable(java.lang.Object) -> isClickable
    void setClickable(java.lang.Object,boolean) -> setClickable
    boolean isLongClickable(java.lang.Object) -> isLongClickable
    void setLongClickable(java.lang.Object,boolean) -> setLongClickable
    boolean isEnabled(java.lang.Object) -> isEnabled
    void setEnabled(java.lang.Object,boolean) -> setEnabled
    boolean isPassword(java.lang.Object) -> isPassword
    void setPassword(java.lang.Object,boolean) -> setPassword
    boolean isScrollable(java.lang.Object) -> isScrollable
    void setScrollable(java.lang.Object,boolean) -> setScrollable
    java.lang.CharSequence getPackageName(java.lang.Object) -> getPackageName
    void setPackageName(java.lang.Object,java.lang.CharSequence) -> setPackageName
    java.lang.CharSequence getClassName(java.lang.Object) -> getClassName
    void setClassName(java.lang.Object,java.lang.CharSequence) -> setClassName
    java.lang.CharSequence getText(java.lang.Object) -> getText
    void setText(java.lang.Object,java.lang.CharSequence) -> setText
    java.lang.CharSequence getContentDescription(java.lang.Object) -> getContentDescription
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> setContentDescription
    void recycle(java.lang.Object) -> recycle
    java.lang.String getViewIdResourceName(java.lang.Object) -> getViewIdResourceName
    void setViewIdResourceName(java.lang.Object,java.lang.String) -> setViewIdResourceName
    int getLiveRegion(java.lang.Object) -> getLiveRegion
    void setLiveRegion(java.lang.Object,int) -> setLiveRegion
    java.lang.Object getCollectionInfo(java.lang.Object) -> getCollectionInfo
    void setCollectionInfo(java.lang.Object,java.lang.Object) -> setCollectionInfo
    java.lang.Object getCollectionItemInfo(java.lang.Object) -> getCollectionItemInfo
    void setCollectionItemInfo(java.lang.Object,java.lang.Object) -> setCollectionItemInfo
    java.lang.Object getRangeInfo(java.lang.Object) -> getRangeInfo
    java.util.List getActionList(java.lang.Object) -> getActionList
    void addAction(java.lang.Object,int,java.lang.CharSequence) -> addAction
    java.lang.Object obtainCollectionInfo(int,int,boolean,int) -> obtainCollectionInfo
    int getCollectionInfoColumnCount(java.lang.Object) -> getCollectionInfoColumnCount
    int getCollectionInfoRowCount(java.lang.Object) -> getCollectionInfoRowCount
    boolean isCollectionInfoHierarchical(java.lang.Object) -> isCollectionInfoHierarchical
    java.lang.Object obtainCollectionItemInfo(int,int,int,int,boolean,boolean) -> obtainCollectionItemInfo
    int getCollectionItemColumnIndex(java.lang.Object) -> getCollectionItemColumnIndex
    int getCollectionItemColumnSpan(java.lang.Object) -> getCollectionItemColumnSpan
    int getCollectionItemRowIndex(java.lang.Object) -> getCollectionItemRowIndex
    int getCollectionItemRowSpan(java.lang.Object) -> getCollectionItemRowSpan
    boolean isCollectionItemHeading(java.lang.Object) -> isCollectionItemHeading
    boolean isCollectionItemSelected(java.lang.Object) -> isCollectionItemSelected
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoJellybeanImpl -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoJellybeanImpl:
    java.lang.Object obtain(android.view.View,int) -> obtain
    java.lang.Object findFocus(java.lang.Object,int) -> findFocus
    java.lang.Object focusSearch(java.lang.Object,int) -> focusSearch
    void addChild(java.lang.Object,android.view.View,int) -> addChild
    void setSource(java.lang.Object,android.view.View,int) -> setSource
    boolean isVisibleToUser(java.lang.Object) -> isVisibleToUser
    void setVisibleToUser(java.lang.Object,boolean) -> setVisibleToUser
    boolean isAccessibilityFocused(java.lang.Object) -> isAccessibilityFocused
    void setAccessibilityFocused(java.lang.Object,boolean) -> setAccessibilityFocused
    boolean performAction(java.lang.Object,int,android.os.Bundle) -> performAction
    void setMovementGranularities(java.lang.Object,int) -> setMovementGranularities
    int getMovementGranularities(java.lang.Object) -> getMovementGranularities
    void setParent(java.lang.Object,android.view.View,int) -> setParent
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoJellybeanMr2Impl -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoJellybeanMr2Impl:
    java.lang.String getViewIdResourceName(java.lang.Object) -> getViewIdResourceName
    void setViewIdResourceName(java.lang.Object,java.lang.String) -> setViewIdResourceName
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoKitKatImpl -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoKitKatImpl:
    int getLiveRegion(java.lang.Object) -> getLiveRegion
    void setLiveRegion(java.lang.Object,int) -> setLiveRegion
    java.lang.Object getCollectionInfo(java.lang.Object) -> getCollectionInfo
    void setCollectionInfo(java.lang.Object,java.lang.Object) -> setCollectionInfo
    java.lang.Object obtainCollectionInfo(int,int,boolean,int) -> obtainCollectionInfo
    java.lang.Object obtainCollectionItemInfo(int,int,int,int,boolean,boolean) -> obtainCollectionItemInfo
    int getCollectionInfoColumnCount(java.lang.Object) -> getCollectionInfoColumnCount
    int getCollectionInfoRowCount(java.lang.Object) -> getCollectionInfoRowCount
    boolean isCollectionInfoHierarchical(java.lang.Object) -> isCollectionInfoHierarchical
    java.lang.Object getCollectionItemInfo(java.lang.Object) -> getCollectionItemInfo
    java.lang.Object getRangeInfo(java.lang.Object) -> getRangeInfo
    int getCollectionItemColumnIndex(java.lang.Object) -> getCollectionItemColumnIndex
    int getCollectionItemColumnSpan(java.lang.Object) -> getCollectionItemColumnSpan
    int getCollectionItemRowIndex(java.lang.Object) -> getCollectionItemRowIndex
    int getCollectionItemRowSpan(java.lang.Object) -> getCollectionItemRowSpan
    boolean isCollectionItemHeading(java.lang.Object) -> isCollectionItemHeading
    void setCollectionItemInfo(java.lang.Object,java.lang.Object) -> setCollectionItemInfo
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoStubImpl -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoStubImpl:
    java.lang.Object obtain() -> obtain
    java.lang.Object obtain(android.view.View) -> obtain
    java.lang.Object obtain(android.view.View,int) -> obtain
    java.lang.Object obtain(java.lang.Object) -> obtain
    void addAction(java.lang.Object,int) -> addAction
    void addChild(java.lang.Object,android.view.View) -> addChild
    void addChild(java.lang.Object,android.view.View,int) -> addChild
    java.util.List findAccessibilityNodeInfosByText(java.lang.Object,java.lang.String) -> findAccessibilityNodeInfosByText
    int getActions(java.lang.Object) -> getActions
    void getBoundsInParent(java.lang.Object,android.graphics.Rect) -> getBoundsInParent
    void getBoundsInScreen(java.lang.Object,android.graphics.Rect) -> getBoundsInScreen
    java.lang.Object getChild(java.lang.Object,int) -> getChild
    int getChildCount(java.lang.Object) -> getChildCount
    java.lang.CharSequence getClassName(java.lang.Object) -> getClassName
    java.lang.CharSequence getContentDescription(java.lang.Object) -> getContentDescription
    java.lang.CharSequence getPackageName(java.lang.Object) -> getPackageName
    java.lang.Object getParent(java.lang.Object) -> getParent
    java.lang.CharSequence getText(java.lang.Object) -> getText
    int getWindowId(java.lang.Object) -> getWindowId
    boolean isCheckable(java.lang.Object) -> isCheckable
    boolean isChecked(java.lang.Object) -> isChecked
    boolean isClickable(java.lang.Object) -> isClickable
    boolean isEnabled(java.lang.Object) -> isEnabled
    boolean isFocusable(java.lang.Object) -> isFocusable
    boolean isFocused(java.lang.Object) -> isFocused
    boolean isVisibleToUser(java.lang.Object) -> isVisibleToUser
    boolean isAccessibilityFocused(java.lang.Object) -> isAccessibilityFocused
    boolean isLongClickable(java.lang.Object) -> isLongClickable
    boolean isPassword(java.lang.Object) -> isPassword
    boolean isScrollable(java.lang.Object) -> isScrollable
    boolean isSelected(java.lang.Object) -> isSelected
    boolean performAction(java.lang.Object,int) -> performAction
    boolean performAction(java.lang.Object,int,android.os.Bundle) -> performAction
    void setMovementGranularities(java.lang.Object,int) -> setMovementGranularities
    int getMovementGranularities(java.lang.Object) -> getMovementGranularities
    void setBoundsInParent(java.lang.Object,android.graphics.Rect) -> setBoundsInParent
    void setBoundsInScreen(java.lang.Object,android.graphics.Rect) -> setBoundsInScreen
    void setCheckable(java.lang.Object,boolean) -> setCheckable
    void setChecked(java.lang.Object,boolean) -> setChecked
    void setClassName(java.lang.Object,java.lang.CharSequence) -> setClassName
    void setClickable(java.lang.Object,boolean) -> setClickable
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> setContentDescription
    void setEnabled(java.lang.Object,boolean) -> setEnabled
    void setFocusable(java.lang.Object,boolean) -> setFocusable
    void setFocused(java.lang.Object,boolean) -> setFocused
    void setVisibleToUser(java.lang.Object,boolean) -> setVisibleToUser
    void setAccessibilityFocused(java.lang.Object,boolean) -> setAccessibilityFocused
    void setLongClickable(java.lang.Object,boolean) -> setLongClickable
    void setPackageName(java.lang.Object,java.lang.CharSequence) -> setPackageName
    void setParent(java.lang.Object,android.view.View) -> setParent
    void setPassword(java.lang.Object,boolean) -> setPassword
    void setScrollable(java.lang.Object,boolean) -> setScrollable
    void setSelected(java.lang.Object,boolean) -> setSelected
    void setSource(java.lang.Object,android.view.View) -> setSource
    void setSource(java.lang.Object,android.view.View,int) -> setSource
    java.lang.Object findFocus(java.lang.Object,int) -> findFocus
    java.lang.Object focusSearch(java.lang.Object,int) -> focusSearch
    void setText(java.lang.Object,java.lang.CharSequence) -> setText
    void recycle(java.lang.Object) -> recycle
    void setParent(java.lang.Object,android.view.View,int) -> setParent
    java.lang.String getViewIdResourceName(java.lang.Object) -> getViewIdResourceName
    void setViewIdResourceName(java.lang.Object,java.lang.String) -> setViewIdResourceName
    int getLiveRegion(java.lang.Object) -> getLiveRegion
    void setLiveRegion(java.lang.Object,int) -> setLiveRegion
    java.lang.Object getCollectionInfo(java.lang.Object) -> getCollectionInfo
    void setCollectionInfo(java.lang.Object,java.lang.Object) -> setCollectionInfo
    java.lang.Object getCollectionItemInfo(java.lang.Object) -> getCollectionItemInfo
    void setCollectionItemInfo(java.lang.Object,java.lang.Object) -> setCollectionItemInfo
    java.lang.Object getRangeInfo(java.lang.Object) -> getRangeInfo
    java.util.List getActionList(java.lang.Object) -> getActionList
    void addAction(java.lang.Object,int,java.lang.CharSequence) -> addAction
    java.lang.Object obtainCollectionInfo(int,int,boolean,int) -> obtainCollectionInfo
    int getCollectionInfoColumnCount(java.lang.Object) -> getCollectionInfoColumnCount
    int getCollectionInfoRowCount(java.lang.Object) -> getCollectionInfoRowCount
    boolean isCollectionInfoHierarchical(java.lang.Object) -> isCollectionInfoHierarchical
    java.lang.Object obtainCollectionItemInfo(int,int,int,int,boolean,boolean) -> obtainCollectionItemInfo
    int getCollectionItemColumnIndex(java.lang.Object) -> getCollectionItemColumnIndex
    int getCollectionItemColumnSpan(java.lang.Object) -> getCollectionItemColumnSpan
    int getCollectionItemRowIndex(java.lang.Object) -> getCollectionItemRowIndex
    int getCollectionItemRowSpan(java.lang.Object) -> getCollectionItemRowSpan
    boolean isCollectionItemHeading(java.lang.Object) -> isCollectionItemHeading
    boolean isCollectionItemSelected(java.lang.Object) -> isCollectionItemSelected
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat:
    int SELECTION_MODE_NONE -> SELECTION_MODE_NONE
    int SELECTION_MODE_SINGLE -> SELECTION_MODE_SINGLE
    int SELECTION_MODE_MULTIPLE -> SELECTION_MODE_MULTIPLE
    java.lang.Object mInfo -> mInfo
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat obtain(int,int,boolean,int) -> obtain
    int getColumnCount() -> getColumnCount
    int getRowCount() -> getRowCount
    boolean isHierarchical() -> isHierarchical
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat:
    java.lang.Object mInfo -> mInfo
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat obtain(int,int,int,int,boolean,boolean) -> obtain
    int getColumnIndex() -> getColumnIndex
    int getColumnSpan() -> getColumnSpan
    int getRowIndex() -> getRowIndex
    int getRowSpan() -> getRowSpan
    boolean isHeading() -> isHeading
    boolean isSelected() -> isSelected
    java.lang.Object access$200(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat) -> access$200
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$RangeInfoCompat -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$RangeInfoCompat:
    int RANGE_TYPE_INT -> RANGE_TYPE_INT
    int RANGE_TYPE_FLOAT -> RANGE_TYPE_FLOAT
    int RANGE_TYPE_PERCENT -> RANGE_TYPE_PERCENT
    java.lang.Object mInfo -> mInfo
    float getCurrent() -> getCurrent
    float getMax() -> getMax
    float getMin() -> getMin
    int getType() -> getType
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatApi21 -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompatApi21:
    java.util.List getActionList(java.lang.Object) -> getActionList
    void addAction(java.lang.Object,int,java.lang.CharSequence) -> addAction
    java.lang.Object obtainCollectionInfo(int,int,boolean,int) -> obtainCollectionInfo
    java.lang.Object obtainCollectionItemInfo(int,int,int,int,boolean,boolean) -> obtainCollectionItemInfo
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatApi21$AccessibilityAction -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompatApi21$AccessibilityAction:
    int getId(java.lang.Object) -> getId
    java.lang.CharSequence getLabel(java.lang.Object) -> getLabel
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatApi21$CollectionItemInfo -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompatApi21$CollectionItemInfo:
    boolean isSelected(java.lang.Object) -> isSelected
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs:
    java.lang.Object obtain() -> obtain
    java.lang.Object obtain(android.view.View) -> obtain
    java.lang.Object obtain(java.lang.Object) -> obtain
    void addAction(java.lang.Object,int) -> addAction
    void addChild(java.lang.Object,android.view.View) -> addChild
    java.util.List findAccessibilityNodeInfosByText(java.lang.Object,java.lang.String) -> findAccessibilityNodeInfosByText
    int getActions(java.lang.Object) -> getActions
    void getBoundsInParent(java.lang.Object,android.graphics.Rect) -> getBoundsInParent
    void getBoundsInScreen(java.lang.Object,android.graphics.Rect) -> getBoundsInScreen
    java.lang.Object getChild(java.lang.Object,int) -> getChild
    int getChildCount(java.lang.Object) -> getChildCount
    java.lang.CharSequence getClassName(java.lang.Object) -> getClassName
    java.lang.CharSequence getContentDescription(java.lang.Object) -> getContentDescription
    java.lang.CharSequence getPackageName(java.lang.Object) -> getPackageName
    java.lang.Object getParent(java.lang.Object) -> getParent
    java.lang.CharSequence getText(java.lang.Object) -> getText
    int getWindowId(java.lang.Object) -> getWindowId
    boolean isCheckable(java.lang.Object) -> isCheckable
    boolean isChecked(java.lang.Object) -> isChecked
    boolean isClickable(java.lang.Object) -> isClickable
    boolean isEnabled(java.lang.Object) -> isEnabled
    boolean isFocusable(java.lang.Object) -> isFocusable
    boolean isFocused(java.lang.Object) -> isFocused
    boolean isLongClickable(java.lang.Object) -> isLongClickable
    boolean isPassword(java.lang.Object) -> isPassword
    boolean isScrollable(java.lang.Object) -> isScrollable
    boolean isSelected(java.lang.Object) -> isSelected
    boolean performAction(java.lang.Object,int) -> performAction
    void setBoundsInParent(java.lang.Object,android.graphics.Rect) -> setBoundsInParent
    void setBoundsInScreen(java.lang.Object,android.graphics.Rect) -> setBoundsInScreen
    void setCheckable(java.lang.Object,boolean) -> setCheckable
    void setChecked(java.lang.Object,boolean) -> setChecked
    void setClassName(java.lang.Object,java.lang.CharSequence) -> setClassName
    void setClickable(java.lang.Object,boolean) -> setClickable
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> setContentDescription
    void setEnabled(java.lang.Object,boolean) -> setEnabled
    void setFocusable(java.lang.Object,boolean) -> setFocusable
    void setFocused(java.lang.Object,boolean) -> setFocused
    void setLongClickable(java.lang.Object,boolean) -> setLongClickable
    void setPackageName(java.lang.Object,java.lang.CharSequence) -> setPackageName
    void setParent(java.lang.Object,android.view.View) -> setParent
    void setPassword(java.lang.Object,boolean) -> setPassword
    void setScrollable(java.lang.Object,boolean) -> setScrollable
    void setSelected(java.lang.Object,boolean) -> setSelected
    void setSource(java.lang.Object,android.view.View) -> setSource
    void setText(java.lang.Object,java.lang.CharSequence) -> setText
    void recycle(java.lang.Object) -> recycle
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatJellyBean -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompatJellyBean:
    void addChild(java.lang.Object,android.view.View,int) -> addChild
    void setSource(java.lang.Object,android.view.View,int) -> setSource
    boolean isVisibleToUser(java.lang.Object) -> isVisibleToUser
    void setVisibleToUser(java.lang.Object,boolean) -> setVisibleToUser
    boolean performAction(java.lang.Object,int,android.os.Bundle) -> performAction
    void setMovementGranularities(java.lang.Object,int) -> setMovementGranularities
    int getMovementGranularities(java.lang.Object) -> getMovementGranularities
    java.lang.Object obtain(android.view.View,int) -> obtain
    java.lang.Object findFocus(java.lang.Object,int) -> findFocus
    java.lang.Object focusSearch(java.lang.Object,int) -> focusSearch
    void setParent(java.lang.Object,android.view.View,int) -> setParent
    boolean isAccessibilityFocused(java.lang.Object) -> isAccessibilityFocused
    void setAccesibilityFocused(java.lang.Object,boolean) -> setAccesibilityFocused
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatJellybeanMr2 -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompatJellybeanMr2:
    void setViewIdResourceName(java.lang.Object,java.lang.String) -> setViewIdResourceName
    java.lang.String getViewIdResourceName(java.lang.Object) -> getViewIdResourceName
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatKitKat -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompatKitKat:
    int getLiveRegion(java.lang.Object) -> getLiveRegion
    void setLiveRegion(java.lang.Object,int) -> setLiveRegion
    java.lang.Object getCollectionInfo(java.lang.Object) -> getCollectionInfo
    java.lang.Object getCollectionItemInfo(java.lang.Object) -> getCollectionItemInfo
    void setCollectionInfo(java.lang.Object,java.lang.Object) -> setCollectionInfo
    void setCollectionItemInfo(java.lang.Object,java.lang.Object) -> setCollectionItemInfo
    java.lang.Object getRangeInfo(java.lang.Object) -> getRangeInfo
    java.lang.Object obtainCollectionInfo(int,int,boolean,int) -> obtainCollectionInfo
    java.lang.Object obtainCollectionItemInfo(int,int,int,int,boolean) -> obtainCollectionItemInfo
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatKitKat$CollectionInfo -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompatKitKat$CollectionInfo:
    int getColumnCount(java.lang.Object) -> getColumnCount
    int getRowCount(java.lang.Object) -> getRowCount
    boolean isHierarchical(java.lang.Object) -> isHierarchical
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatKitKat$CollectionItemInfo -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompatKitKat$CollectionItemInfo:
    int getColumnIndex(java.lang.Object) -> getColumnIndex
    int getColumnSpan(java.lang.Object) -> getColumnSpan
    int getRowIndex(java.lang.Object) -> getRowIndex
    int getRowSpan(java.lang.Object) -> getRowSpan
    boolean isHeading(java.lang.Object) -> isHeading
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatKitKat$RangeInfo -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompatKitKat$RangeInfo:
    float getCurrent(java.lang.Object) -> getCurrent
    float getMax(java.lang.Object) -> getMax
    float getMin(java.lang.Object) -> getMin
    int getType(java.lang.Object) -> getType
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompat:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderImpl IMPL -> IMPL
    java.lang.Object mProvider -> mProvider
    java.lang.Object getProvider() -> getProvider
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    boolean performAction(int,int,android.os.Bundle) -> performAction
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat findFocus(int) -> findFocus
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderImpl -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderImpl:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat) -> newAccessibilityNodeProviderBridge
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat) -> newAccessibilityNodeProviderBridge
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl$1 -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl$1:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat val$compat -> val$compat
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl this$0 -> this$0
    boolean performAction(int,int,android.os.Bundle) -> performAction
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
    java.lang.Object createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderKitKatImpl -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderKitKatImpl:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat) -> newAccessibilityNodeProviderBridge
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderKitKatImpl$1 -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderKitKatImpl$1:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat val$compat -> val$compat
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderKitKatImpl this$0 -> this$0
    boolean performAction(int,int,android.os.Bundle) -> performAction
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
    java.lang.Object createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    java.lang.Object findFocus(int) -> findFocus
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderStubImpl -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderStubImpl:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat) -> newAccessibilityNodeProviderBridge
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$AccessibilityNodeInfoBridge) -> newAccessibilityNodeProviderBridge
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$1 -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$1:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$AccessibilityNodeInfoBridge val$bridge -> val$bridge
    android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
    boolean performAction(int,int,android.os.Bundle) -> performAction
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$AccessibilityNodeInfoBridge -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$AccessibilityNodeInfoBridge:
    java.lang.Object createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    boolean performAction(int,int,android.os.Bundle) -> performAction
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat$AccessibilityNodeInfoBridge) -> newAccessibilityNodeProviderBridge
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat$1 -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat$1:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat$AccessibilityNodeInfoBridge val$bridge -> val$bridge
    android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
    boolean performAction(int,int,android.os.Bundle) -> performAction
    android.view.accessibility.AccessibilityNodeInfo findFocus(int) -> findFocus
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat$AccessibilityNodeInfoBridge -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat$AccessibilityNodeInfoBridge:
    java.lang.Object createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    boolean performAction(int,int,android.os.Bundle) -> performAction
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
    java.lang.Object findFocus(int) -> findFocus
android.support.v4.view.accessibility.AccessibilityRecordCompat -> android.support.v4.view.accessibility.AccessibilityRecordCompat:
    android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordImpl IMPL -> IMPL
    java.lang.Object mRecord -> mRecord
    java.lang.Object getImpl() -> getImpl
    android.support.v4.view.accessibility.AccessibilityRecordCompat obtain(android.support.v4.view.accessibility.AccessibilityRecordCompat) -> obtain
    android.support.v4.view.accessibility.AccessibilityRecordCompat obtain() -> obtain
    void setSource(android.view.View) -> setSource
    void setSource(android.view.View,int) -> setSource
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getSource() -> getSource
    int getWindowId() -> getWindowId
    boolean isChecked() -> isChecked
    void setChecked(boolean) -> setChecked
    boolean isEnabled() -> isEnabled
    void setEnabled(boolean) -> setEnabled
    boolean isPassword() -> isPassword
    void setPassword(boolean) -> setPassword
    boolean isFullScreen() -> isFullScreen
    void setFullScreen(boolean) -> setFullScreen
    boolean isScrollable() -> isScrollable
    void setScrollable(boolean) -> setScrollable
    int getItemCount() -> getItemCount
    void setItemCount(int) -> setItemCount
    int getCurrentItemIndex() -> getCurrentItemIndex
    void setCurrentItemIndex(int) -> setCurrentItemIndex
    int getFromIndex() -> getFromIndex
    void setFromIndex(int) -> setFromIndex
    int getToIndex() -> getToIndex
    void setToIndex(int) -> setToIndex
    int getScrollX() -> getScrollX
    void setScrollX(int) -> setScrollX
    int getScrollY() -> getScrollY
    void setScrollY(int) -> setScrollY
    int getMaxScrollX() -> getMaxScrollX
    void setMaxScrollX(int) -> setMaxScrollX
    int getMaxScrollY() -> getMaxScrollY
    void setMaxScrollY(int) -> setMaxScrollY
    int getAddedCount() -> getAddedCount
    void setAddedCount(int) -> setAddedCount
    int getRemovedCount() -> getRemovedCount
    void setRemovedCount(int) -> setRemovedCount
    java.lang.CharSequence getClassName() -> getClassName
    void setClassName(java.lang.CharSequence) -> setClassName
    java.util.List getText() -> getText
    java.lang.CharSequence getBeforeText() -> getBeforeText
    void setBeforeText(java.lang.CharSequence) -> setBeforeText
    java.lang.CharSequence getContentDescription() -> getContentDescription
    void setContentDescription(java.lang.CharSequence) -> setContentDescription
    android.os.Parcelable getParcelableData() -> getParcelableData
    void setParcelableData(android.os.Parcelable) -> setParcelableData
    void recycle() -> recycle
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsImpl -> android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsImpl:
    java.lang.Object obtain() -> obtain
    java.lang.Object obtain(java.lang.Object) -> obtain
    int getAddedCount(java.lang.Object) -> getAddedCount
    java.lang.CharSequence getBeforeText(java.lang.Object) -> getBeforeText
    java.lang.CharSequence getClassName(java.lang.Object) -> getClassName
    java.lang.CharSequence getContentDescription(java.lang.Object) -> getContentDescription
    int getCurrentItemIndex(java.lang.Object) -> getCurrentItemIndex
    int getFromIndex(java.lang.Object) -> getFromIndex
    int getItemCount(java.lang.Object) -> getItemCount
    android.os.Parcelable getParcelableData(java.lang.Object) -> getParcelableData
    int getRemovedCount(java.lang.Object) -> getRemovedCount
    int getScrollX(java.lang.Object) -> getScrollX
    int getScrollY(java.lang.Object) -> getScrollY
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getSource(java.lang.Object) -> getSource
    java.util.List getText(java.lang.Object) -> getText
    int getToIndex(java.lang.Object) -> getToIndex
    int getWindowId(java.lang.Object) -> getWindowId
    boolean isChecked(java.lang.Object) -> isChecked
    boolean isEnabled(java.lang.Object) -> isEnabled
    boolean isFullScreen(java.lang.Object) -> isFullScreen
    boolean isPassword(java.lang.Object) -> isPassword
    boolean isScrollable(java.lang.Object) -> isScrollable
    void recycle(java.lang.Object) -> recycle
    void setAddedCount(java.lang.Object,int) -> setAddedCount
    void setBeforeText(java.lang.Object,java.lang.CharSequence) -> setBeforeText
    void setChecked(java.lang.Object,boolean) -> setChecked
    void setClassName(java.lang.Object,java.lang.CharSequence) -> setClassName
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> setContentDescription
    void setCurrentItemIndex(java.lang.Object,int) -> setCurrentItemIndex
    void setEnabled(java.lang.Object,boolean) -> setEnabled
    void setFromIndex(java.lang.Object,int) -> setFromIndex
    void setFullScreen(java.lang.Object,boolean) -> setFullScreen
    void setItemCount(java.lang.Object,int) -> setItemCount
    void setParcelableData(java.lang.Object,android.os.Parcelable) -> setParcelableData
    void setPassword(java.lang.Object,boolean) -> setPassword
    void setRemovedCount(java.lang.Object,int) -> setRemovedCount
    void setScrollX(java.lang.Object,int) -> setScrollX
    void setScrollY(java.lang.Object,int) -> setScrollY
    void setScrollable(java.lang.Object,boolean) -> setScrollable
    void setSource(java.lang.Object,android.view.View) -> setSource
    void setToIndex(java.lang.Object,int) -> setToIndex
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsMr1Impl -> android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsMr1Impl:
    int getMaxScrollX(java.lang.Object) -> getMaxScrollX
    int getMaxScrollY(java.lang.Object) -> getMaxScrollY
    void setMaxScrollX(java.lang.Object,int) -> setMaxScrollX
    void setMaxScrollY(java.lang.Object,int) -> setMaxScrollY
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordImpl -> android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordImpl:
    java.lang.Object obtain() -> obtain
    java.lang.Object obtain(java.lang.Object) -> obtain
    void setSource(java.lang.Object,android.view.View) -> setSource
    void setSource(java.lang.Object,android.view.View,int) -> setSource
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getSource(java.lang.Object) -> getSource
    int getWindowId(java.lang.Object) -> getWindowId
    boolean isChecked(java.lang.Object) -> isChecked
    void setChecked(java.lang.Object,boolean) -> setChecked
    boolean isEnabled(java.lang.Object) -> isEnabled
    void setEnabled(java.lang.Object,boolean) -> setEnabled
    boolean isPassword(java.lang.Object) -> isPassword
    void setPassword(java.lang.Object,boolean) -> setPassword
    boolean isFullScreen(java.lang.Object) -> isFullScreen
    void setFullScreen(java.lang.Object,boolean) -> setFullScreen
    boolean isScrollable(java.lang.Object) -> isScrollable
    void setScrollable(java.lang.Object,boolean) -> setScrollable
    int getItemCount(java.lang.Object) -> getItemCount
    void setItemCount(java.lang.Object,int) -> setItemCount
    int getCurrentItemIndex(java.lang.Object) -> getCurrentItemIndex
    void setCurrentItemIndex(java.lang.Object,int) -> setCurrentItemIndex
    int getFromIndex(java.lang.Object) -> getFromIndex
    void setFromIndex(java.lang.Object,int) -> setFromIndex
    int getToIndex(java.lang.Object) -> getToIndex
    void setToIndex(java.lang.Object,int) -> setToIndex
    int getScrollX(java.lang.Object) -> getScrollX
    void setScrollX(java.lang.Object,int) -> setScrollX
    int getScrollY(java.lang.Object) -> getScrollY
    void setScrollY(java.lang.Object,int) -> setScrollY
    int getMaxScrollX(java.lang.Object) -> getMaxScrollX
    void setMaxScrollX(java.lang.Object,int) -> setMaxScrollX
    int getMaxScrollY(java.lang.Object) -> getMaxScrollY
    void setMaxScrollY(java.lang.Object,int) -> setMaxScrollY
    int getAddedCount(java.lang.Object) -> getAddedCount
    void setAddedCount(java.lang.Object,int) -> setAddedCount
    int getRemovedCount(java.lang.Object) -> getRemovedCount
    void setRemovedCount(java.lang.Object,int) -> setRemovedCount
    java.lang.CharSequence getClassName(java.lang.Object) -> getClassName
    void setClassName(java.lang.Object,java.lang.CharSequence) -> setClassName
    java.util.List getText(java.lang.Object) -> getText
    java.lang.CharSequence getBeforeText(java.lang.Object) -> getBeforeText
    void setBeforeText(java.lang.Object,java.lang.CharSequence) -> setBeforeText
    java.lang.CharSequence getContentDescription(java.lang.Object) -> getContentDescription
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> setContentDescription
    android.os.Parcelable getParcelableData(java.lang.Object) -> getParcelableData
    void setParcelableData(java.lang.Object,android.os.Parcelable) -> setParcelableData
    void recycle(java.lang.Object) -> recycle
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordJellyBeanImpl -> android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordJellyBeanImpl:
    void setSource(java.lang.Object,android.view.View,int) -> setSource
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordStubImpl -> android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordStubImpl:
    java.lang.Object obtain() -> obtain
    java.lang.Object obtain(java.lang.Object) -> obtain
    int getAddedCount(java.lang.Object) -> getAddedCount
    java.lang.CharSequence getBeforeText(java.lang.Object) -> getBeforeText
    java.lang.CharSequence getClassName(java.lang.Object) -> getClassName
    java.lang.CharSequence getContentDescription(java.lang.Object) -> getContentDescription
    int getCurrentItemIndex(java.lang.Object) -> getCurrentItemIndex
    int getFromIndex(java.lang.Object) -> getFromIndex
    int getItemCount(java.lang.Object) -> getItemCount
    int getMaxScrollX(java.lang.Object) -> getMaxScrollX
    int getMaxScrollY(java.lang.Object) -> getMaxScrollY
    android.os.Parcelable getParcelableData(java.lang.Object) -> getParcelableData
    int getRemovedCount(java.lang.Object) -> getRemovedCount
    int getScrollX(java.lang.Object) -> getScrollX
    int getScrollY(java.lang.Object) -> getScrollY
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getSource(java.lang.Object) -> getSource
    java.util.List getText(java.lang.Object) -> getText
    int getToIndex(java.lang.Object) -> getToIndex
    int getWindowId(java.lang.Object) -> getWindowId
    boolean isChecked(java.lang.Object) -> isChecked
    boolean isEnabled(java.lang.Object) -> isEnabled
    boolean isFullScreen(java.lang.Object) -> isFullScreen
    boolean isPassword(java.lang.Object) -> isPassword
    boolean isScrollable(java.lang.Object) -> isScrollable
    void recycle(java.lang.Object) -> recycle
    void setAddedCount(java.lang.Object,int) -> setAddedCount
    void setBeforeText(java.lang.Object,java.lang.CharSequence) -> setBeforeText
    void setChecked(java.lang.Object,boolean) -> setChecked
    void setClassName(java.lang.Object,java.lang.CharSequence) -> setClassName
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> setContentDescription
    void setCurrentItemIndex(java.lang.Object,int) -> setCurrentItemIndex
    void setEnabled(java.lang.Object,boolean) -> setEnabled
    void setFromIndex(java.lang.Object,int) -> setFromIndex
    void setFullScreen(java.lang.Object,boolean) -> setFullScreen
    void setItemCount(java.lang.Object,int) -> setItemCount
    void setMaxScrollX(java.lang.Object,int) -> setMaxScrollX
    void setMaxScrollY(java.lang.Object,int) -> setMaxScrollY
    void setParcelableData(java.lang.Object,android.os.Parcelable) -> setParcelableData
    void setPassword(java.lang.Object,boolean) -> setPassword
    void setRemovedCount(java.lang.Object,int) -> setRemovedCount
    void setScrollX(java.lang.Object,int) -> setScrollX
    void setScrollY(java.lang.Object,int) -> setScrollY
    void setScrollable(java.lang.Object,boolean) -> setScrollable
    void setSource(java.lang.Object,android.view.View) -> setSource
    void setSource(java.lang.Object,android.view.View,int) -> setSource
    void setToIndex(java.lang.Object,int) -> setToIndex
android.support.v4.view.accessibility.AccessibilityRecordCompatIcs -> android.support.v4.view.accessibility.AccessibilityRecordCompatIcs:
    java.lang.Object obtain() -> obtain
    java.lang.Object obtain(java.lang.Object) -> obtain
    int getAddedCount(java.lang.Object) -> getAddedCount
    java.lang.CharSequence getBeforeText(java.lang.Object) -> getBeforeText
    java.lang.CharSequence getClassName(java.lang.Object) -> getClassName
    java.lang.CharSequence getContentDescription(java.lang.Object) -> getContentDescription
    int getCurrentItemIndex(java.lang.Object) -> getCurrentItemIndex
    int getFromIndex(java.lang.Object) -> getFromIndex
    int getItemCount(java.lang.Object) -> getItemCount
    android.os.Parcelable getParcelableData(java.lang.Object) -> getParcelableData
    int getRemovedCount(java.lang.Object) -> getRemovedCount
    int getScrollX(java.lang.Object) -> getScrollX
    int getScrollY(java.lang.Object) -> getScrollY
    java.lang.Object getSource(java.lang.Object) -> getSource
    java.util.List getText(java.lang.Object) -> getText
    int getToIndex(java.lang.Object) -> getToIndex
    int getWindowId(java.lang.Object) -> getWindowId
    boolean isChecked(java.lang.Object) -> isChecked
    boolean isEnabled(java.lang.Object) -> isEnabled
    boolean isFullScreen(java.lang.Object) -> isFullScreen
    boolean isPassword(java.lang.Object) -> isPassword
    boolean isScrollable(java.lang.Object) -> isScrollable
    void recycle(java.lang.Object) -> recycle
    void setAddedCount(java.lang.Object,int) -> setAddedCount
    void setBeforeText(java.lang.Object,java.lang.CharSequence) -> setBeforeText
    void setChecked(java.lang.Object,boolean) -> setChecked
    void setClassName(java.lang.Object,java.lang.CharSequence) -> setClassName
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> setContentDescription
    void setCurrentItemIndex(java.lang.Object,int) -> setCurrentItemIndex
    void setEnabled(java.lang.Object,boolean) -> setEnabled
    void setFromIndex(java.lang.Object,int) -> setFromIndex
    void setFullScreen(java.lang.Object,boolean) -> setFullScreen
    void setItemCount(java.lang.Object,int) -> setItemCount
    void setParcelableData(java.lang.Object,android.os.Parcelable) -> setParcelableData
    void setPassword(java.lang.Object,boolean) -> setPassword
    void setRemovedCount(java.lang.Object,int) -> setRemovedCount
    void setScrollX(java.lang.Object,int) -> setScrollX
    void setScrollY(java.lang.Object,int) -> setScrollY
    void setScrollable(java.lang.Object,boolean) -> setScrollable
    void setSource(java.lang.Object,android.view.View) -> setSource
    void setToIndex(java.lang.Object,int) -> setToIndex
android.support.v4.view.accessibility.AccessibilityRecordCompatIcsMr1 -> android.support.v4.view.accessibility.AccessibilityRecordCompatIcsMr1:
    int getMaxScrollX(java.lang.Object) -> getMaxScrollX
    int getMaxScrollY(java.lang.Object) -> getMaxScrollY
    void setMaxScrollX(java.lang.Object,int) -> setMaxScrollX
    void setMaxScrollY(java.lang.Object,int) -> setMaxScrollY
android.support.v4.view.accessibility.AccessibilityRecordCompatJellyBean -> android.support.v4.view.accessibility.AccessibilityRecordCompatJellyBean:
    void setSource(java.lang.Object,android.view.View,int) -> setSource
android.support.v4.widget.AutoScrollHelper -> android.support.v4.widget.AutoScrollHelper:
    float RELATIVE_UNSPECIFIED -> RELATIVE_UNSPECIFIED
    float NO_MAX -> NO_MAX
    float NO_MIN -> NO_MIN
    int EDGE_TYPE_INSIDE -> EDGE_TYPE_INSIDE
    int EDGE_TYPE_INSIDE_EXTEND -> EDGE_TYPE_INSIDE_EXTEND
    int EDGE_TYPE_OUTSIDE -> EDGE_TYPE_OUTSIDE
    int HORIZONTAL -> HORIZONTAL
    int VERTICAL -> VERTICAL
    android.support.v4.widget.AutoScrollHelper$ClampedScroller mScroller -> mScroller
    android.view.animation.Interpolator mEdgeInterpolator -> mEdgeInterpolator
    android.view.View mTarget -> mTarget
    java.lang.Runnable mRunnable -> mRunnable
    float[] mRelativeEdges -> mRelativeEdges
    float[] mMaximumEdges -> mMaximumEdges
    int mEdgeType -> mEdgeType
    int mActivationDelay -> mActivationDelay
    float[] mRelativeVelocity -> mRelativeVelocity
    float[] mMinimumVelocity -> mMinimumVelocity
    float[] mMaximumVelocity -> mMaximumVelocity
    boolean mAlreadyDelayed -> mAlreadyDelayed
    boolean mNeedsReset -> mNeedsReset
    boolean mNeedsCancel -> mNeedsCancel
    boolean mAnimating -> mAnimating
    boolean mEnabled -> mEnabled
    boolean mExclusive -> mExclusive
    int DEFAULT_EDGE_TYPE -> DEFAULT_EDGE_TYPE
    int DEFAULT_MINIMUM_VELOCITY_DIPS -> DEFAULT_MINIMUM_VELOCITY_DIPS
    int DEFAULT_MAXIMUM_VELOCITY_DIPS -> DEFAULT_MAXIMUM_VELOCITY_DIPS
    float DEFAULT_MAXIMUM_EDGE -> DEFAULT_MAXIMUM_EDGE
    float DEFAULT_RELATIVE_EDGE -> DEFAULT_RELATIVE_EDGE
    float DEFAULT_RELATIVE_VELOCITY -> DEFAULT_RELATIVE_VELOCITY
    int DEFAULT_ACTIVATION_DELAY -> DEFAULT_ACTIVATION_DELAY
    int DEFAULT_RAMP_UP_DURATION -> DEFAULT_RAMP_UP_DURATION
    int DEFAULT_RAMP_DOWN_DURATION -> DEFAULT_RAMP_DOWN_DURATION
    android.support.v4.widget.AutoScrollHelper setEnabled(boolean) -> setEnabled
    boolean isEnabled() -> isEnabled
    android.support.v4.widget.AutoScrollHelper setExclusive(boolean) -> setExclusive
    boolean isExclusive() -> isExclusive
    android.support.v4.widget.AutoScrollHelper setMaximumVelocity(float,float) -> setMaximumVelocity
    android.support.v4.widget.AutoScrollHelper setMinimumVelocity(float,float) -> setMinimumVelocity
    android.support.v4.widget.AutoScrollHelper setRelativeVelocity(float,float) -> setRelativeVelocity
    android.support.v4.widget.AutoScrollHelper setEdgeType(int) -> setEdgeType
    android.support.v4.widget.AutoScrollHelper setRelativeEdges(float,float) -> setRelativeEdges
    android.support.v4.widget.AutoScrollHelper setMaximumEdges(float,float) -> setMaximumEdges
    android.support.v4.widget.AutoScrollHelper setActivationDelay(int) -> setActivationDelay
    android.support.v4.widget.AutoScrollHelper setRampUpDuration(int) -> setRampUpDuration
    android.support.v4.widget.AutoScrollHelper setRampDownDuration(int) -> setRampDownDuration
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
    boolean shouldAnimate() -> shouldAnimate
    void startAnimating() -> startAnimating
    void requestStop() -> requestStop
    float computeTargetVelocity(int,float,float,float) -> computeTargetVelocity
    void scrollTargetBy(int,int) -> scrollTargetBy
    boolean canTargetScrollHorizontally(int) -> canTargetScrollHorizontally
    boolean canTargetScrollVertically(int) -> canTargetScrollVertically
    float getEdgeValue(float,float,float,float) -> getEdgeValue
    float constrainEdgeValue(float,float) -> constrainEdgeValue
    int constrain(int,int,int) -> constrain
    float constrain(float,float,float) -> constrain
    void cancelTargetTouch() -> cancelTargetTouch
    boolean access$100(android.support.v4.widget.AutoScrollHelper) -> access$100
    boolean access$200(android.support.v4.widget.AutoScrollHelper) -> access$200
    boolean access$202(android.support.v4.widget.AutoScrollHelper,boolean) -> access$202
    android.support.v4.widget.AutoScrollHelper$ClampedScroller access$300(android.support.v4.widget.AutoScrollHelper) -> access$300
    boolean access$400(android.support.v4.widget.AutoScrollHelper) -> access$400
    boolean access$102(android.support.v4.widget.AutoScrollHelper,boolean) -> access$102
    boolean access$500(android.support.v4.widget.AutoScrollHelper) -> access$500
    boolean access$502(android.support.v4.widget.AutoScrollHelper,boolean) -> access$502
    void access$600(android.support.v4.widget.AutoScrollHelper) -> access$600
    android.view.View access$700(android.support.v4.widget.AutoScrollHelper) -> access$700
    int access$800(int,int,int) -> access$800
    float access$900(float,float,float) -> access$900
android.support.v4.widget.AutoScrollHelper$1 -> android.support.v4.widget.AutoScrollHelper$1:
android.support.v4.widget.AutoScrollHelper$ClampedScroller -> android.support.v4.widget.AutoScrollHelper$ClampedScroller:
    int mRampUpDuration -> mRampUpDuration
    int mRampDownDuration -> mRampDownDuration
    float mTargetVelocityX -> mTargetVelocityX
    float mTargetVelocityY -> mTargetVelocityY
    long mStartTime -> mStartTime
    long mDeltaTime -> mDeltaTime
    int mDeltaX -> mDeltaX
    int mDeltaY -> mDeltaY
    long mStopTime -> mStopTime
    float mStopValue -> mStopValue
    int mEffectiveRampDown -> mEffectiveRampDown
    void setRampUpDuration(int) -> setRampUpDuration
    void setRampDownDuration(int) -> setRampDownDuration
    void start() -> start
    void requestStop() -> requestStop
    boolean isFinished() -> isFinished
    float getValueAt(long) -> getValueAt
    float interpolateValue(float) -> interpolateValue
    void computeScrollDelta() -> computeScrollDelta
    void setTargetVelocity(float,float) -> setTargetVelocity
    int getHorizontalDirection() -> getHorizontalDirection
    int getVerticalDirection() -> getVerticalDirection
    int getDeltaX() -> getDeltaX
    int getDeltaY() -> getDeltaY
android.support.v4.widget.AutoScrollHelper$ScrollAnimationRunnable -> android.support.v4.widget.AutoScrollHelper$ScrollAnimationRunnable:
    android.support.v4.widget.AutoScrollHelper this$0 -> this$0
    void run() -> run
android.support.v4.widget.BakedBezierInterpolator -> android.support.v4.widget.BakedBezierInterpolator:
    android.support.v4.widget.BakedBezierInterpolator INSTANCE -> INSTANCE
    float[] VALUES -> VALUES
    float STEP_SIZE -> STEP_SIZE
    android.support.v4.widget.BakedBezierInterpolator getInstance() -> getInstance
    float getInterpolation(float) -> getInterpolation
android.support.v4.widget.CircleImageView -> android.support.v4.widget.CircleImageView:
    int KEY_SHADOW_COLOR -> KEY_SHADOW_COLOR
    int FILL_SHADOW_COLOR -> FILL_SHADOW_COLOR
    float X_OFFSET -> X_OFFSET
    float Y_OFFSET -> Y_OFFSET
    float SHADOW_RADIUS -> SHADOW_RADIUS
    int SHADOW_ELEVATION -> SHADOW_ELEVATION
    android.view.animation.Animation$AnimationListener mListener -> mListener
    int mShadowRadius -> mShadowRadius
    boolean elevationSupported() -> elevationSupported
    void onMeasure(int,int) -> onMeasure
    void setAnimationListener(android.view.animation.Animation$AnimationListener) -> setAnimationListener
    void onAnimationStart() -> onAnimationStart
    void onAnimationEnd() -> onAnimationEnd
    void setBackgroundColor(int) -> setBackgroundColor
android.support.v4.widget.CircleImageView$OvalShadow -> android.support.v4.widget.CircleImageView$OvalShadow:
    android.graphics.RadialGradient mRadialGradient -> mRadialGradient
    int mShadowRadius -> mShadowRadius
    android.graphics.Paint mShadowPaint -> mShadowPaint
    int mCircleDiameter -> mCircleDiameter
    android.support.v4.widget.CircleImageView this$0 -> this$0
    void draw(android.graphics.Canvas,android.graphics.Paint) -> draw
android.support.v4.widget.ContentLoadingProgressBar -> android.support.v4.widget.ContentLoadingProgressBar:
    int MIN_SHOW_TIME -> MIN_SHOW_TIME
    int MIN_DELAY -> MIN_DELAY
    long mStartTime -> mStartTime
    boolean mPostedHide -> mPostedHide
    boolean mPostedShow -> mPostedShow
    boolean mDismissed -> mDismissed
    java.lang.Runnable mDelayedHide -> mDelayedHide
    java.lang.Runnable mDelayedShow -> mDelayedShow
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void removeCallbacks() -> removeCallbacks
    void hide() -> hide
    void show() -> show
    boolean access$002(android.support.v4.widget.ContentLoadingProgressBar,boolean) -> access$002
    long access$102(android.support.v4.widget.ContentLoadingProgressBar,long) -> access$102
    boolean access$202(android.support.v4.widget.ContentLoadingProgressBar,boolean) -> access$202
    boolean access$300(android.support.v4.widget.ContentLoadingProgressBar) -> access$300
android.support.v4.widget.ContentLoadingProgressBar$1 -> android.support.v4.widget.ContentLoadingProgressBar$1:
    android.support.v4.widget.ContentLoadingProgressBar this$0 -> this$0
    void run() -> run
android.support.v4.widget.ContentLoadingProgressBar$2 -> android.support.v4.widget.ContentLoadingProgressBar$2:
    android.support.v4.widget.ContentLoadingProgressBar this$0 -> this$0
    void run() -> run
android.support.v4.widget.CursorAdapter -> android.support.v4.widget.CursorAdapter:
    boolean mDataValid -> mDataValid
    boolean mAutoRequery -> mAutoRequery
    android.database.Cursor mCursor -> mCursor
    android.content.Context mContext -> mContext
    int mRowIDColumn -> mRowIDColumn
    android.support.v4.widget.CursorAdapter$ChangeObserver mChangeObserver -> mChangeObserver
    android.database.DataSetObserver mDataSetObserver -> mDataSetObserver
    android.support.v4.widget.CursorFilter mCursorFilter -> mCursorFilter
    android.widget.FilterQueryProvider mFilterQueryProvider -> mFilterQueryProvider
    int FLAG_AUTO_REQUERY -> FLAG_AUTO_REQUERY
    int FLAG_REGISTER_CONTENT_OBSERVER -> FLAG_REGISTER_CONTENT_OBSERVER
    void init(android.content.Context,android.database.Cursor,boolean) -> init
    void init(android.content.Context,android.database.Cursor,int) -> init
    android.database.Cursor getCursor() -> getCursor
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    boolean hasStableIds() -> hasStableIds
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup) -> getDropDownView
    android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newView
    android.view.View newDropDownView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newDropDownView
    void bindView(android.view.View,android.content.Context,android.database.Cursor) -> bindView
    void changeCursor(android.database.Cursor) -> changeCursor
    android.database.Cursor swapCursor(android.database.Cursor) -> swapCursor
    java.lang.CharSequence convertToString(android.database.Cursor) -> convertToString
    android.database.Cursor runQueryOnBackgroundThread(java.lang.CharSequence) -> runQueryOnBackgroundThread
    android.widget.Filter getFilter() -> getFilter
    android.widget.FilterQueryProvider getFilterQueryProvider() -> getFilterQueryProvider
    void setFilterQueryProvider(android.widget.FilterQueryProvider) -> setFilterQueryProvider
    void onContentChanged() -> onContentChanged
android.support.v4.widget.CursorAdapter$1 -> android.support.v4.widget.CursorAdapter$1:
android.support.v4.widget.CursorAdapter$ChangeObserver -> android.support.v4.widget.CursorAdapter$ChangeObserver:
    android.support.v4.widget.CursorAdapter this$0 -> this$0
    boolean deliverSelfNotifications() -> deliverSelfNotifications
    void onChange(boolean) -> onChange
android.support.v4.widget.CursorAdapter$MyDataSetObserver -> android.support.v4.widget.CursorAdapter$MyDataSetObserver:
    android.support.v4.widget.CursorAdapter this$0 -> this$0
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
android.support.v4.widget.CursorFilter -> android.support.v4.widget.CursorFilter:
    android.support.v4.widget.CursorFilter$CursorFilterClient mClient -> mClient
    java.lang.CharSequence convertResultToString(java.lang.Object) -> convertResultToString
    android.widget.Filter$FilterResults performFiltering(java.lang.CharSequence) -> performFiltering
    void publishResults(java.lang.CharSequence,android.widget.Filter$FilterResults) -> publishResults
android.support.v4.widget.CursorFilter$CursorFilterClient -> android.support.v4.widget.CursorFilter$CursorFilterClient:
    java.lang.CharSequence convertToString(android.database.Cursor) -> convertToString
    android.database.Cursor runQueryOnBackgroundThread(java.lang.CharSequence) -> runQueryOnBackgroundThread
    android.database.Cursor getCursor() -> getCursor
    void changeCursor(android.database.Cursor) -> changeCursor
android.support.v4.widget.DrawerLayout -> android.support.v4.widget.DrawerLayout:
    java.lang.String TAG -> TAG
    int STATE_IDLE -> STATE_IDLE
    int STATE_DRAGGING -> STATE_DRAGGING
    int STATE_SETTLING -> STATE_SETTLING
    int LOCK_MODE_UNLOCKED -> LOCK_MODE_UNLOCKED
    int LOCK_MODE_LOCKED_CLOSED -> LOCK_MODE_LOCKED_CLOSED
    int LOCK_MODE_LOCKED_OPEN -> LOCK_MODE_LOCKED_OPEN
    int MIN_DRAWER_MARGIN -> MIN_DRAWER_MARGIN
    int DEFAULT_SCRIM_COLOR -> DEFAULT_SCRIM_COLOR
    int PEEK_DELAY -> PEEK_DELAY
    int MIN_FLING_VELOCITY -> MIN_FLING_VELOCITY
    boolean ALLOW_EDGE_LOCK -> ALLOW_EDGE_LOCK
    boolean CHILDREN_DISALLOW_INTERCEPT -> CHILDREN_DISALLOW_INTERCEPT
    float TOUCH_SLOP_SENSITIVITY -> TOUCH_SLOP_SENSITIVITY
    int[] LAYOUT_ATTRS -> LAYOUT_ATTRS
    boolean CAN_HIDE_DESCENDANTS -> CAN_HIDE_DESCENDANTS
    android.support.v4.widget.DrawerLayout$ChildAccessibilityDelegate mChildAccessibilityDelegate -> mChildAccessibilityDelegate
    int mMinDrawerMargin -> mMinDrawerMargin
    int mScrimColor -> mScrimColor
    float mScrimOpacity -> mScrimOpacity
    android.graphics.Paint mScrimPaint -> mScrimPaint
    android.support.v4.widget.ViewDragHelper mLeftDragger -> mLeftDragger
    android.support.v4.widget.ViewDragHelper mRightDragger -> mRightDragger
    android.support.v4.widget.DrawerLayout$ViewDragCallback mLeftCallback -> mLeftCallback
    android.support.v4.widget.DrawerLayout$ViewDragCallback mRightCallback -> mRightCallback
    int mDrawerState -> mDrawerState
    boolean mInLayout -> mInLayout
    boolean mFirstLayout -> mFirstLayout
    int mLockModeLeft -> mLockModeLeft
    int mLockModeRight -> mLockModeRight
    boolean mDisallowInterceptRequested -> mDisallowInterceptRequested
    boolean mChildrenCanceledTouch -> mChildrenCanceledTouch
    android.support.v4.widget.DrawerLayout$DrawerListener mListener -> mListener
    float mInitialMotionX -> mInitialMotionX
    float mInitialMotionY -> mInitialMotionY
    android.graphics.drawable.Drawable mShadowLeft -> mShadowLeft
    android.graphics.drawable.Drawable mShadowRight -> mShadowRight
    android.graphics.drawable.Drawable mStatusBarBackground -> mStatusBarBackground
    java.lang.CharSequence mTitleLeft -> mTitleLeft
    java.lang.CharSequence mTitleRight -> mTitleRight
    java.lang.Object mLastInsets -> mLastInsets
    boolean mDrawStatusBarBackground -> mDrawStatusBarBackground
    android.support.v4.widget.DrawerLayout$DrawerLayoutCompatImpl IMPL -> IMPL
    void setChildInsets(java.lang.Object,boolean) -> setChildInsets
    void setDrawerShadow(android.graphics.drawable.Drawable,int) -> setDrawerShadow
    void setDrawerShadow(int,int) -> setDrawerShadow
    void setScrimColor(int) -> setScrimColor
    void setDrawerListener(android.support.v4.widget.DrawerLayout$DrawerListener) -> setDrawerListener
    void setDrawerLockMode(int) -> setDrawerLockMode
    void setDrawerLockMode(int,int) -> setDrawerLockMode
    void setDrawerLockMode(int,android.view.View) -> setDrawerLockMode
    int getDrawerLockMode(int) -> getDrawerLockMode
    int getDrawerLockMode(android.view.View) -> getDrawerLockMode
    void setDrawerTitle(int,java.lang.CharSequence) -> setDrawerTitle
    java.lang.CharSequence getDrawerTitle(int) -> getDrawerTitle
    void updateDrawerState(int,int,android.view.View) -> updateDrawerState
    void dispatchOnDrawerClosed(android.view.View) -> dispatchOnDrawerClosed
    void dispatchOnDrawerOpened(android.view.View) -> dispatchOnDrawerOpened
    void updateChildrenImportantForAccessibility(android.view.View,boolean) -> updateChildrenImportantForAccessibility
    void dispatchOnDrawerSlide(android.view.View,float) -> dispatchOnDrawerSlide
    void setDrawerViewOffset(android.view.View,float) -> setDrawerViewOffset
    float getDrawerViewOffset(android.view.View) -> getDrawerViewOffset
    int getDrawerViewAbsoluteGravity(android.view.View) -> getDrawerViewAbsoluteGravity
    boolean checkDrawerViewAbsoluteGravity(android.view.View,int) -> checkDrawerViewAbsoluteGravity
    android.view.View findOpenDrawer() -> findOpenDrawer
    void moveDrawerToOffset(android.view.View,float) -> moveDrawerToOffset
    android.view.View findDrawerWithGravity(int) -> findDrawerWithGravity
    java.lang.String gravityToString(int) -> gravityToString
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onAttachedToWindow() -> onAttachedToWindow
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    void requestLayout() -> requestLayout
    void computeScroll() -> computeScroll
    boolean hasOpaqueBackground(android.view.View) -> hasOpaqueBackground
    void setStatusBarBackground(android.graphics.drawable.Drawable) -> setStatusBarBackground
    void setStatusBarBackground(int) -> setStatusBarBackground
    void setStatusBarBackgroundColor(int) -> setStatusBarBackgroundColor
    void onDraw(android.graphics.Canvas) -> onDraw
    boolean drawChild(android.graphics.Canvas,android.view.View,long) -> drawChild
    boolean isContentView(android.view.View) -> isContentView
    boolean isDrawerView(android.view.View) -> isDrawerView
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void requestDisallowInterceptTouchEvent(boolean) -> requestDisallowInterceptTouchEvent
    void closeDrawers() -> closeDrawers
    void closeDrawers(boolean) -> closeDrawers
    void openDrawer(android.view.View) -> openDrawer
    void openDrawer(int) -> openDrawer
    void closeDrawer(android.view.View) -> closeDrawer
    void closeDrawer(int) -> closeDrawer
    boolean isDrawerOpen(android.view.View) -> isDrawerOpen
    boolean isDrawerOpen(int) -> isDrawerOpen
    boolean isDrawerVisible(android.view.View) -> isDrawerVisible
    boolean isDrawerVisible(int) -> isDrawerVisible
    boolean hasPeekingDrawer() -> hasPeekingDrawer
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    boolean hasVisibleDrawer() -> hasVisibleDrawer
    android.view.View findVisibleDrawer() -> findVisibleDrawer
    void cancelChildViewTouch() -> cancelChildViewTouch
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    boolean includeChildForAccessibility(android.view.View) -> includeChildForAccessibility
    int[] access$100() -> access$100
    boolean access$200() -> access$200
    android.view.View access$300(android.support.v4.widget.DrawerLayout) -> access$300
    boolean access$400(android.view.View) -> access$400
android.support.v4.widget.DrawerLayout$AccessibilityDelegate -> android.support.v4.widget.DrawerLayout$AccessibilityDelegate:
    android.graphics.Rect mTmpRect -> mTmpRect
    android.support.v4.widget.DrawerLayout this$0 -> this$0
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void addChildrenForAccessibility(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat,android.view.ViewGroup) -> addChildrenForAccessibility
    void copyNodeInfoNoChildren(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> copyNodeInfoNoChildren
android.support.v4.widget.DrawerLayout$ChildAccessibilityDelegate -> android.support.v4.widget.DrawerLayout$ChildAccessibilityDelegate:
    android.support.v4.widget.DrawerLayout this$0 -> this$0
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
android.support.v4.widget.DrawerLayout$DrawerLayoutCompatImpl -> android.support.v4.widget.DrawerLayout$DrawerLayoutCompatImpl:
    void configureApplyInsets(android.view.View) -> configureApplyInsets
    void dispatchChildInsets(android.view.View,java.lang.Object,int) -> dispatchChildInsets
    void applyMarginInsets(android.view.ViewGroup$MarginLayoutParams,java.lang.Object,int) -> applyMarginInsets
    int getTopInset(java.lang.Object) -> getTopInset
android.support.v4.widget.DrawerLayout$DrawerLayoutCompatImplApi21 -> android.support.v4.widget.DrawerLayout$DrawerLayoutCompatImplApi21:
    void configureApplyInsets(android.view.View) -> configureApplyInsets
    void dispatchChildInsets(android.view.View,java.lang.Object,int) -> dispatchChildInsets
    void applyMarginInsets(android.view.ViewGroup$MarginLayoutParams,java.lang.Object,int) -> applyMarginInsets
    int getTopInset(java.lang.Object) -> getTopInset
android.support.v4.widget.DrawerLayout$DrawerLayoutCompatImplBase -> android.support.v4.widget.DrawerLayout$DrawerLayoutCompatImplBase:
    void configureApplyInsets(android.view.View) -> configureApplyInsets
    void dispatchChildInsets(android.view.View,java.lang.Object,int) -> dispatchChildInsets
    void applyMarginInsets(android.view.ViewGroup$MarginLayoutParams,java.lang.Object,int) -> applyMarginInsets
    int getTopInset(java.lang.Object) -> getTopInset
android.support.v4.widget.DrawerLayout$DrawerListener -> android.support.v4.widget.DrawerLayout$DrawerListener:
    void onDrawerSlide(android.view.View,float) -> onDrawerSlide
    void onDrawerOpened(android.view.View) -> onDrawerOpened
    void onDrawerClosed(android.view.View) -> onDrawerClosed
    void onDrawerStateChanged(int) -> onDrawerStateChanged
android.support.v4.widget.DrawerLayout$EdgeGravity -> android.support.v4.widget.DrawerLayout$EdgeGravity:
android.support.v4.widget.DrawerLayout$LayoutParams -> android.support.v4.widget.DrawerLayout$LayoutParams:
    int gravity -> gravity
    float onScreen -> onScreen
    boolean isPeeking -> isPeeking
    boolean knownOpen -> knownOpen
android.support.v4.widget.DrawerLayout$LockMode -> android.support.v4.widget.DrawerLayout$LockMode:
android.support.v4.widget.DrawerLayout$SavedState -> android.support.v4.widget.DrawerLayout$SavedState:
    int openDrawerGravity -> openDrawerGravity
    int lockModeLeft -> lockModeLeft
    int lockModeRight -> lockModeRight
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.widget.DrawerLayout$SavedState$1 -> android.support.v4.widget.DrawerLayout$SavedState$1:
    android.support.v4.widget.DrawerLayout$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.widget.DrawerLayout$SavedState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.widget.DrawerLayout$SimpleDrawerListener -> android.support.v4.widget.DrawerLayout$SimpleDrawerListener:
    void onDrawerSlide(android.view.View,float) -> onDrawerSlide
    void onDrawerOpened(android.view.View) -> onDrawerOpened
    void onDrawerClosed(android.view.View) -> onDrawerClosed
    void onDrawerStateChanged(int) -> onDrawerStateChanged
android.support.v4.widget.DrawerLayout$State -> android.support.v4.widget.DrawerLayout$State:
android.support.v4.widget.DrawerLayout$ViewDragCallback -> android.support.v4.widget.DrawerLayout$ViewDragCallback:
    int mAbsGravity -> mAbsGravity
    android.support.v4.widget.ViewDragHelper mDragger -> mDragger
    java.lang.Runnable mPeekRunnable -> mPeekRunnable
    android.support.v4.widget.DrawerLayout this$0 -> this$0
    void setDragger(android.support.v4.widget.ViewDragHelper) -> setDragger
    void removeCallbacks() -> removeCallbacks
    boolean tryCaptureView(android.view.View,int) -> tryCaptureView
    void onViewDragStateChanged(int) -> onViewDragStateChanged
    void onViewPositionChanged(android.view.View,int,int,int,int) -> onViewPositionChanged
    void onViewCaptured(android.view.View,int) -> onViewCaptured
    void closeOtherDrawer() -> closeOtherDrawer
    void onViewReleased(android.view.View,float,float) -> onViewReleased
    void onEdgeTouched(int,int) -> onEdgeTouched
    void peekDrawer() -> peekDrawer
    boolean onEdgeLock(int) -> onEdgeLock
    void onEdgeDragStarted(int,int) -> onEdgeDragStarted
    int getViewHorizontalDragRange(android.view.View) -> getViewHorizontalDragRange
    int clampViewPositionHorizontal(android.view.View,int,int) -> clampViewPositionHorizontal
    int clampViewPositionVertical(android.view.View,int,int) -> clampViewPositionVertical
    void access$000(android.support.v4.widget.DrawerLayout$ViewDragCallback) -> access$000
android.support.v4.widget.DrawerLayout$ViewDragCallback$1 -> android.support.v4.widget.DrawerLayout$ViewDragCallback$1:
    android.support.v4.widget.DrawerLayout$ViewDragCallback this$1 -> this$1
    void run() -> run
android.support.v4.widget.DrawerLayoutCompatApi21 -> android.support.v4.widget.DrawerLayoutCompatApi21:
    void configureApplyInsets(android.view.View) -> configureApplyInsets
    void dispatchChildInsets(android.view.View,java.lang.Object,int) -> dispatchChildInsets
    void applyMarginInsets(android.view.ViewGroup$MarginLayoutParams,java.lang.Object,int) -> applyMarginInsets
    int getTopInset(java.lang.Object) -> getTopInset
android.support.v4.widget.DrawerLayoutCompatApi21$InsetsListener -> android.support.v4.widget.DrawerLayoutCompatApi21$InsetsListener:
    android.view.WindowInsets onApplyWindowInsets(android.view.View,android.view.WindowInsets) -> onApplyWindowInsets
android.support.v4.widget.DrawerLayoutImpl -> android.support.v4.widget.DrawerLayoutImpl:
    void setChildInsets(java.lang.Object,boolean) -> setChildInsets
android.support.v4.widget.EdgeEffectCompat -> android.support.v4.widget.EdgeEffectCompat:
    java.lang.Object mEdgeEffect -> mEdgeEffect
    android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl IMPL -> IMPL
    void setSize(int,int) -> setSize
    boolean isFinished() -> isFinished
    void finish() -> finish
    boolean onPull(float) -> onPull
    boolean onRelease() -> onRelease
    boolean onAbsorb(int) -> onAbsorb
    boolean draw(android.graphics.Canvas) -> draw
android.support.v4.widget.EdgeEffectCompat$BaseEdgeEffectImpl -> android.support.v4.widget.EdgeEffectCompat$BaseEdgeEffectImpl:
    java.lang.Object newEdgeEffect(android.content.Context) -> newEdgeEffect
    void setSize(java.lang.Object,int,int) -> setSize
    boolean isFinished(java.lang.Object) -> isFinished
    void finish(java.lang.Object) -> finish
    boolean onPull(java.lang.Object,float) -> onPull
    boolean onRelease(java.lang.Object) -> onRelease
    boolean onAbsorb(java.lang.Object,int) -> onAbsorb
    boolean draw(java.lang.Object,android.graphics.Canvas) -> draw
android.support.v4.widget.EdgeEffectCompat$EdgeEffectIcsImpl -> android.support.v4.widget.EdgeEffectCompat$EdgeEffectIcsImpl:
    java.lang.Object newEdgeEffect(android.content.Context) -> newEdgeEffect
    void setSize(java.lang.Object,int,int) -> setSize
    boolean isFinished(java.lang.Object) -> isFinished
    void finish(java.lang.Object) -> finish
    boolean onPull(java.lang.Object,float) -> onPull
    boolean onRelease(java.lang.Object) -> onRelease
    boolean onAbsorb(java.lang.Object,int) -> onAbsorb
    boolean draw(java.lang.Object,android.graphics.Canvas) -> draw
android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl -> android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl:
    java.lang.Object newEdgeEffect(android.content.Context) -> newEdgeEffect
    void setSize(java.lang.Object,int,int) -> setSize
    boolean isFinished(java.lang.Object) -> isFinished
    void finish(java.lang.Object) -> finish
    boolean onPull(java.lang.Object,float) -> onPull
    boolean onRelease(java.lang.Object) -> onRelease
    boolean onAbsorb(java.lang.Object,int) -> onAbsorb
    boolean draw(java.lang.Object,android.graphics.Canvas) -> draw
android.support.v4.widget.EdgeEffectCompatIcs -> android.support.v4.widget.EdgeEffectCompatIcs:
    java.lang.Object newEdgeEffect(android.content.Context) -> newEdgeEffect
    void setSize(java.lang.Object,int,int) -> setSize
    boolean isFinished(java.lang.Object) -> isFinished
    void finish(java.lang.Object) -> finish
    boolean onPull(java.lang.Object,float) -> onPull
    boolean onRelease(java.lang.Object) -> onRelease
    boolean onAbsorb(java.lang.Object,int) -> onAbsorb
    boolean draw(java.lang.Object,android.graphics.Canvas) -> draw
android.support.v4.widget.ExploreByTouchHelper -> android.support.v4.widget.ExploreByTouchHelper:
    int INVALID_ID -> INVALID_ID
    java.lang.String DEFAULT_CLASS_NAME -> DEFAULT_CLASS_NAME
    android.graphics.Rect mTempScreenRect -> mTempScreenRect
    android.graphics.Rect mTempParentRect -> mTempParentRect
    android.graphics.Rect mTempVisibleRect -> mTempVisibleRect
    int[] mTempGlobalRect -> mTempGlobalRect
    android.view.accessibility.AccessibilityManager mManager -> mManager
    android.view.View mView -> mView
    android.support.v4.widget.ExploreByTouchHelper$ExploreByTouchNodeProvider mNodeProvider -> mNodeProvider
    int mFocusedVirtualViewId -> mFocusedVirtualViewId
    int mHoveredVirtualViewId -> mHoveredVirtualViewId
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    boolean dispatchHoverEvent(android.view.MotionEvent) -> dispatchHoverEvent
    boolean sendEventForVirtualView(int,int) -> sendEventForVirtualView
    void invalidateRoot() -> invalidateRoot
    void invalidateVirtualView(int) -> invalidateVirtualView
    int getFocusedVirtualView() -> getFocusedVirtualView
    void updateHoveredVirtualView(int) -> updateHoveredVirtualView
    android.view.accessibility.AccessibilityEvent createEvent(int,int) -> createEvent
    android.view.accessibility.AccessibilityEvent createEventForHost(int) -> createEventForHost
    android.view.accessibility.AccessibilityEvent createEventForChild(int,int) -> createEventForChild
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat createNode(int) -> createNode
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat createNodeForHost() -> createNodeForHost
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat createNodeForChild(int) -> createNodeForChild
    boolean performAction(int,int,android.os.Bundle) -> performAction
    boolean performActionForHost(int,android.os.Bundle) -> performActionForHost
    boolean performActionForChild(int,int,android.os.Bundle) -> performActionForChild
    boolean manageFocusForChild(int,int,android.os.Bundle) -> manageFocusForChild
    boolean intersectVisibleToUser(android.graphics.Rect) -> intersectVisibleToUser
    boolean isAccessibilityFocused(int) -> isAccessibilityFocused
    boolean requestAccessibilityFocus(int) -> requestAccessibilityFocus
    boolean clearAccessibilityFocus(int) -> clearAccessibilityFocus
    int getVirtualViewAt(float,float) -> getVirtualViewAt
    void getVisibleVirtualViews(java.util.List) -> getVisibleVirtualViews
    void onPopulateEventForVirtualView(int,android.view.accessibility.AccessibilityEvent) -> onPopulateEventForVirtualView
    void onPopulateNodeForVirtualView(int,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onPopulateNodeForVirtualView
    boolean onPerformActionForVirtualView(int,int,android.os.Bundle) -> onPerformActionForVirtualView
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat access$100(android.support.v4.widget.ExploreByTouchHelper,int) -> access$100
    boolean access$200(android.support.v4.widget.ExploreByTouchHelper,int,int,android.os.Bundle) -> access$200
android.support.v4.widget.ExploreByTouchHelper$1 -> android.support.v4.widget.ExploreByTouchHelper$1:
android.support.v4.widget.ExploreByTouchHelper$ExploreByTouchNodeProvider -> android.support.v4.widget.ExploreByTouchHelper$ExploreByTouchNodeProvider:
    android.support.v4.widget.ExploreByTouchHelper this$0 -> this$0
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    boolean performAction(int,int,android.os.Bundle) -> performAction
android.support.v4.widget.ListPopupWindowCompat -> android.support.v4.widget.ListPopupWindowCompat:
    android.support.v4.widget.ListPopupWindowCompat$ListPopupWindowImpl IMPL -> IMPL
    android.view.View$OnTouchListener createDragToOpenListener(java.lang.Object,android.view.View) -> createDragToOpenListener
android.support.v4.widget.ListPopupWindowCompat$BaseListPopupWindowImpl -> android.support.v4.widget.ListPopupWindowCompat$BaseListPopupWindowImpl:
    android.view.View$OnTouchListener createDragToOpenListener(java.lang.Object,android.view.View) -> createDragToOpenListener
android.support.v4.widget.ListPopupWindowCompat$KitKatListPopupWindowImpl -> android.support.v4.widget.ListPopupWindowCompat$KitKatListPopupWindowImpl:
    android.view.View$OnTouchListener createDragToOpenListener(java.lang.Object,android.view.View) -> createDragToOpenListener
android.support.v4.widget.ListPopupWindowCompat$ListPopupWindowImpl -> android.support.v4.widget.ListPopupWindowCompat$ListPopupWindowImpl:
    android.view.View$OnTouchListener createDragToOpenListener(java.lang.Object,android.view.View) -> createDragToOpenListener
android.support.v4.widget.ListPopupWindowCompatKitKat -> android.support.v4.widget.ListPopupWindowCompatKitKat:
    android.view.View$OnTouchListener createDragToOpenListener(java.lang.Object,android.view.View) -> createDragToOpenListener
android.support.v4.widget.ListViewAutoScrollHelper -> android.support.v4.widget.ListViewAutoScrollHelper:
    android.widget.ListView mTarget -> mTarget
    void scrollTargetBy(int,int) -> scrollTargetBy
    boolean canTargetScrollHorizontally(int) -> canTargetScrollHorizontally
    boolean canTargetScrollVertically(int) -> canTargetScrollVertically
android.support.v4.widget.MaterialProgressDrawable -> android.support.v4.widget.MaterialProgressDrawable:
    android.view.animation.Interpolator LINEAR_INTERPOLATOR -> LINEAR_INTERPOLATOR
    android.view.animation.Interpolator END_CURVE_INTERPOLATOR -> END_CURVE_INTERPOLATOR
    android.view.animation.Interpolator START_CURVE_INTERPOLATOR -> START_CURVE_INTERPOLATOR
    android.view.animation.Interpolator EASE_INTERPOLATOR -> EASE_INTERPOLATOR
    int LARGE -> LARGE
    int DEFAULT -> DEFAULT
    int CIRCLE_DIAMETER -> CIRCLE_DIAMETER
    float CENTER_RADIUS -> CENTER_RADIUS
    float STROKE_WIDTH -> STROKE_WIDTH
    int CIRCLE_DIAMETER_LARGE -> CIRCLE_DIAMETER_LARGE
    float CENTER_RADIUS_LARGE -> CENTER_RADIUS_LARGE
    float STROKE_WIDTH_LARGE -> STROKE_WIDTH_LARGE
    int[] COLORS -> COLORS
    int ANIMATION_DURATION -> ANIMATION_DURATION
    float NUM_POINTS -> NUM_POINTS
    java.util.ArrayList mAnimators -> mAnimators
    android.support.v4.widget.MaterialProgressDrawable$Ring mRing -> mRing
    float mRotation -> mRotation
    int ARROW_WIDTH -> ARROW_WIDTH
    int ARROW_HEIGHT -> ARROW_HEIGHT
    float ARROW_OFFSET_ANGLE -> ARROW_OFFSET_ANGLE
    int ARROW_WIDTH_LARGE -> ARROW_WIDTH_LARGE
    int ARROW_HEIGHT_LARGE -> ARROW_HEIGHT_LARGE
    float MAX_PROGRESS_ARC -> MAX_PROGRESS_ARC
    android.content.res.Resources mResources -> mResources
    android.view.View mParent -> mParent
    android.view.animation.Animation mAnimation -> mAnimation
    float mRotationCount -> mRotationCount
    double mWidth -> mWidth
    double mHeight -> mHeight
    boolean mFinishing -> mFinishing
    android.graphics.drawable.Drawable$Callback mCallback -> mCallback
    void setSizeParameters(double,double,double,double,float,float) -> setSizeParameters
    void updateSizes(int) -> updateSizes
    void showArrow(boolean) -> showArrow
    void setArrowScale(float) -> setArrowScale
    void setStartEndTrim(float,float) -> setStartEndTrim
    void setProgressRotation(float) -> setProgressRotation
    void setBackgroundColor(int) -> setBackgroundColor
    void setColorSchemeColors(int[]) -> setColorSchemeColors
    int getIntrinsicHeight() -> getIntrinsicHeight
    int getIntrinsicWidth() -> getIntrinsicWidth
    void draw(android.graphics.Canvas) -> draw
    void setAlpha(int) -> setAlpha
    int getAlpha() -> getAlpha
    void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    void setRotation(float) -> setRotation
    float getRotation() -> getRotation
    int getOpacity() -> getOpacity
    boolean isRunning() -> isRunning
    void start() -> start
    void stop() -> stop
    void applyFinishTranslation(float,android.support.v4.widget.MaterialProgressDrawable$Ring) -> applyFinishTranslation
    void setupAnimators() -> setupAnimators
    void access$200(android.support.v4.widget.MaterialProgressDrawable,float,android.support.v4.widget.MaterialProgressDrawable$Ring) -> access$200
    android.view.animation.Interpolator access$300() -> access$300
    android.view.animation.Interpolator access$400() -> access$400
    float access$500(android.support.v4.widget.MaterialProgressDrawable) -> access$500
    float access$502(android.support.v4.widget.MaterialProgressDrawable,float) -> access$502
android.support.v4.widget.MaterialProgressDrawable$1 -> android.support.v4.widget.MaterialProgressDrawable$1:
    android.support.v4.widget.MaterialProgressDrawable$Ring val$ring -> val$ring
    android.support.v4.widget.MaterialProgressDrawable this$0 -> this$0
    void applyTransformation(float,android.view.animation.Transformation) -> applyTransformation
android.support.v4.widget.MaterialProgressDrawable$2 -> android.support.v4.widget.MaterialProgressDrawable$2:
    android.support.v4.widget.MaterialProgressDrawable$Ring val$ring -> val$ring
    android.support.v4.widget.MaterialProgressDrawable this$0 -> this$0
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
android.support.v4.widget.MaterialProgressDrawable$3 -> android.support.v4.widget.MaterialProgressDrawable$3:
    android.support.v4.widget.MaterialProgressDrawable this$0 -> this$0
    void invalidateDrawable(android.graphics.drawable.Drawable) -> invalidateDrawable
    void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long) -> scheduleDrawable
    void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable) -> unscheduleDrawable
android.support.v4.widget.MaterialProgressDrawable$EndCurveInterpolator -> android.support.v4.widget.MaterialProgressDrawable$EndCurveInterpolator:
    float getInterpolation(float) -> getInterpolation
android.support.v4.widget.MaterialProgressDrawable$ProgressDrawableSize -> android.support.v4.widget.MaterialProgressDrawable$ProgressDrawableSize:
android.support.v4.widget.MaterialProgressDrawable$Ring -> android.support.v4.widget.MaterialProgressDrawable$Ring:
    android.graphics.RectF mTempBounds -> mTempBounds
    android.graphics.Paint mPaint -> mPaint
    android.graphics.Paint mArrowPaint -> mArrowPaint
    android.graphics.drawable.Drawable$Callback mCallback -> mCallback
    float mStartTrim -> mStartTrim
    float mEndTrim -> mEndTrim
    float mRotation -> mRotation
    float mStrokeWidth -> mStrokeWidth
    float mStrokeInset -> mStrokeInset
    int[] mColors -> mColors
    int mColorIndex -> mColorIndex
    float mStartingStartTrim -> mStartingStartTrim
    float mStartingEndTrim -> mStartingEndTrim
    float mStartingRotation -> mStartingRotation
    boolean mShowArrow -> mShowArrow
    android.graphics.Path mArrow -> mArrow
    float mArrowScale -> mArrowScale
    double mRingCenterRadius -> mRingCenterRadius
    int mArrowWidth -> mArrowWidth
    int mArrowHeight -> mArrowHeight
    int mAlpha -> mAlpha
    android.graphics.Paint mCirclePaint -> mCirclePaint
    int mBackgroundColor -> mBackgroundColor
    void setBackgroundColor(int) -> setBackgroundColor
    void setArrowDimensions(float,float) -> setArrowDimensions
    void draw(android.graphics.Canvas,android.graphics.Rect) -> draw
    void drawTriangle(android.graphics.Canvas,float,float,android.graphics.Rect) -> drawTriangle
    void setColors(int[]) -> setColors
    void setColorIndex(int) -> setColorIndex
    void goToNextColor() -> goToNextColor
    void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    void setAlpha(int) -> setAlpha
    int getAlpha() -> getAlpha
    void setStrokeWidth(float) -> setStrokeWidth
    float getStrokeWidth() -> getStrokeWidth
    void setStartTrim(float) -> setStartTrim
    float getStartTrim() -> getStartTrim
    float getStartingStartTrim() -> getStartingStartTrim
    float getStartingEndTrim() -> getStartingEndTrim
    void setEndTrim(float) -> setEndTrim
    float getEndTrim() -> getEndTrim
    void setRotation(float) -> setRotation
    float getRotation() -> getRotation
    void setInsets(int,int) -> setInsets
    float getInsets() -> getInsets
    void setCenterRadius(double) -> setCenterRadius
    double getCenterRadius() -> getCenterRadius
    void setShowArrow(boolean) -> setShowArrow
    void setArrowScale(float) -> setArrowScale
    float getStartingRotation() -> getStartingRotation
    void storeOriginals() -> storeOriginals
    void resetOriginals() -> resetOriginals
    void invalidateSelf() -> invalidateSelf
android.support.v4.widget.MaterialProgressDrawable$StartCurveInterpolator -> android.support.v4.widget.MaterialProgressDrawable$StartCurveInterpolator:
    float getInterpolation(float) -> getInterpolation
android.support.v4.widget.PopupMenuCompat -> android.support.v4.widget.PopupMenuCompat:
    android.support.v4.widget.PopupMenuCompat$PopupMenuImpl IMPL -> IMPL
    android.view.View$OnTouchListener getDragToOpenListener(java.lang.Object) -> getDragToOpenListener
android.support.v4.widget.PopupMenuCompat$BasePopupMenuImpl -> android.support.v4.widget.PopupMenuCompat$BasePopupMenuImpl:
    android.view.View$OnTouchListener getDragToOpenListener(java.lang.Object) -> getDragToOpenListener
android.support.v4.widget.PopupMenuCompat$KitKatPopupMenuImpl -> android.support.v4.widget.PopupMenuCompat$KitKatPopupMenuImpl:
    android.view.View$OnTouchListener getDragToOpenListener(java.lang.Object) -> getDragToOpenListener
android.support.v4.widget.PopupMenuCompat$PopupMenuImpl -> android.support.v4.widget.PopupMenuCompat$PopupMenuImpl:
    android.view.View$OnTouchListener getDragToOpenListener(java.lang.Object) -> getDragToOpenListener
android.support.v4.widget.PopupMenuCompatKitKat -> android.support.v4.widget.PopupMenuCompatKitKat:
    android.view.View$OnTouchListener getDragToOpenListener(java.lang.Object) -> getDragToOpenListener
android.support.v4.widget.PopupWindowCompat -> android.support.v4.widget.PopupWindowCompat:
    android.support.v4.widget.PopupWindowCompat$PopupWindowImpl IMPL -> IMPL
    void showAsDropDown(android.widget.PopupWindow,android.view.View,int,int,int) -> showAsDropDown
android.support.v4.widget.PopupWindowCompat$BasePopupWindowImpl -> android.support.v4.widget.PopupWindowCompat$BasePopupWindowImpl:
    void showAsDropDown(android.widget.PopupWindow,android.view.View,int,int,int) -> showAsDropDown
android.support.v4.widget.PopupWindowCompat$KitKatPopupWindowImpl -> android.support.v4.widget.PopupWindowCompat$KitKatPopupWindowImpl:
    void showAsDropDown(android.widget.PopupWindow,android.view.View,int,int,int) -> showAsDropDown
android.support.v4.widget.PopupWindowCompat$PopupWindowImpl -> android.support.v4.widget.PopupWindowCompat$PopupWindowImpl:
    void showAsDropDown(android.widget.PopupWindow,android.view.View,int,int,int) -> showAsDropDown
android.support.v4.widget.PopupWindowCompatKitKat -> android.support.v4.widget.PopupWindowCompatKitKat:
    void showAsDropDown(android.widget.PopupWindow,android.view.View,int,int,int) -> showAsDropDown
android.support.v4.widget.ResourceCursorAdapter -> android.support.v4.widget.ResourceCursorAdapter:
    int mLayout -> mLayout
    int mDropDownLayout -> mDropDownLayout
    android.view.LayoutInflater mInflater -> mInflater
    android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newView
    android.view.View newDropDownView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newDropDownView
    void setViewResource(int) -> setViewResource
    void setDropDownViewResource(int) -> setDropDownViewResource
android.support.v4.widget.ScrollerCompat -> android.support.v4.widget.ScrollerCompat:
    java.lang.String TAG -> TAG
    java.lang.Object mScroller -> mScroller
    android.support.v4.widget.ScrollerCompat$ScrollerCompatImpl mImpl -> mImpl
    int CHASE_FRAME_TIME -> CHASE_FRAME_TIME
    android.support.v4.widget.ScrollerCompat create(android.content.Context) -> create
    android.support.v4.widget.ScrollerCompat create(android.content.Context,android.view.animation.Interpolator) -> create
    boolean isFinished() -> isFinished
    int getCurrX() -> getCurrX
    int getCurrY() -> getCurrY
    int getFinalX() -> getFinalX
    int getFinalY() -> getFinalY
    float getCurrVelocity() -> getCurrVelocity
    boolean computeScrollOffset() -> computeScrollOffset
    void startScroll(int,int,int,int) -> startScroll
    void startScroll(int,int,int,int,int) -> startScroll
    void fling(int,int,int,int,int,int,int,int) -> fling
    void fling(int,int,int,int,int,int,int,int,int,int) -> fling
    void abortAnimation() -> abortAnimation
    void notifyHorizontalEdgeReached(int,int,int) -> notifyHorizontalEdgeReached
    void notifyVerticalEdgeReached(int,int,int) -> notifyVerticalEdgeReached
    boolean isOverScrolled() -> isOverScrolled
android.support.v4.widget.ScrollerCompat$ScrollerCompatImpl -> android.support.v4.widget.ScrollerCompat$ScrollerCompatImpl:
    java.lang.Object createScroller(android.content.Context,android.view.animation.Interpolator) -> createScroller
    boolean isFinished(java.lang.Object) -> isFinished
    int getCurrX(java.lang.Object) -> getCurrX
    int getCurrY(java.lang.Object) -> getCurrY
    float getCurrVelocity(java.lang.Object) -> getCurrVelocity
    boolean computeScrollOffset(java.lang.Object) -> computeScrollOffset
    void startScroll(java.lang.Object,int,int,int,int) -> startScroll
    void startScroll(java.lang.Object,int,int,int,int,int) -> startScroll
    void fling(java.lang.Object,int,int,int,int,int,int,int,int) -> fling
    void fling(java.lang.Object,int,int,int,int,int,int,int,int,int,int) -> fling
    void abortAnimation(java.lang.Object) -> abortAnimation
    void notifyHorizontalEdgeReached(java.lang.Object,int,int,int) -> notifyHorizontalEdgeReached
    void notifyVerticalEdgeReached(java.lang.Object,int,int,int) -> notifyVerticalEdgeReached
    boolean isOverScrolled(java.lang.Object) -> isOverScrolled
    int getFinalX(java.lang.Object) -> getFinalX
    int getFinalY(java.lang.Object) -> getFinalY
android.support.v4.widget.ScrollerCompat$ScrollerCompatImplBase -> android.support.v4.widget.ScrollerCompat$ScrollerCompatImplBase:
    java.lang.Object createScroller(android.content.Context,android.view.animation.Interpolator) -> createScroller
    boolean isFinished(java.lang.Object) -> isFinished
    int getCurrX(java.lang.Object) -> getCurrX
    int getCurrY(java.lang.Object) -> getCurrY
    float getCurrVelocity(java.lang.Object) -> getCurrVelocity
    boolean computeScrollOffset(java.lang.Object) -> computeScrollOffset
    void startScroll(java.lang.Object,int,int,int,int) -> startScroll
    void startScroll(java.lang.Object,int,int,int,int,int) -> startScroll
    void fling(java.lang.Object,int,int,int,int,int,int,int,int) -> fling
    void fling(java.lang.Object,int,int,int,int,int,int,int,int,int,int) -> fling
    void abortAnimation(java.lang.Object) -> abortAnimation
    void notifyHorizontalEdgeReached(java.lang.Object,int,int,int) -> notifyHorizontalEdgeReached
    void notifyVerticalEdgeReached(java.lang.Object,int,int,int) -> notifyVerticalEdgeReached
    boolean isOverScrolled(java.lang.Object) -> isOverScrolled
    int getFinalX(java.lang.Object) -> getFinalX
    int getFinalY(java.lang.Object) -> getFinalY
android.support.v4.widget.ScrollerCompat$ScrollerCompatImplGingerbread -> android.support.v4.widget.ScrollerCompat$ScrollerCompatImplGingerbread:
    java.lang.Object createScroller(android.content.Context,android.view.animation.Interpolator) -> createScroller
    boolean isFinished(java.lang.Object) -> isFinished
    int getCurrX(java.lang.Object) -> getCurrX
    int getCurrY(java.lang.Object) -> getCurrY
    float getCurrVelocity(java.lang.Object) -> getCurrVelocity
    boolean computeScrollOffset(java.lang.Object) -> computeScrollOffset
    void startScroll(java.lang.Object,int,int,int,int) -> startScroll
    void startScroll(java.lang.Object,int,int,int,int,int) -> startScroll
    void fling(java.lang.Object,int,int,int,int,int,int,int,int) -> fling
    void fling(java.lang.Object,int,int,int,int,int,int,int,int,int,int) -> fling
    void abortAnimation(java.lang.Object) -> abortAnimation
    void notifyHorizontalEdgeReached(java.lang.Object,int,int,int) -> notifyHorizontalEdgeReached
    void notifyVerticalEdgeReached(java.lang.Object,int,int,int) -> notifyVerticalEdgeReached
    boolean isOverScrolled(java.lang.Object) -> isOverScrolled
    int getFinalX(java.lang.Object) -> getFinalX
    int getFinalY(java.lang.Object) -> getFinalY
android.support.v4.widget.ScrollerCompat$ScrollerCompatImplIcs -> android.support.v4.widget.ScrollerCompat$ScrollerCompatImplIcs:
    float getCurrVelocity(java.lang.Object) -> getCurrVelocity
android.support.v4.widget.ScrollerCompatGingerbread -> android.support.v4.widget.ScrollerCompatGingerbread:
    java.lang.Object createScroller(android.content.Context,android.view.animation.Interpolator) -> createScroller
    boolean isFinished(java.lang.Object) -> isFinished
    int getCurrX(java.lang.Object) -> getCurrX
    int getCurrY(java.lang.Object) -> getCurrY
    boolean computeScrollOffset(java.lang.Object) -> computeScrollOffset
    void startScroll(java.lang.Object,int,int,int,int) -> startScroll
    void startScroll(java.lang.Object,int,int,int,int,int) -> startScroll
    void fling(java.lang.Object,int,int,int,int,int,int,int,int) -> fling
    void fling(java.lang.Object,int,int,int,int,int,int,int,int,int,int) -> fling
    void abortAnimation(java.lang.Object) -> abortAnimation
    void notifyHorizontalEdgeReached(java.lang.Object,int,int,int) -> notifyHorizontalEdgeReached
    void notifyVerticalEdgeReached(java.lang.Object,int,int,int) -> notifyVerticalEdgeReached
    boolean isOverScrolled(java.lang.Object) -> isOverScrolled
    int getFinalX(java.lang.Object) -> getFinalX
    int getFinalY(java.lang.Object) -> getFinalY
android.support.v4.widget.ScrollerCompatIcs -> android.support.v4.widget.ScrollerCompatIcs:
    float getCurrVelocity(java.lang.Object) -> getCurrVelocity
android.support.v4.widget.SearchViewCompat -> android.support.v4.widget.SearchViewCompat:
    android.support.v4.widget.SearchViewCompat$SearchViewCompatImpl IMPL -> IMPL
    android.view.View newSearchView(android.content.Context) -> newSearchView
    void setSearchableInfo(android.view.View,android.content.ComponentName) -> setSearchableInfo
    void setImeOptions(android.view.View,int) -> setImeOptions
    void setInputType(android.view.View,int) -> setInputType
    void setOnQueryTextListener(android.view.View,android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat) -> setOnQueryTextListener
    void setOnCloseListener(android.view.View,android.support.v4.widget.SearchViewCompat$OnCloseListenerCompat) -> setOnCloseListener
    java.lang.CharSequence getQuery(android.view.View) -> getQuery
    void setQuery(android.view.View,java.lang.CharSequence,boolean) -> setQuery
    void setQueryHint(android.view.View,java.lang.CharSequence) -> setQueryHint
    void setIconified(android.view.View,boolean) -> setIconified
    boolean isIconified(android.view.View) -> isIconified
    void setSubmitButtonEnabled(android.view.View,boolean) -> setSubmitButtonEnabled
    boolean isSubmitButtonEnabled(android.view.View) -> isSubmitButtonEnabled
    void setQueryRefinementEnabled(android.view.View,boolean) -> setQueryRefinementEnabled
    boolean isQueryRefinementEnabled(android.view.View) -> isQueryRefinementEnabled
    void setMaxWidth(android.view.View,int) -> setMaxWidth
    android.support.v4.widget.SearchViewCompat$SearchViewCompatImpl access$000() -> access$000
android.support.v4.widget.SearchViewCompat$OnCloseListenerCompat -> android.support.v4.widget.SearchViewCompat$OnCloseListenerCompat:
    java.lang.Object mListener -> mListener
    boolean onClose() -> onClose
android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat -> android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat:
    java.lang.Object mListener -> mListener
    boolean onQueryTextSubmit(java.lang.String) -> onQueryTextSubmit
    boolean onQueryTextChange(java.lang.String) -> onQueryTextChange
android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl -> android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl:
    android.view.View newSearchView(android.content.Context) -> newSearchView
    void setSearchableInfo(android.view.View,android.content.ComponentName) -> setSearchableInfo
    java.lang.Object newOnQueryTextListener(android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat) -> newOnQueryTextListener
    void setOnQueryTextListener(java.lang.Object,java.lang.Object) -> setOnQueryTextListener
    java.lang.Object newOnCloseListener(android.support.v4.widget.SearchViewCompat$OnCloseListenerCompat) -> newOnCloseListener
    void setOnCloseListener(java.lang.Object,java.lang.Object) -> setOnCloseListener
    java.lang.CharSequence getQuery(android.view.View) -> getQuery
    void setQuery(android.view.View,java.lang.CharSequence,boolean) -> setQuery
    void setQueryHint(android.view.View,java.lang.CharSequence) -> setQueryHint
    void setIconified(android.view.View,boolean) -> setIconified
    boolean isIconified(android.view.View) -> isIconified
    void setSubmitButtonEnabled(android.view.View,boolean) -> setSubmitButtonEnabled
    boolean isSubmitButtonEnabled(android.view.View) -> isSubmitButtonEnabled
    void setQueryRefinementEnabled(android.view.View,boolean) -> setQueryRefinementEnabled
    boolean isQueryRefinementEnabled(android.view.View) -> isQueryRefinementEnabled
    void setMaxWidth(android.view.View,int) -> setMaxWidth
android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl$1 -> android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl$1:
    android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat val$listener -> val$listener
    android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl this$0 -> this$0
    boolean onQueryTextSubmit(java.lang.String) -> onQueryTextSubmit
    boolean onQueryTextChange(java.lang.String) -> onQueryTextChange
android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl$2 -> android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl$2:
    android.support.v4.widget.SearchViewCompat$OnCloseListenerCompat val$listener -> val$listener
    android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl this$0 -> this$0
    boolean onClose() -> onClose
android.support.v4.widget.SearchViewCompat$SearchViewCompatIcsImpl -> android.support.v4.widget.SearchViewCompat$SearchViewCompatIcsImpl:
    android.view.View newSearchView(android.content.Context) -> newSearchView
    void setImeOptions(android.view.View,int) -> setImeOptions
    void setInputType(android.view.View,int) -> setInputType
android.support.v4.widget.SearchViewCompat$SearchViewCompatImpl -> android.support.v4.widget.SearchViewCompat$SearchViewCompatImpl:
    android.view.View newSearchView(android.content.Context) -> newSearchView
    void setSearchableInfo(android.view.View,android.content.ComponentName) -> setSearchableInfo
    void setImeOptions(android.view.View,int) -> setImeOptions
    void setInputType(android.view.View,int) -> setInputType
    java.lang.Object newOnQueryTextListener(android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat) -> newOnQueryTextListener
    void setOnQueryTextListener(java.lang.Object,java.lang.Object) -> setOnQueryTextListener
    java.lang.Object newOnCloseListener(android.support.v4.widget.SearchViewCompat$OnCloseListenerCompat) -> newOnCloseListener
    void setOnCloseListener(java.lang.Object,java.lang.Object) -> setOnCloseListener
    java.lang.CharSequence getQuery(android.view.View) -> getQuery
    void setQuery(android.view.View,java.lang.CharSequence,boolean) -> setQuery
    void setQueryHint(android.view.View,java.lang.CharSequence) -> setQueryHint
    void setIconified(android.view.View,boolean) -> setIconified
    boolean isIconified(android.view.View) -> isIconified
    void setSubmitButtonEnabled(android.view.View,boolean) -> setSubmitButtonEnabled
    boolean isSubmitButtonEnabled(android.view.View) -> isSubmitButtonEnabled
    void setQueryRefinementEnabled(android.view.View,boolean) -> setQueryRefinementEnabled
    boolean isQueryRefinementEnabled(android.view.View) -> isQueryRefinementEnabled
    void setMaxWidth(android.view.View,int) -> setMaxWidth
android.support.v4.widget.SearchViewCompat$SearchViewCompatStubImpl -> android.support.v4.widget.SearchViewCompat$SearchViewCompatStubImpl:
    android.view.View newSearchView(android.content.Context) -> newSearchView
    void setSearchableInfo(android.view.View,android.content.ComponentName) -> setSearchableInfo
    void setImeOptions(android.view.View,int) -> setImeOptions
    void setInputType(android.view.View,int) -> setInputType
    java.lang.Object newOnQueryTextListener(android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat) -> newOnQueryTextListener
    void setOnQueryTextListener(java.lang.Object,java.lang.Object) -> setOnQueryTextListener
    java.lang.Object newOnCloseListener(android.support.v4.widget.SearchViewCompat$OnCloseListenerCompat) -> newOnCloseListener
    void setOnCloseListener(java.lang.Object,java.lang.Object) -> setOnCloseListener
    java.lang.CharSequence getQuery(android.view.View) -> getQuery
    void setQuery(android.view.View,java.lang.CharSequence,boolean) -> setQuery
    void setQueryHint(android.view.View,java.lang.CharSequence) -> setQueryHint
    void setIconified(android.view.View,boolean) -> setIconified
    boolean isIconified(android.view.View) -> isIconified
    void setSubmitButtonEnabled(android.view.View,boolean) -> setSubmitButtonEnabled
    boolean isSubmitButtonEnabled(android.view.View) -> isSubmitButtonEnabled
    void setQueryRefinementEnabled(android.view.View,boolean) -> setQueryRefinementEnabled
    boolean isQueryRefinementEnabled(android.view.View) -> isQueryRefinementEnabled
    void setMaxWidth(android.view.View,int) -> setMaxWidth
android.support.v4.widget.SearchViewCompatHoneycomb -> android.support.v4.widget.SearchViewCompatHoneycomb:
    android.view.View newSearchView(android.content.Context) -> newSearchView
    void setSearchableInfo(android.view.View,android.content.ComponentName) -> setSearchableInfo
    java.lang.Object newOnQueryTextListener(android.support.v4.widget.SearchViewCompatHoneycomb$OnQueryTextListenerCompatBridge) -> newOnQueryTextListener
    void setOnQueryTextListener(java.lang.Object,java.lang.Object) -> setOnQueryTextListener
    java.lang.Object newOnCloseListener(android.support.v4.widget.SearchViewCompatHoneycomb$OnCloseListenerCompatBridge) -> newOnCloseListener
    void setOnCloseListener(java.lang.Object,java.lang.Object) -> setOnCloseListener
    java.lang.CharSequence getQuery(android.view.View) -> getQuery
    void setQuery(android.view.View,java.lang.CharSequence,boolean) -> setQuery
    void setQueryHint(android.view.View,java.lang.CharSequence) -> setQueryHint
    void setIconified(android.view.View,boolean) -> setIconified
    boolean isIconified(android.view.View) -> isIconified
    void setSubmitButtonEnabled(android.view.View,boolean) -> setSubmitButtonEnabled
    boolean isSubmitButtonEnabled(android.view.View) -> isSubmitButtonEnabled
    void setQueryRefinementEnabled(android.view.View,boolean) -> setQueryRefinementEnabled
    boolean isQueryRefinementEnabled(android.view.View) -> isQueryRefinementEnabled
    void setMaxWidth(android.view.View,int) -> setMaxWidth
android.support.v4.widget.SearchViewCompatHoneycomb$1 -> android.support.v4.widget.SearchViewCompatHoneycomb$1:
    android.support.v4.widget.SearchViewCompatHoneycomb$OnQueryTextListenerCompatBridge val$listener -> val$listener
    boolean onQueryTextSubmit(java.lang.String) -> onQueryTextSubmit
    boolean onQueryTextChange(java.lang.String) -> onQueryTextChange
android.support.v4.widget.SearchViewCompatHoneycomb$2 -> android.support.v4.widget.SearchViewCompatHoneycomb$2:
    android.support.v4.widget.SearchViewCompatHoneycomb$OnCloseListenerCompatBridge val$listener -> val$listener
    boolean onClose() -> onClose
android.support.v4.widget.SearchViewCompatHoneycomb$OnCloseListenerCompatBridge -> android.support.v4.widget.SearchViewCompatHoneycomb$OnCloseListenerCompatBridge:
    boolean onClose() -> onClose
android.support.v4.widget.SearchViewCompatHoneycomb$OnQueryTextListenerCompatBridge -> android.support.v4.widget.SearchViewCompatHoneycomb$OnQueryTextListenerCompatBridge:
    boolean onQueryTextSubmit(java.lang.String) -> onQueryTextSubmit
    boolean onQueryTextChange(java.lang.String) -> onQueryTextChange
android.support.v4.widget.SearchViewCompatIcs -> android.support.v4.widget.SearchViewCompatIcs:
    android.view.View newSearchView(android.content.Context) -> newSearchView
    void setImeOptions(android.view.View,int) -> setImeOptions
    void setInputType(android.view.View,int) -> setInputType
android.support.v4.widget.SearchViewCompatIcs$MySearchView -> android.support.v4.widget.SearchViewCompatIcs$MySearchView:
    void onActionViewCollapsed() -> onActionViewCollapsed
android.support.v4.widget.SimpleCursorAdapter -> android.support.v4.widget.SimpleCursorAdapter:
    int[] mFrom -> mFrom
    int[] mTo -> mTo
    int mStringConversionColumn -> mStringConversionColumn
    android.support.v4.widget.SimpleCursorAdapter$CursorToStringConverter mCursorToStringConverter -> mCursorToStringConverter
    android.support.v4.widget.SimpleCursorAdapter$ViewBinder mViewBinder -> mViewBinder
    java.lang.String[] mOriginalFrom -> mOriginalFrom
    void bindView(android.view.View,android.content.Context,android.database.Cursor) -> bindView
    android.support.v4.widget.SimpleCursorAdapter$ViewBinder getViewBinder() -> getViewBinder
    void setViewBinder(android.support.v4.widget.SimpleCursorAdapter$ViewBinder) -> setViewBinder
    void setViewImage(android.widget.ImageView,java.lang.String) -> setViewImage
    void setViewText(android.widget.TextView,java.lang.String) -> setViewText
    int getStringConversionColumn() -> getStringConversionColumn
    void setStringConversionColumn(int) -> setStringConversionColumn
    android.support.v4.widget.SimpleCursorAdapter$CursorToStringConverter getCursorToStringConverter() -> getCursorToStringConverter
    void setCursorToStringConverter(android.support.v4.widget.SimpleCursorAdapter$CursorToStringConverter) -> setCursorToStringConverter
    java.lang.CharSequence convertToString(android.database.Cursor) -> convertToString
    void findColumns(java.lang.String[]) -> findColumns
    android.database.Cursor swapCursor(android.database.Cursor) -> swapCursor
    void changeCursorAndColumns(android.database.Cursor,java.lang.String[],int[]) -> changeCursorAndColumns
android.support.v4.widget.SimpleCursorAdapter$CursorToStringConverter -> android.support.v4.widget.SimpleCursorAdapter$CursorToStringConverter:
    java.lang.CharSequence convertToString(android.database.Cursor) -> convertToString
android.support.v4.widget.SimpleCursorAdapter$ViewBinder -> android.support.v4.widget.SimpleCursorAdapter$ViewBinder:
    boolean setViewValue(android.view.View,android.database.Cursor,int) -> setViewValue
android.support.v4.widget.SlidingPaneLayout -> android.support.v4.widget.SlidingPaneLayout:
    java.lang.String TAG -> TAG
    int DEFAULT_OVERHANG_SIZE -> DEFAULT_OVERHANG_SIZE
    int DEFAULT_FADE_COLOR -> DEFAULT_FADE_COLOR
    int mSliderFadeColor -> mSliderFadeColor
    int MIN_FLING_VELOCITY -> MIN_FLING_VELOCITY
    int mCoveredFadeColor -> mCoveredFadeColor
    android.graphics.drawable.Drawable mShadowDrawableLeft -> mShadowDrawableLeft
    android.graphics.drawable.Drawable mShadowDrawableRight -> mShadowDrawableRight
    int mOverhangSize -> mOverhangSize
    boolean mCanSlide -> mCanSlide
    android.view.View mSlideableView -> mSlideableView
    float mSlideOffset -> mSlideOffset
    float mParallaxOffset -> mParallaxOffset
    int mSlideRange -> mSlideRange
    boolean mIsUnableToDrag -> mIsUnableToDrag
    int mParallaxBy -> mParallaxBy
    float mInitialMotionX -> mInitialMotionX
    float mInitialMotionY -> mInitialMotionY
    android.support.v4.widget.SlidingPaneLayout$PanelSlideListener mPanelSlideListener -> mPanelSlideListener
    android.support.v4.widget.ViewDragHelper mDragHelper -> mDragHelper
    boolean mPreservedOpenState -> mPreservedOpenState
    boolean mFirstLayout -> mFirstLayout
    android.graphics.Rect mTmpRect -> mTmpRect
    java.util.ArrayList mPostedRunnables -> mPostedRunnables
    android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImpl IMPL -> IMPL
    void setParallaxDistance(int) -> setParallaxDistance
    int getParallaxDistance() -> getParallaxDistance
    void setSliderFadeColor(int) -> setSliderFadeColor
    int getSliderFadeColor() -> getSliderFadeColor
    void setCoveredFadeColor(int) -> setCoveredFadeColor
    int getCoveredFadeColor() -> getCoveredFadeColor
    void setPanelSlideListener(android.support.v4.widget.SlidingPaneLayout$PanelSlideListener) -> setPanelSlideListener
    void dispatchOnPanelSlide(android.view.View) -> dispatchOnPanelSlide
    void dispatchOnPanelOpened(android.view.View) -> dispatchOnPanelOpened
    void dispatchOnPanelClosed(android.view.View) -> dispatchOnPanelClosed
    void updateObscuredViewsVisibility(android.view.View) -> updateObscuredViewsVisibility
    void setAllChildrenVisible() -> setAllChildrenVisible
    boolean viewIsOpaque(android.view.View) -> viewIsOpaque
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void requestChildFocus(android.view.View,android.view.View) -> requestChildFocus
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    boolean closePane(android.view.View,int) -> closePane
    boolean openPane(android.view.View,int) -> openPane
    void smoothSlideOpen() -> smoothSlideOpen
    boolean openPane() -> openPane
    void smoothSlideClosed() -> smoothSlideClosed
    boolean closePane() -> closePane
    boolean isOpen() -> isOpen
    boolean canSlide() -> canSlide
    boolean isSlideable() -> isSlideable
    void onPanelDragged(int) -> onPanelDragged
    void dimChildView(android.view.View,float,int) -> dimChildView
    boolean drawChild(android.graphics.Canvas,android.view.View,long) -> drawChild
    void invalidateChildRegion(android.view.View) -> invalidateChildRegion
    boolean smoothSlideTo(float,int) -> smoothSlideTo
    void computeScroll() -> computeScroll
    void setShadowDrawable(android.graphics.drawable.Drawable) -> setShadowDrawable
    void setShadowDrawableLeft(android.graphics.drawable.Drawable) -> setShadowDrawableLeft
    void setShadowDrawableRight(android.graphics.drawable.Drawable) -> setShadowDrawableRight
    void setShadowResource(int) -> setShadowResource
    void setShadowResourceLeft(int) -> setShadowResourceLeft
    void setShadowResourceRight(int) -> setShadowResourceRight
    void draw(android.graphics.Canvas) -> draw
    void parallaxOtherViews(float) -> parallaxOtherViews
    boolean canScroll(android.view.View,boolean,int,int,int) -> canScroll
    boolean isDimmed(android.view.View) -> isDimmed
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    boolean isLayoutRtlSupport() -> isLayoutRtlSupport
    boolean access$100(android.support.v4.widget.SlidingPaneLayout) -> access$100
    android.support.v4.widget.ViewDragHelper access$200(android.support.v4.widget.SlidingPaneLayout) -> access$200
    float access$300(android.support.v4.widget.SlidingPaneLayout) -> access$300
    android.view.View access$400(android.support.v4.widget.SlidingPaneLayout) -> access$400
    boolean access$502(android.support.v4.widget.SlidingPaneLayout,boolean) -> access$502
    void access$600(android.support.v4.widget.SlidingPaneLayout,int) -> access$600
    boolean access$700(android.support.v4.widget.SlidingPaneLayout) -> access$700
    int access$800(android.support.v4.widget.SlidingPaneLayout) -> access$800
    void access$1000(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> access$1000
    java.util.ArrayList access$1100(android.support.v4.widget.SlidingPaneLayout) -> access$1100
android.support.v4.widget.SlidingPaneLayout$1 -> android.support.v4.widget.SlidingPaneLayout$1:
android.support.v4.widget.SlidingPaneLayout$AccessibilityDelegate -> android.support.v4.widget.SlidingPaneLayout$AccessibilityDelegate:
    android.graphics.Rect mTmpRect -> mTmpRect
    android.support.v4.widget.SlidingPaneLayout this$0 -> this$0
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    boolean filter(android.view.View) -> filter
    void copyNodeInfoNoChildren(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> copyNodeInfoNoChildren
android.support.v4.widget.SlidingPaneLayout$DisableLayerRunnable -> android.support.v4.widget.SlidingPaneLayout$DisableLayerRunnable:
    android.view.View mChildView -> mChildView
    android.support.v4.widget.SlidingPaneLayout this$0 -> this$0
    void run() -> run
android.support.v4.widget.SlidingPaneLayout$DragHelperCallback -> android.support.v4.widget.SlidingPaneLayout$DragHelperCallback:
    android.support.v4.widget.SlidingPaneLayout this$0 -> this$0
    boolean tryCaptureView(android.view.View,int) -> tryCaptureView
    void onViewDragStateChanged(int) -> onViewDragStateChanged
    void onViewCaptured(android.view.View,int) -> onViewCaptured
    void onViewPositionChanged(android.view.View,int,int,int,int) -> onViewPositionChanged
    void onViewReleased(android.view.View,float,float) -> onViewReleased
    int getViewHorizontalDragRange(android.view.View) -> getViewHorizontalDragRange
    int clampViewPositionHorizontal(android.view.View,int,int) -> clampViewPositionHorizontal
    int clampViewPositionVertical(android.view.View,int,int) -> clampViewPositionVertical
    void onEdgeDragStarted(int,int) -> onEdgeDragStarted
android.support.v4.widget.SlidingPaneLayout$LayoutParams -> android.support.v4.widget.SlidingPaneLayout$LayoutParams:
    int[] ATTRS -> ATTRS
    float weight -> weight
    boolean slideable -> slideable
    boolean dimWhenOffset -> dimWhenOffset
    android.graphics.Paint dimPaint -> dimPaint
android.support.v4.widget.SlidingPaneLayout$PanelSlideListener -> android.support.v4.widget.SlidingPaneLayout$PanelSlideListener:
    void onPanelSlide(android.view.View,float) -> onPanelSlide
    void onPanelOpened(android.view.View) -> onPanelOpened
    void onPanelClosed(android.view.View) -> onPanelClosed
android.support.v4.widget.SlidingPaneLayout$SavedState -> android.support.v4.widget.SlidingPaneLayout$SavedState:
    boolean isOpen -> isOpen
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.widget.SlidingPaneLayout$SavedState$1 -> android.support.v4.widget.SlidingPaneLayout$SavedState$1:
    android.support.v4.widget.SlidingPaneLayout$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.widget.SlidingPaneLayout$SavedState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.widget.SlidingPaneLayout$SimplePanelSlideListener -> android.support.v4.widget.SlidingPaneLayout$SimplePanelSlideListener:
    void onPanelSlide(android.view.View,float) -> onPanelSlide
    void onPanelOpened(android.view.View) -> onPanelOpened
    void onPanelClosed(android.view.View) -> onPanelClosed
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImpl -> android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImpl:
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> invalidateChildRegion
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplBase -> android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplBase:
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> invalidateChildRegion
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplJB -> android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplJB:
    java.lang.reflect.Method mGetDisplayList -> mGetDisplayList
    java.lang.reflect.Field mRecreateDisplayList -> mRecreateDisplayList
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> invalidateChildRegion
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplJBMR1 -> android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplJBMR1:
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> invalidateChildRegion
android.support.v4.widget.SwipeProgressBar -> android.support.v4.widget.SwipeProgressBar:
    int COLOR1 -> COLOR1
    int COLOR2 -> COLOR2
    int COLOR3 -> COLOR3
    int COLOR4 -> COLOR4
    int ANIMATION_DURATION_MS -> ANIMATION_DURATION_MS
    int FINISH_ANIMATION_DURATION_MS -> FINISH_ANIMATION_DURATION_MS
    android.view.animation.Interpolator INTERPOLATOR -> INTERPOLATOR
    android.graphics.Paint mPaint -> mPaint
    android.graphics.RectF mClipRect -> mClipRect
    float mTriggerPercentage -> mTriggerPercentage
    long mStartTime -> mStartTime
    long mFinishTime -> mFinishTime
    boolean mRunning -> mRunning
    int mColor1 -> mColor1
    int mColor2 -> mColor2
    int mColor3 -> mColor3
    int mColor4 -> mColor4
    android.view.View mParent -> mParent
    android.graphics.Rect mBounds -> mBounds
    void setColorScheme(int,int,int,int) -> setColorScheme
    void setTriggerPercentage(float) -> setTriggerPercentage
    void start() -> start
    void stop() -> stop
    boolean isRunning() -> isRunning
    void draw(android.graphics.Canvas) -> draw
    void drawTrigger(android.graphics.Canvas,int,int) -> drawTrigger
    void drawCircle(android.graphics.Canvas,float,float,int,float) -> drawCircle
    void setBounds(int,int,int,int) -> setBounds
android.support.v4.widget.SwipeRefreshLayout -> android.support.v4.widget.SwipeRefreshLayout:
    int LARGE -> LARGE
    int DEFAULT -> DEFAULT
    java.lang.String LOG_TAG -> LOG_TAG
    int MAX_ALPHA -> MAX_ALPHA
    int STARTING_PROGRESS_ALPHA -> STARTING_PROGRESS_ALPHA
    int CIRCLE_DIAMETER -> CIRCLE_DIAMETER
    int CIRCLE_DIAMETER_LARGE -> CIRCLE_DIAMETER_LARGE
    float DECELERATE_INTERPOLATION_FACTOR -> DECELERATE_INTERPOLATION_FACTOR
    int INVALID_POINTER -> INVALID_POINTER
    float DRAG_RATE -> DRAG_RATE
    float MAX_PROGRESS_ANGLE -> MAX_PROGRESS_ANGLE
    int SCALE_DOWN_DURATION -> SCALE_DOWN_DURATION
    int ALPHA_ANIMATION_DURATION -> ALPHA_ANIMATION_DURATION
    int ANIMATE_TO_TRIGGER_DURATION -> ANIMATE_TO_TRIGGER_DURATION
    int ANIMATE_TO_START_DURATION -> ANIMATE_TO_START_DURATION
    int CIRCLE_BG_LIGHT -> CIRCLE_BG_LIGHT
    int DEFAULT_CIRCLE_TARGET -> DEFAULT_CIRCLE_TARGET
    android.view.View mTarget -> mTarget
    android.support.v4.widget.SwipeRefreshLayout$OnRefreshListener mListener -> mListener
    boolean mRefreshing -> mRefreshing
    int mTouchSlop -> mTouchSlop
    float mTotalDragDistance -> mTotalDragDistance
    int mMediumAnimationDuration -> mMediumAnimationDuration
    int mCurrentTargetOffsetTop -> mCurrentTargetOffsetTop
    boolean mOriginalOffsetCalculated -> mOriginalOffsetCalculated
    float mInitialMotionY -> mInitialMotionY
    boolean mIsBeingDragged -> mIsBeingDragged
    int mActivePointerId -> mActivePointerId
    boolean mScale -> mScale
    boolean mReturningToStart -> mReturningToStart
    android.view.animation.DecelerateInterpolator mDecelerateInterpolator -> mDecelerateInterpolator
    int[] LAYOUT_ATTRS -> LAYOUT_ATTRS
    android.support.v4.widget.CircleImageView mCircleView -> mCircleView
    int mCircleViewIndex -> mCircleViewIndex
    int mFrom -> mFrom
    float mStartingScale -> mStartingScale
    int mOriginalOffsetTop -> mOriginalOffsetTop
    android.support.v4.widget.MaterialProgressDrawable mProgress -> mProgress
    android.view.animation.Animation mScaleAnimation -> mScaleAnimation
    android.view.animation.Animation mScaleDownAnimation -> mScaleDownAnimation
    android.view.animation.Animation mAlphaStartAnimation -> mAlphaStartAnimation
    android.view.animation.Animation mAlphaMaxAnimation -> mAlphaMaxAnimation
    android.view.animation.Animation mScaleDownToStartAnimation -> mScaleDownToStartAnimation
    float mSpinnerFinalOffset -> mSpinnerFinalOffset
    boolean mNotify -> mNotify
    int mCircleWidth -> mCircleWidth
    int mCircleHeight -> mCircleHeight
    boolean mUsingCustomStart -> mUsingCustomStart
    android.view.animation.Animation$AnimationListener mRefreshListener -> mRefreshListener
    android.view.animation.Animation mAnimateToCorrectPosition -> mAnimateToCorrectPosition
    android.view.animation.Animation mAnimateToStartPosition -> mAnimateToStartPosition
    void setColorViewAlpha(int) -> setColorViewAlpha
    void setProgressViewOffset(boolean,int,int) -> setProgressViewOffset
    void setProgressViewEndTarget(boolean,int) -> setProgressViewEndTarget
    void setSize(int) -> setSize
    int getChildDrawingOrder(int,int) -> getChildDrawingOrder
    void createProgressView() -> createProgressView
    void setOnRefreshListener(android.support.v4.widget.SwipeRefreshLayout$OnRefreshListener) -> setOnRefreshListener
    boolean isAlphaUsedForScale() -> isAlphaUsedForScale
    void setRefreshing(boolean) -> setRefreshing
    void startScaleUpAnimation(android.view.animation.Animation$AnimationListener) -> startScaleUpAnimation
    void setAnimationProgress(float) -> setAnimationProgress
    void setRefreshing(boolean,boolean) -> setRefreshing
    void startScaleDownAnimation(android.view.animation.Animation$AnimationListener) -> startScaleDownAnimation
    void startProgressAlphaStartAnimation() -> startProgressAlphaStartAnimation
    void startProgressAlphaMaxAnimation() -> startProgressAlphaMaxAnimation
    android.view.animation.Animation startAlphaAnimation(int,int) -> startAlphaAnimation
    void setProgressBackgroundColor(int) -> setProgressBackgroundColor
    void setColorScheme(int[]) -> setColorScheme
    void setColorSchemeResources(int[]) -> setColorSchemeResources
    void setColorSchemeColors(int[]) -> setColorSchemeColors
    boolean isRefreshing() -> isRefreshing
    void ensureTarget() -> ensureTarget
    void setDistanceToTriggerSync(int) -> setDistanceToTriggerSync
    void onLayout(boolean,int,int,int,int) -> onLayout
    void onMeasure(int,int) -> onMeasure
    boolean canChildScrollUp() -> canChildScrollUp
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    float getMotionEventY(android.view.MotionEvent,int) -> getMotionEventY
    void requestDisallowInterceptTouchEvent(boolean) -> requestDisallowInterceptTouchEvent
    boolean isAnimationRunning(android.view.animation.Animation) -> isAnimationRunning
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void animateOffsetToCorrectPosition(int,android.view.animation.Animation$AnimationListener) -> animateOffsetToCorrectPosition
    void animateOffsetToStartPosition(int,android.view.animation.Animation$AnimationListener) -> animateOffsetToStartPosition
    void moveToStart(float) -> moveToStart
    void startScaleDownReturnToStartAnimation(int,android.view.animation.Animation$AnimationListener) -> startScaleDownReturnToStartAnimation
    void setTargetOffsetTopAndBottom(int,boolean) -> setTargetOffsetTopAndBottom
    void onSecondaryPointerUp(android.view.MotionEvent) -> onSecondaryPointerUp
    boolean access$000(android.support.v4.widget.SwipeRefreshLayout) -> access$000
    android.support.v4.widget.MaterialProgressDrawable access$100(android.support.v4.widget.SwipeRefreshLayout) -> access$100
    boolean access$200(android.support.v4.widget.SwipeRefreshLayout) -> access$200
    android.support.v4.widget.SwipeRefreshLayout$OnRefreshListener access$300(android.support.v4.widget.SwipeRefreshLayout) -> access$300
    android.support.v4.widget.CircleImageView access$400(android.support.v4.widget.SwipeRefreshLayout) -> access$400
    void access$500(android.support.v4.widget.SwipeRefreshLayout,int) -> access$500
    boolean access$600(android.support.v4.widget.SwipeRefreshLayout) -> access$600
    void access$700(android.support.v4.widget.SwipeRefreshLayout,float) -> access$700
    int access$800(android.support.v4.widget.SwipeRefreshLayout) -> access$800
    void access$900(android.support.v4.widget.SwipeRefreshLayout,int,boolean) -> access$900
    int access$802(android.support.v4.widget.SwipeRefreshLayout,int) -> access$802
    void access$1000(android.support.v4.widget.SwipeRefreshLayout,android.view.animation.Animation$AnimationListener) -> access$1000
    boolean access$1100(android.support.v4.widget.SwipeRefreshLayout) -> access$1100
    float access$1200(android.support.v4.widget.SwipeRefreshLayout) -> access$1200
    void access$1300(android.support.v4.widget.SwipeRefreshLayout,float) -> access$1300
    float access$1400(android.support.v4.widget.SwipeRefreshLayout) -> access$1400
android.support.v4.widget.SwipeRefreshLayout$1 -> android.support.v4.widget.SwipeRefreshLayout$1:
    android.support.v4.widget.SwipeRefreshLayout this$0 -> this$0
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
android.support.v4.widget.SwipeRefreshLayout$2 -> android.support.v4.widget.SwipeRefreshLayout$2:
    android.support.v4.widget.SwipeRefreshLayout this$0 -> this$0
    void applyTransformation(float,android.view.animation.Transformation) -> applyTransformation
android.support.v4.widget.SwipeRefreshLayout$3 -> android.support.v4.widget.SwipeRefreshLayout$3:
    android.support.v4.widget.SwipeRefreshLayout this$0 -> this$0
    void applyTransformation(float,android.view.animation.Transformation) -> applyTransformation
android.support.v4.widget.SwipeRefreshLayout$4 -> android.support.v4.widget.SwipeRefreshLayout$4:
    int val$startingAlpha -> val$startingAlpha
    int val$endingAlpha -> val$endingAlpha
    android.support.v4.widget.SwipeRefreshLayout this$0 -> this$0
    void applyTransformation(float,android.view.animation.Transformation) -> applyTransformation
android.support.v4.widget.SwipeRefreshLayout$5 -> android.support.v4.widget.SwipeRefreshLayout$5:
    android.support.v4.widget.SwipeRefreshLayout this$0 -> this$0
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
android.support.v4.widget.SwipeRefreshLayout$6 -> android.support.v4.widget.SwipeRefreshLayout$6:
    android.support.v4.widget.SwipeRefreshLayout this$0 -> this$0
    void applyTransformation(float,android.view.animation.Transformation) -> applyTransformation
android.support.v4.widget.SwipeRefreshLayout$7 -> android.support.v4.widget.SwipeRefreshLayout$7:
    android.support.v4.widget.SwipeRefreshLayout this$0 -> this$0
    void applyTransformation(float,android.view.animation.Transformation) -> applyTransformation
android.support.v4.widget.SwipeRefreshLayout$8 -> android.support.v4.widget.SwipeRefreshLayout$8:
    android.support.v4.widget.SwipeRefreshLayout this$0 -> this$0
    void applyTransformation(float,android.view.animation.Transformation) -> applyTransformation
android.support.v4.widget.SwipeRefreshLayout$OnRefreshListener -> android.support.v4.widget.SwipeRefreshLayout$OnRefreshListener:
    void onRefresh() -> onRefresh
android.support.v4.widget.ViewDragHelper -> android.support.v4.widget.ViewDragHelper:
    java.lang.String TAG -> TAG
    int INVALID_POINTER -> INVALID_POINTER
    int STATE_IDLE -> STATE_IDLE
    int STATE_DRAGGING -> STATE_DRAGGING
    int STATE_SETTLING -> STATE_SETTLING
    int EDGE_LEFT -> EDGE_LEFT
    int EDGE_RIGHT -> EDGE_RIGHT
    int EDGE_TOP -> EDGE_TOP
    int EDGE_BOTTOM -> EDGE_BOTTOM
    int EDGE_ALL -> EDGE_ALL
    int DIRECTION_HORIZONTAL -> DIRECTION_HORIZONTAL
    int DIRECTION_VERTICAL -> DIRECTION_VERTICAL
    int DIRECTION_ALL -> DIRECTION_ALL
    int EDGE_SIZE -> EDGE_SIZE
    int BASE_SETTLE_DURATION -> BASE_SETTLE_DURATION
    int MAX_SETTLE_DURATION -> MAX_SETTLE_DURATION
    int mDragState -> mDragState
    int mTouchSlop -> mTouchSlop
    int mActivePointerId -> mActivePointerId
    float[] mInitialMotionX -> mInitialMotionX
    float[] mInitialMotionY -> mInitialMotionY
    float[] mLastMotionX -> mLastMotionX
    float[] mLastMotionY -> mLastMotionY
    int[] mInitialEdgesTouched -> mInitialEdgesTouched
    int[] mEdgeDragsInProgress -> mEdgeDragsInProgress
    int[] mEdgeDragsLocked -> mEdgeDragsLocked
    int mPointersDown -> mPointersDown
    android.view.VelocityTracker mVelocityTracker -> mVelocityTracker
    float mMaxVelocity -> mMaxVelocity
    float mMinVelocity -> mMinVelocity
    int mEdgeSize -> mEdgeSize
    int mTrackingEdges -> mTrackingEdges
    android.support.v4.widget.ScrollerCompat mScroller -> mScroller
    android.support.v4.widget.ViewDragHelper$Callback mCallback -> mCallback
    android.view.View mCapturedView -> mCapturedView
    boolean mReleaseInProgress -> mReleaseInProgress
    android.view.ViewGroup mParentView -> mParentView
    android.view.animation.Interpolator sInterpolator -> sInterpolator
    java.lang.Runnable mSetIdleRunnable -> mSetIdleRunnable
    android.support.v4.widget.ViewDragHelper create(android.view.ViewGroup,android.support.v4.widget.ViewDragHelper$Callback) -> create
    android.support.v4.widget.ViewDragHelper create(android.view.ViewGroup,float,android.support.v4.widget.ViewDragHelper$Callback) -> create
    void setMinVelocity(float) -> setMinVelocity
    float getMinVelocity() -> getMinVelocity
    int getViewDragState() -> getViewDragState
    void setEdgeTrackingEnabled(int) -> setEdgeTrackingEnabled
    int getEdgeSize() -> getEdgeSize
    void captureChildView(android.view.View,int) -> captureChildView
    android.view.View getCapturedView() -> getCapturedView
    int getActivePointerId() -> getActivePointerId
    int getTouchSlop() -> getTouchSlop
    void cancel() -> cancel
    void abort() -> abort
    boolean smoothSlideViewTo(android.view.View,int,int) -> smoothSlideViewTo
    boolean settleCapturedViewAt(int,int) -> settleCapturedViewAt
    boolean forceSettleCapturedViewAt(int,int,int,int) -> forceSettleCapturedViewAt
    int computeSettleDuration(android.view.View,int,int,int,int) -> computeSettleDuration
    int computeAxisDuration(int,int,int) -> computeAxisDuration
    int clampMag(int,int,int) -> clampMag
    float clampMag(float,float,float) -> clampMag
    float distanceInfluenceForSnapDuration(float) -> distanceInfluenceForSnapDuration
    void flingCapturedView(int,int,int,int) -> flingCapturedView
    boolean continueSettling(boolean) -> continueSettling
    void dispatchViewReleased(float,float) -> dispatchViewReleased
    void clearMotionHistory() -> clearMotionHistory
    void clearMotionHistory(int) -> clearMotionHistory
    void ensureMotionHistorySizeForId(int) -> ensureMotionHistorySizeForId
    void saveInitialMotion(float,float,int) -> saveInitialMotion
    void saveLastMotion(android.view.MotionEvent) -> saveLastMotion
    boolean isPointerDown(int) -> isPointerDown
    void setDragState(int) -> setDragState
    boolean tryCaptureViewForDrag(android.view.View,int) -> tryCaptureViewForDrag
    boolean canScroll(android.view.View,boolean,int,int,int,int) -> canScroll
    boolean shouldInterceptTouchEvent(android.view.MotionEvent) -> shouldInterceptTouchEvent
    void processTouchEvent(android.view.MotionEvent) -> processTouchEvent
    void reportNewEdgeDrags(float,float,int) -> reportNewEdgeDrags
    boolean checkNewEdgeDrag(float,float,int,int) -> checkNewEdgeDrag
    boolean checkTouchSlop(android.view.View,float,float) -> checkTouchSlop
    boolean checkTouchSlop(int) -> checkTouchSlop
    boolean checkTouchSlop(int,int) -> checkTouchSlop
    boolean isEdgeTouched(int) -> isEdgeTouched
    boolean isEdgeTouched(int,int) -> isEdgeTouched
    void releaseViewForPointerUp() -> releaseViewForPointerUp
    void dragTo(int,int,int,int) -> dragTo
    boolean isCapturedViewUnder(int,int) -> isCapturedViewUnder
    boolean isViewUnder(android.view.View,int,int) -> isViewUnder
    android.view.View findTopChildUnder(int,int) -> findTopChildUnder
    int getEdgesTouched(int,int) -> getEdgesTouched
android.support.v4.widget.ViewDragHelper$1 -> android.support.v4.widget.ViewDragHelper$1:
    float getInterpolation(float) -> getInterpolation
android.support.v4.widget.ViewDragHelper$2 -> android.support.v4.widget.ViewDragHelper$2:
    android.support.v4.widget.ViewDragHelper this$0 -> this$0
    void run() -> run
android.support.v4.widget.ViewDragHelper$Callback -> android.support.v4.widget.ViewDragHelper$Callback:
    void onViewDragStateChanged(int) -> onViewDragStateChanged
    void onViewPositionChanged(android.view.View,int,int,int,int) -> onViewPositionChanged
    void onViewCaptured(android.view.View,int) -> onViewCaptured
    void onViewReleased(android.view.View,float,float) -> onViewReleased
    void onEdgeTouched(int,int) -> onEdgeTouched
    boolean onEdgeLock(int) -> onEdgeLock
    void onEdgeDragStarted(int,int) -> onEdgeDragStarted
    int getOrderedChildIndex(int) -> getOrderedChildIndex
    int getViewHorizontalDragRange(android.view.View) -> getViewHorizontalDragRange
    int getViewVerticalDragRange(android.view.View) -> getViewVerticalDragRange
    boolean tryCaptureView(android.view.View,int) -> tryCaptureView
    int clampViewPositionHorizontal(android.view.View,int,int) -> clampViewPositionHorizontal
    int clampViewPositionVertical(android.view.View,int,int) -> clampViewPositionVertical
android_maps_conflict_avoidance.com.google.android.gsf.GoogleSettingsContract -> android_maps_conflict_avoidance.com.google.android.gsf.GoogleSettingsContract:
android_maps_conflict_avoidance.com.google.android.gsf.GoogleSettingsContract$NameValueTable -> android_maps_conflict_avoidance.com.google.android.gsf.GoogleSettingsContract$NameValueTable:
android_maps_conflict_avoidance.com.google.android.gsf.GoogleSettingsContract$Partner -> android_maps_conflict_avoidance.com.google.android.gsf.GoogleSettingsContract$Partner:
    android.net.Uri CONTENT_URI -> CONTENT_URI
    java.lang.String getString(android.content.ContentResolver,java.lang.String) -> getString
    java.lang.String getString(android.content.ContentResolver,java.lang.String,java.lang.String) -> getString
android_maps_conflict_avoidance.com.google.common.Clock -> android_maps_conflict_avoidance.com.google.common.Clock:
    long currentTimeMillis() -> currentTimeMillis
    long relativeTimeMillis() -> relativeTimeMillis
android_maps_conflict_avoidance.com.google.common.Config -> android_maps_conflict_avoidance.com.google.common.Config:
    java.lang.String ADS_CLIENT -> ADS_CLIENT
    boolean ALT_ARROWS_ENABLED -> ALT_ARROWS_ENABLED
    int ALT_DOWN -> ALT_DOWN
    int ALT_LEFT -> ALT_LEFT
    int[] ALT_NUMBER_KEYS -> ALT_NUMBER_KEYS
    int ALT_RIGHT -> ALT_RIGHT
    int ALT_UP -> ALT_UP
    java.lang.String CARRIER -> CARRIER
    java.lang.String DISTRIBUTION_CHANNEL -> DISTRIBUTION_CHANNEL
    int KEY_BACK -> KEY_BACK
    int KEY_CLEAR -> KEY_CLEAR
    int KEY_MENU -> KEY_MENU
    int KEY_OK -> KEY_OK
    int KEY_POUND -> KEY_POUND
    int KEY_SIDE_DOWN -> KEY_SIDE_DOWN
    int KEY_SIDE_SELECT -> KEY_SIDE_SELECT
    int KEY_SIDE_UP -> KEY_SIDE_UP
    int KEY_SOFT_LEFT -> KEY_SOFT_LEFT
    int KEY_SOFT_MIDDLE -> KEY_SOFT_MIDDLE
    int KEY_SOFT_RIGHT -> KEY_SOFT_RIGHT
    int KEY_STAR -> KEY_STAR
    int KEY_TALK -> KEY_TALK
    int KEY_VOICE_SEARCH -> KEY_VOICE_SEARCH
    boolean QWERTY_KEYBOARD -> QWERTY_KEYBOARD
    boolean REVERSE_SOFTKEYS -> REVERSE_SOFTKEYS
    boolean SOFTKEYS_ON_SIDE_IN_LANDSCAPE -> SOFTKEYS_ON_SIDE_IN_LANDSCAPE
    int SOFTKEY_HEIGHT -> SOFTKEY_HEIGHT
    boolean USE_NATIVE_COMMANDS -> USE_NATIVE_COMMANDS
    boolean USE_NATIVE_MENUS -> USE_NATIVE_MENUS
    android_maps_conflict_avoidance.com.google.common.Config instance -> instance
    long applicationStartTime -> applicationStartTime
    android_maps_conflict_avoidance.com.google.common.Clock clock -> clock
    java.lang.String countryCode -> countryCode
    android_maps_conflict_avoidance.com.google.common.I18n i18n -> i18n
    android_maps_conflict_avoidance.com.google.common.Config getInstance() -> getInstance
    java.lang.String getLocale() -> getLocale
    boolean isChinaVersion() -> isChinaVersion
    void parseAltArrowKeys(java.lang.String) -> parseAltArrowKeys
    int[] parseAltKeys(int,java.lang.String) -> parseAltKeys
    void parseAltNumberKeys(java.lang.String) -> parseAltNumberKeys
    void setConfig(android_maps_conflict_avoidance.com.google.common.Config) -> setConfig
    java.lang.String getAdsClientInternal() -> getAdsClientInternal
    java.lang.String getAppProperty(java.lang.String) -> getAppProperty
    boolean getBooleanProperty(java.lang.String,boolean) -> getBooleanProperty
    android_maps_conflict_avoidance.com.google.common.Clock getClock() -> getClock
    android_maps_conflict_avoidance.com.google.common.io.HttpConnectionFactory getConnectionFactory() -> getConnectionFactory
    java.lang.String getDistributionChannelInternal() -> getDistributionChannelInternal
    android_maps_conflict_avoidance.com.google.common.I18n getI18n() -> getI18n
    android_maps_conflict_avoidance.com.google.common.graphics.ImageFactory getImageFactory() -> getImageFactory
    java.io.InputStream getInflaterInputStream(java.io.InputStream) -> getInflaterInputStream
    int getIntProperty(java.lang.String,int) -> getIntProperty
    android_maps_conflict_avoidance.com.google.common.io.PersistentStore getPersistentStore() -> getPersistentStore
    int getPixelsPerInch() -> getPixelsPerInch
    void init() -> init
    void setupGzipper() -> setupGzipper
android_maps_conflict_avoidance.com.google.common.GenericClock -> android_maps_conflict_avoidance.com.google.common.GenericClock:
    long currentTimeMillis() -> currentTimeMillis
    long relativeTimeMillis() -> relativeTimeMillis
android_maps_conflict_avoidance.com.google.common.I18n -> android_maps_conflict_avoidance.com.google.common.I18n:
    java.lang.String STRING_RESOURCE -> STRING_RESOURCE
    android_maps_conflict_avoidance.com.google.common.I18n instance -> instance
    java.lang.String[] embeddedLocalizedStrings -> embeddedLocalizedStrings
    java.lang.String[] remoteLocalizedStrings -> remoteLocalizedStrings
    java.lang.String systemLanguage -> systemLanguage
    java.lang.String systemLocale -> systemLocale
    java.lang.String uiLanguage -> uiLanguage
    java.lang.String uiLocale -> uiLocale
    java.lang.String calculateSystemLocale(java.lang.String) -> calculateSystemLocale
    java.lang.String getLanguage(java.lang.String) -> getLanguage
    android_maps_conflict_avoidance.com.google.common.I18n init(java.lang.String) -> init
    java.lang.String locale() -> locale
    java.lang.String normalizeLocale(java.lang.String) -> normalizeLocale
    java.lang.String getUiLocale() -> getUiLocale
    void setSystemLocale(java.lang.String) -> setSystemLocale
    void setUiLocale(java.lang.String) -> setUiLocale
android_maps_conflict_avoidance.com.google.common.Log -> android_maps_conflict_avoidance.com.google.common.Log:
    long START_TIME -> START_TIME
    java.lang.StringBuffer entryBuffer -> entryBuffer
    boolean isEventLoggingEnabledForTest -> isEventLoggingEnabledForTest
    boolean isExplicitClearForTest -> isExplicitClearForTest
    long lastEventTimeMillis -> lastEventTimeMillis
    java.lang.Object lastThrowableLock -> lastThrowableLock
    java.lang.String lastThrowableString -> lastThrowableString
    java.util.Vector logEntries -> logEntries
    boolean logMemory -> logMemory
    android_maps_conflict_avoidance.com.google.common.Log$LogSaver logSaver -> logSaver
    boolean logThread -> logThread
    boolean logTime -> logTime
    android_maps_conflict_avoidance.com.google.common.Log$OnScreenPrinter onScreenPrinter -> onScreenPrinter
    android_maps_conflict_avoidance.com.google.common.Log$Printer printer -> printer
    int throwableCount -> throwableCount
    android_maps_conflict_avoidance.com.google.common.Log$ThrowableListener throwableListener -> throwableListener
    java.util.Hashtable timers -> timers
    boolean addEvent(short,java.lang.String,java.lang.String) -> addEvent
    void addThrowableString(java.lang.String) -> addThrowableString
    java.lang.String createEventTuple(java.lang.String[]) -> createEventTuple
    android_maps_conflict_avoidance.com.google.common.io.PersistentStore getPersistentStore() -> getPersistentStore
    void logQuietThrowable(java.lang.String,java.lang.Throwable) -> logQuietThrowable
    void logThrowable(java.lang.String,java.lang.Throwable) -> logThrowable
    void logToScreen(java.lang.String) -> logToScreen
    void resetPersistentEventLog(long) -> resetPersistentEventLog
    void sendThrowable(java.lang.String,java.lang.Throwable,boolean) -> sendThrowable
    void setLogSaver(android_maps_conflict_avoidance.com.google.common.Log$LogSaver) -> setLogSaver
    java.lang.Object uploadEventLog(boolean,java.lang.Object,long) -> uploadEventLog
android_maps_conflict_avoidance.com.google.common.Log$LogSaver -> android_maps_conflict_avoidance.com.google.common.Log$LogSaver:
    java.lang.Object uploadEventLog(boolean,java.lang.Object,byte[]) -> uploadEventLog
android_maps_conflict_avoidance.com.google.common.Log$OnScreenPrinter -> android_maps_conflict_avoidance.com.google.common.Log$OnScreenPrinter:
    void printToScreen(java.lang.String) -> printToScreen
android_maps_conflict_avoidance.com.google.common.Log$Printer -> android_maps_conflict_avoidance.com.google.common.Log$Printer:
android_maps_conflict_avoidance.com.google.common.Log$StandardErrorPrinter -> android_maps_conflict_avoidance.com.google.common.Log$StandardErrorPrinter:
android_maps_conflict_avoidance.com.google.common.Log$ThrowableListener -> android_maps_conflict_avoidance.com.google.common.Log$ThrowableListener:
    void onThrowable(java.lang.String,java.lang.Throwable,boolean) -> onThrowable
android_maps_conflict_avoidance.com.google.common.OutOfMemoryHandler -> android_maps_conflict_avoidance.com.google.common.OutOfMemoryHandler:
    void handleOutOfMemory(boolean) -> handleOutOfMemory
android_maps_conflict_avoidance.com.google.common.StaticUtil -> android_maps_conflict_avoidance.com.google.common.StaticUtil:
    boolean IS_REGISTER_OUT_OF_MEMORY_HANDLER -> IS_REGISTER_OUT_OF_MEMORY_HANDLER
    byte[] emergencyMemory -> emergencyMemory
    java.util.Vector outOfMemoryHandlers -> outOfMemoryHandlers
    void allocateEmergencyMemory() -> allocateEmergencyMemory
    android_maps_conflict_avoidance.com.google.common.io.PersistentStore getPersistentStore() -> getPersistentStore
    void handleOutOfMemory() -> handleOutOfMemory
    void handleOutOfMemory(boolean) -> handleOutOfMemory
    java.io.DataInput readPreferenceAsDataInput(java.lang.String) -> readPreferenceAsDataInput
    java.lang.Object readPreferenceAsObject(java.lang.String,int) -> readPreferenceAsObject
    java.lang.String readPreferenceAsString(java.lang.String) -> readPreferenceAsString
    void registerOutOfMemoryHandler(android_maps_conflict_avoidance.com.google.common.OutOfMemoryHandler) -> registerOutOfMemoryHandler
    void removeOutOfMemoryHandler(android_maps_conflict_avoidance.com.google.common.OutOfMemoryHandler) -> removeOutOfMemoryHandler
    void savePreferenceAsObject(java.lang.String,java.lang.Object) -> savePreferenceAsObject
    void savePreferenceAsString(java.lang.String,java.lang.String) -> savePreferenceAsString
android_maps_conflict_avoidance.com.google.common.android.AndroidClock -> android_maps_conflict_avoidance.com.google.common.android.AndroidClock:
    long currentTimeMillis() -> currentTimeMillis
    long relativeTimeMillis() -> relativeTimeMillis
android_maps_conflict_avoidance.com.google.common.android.AndroidConfig -> android_maps_conflict_avoidance.com.google.common.android.AndroidConfig:
    java.lang.Thread uiThread -> uiThread
    android_maps_conflict_avoidance.com.google.common.Clock clock -> clock
    android_maps_conflict_avoidance.com.google.common.io.android.AndroidHttpConnectionFactory connectionFactory -> connectionFactory
    android.content.Context context -> context
    android_maps_conflict_avoidance.com.google.common.graphics.FontFactory fontFactory -> fontFactory
    android_maps_conflict_avoidance.com.google.common.graphics.android.AndroidImageFactory imageFactory -> imageFactory
    android_maps_conflict_avoidance.com.google.common.io.PersistentStore persistentStore -> persistentStore
    int pixelsPerInch -> pixelsPerInch
    java.lang.String getSetting(java.lang.String) -> getSetting
    void initLocale(java.util.Locale) -> initLocale
    java.lang.String getAppProperty(java.lang.String) -> getAppProperty
    android_maps_conflict_avoidance.com.google.common.Clock getClock() -> getClock
    android_maps_conflict_avoidance.com.google.common.io.HttpConnectionFactory getConnectionFactory() -> getConnectionFactory
    android_maps_conflict_avoidance.com.google.common.io.android.AndroidHttpConnectionFactory getConnectionFactory() -> getConnectionFactory
    java.lang.String getDistributionChannelInternal() -> getDistributionChannelInternal
    android_maps_conflict_avoidance.com.google.common.graphics.ImageFactory getImageFactory() -> getImageFactory
    android_maps_conflict_avoidance.com.google.common.graphics.android.AndroidImageFactory getImageFactory() -> getImageFactory
    java.io.InputStream getInflaterInputStream(java.io.InputStream) -> getInflaterInputStream
    android_maps_conflict_avoidance.com.google.common.io.PersistentStore getPersistentStore() -> getPersistentStore
    int getPixelsPerInch() -> getPixelsPerInch
    void initPortabilityFields(java.lang.String) -> initPortabilityFields
    void setupGzipper() -> setupGzipper
android_maps_conflict_avoidance.com.google.common.android.AndroidConfig$1 -> android_maps_conflict_avoidance.com.google.common.android.AndroidConfig$1:
    android_maps_conflict_avoidance.com.google.common.android.AndroidConfig this$0 -> this$0
    java.io.InputStream gunzip(java.io.InputStream) -> gunzip
android_maps_conflict_avoidance.com.google.common.geom.Point -> android_maps_conflict_avoidance.com.google.common.geom.Point:
    int x -> x
    int y -> y
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
android_maps_conflict_avoidance.com.google.common.graphics.FontFactory -> android_maps_conflict_avoidance.com.google.common.graphics.FontFactory:
android_maps_conflict_avoidance.com.google.common.graphics.GoogleGraphics -> android_maps_conflict_avoidance.com.google.common.graphics.GoogleGraphics:
    void drawImage(android_maps_conflict_avoidance.com.google.common.graphics.GoogleImage,int,int) -> drawImage
    boolean drawScaledImage(android_maps_conflict_avoidance.com.google.common.graphics.GoogleImage,int,int,int,int,int,int,int,int) -> drawScaledImage
    void fillRect(int,int,int,int) -> fillRect
    void setColor(int) -> setColor
android_maps_conflict_avoidance.com.google.common.graphics.GoogleImage -> android_maps_conflict_avoidance.com.google.common.graphics.GoogleImage:
    android_maps_conflict_avoidance.com.google.common.graphics.GoogleImage createScaledImage(int,int,int,int,int,int) -> createScaledImage
    void drawImage(android_maps_conflict_avoidance.com.google.common.graphics.GoogleGraphics,int,int) -> drawImage
    android_maps_conflict_avoidance.com.google.common.graphics.GoogleGraphics getGraphics() -> getGraphics
    int getHeight() -> getHeight
    int getWidth() -> getWidth
    void recycle() -> recycle
android_maps_conflict_avoidance.com.google.common.graphics.ImageFactory -> android_maps_conflict_avoidance.com.google.common.graphics.ImageFactory:
    android_maps_conflict_avoidance.com.google.common.graphics.GoogleImage createImage(int,int) -> createImage
    android_maps_conflict_avoidance.com.google.common.graphics.GoogleImage createImage(int,int,boolean) -> createImage
    android_maps_conflict_avoidance.com.google.common.graphics.GoogleImage createImage(byte[],int,int) -> createImage
    android_maps_conflict_avoidance.com.google.common.graphics.GoogleImage createUnscaledImage(java.lang.String) -> createUnscaledImage
android_maps_conflict_avoidance.com.google.common.graphics.InterpolatedFontFactory -> android_maps_conflict_avoidance.com.google.common.graphics.InterpolatedFontFactory:
android_maps_conflict_avoidance.com.google.common.graphics.android.AndroidAshmemImageFactory -> android_maps_conflict_avoidance.com.google.common.graphics.android.AndroidAshmemImageFactory:
    android_maps_conflict_avoidance.com.google.common.graphics.GoogleImage createImage(byte[],int,int) -> createImage
android_maps_conflict_avoidance.com.google.common.graphics.android.AndroidAshmemImageFactory$AndroidAshmemImage -> android_maps_conflict_avoidance.com.google.common.graphics.android.AndroidAshmemImageFactory$AndroidAshmemImage:
    android.graphics.BitmapFactory$Options options -> options
android_maps_conflict_avoidance.com.google.common.graphics.android.AndroidFontFactory -> android_maps_conflict_avoidance.com.google.common.graphics.android.AndroidFontFactory:
android_maps_conflict_avoidance.com.google.common.graphics.android.AndroidGraphics -> android_maps_conflict_avoidance.com.google.common.graphics.android.AndroidGraphics:
    android.graphics.Rect clipRect -> clipRect
    android.graphics.Rect destRect -> destRect
    android.graphics.RectF oval -> oval
    android.graphics.Rect sourceRect -> sourceRect
    android.graphics.Canvas canvas -> canvas
    android.graphics.Paint paint -> paint
    void drawImage(android_maps_conflict_avoidance.com.google.common.graphics.GoogleImage,int,int) -> drawImage
    boolean drawScaledImage(android_maps_conflict_avoidance.com.google.common.graphics.GoogleImage,int,int,int,int,int,int,int,int) -> drawScaledImage
    void fillRect(int,int,int,int) -> fillRect
    android.graphics.Canvas getCanvas() -> getCanvas
    void setCanvas(android.graphics.Canvas) -> setCanvas
    void setColor(int) -> setColor
android_maps_conflict_avoidance.com.google.common.graphics.android.AndroidImage -> android_maps_conflict_avoidance.com.google.common.graphics.android.AndroidImage:
    int bitmapCount -> bitmapCount
    android.graphics.Bitmap bitmap -> bitmap
    boolean isOriginal -> isOriginal
    boolean pinned -> pinned
    java.lang.String cleanName(java.lang.String) -> cleanName
    void compact() -> compact
    android_maps_conflict_avoidance.com.google.common.graphics.GoogleImage createScaledImage(int,int,int,int,int,int) -> createScaledImage
    void drawImage(android_maps_conflict_avoidance.com.google.common.graphics.GoogleGraphics,int,int) -> drawImage
    void finalize() -> finalize
    android.graphics.Bitmap getBitmap() -> getBitmap
    android_maps_conflict_avoidance.com.google.common.graphics.GoogleGraphics getGraphics() -> getGraphics
    int getHeight() -> getHeight
    int getWidth() -> getWidth
    void pin() -> pin
    void recycle() -> recycle
android_maps_conflict_avoidance.com.google.common.graphics.android.AndroidImage$AutoScale -> android_maps_conflict_avoidance.com.google.common.graphics.android.AndroidImage$AutoScale:
    android_maps_conflict_avoidance.com.google.common.graphics.android.AndroidImage$AutoScale[] $VALUES -> $VALUES
    android_maps_conflict_avoidance.com.google.common.graphics.android.AndroidImage$AutoScale AUTO_SCALE_DISABLED -> AUTO_SCALE_DISABLED
    android_maps_conflict_avoidance.com.google.common.graphics.android.AndroidImage$AutoScale AUTO_SCALE_ENABLED -> AUTO_SCALE_ENABLED
    android_maps_conflict_avoidance.com.google.common.graphics.android.AndroidImage$AutoScale valueOf(java.lang.String) -> valueOf
    android_maps_conflict_avoidance.com.google.common.graphics.android.AndroidImage$AutoScale[] values() -> values
android_maps_conflict_avoidance.com.google.common.graphics.android.AndroidImageFactory -> android_maps_conflict_avoidance.com.google.common.graphics.android.AndroidImageFactory:
    android.content.Context context -> context
    java.util.Map stringIdMap -> stringIdMap
    android_maps_conflict_avoidance.com.google.common.graphics.GoogleImage createImage(int,int) -> createImage
    android_maps_conflict_avoidance.com.google.common.graphics.GoogleImage createImage(int,int,boolean) -> createImage
    android_maps_conflict_avoidance.com.google.common.graphics.GoogleImage createImage(byte[],int,int) -> createImage
    android_maps_conflict_avoidance.com.google.common.graphics.GoogleImage createUnscaledImage(java.lang.String) -> createUnscaledImage
    void setStringIdMap(java.util.Map) -> setStringIdMap
android_maps_conflict_avoidance.com.google.common.graphics.android.ScaledAndroidImage -> android_maps_conflict_avoidance.com.google.common.graphics.android.ScaledAndroidImage:
    android_maps_conflict_avoidance.com.google.common.graphics.android.AndroidImage cache -> cache
    int dh -> dh
    int dw -> dw
    android_maps_conflict_avoidance.com.google.common.graphics.android.AndroidImage parent -> parent
    int sh -> sh
    int sw -> sw
    int sx -> sx
    int sy -> sy
    android_maps_conflict_avoidance.com.google.common.graphics.android.AndroidImage getCache() -> getCache
    android_maps_conflict_avoidance.com.google.common.graphics.GoogleImage createScaledImage(int,int,int,int,int,int) -> createScaledImage
    void drawImage(android_maps_conflict_avoidance.com.google.common.graphics.GoogleGraphics,int,int) -> drawImage
    android.graphics.Bitmap getBitmap() -> getBitmap
    android_maps_conflict_avoidance.com.google.common.graphics.GoogleGraphics getGraphics() -> getGraphics
    int getHeight() -> getHeight
    int getWidth() -> getWidth
android_maps_conflict_avoidance.com.google.common.io.BaseConnectionFactory -> android_maps_conflict_avoidance.com.google.common.io.BaseConnectionFactory:
    boolean hasPreviousNetworkSuccessBeenRead -> hasPreviousNetworkSuccessBeenRead
    java.lang.String netAvailablePrefName -> netAvailablePrefName
    boolean networkWorked -> networkWorked
    boolean networkWorkedThisSession -> networkWorkedThisSession
    android_maps_conflict_avoidance.com.google.common.io.PersistentStore store -> store
    void setNetworkWorked(boolean) -> setNetworkWorked
    void checkPreviousNetworkSuccess() -> checkPreviousNetworkSuccess
    byte getNetworkPreferenceValue() -> getNetworkPreferenceValue
    boolean getNetworkWorked() -> getNetworkWorked
    boolean getNetworkWorkedThisSession() -> getNetworkWorkedThisSession
    void notifyFailure() -> notifyFailure
    boolean registerNetworkSuccess(boolean) -> registerNetworkSuccess
    boolean usingMDS() -> usingMDS
android_maps_conflict_avoidance.com.google.common.io.BaseHttpConnectionFactory -> android_maps_conflict_avoidance.com.google.common.io.BaseHttpConnectionFactory:
android_maps_conflict_avoidance.com.google.common.io.BasePersistentStore -> android_maps_conflict_avoidance.com.google.common.io.BasePersistentStore:
    android_maps_conflict_avoidance.com.google.common.io.PreferenceStore preferenceStore -> preferenceStore
    byte[] readPreference(java.lang.String) -> readPreference
    void savePreferences() -> savePreferences
    boolean setPreference(java.lang.String,byte[]) -> setPreference
android_maps_conflict_avoidance.com.google.common.io.BoundInputStream -> android_maps_conflict_avoidance.com.google.common.io.BoundInputStream:
    java.io.InputStream base -> base
    byte[] buf -> buf
    int bufPos -> bufPos
    int bufSize -> bufSize
    int remaining -> remaining
    boolean checkBuf() -> checkBuf
    int available() -> available
    int read() -> read
    int read(byte[],int,int) -> read
android_maps_conflict_avoidance.com.google.common.io.ByteArrayDataInput -> android_maps_conflict_avoidance.com.google.common.io.ByteArrayDataInput:
    byte[] mBytes -> mBytes
    int mLength -> mLength
    int mPos -> mPos
    char[] mUtfCharBuf -> mUtfCharBuf
    java.lang.String convertUTF8WithBuf(byte[],char[],int,int) -> convertUTF8WithBuf
    boolean readBoolean() -> readBoolean
    byte readByte() -> readByte
    char readChar() -> readChar
    double readDouble() -> readDouble
    float readFloat() -> readFloat
    void readFully(byte[]) -> readFully
    void readFully(byte[],int,int) -> readFully
    int readInt() -> readInt
    java.lang.String readLine() -> readLine
    long readLong() -> readLong
    short readShort() -> readShort
    java.lang.String readUTF() -> readUTF
    int readUnsignedByte() -> readUnsignedByte
    int readUnsignedShort() -> readUnsignedShort
    int skipBytes(int) -> skipBytes
android_maps_conflict_avoidance.com.google.common.io.ConnectionFactory -> android_maps_conflict_avoidance.com.google.common.io.ConnectionFactory:
    boolean getNetworkWorked() -> getNetworkWorked
    boolean getNetworkWorkedThisSession() -> getNetworkWorkedThisSession
    void notifyFailure() -> notifyFailure
    boolean registerNetworkSuccess(boolean) -> registerNetworkSuccess
    boolean usingMDS() -> usingMDS
android_maps_conflict_avoidance.com.google.common.io.GoogleHttpConnection -> android_maps_conflict_avoidance.com.google.common.io.GoogleHttpConnection:
    void close() -> close
    java.lang.String getContentType() -> getContentType
    long getLength() -> getLength
    int getResponseCode() -> getResponseCode
    java.io.DataInputStream openDataInputStream() -> openDataInputStream
    java.io.DataOutputStream openDataOutputStream() -> openDataOutputStream
    void setConnectionProperty(java.lang.String,java.lang.String) -> setConnectionProperty
android_maps_conflict_avoidance.com.google.common.io.Gunzipper -> android_maps_conflict_avoidance.com.google.common.io.Gunzipper:
    android_maps_conflict_avoidance.com.google.common.io.Gunzipper instance -> instance
    android_maps_conflict_avoidance.com.google.common.io.Gunzipper$GunzipInterface implementation -> implementation
    java.io.InputStream gunzip(java.io.InputStream) -> gunzip
    void setImplementation(android_maps_conflict_avoidance.com.google.common.io.Gunzipper$GunzipInterface) -> setImplementation
android_maps_conflict_avoidance.com.google.common.io.Gunzipper$GunzipInterface -> android_maps_conflict_avoidance.com.google.common.io.Gunzipper$GunzipInterface:
    java.io.InputStream gunzip(java.io.InputStream) -> gunzip
android_maps_conflict_avoidance.com.google.common.io.HttpConnectionFactory -> android_maps_conflict_avoidance.com.google.common.io.HttpConnectionFactory:
    android_maps_conflict_avoidance.com.google.common.io.GoogleHttpConnection createConnection(java.lang.String,boolean) -> createConnection
android_maps_conflict_avoidance.com.google.common.io.InMemoryPersistentStore -> android_maps_conflict_avoidance.com.google.common.io.InMemoryPersistentStore:
    java.util.Hashtable blocks -> blocks
    java.util.Hashtable prefs -> prefs
    void deleteAllBlocks(java.lang.String) -> deleteAllBlocks
    boolean deleteBlock(java.lang.String) -> deleteBlock
    java.lang.String[] listBlocks(java.lang.String) -> listBlocks
    byte[] readBlock(java.lang.String) -> readBlock
    byte[] readPreference(java.lang.String) -> readPreference
    void savePreferences() -> savePreferences
    boolean setPreference(java.lang.String,byte[]) -> setPreference
    int writeBlock(byte[],java.lang.String) -> writeBlock
    int writeBlockX(byte[],java.lang.String) -> writeBlockX
android_maps_conflict_avoidance.com.google.common.io.IoUtil -> android_maps_conflict_avoidance.com.google.common.io.IoUtil:
    char[] HEX_DIGITS -> HEX_DIGITS
    java.io.DataInput createDataInputFromBytes(byte[]) -> createDataInputFromBytes
    java.lang.String decodeUtf8(byte[],int,int,boolean) -> decodeUtf8
    int encodeUtf8(java.lang.String,byte[],int) -> encodeUtf8
    byte[] encodeUtf8(java.lang.String) -> encodeUtf8
    byte[] inflate(byte[],int,int,int) -> inflate
android_maps_conflict_avoidance.com.google.common.io.MarkedOutputStream -> android_maps_conflict_avoidance.com.google.common.io.MarkedOutputStream:
    byte[] contents -> contents
    int[] markers -> markers
    int nextContent -> nextContent
    int nextMarker -> nextMarker
    int calculateSize(int,int,int) -> calculateSize
    void expandContentsIfNecessary(int) -> expandContentsIfNecessary
    void expandMarkersIfNecessary(int) -> expandMarkersIfNecessary
    void addMarker(int) -> addMarker
    int availableContent() -> availableContent
    void clear() -> clear
    int getMarker(int) -> getMarker
    int numMarkers() -> numMarkers
    void reset() -> reset
    void setMarker(int,int) -> setMarker
    void write(int) -> write
    void write(byte[]) -> write
    void write(byte[],int,int) -> write
    void writeContentsTo(java.io.OutputStream,int,int) -> writeContentsTo
android_maps_conflict_avoidance.com.google.common.io.PersistentStore -> android_maps_conflict_avoidance.com.google.common.io.PersistentStore:
    void deleteAllBlocks(java.lang.String) -> deleteAllBlocks
    boolean deleteBlock(java.lang.String) -> deleteBlock
    java.lang.String[] listBlocks(java.lang.String) -> listBlocks
    byte[] readBlock(java.lang.String) -> readBlock
    byte[] readPreference(java.lang.String) -> readPreference
    void savePreferences() -> savePreferences
    boolean setPreference(java.lang.String,byte[]) -> setPreference
    int writeBlock(byte[],java.lang.String) -> writeBlock
    int writeBlockX(byte[],java.lang.String) -> writeBlockX
android_maps_conflict_avoidance.com.google.common.io.PersistentStore$PersistentStoreException -> android_maps_conflict_avoidance.com.google.common.io.PersistentStore$PersistentStoreException:
    int type -> type
    int getType() -> getType
android_maps_conflict_avoidance.com.google.common.io.PreferenceStore -> android_maps_conflict_avoidance.com.google.common.io.PreferenceStore:
    android_maps_conflict_avoidance.com.google.common.io.PersistentStore persistentStore -> persistentStore
    java.util.Hashtable preferences -> preferences
    boolean preferencesChanged -> preferencesChanged
    void ensurePreferencesLoaded() -> ensurePreferencesLoaded
    byte[] packPreferences(java.util.Hashtable) -> packPreferences
    byte[] packPreferencesBlock(java.util.Hashtable) -> packPreferencesBlock
    java.util.Hashtable unpackPreferences(byte[]) -> unpackPreferences
    byte[] readPreference(java.lang.String) -> readPreference
    void savePreferences() -> savePreferences
    boolean setPreference(java.lang.String,byte[]) -> setPreference
android_maps_conflict_avoidance.com.google.common.io.android.AndroidFixedPersistentStore -> android_maps_conflict_avoidance.com.google.common.io.android.AndroidFixedPersistentStore:
    java.io.File baseFile -> baseFile
    java.io.File makeFile(java.lang.String) -> makeFile
    java.lang.String makeFilename(java.lang.String) -> makeFilename
    java.lang.String unMakeFilename(java.lang.String) -> unMakeFilename
    void deleteAllBlocks(java.lang.String) -> deleteAllBlocks
    boolean deleteBlock(java.lang.String) -> deleteBlock
    java.lang.String getPrefix() -> getPrefix
    java.lang.String[] listBlocks(java.lang.String) -> listBlocks
    byte[] readBlock(java.lang.String) -> readBlock
    int writeBlock(byte[],java.lang.String) -> writeBlock
    int writeBlockX(byte[],java.lang.String) -> writeBlockX
android_maps_conflict_avoidance.com.google.common.io.android.AndroidHttpClient -> android_maps_conflict_avoidance.com.google.common.io.android.AndroidHttpClient:
    long DEFAULT_SYNC_MIN_GZIP_BYTES -> DEFAULT_SYNC_MIN_GZIP_BYTES
    java.lang.ThreadLocal sThreadBlocked -> sThreadBlocked
    org.apache.http.HttpRequestInterceptor sThreadCheckInterceptor -> sThreadCheckInterceptor
    android_maps_conflict_avoidance.com.google.common.io.android.AndroidHttpClient$LoggingConfiguration curlConfiguration -> curlConfiguration
    org.apache.http.client.HttpClient delegate -> delegate
    java.lang.RuntimeException mLeakedException -> mLeakedException
    java.lang.ThreadLocal access$000() -> access$000
    org.apache.http.HttpRequestInterceptor access$100() -> access$100
    android_maps_conflict_avoidance.com.google.common.io.android.AndroidHttpClient$LoggingConfiguration access$400(android_maps_conflict_avoidance.com.google.common.io.android.AndroidHttpClient) -> access$400
    java.lang.String access$600(org.apache.http.client.methods.HttpUriRequest) -> access$600
    android_maps_conflict_avoidance.com.google.common.io.android.AndroidHttpClient newInstance(java.lang.String) -> newInstance
    java.lang.String toCurl(org.apache.http.client.methods.HttpUriRequest) -> toCurl
    void close() -> close
    java.lang.Object execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.client.ResponseHandler) -> execute
    java.lang.Object execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.client.ResponseHandler,org.apache.http.protocol.HttpContext) -> execute
    java.lang.Object execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.client.ResponseHandler) -> execute
    java.lang.Object execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.client.ResponseHandler,org.apache.http.protocol.HttpContext) -> execute
    org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest) -> execute
    org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> execute
    org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest) -> execute
    org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.protocol.HttpContext) -> execute
    void finalize() -> finalize
    org.apache.http.conn.ClientConnectionManager getConnectionManager() -> getConnectionManager
    org.apache.http.params.HttpParams getParams() -> getParams
android_maps_conflict_avoidance.com.google.common.io.android.AndroidHttpClient$1 -> android_maps_conflict_avoidance.com.google.common.io.android.AndroidHttpClient$1:
    void process(org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> process
android_maps_conflict_avoidance.com.google.common.io.android.AndroidHttpClient$2 -> android_maps_conflict_avoidance.com.google.common.io.android.AndroidHttpClient$2:
    android_maps_conflict_avoidance.com.google.common.io.android.AndroidHttpClient this$0 -> this$0
    org.apache.http.protocol.HttpContext createHttpContext() -> createHttpContext
    org.apache.http.protocol.BasicHttpProcessor createHttpProcessor() -> createHttpProcessor
android_maps_conflict_avoidance.com.google.common.io.android.AndroidHttpClient$CurlLogger -> android_maps_conflict_avoidance.com.google.common.io.android.AndroidHttpClient$CurlLogger:
    android_maps_conflict_avoidance.com.google.common.io.android.AndroidHttpClient this$0 -> this$0
    void process(org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> process
android_maps_conflict_avoidance.com.google.common.io.android.AndroidHttpClient$LoggingConfiguration -> android_maps_conflict_avoidance.com.google.common.io.android.AndroidHttpClient$LoggingConfiguration:
    int level -> level
    java.lang.String tag -> tag
    boolean access$500(android_maps_conflict_avoidance.com.google.common.io.android.AndroidHttpClient$LoggingConfiguration) -> access$500
    void access$700(android_maps_conflict_avoidance.com.google.common.io.android.AndroidHttpClient$LoggingConfiguration,java.lang.String) -> access$700
    boolean isLoggable() -> isLoggable
    void println(java.lang.String) -> println
android_maps_conflict_avoidance.com.google.common.io.android.AndroidHttpConnectionFactory -> android_maps_conflict_avoidance.com.google.common.io.android.AndroidHttpConnectionFactory:
    java.lang.Object lock -> lock
    int numOpenConnection -> numOpenConnection
    android_maps_conflict_avoidance.com.google.common.io.android.GoogleHttpClient client -> client
    android.content.Context context -> context
    java.lang.String userAgent -> userAgent
    java.lang.Object access$100() -> access$100
    int access$200() -> access$200
    int access$208() -> access$208
    int access$210() -> access$210
    android_maps_conflict_avoidance.com.google.common.io.android.GoogleHttpClient access$300(android_maps_conflict_avoidance.com.google.common.io.android.AndroidHttpConnectionFactory) -> access$300
    void close() -> close
    android_maps_conflict_avoidance.com.google.common.io.GoogleHttpConnection createConnection(java.lang.String,boolean) -> createConnection
    android_maps_conflict_avoidance.com.google.common.io.android.GoogleHttpClient getClient() -> getClient
android_maps_conflict_avoidance.com.google.common.io.android.AndroidHttpConnectionFactory$1 -> android_maps_conflict_avoidance.com.google.common.io.android.AndroidHttpConnectionFactory$1:
android_maps_conflict_avoidance.com.google.common.io.android.AndroidHttpConnectionFactory$AndroidGoogleHttpConnection -> android_maps_conflict_avoidance.com.google.common.io.android.AndroidHttpConnectionFactory$AndroidGoogleHttpConnection:
    java.io.ByteArrayOutputStream baos -> baos
    boolean closed -> closed
    org.apache.http.client.methods.HttpUriRequest request -> request
    org.apache.http.HttpResponse response -> response
    android_maps_conflict_avoidance.com.google.common.io.android.AndroidHttpConnectionFactory this$0 -> this$0
    org.apache.http.HttpResponse getResponse() -> getResponse
    void close() -> close
    java.lang.String getContentType() -> getContentType
    long getLength() -> getLength
    int getResponseCode() -> getResponseCode
    java.io.DataInputStream openDataInputStream() -> openDataInputStream
    java.io.DataOutputStream openDataOutputStream() -> openDataOutputStream
    void setConnectionProperty(java.lang.String,java.lang.String) -> setConnectionProperty
android_maps_conflict_avoidance.com.google.common.io.android.AndroidPersistentStore -> android_maps_conflict_avoidance.com.google.common.io.android.AndroidPersistentStore:
    android.content.Context context -> context
    java.util.Set fileLockNames -> fileLockNames
    java.lang.String makeFilename(java.lang.String) -> makeFilename
    java.lang.String unMakeFilename(java.lang.String) -> unMakeFilename
    void deleteAllBlocks(java.lang.String) -> deleteAllBlocks
    boolean deleteBlock(java.lang.String) -> deleteBlock
    java.lang.String[] listBlocks(java.lang.String) -> listBlocks
    byte[] readBlock(java.lang.String) -> readBlock
    int writeBlock(byte[],java.lang.String) -> writeBlock
    int writeBlockX(byte[],java.lang.String) -> writeBlockX
android_maps_conflict_avoidance.com.google.common.io.android.GoogleHttpClient -> android_maps_conflict_avoidance.com.google.common.io.android.GoogleHttpClient:
    android_maps_conflict_avoidance.com.google.common.io.android.AndroidHttpClient mClient -> mClient
    android.content.ContentResolver mResolver -> mResolver
    java.lang.String mUserAgent -> mUserAgent
    org.apache.http.impl.client.RequestWrapper wrapRequest(org.apache.http.client.methods.HttpUriRequest) -> wrapRequest
    void close() -> close
    java.lang.Object execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.client.ResponseHandler) -> execute
    java.lang.Object execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.client.ResponseHandler,org.apache.http.protocol.HttpContext) -> execute
    java.lang.Object execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.client.ResponseHandler) -> execute
    java.lang.Object execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.client.ResponseHandler,org.apache.http.protocol.HttpContext) -> execute
    org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest) -> execute
    org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> execute
    org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest) -> execute
    org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.protocol.HttpContext) -> execute
    org.apache.http.HttpResponse executeWithoutRewriting(org.apache.http.client.methods.HttpUriRequest,org.apache.http.protocol.HttpContext) -> executeWithoutRewriting
    org.apache.http.conn.ClientConnectionManager getConnectionManager() -> getConnectionManager
    org.apache.http.params.HttpParams getParams() -> getParams
android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBuf -> android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBuf:
    byte[] EMPTY_BYTE_ARRAY -> EMPTY_BYTE_ARRAY
    java.lang.Boolean FALSE -> FALSE
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBuf$SimpleCounter NULL_COUNTER -> NULL_COUNTER
    java.lang.Boolean TRUE -> TRUE
    int cachedSize -> cachedSize
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType msgType -> msgType
    android_maps_conflict_avoidance.com.google.common.util.IntMap values -> values
    android_maps_conflict_avoidance.com.google.common.util.IntMap wireTypes -> wireTypes
    void addObject(int,java.lang.Object) -> addObject
    void assertTypeMatch(int,java.lang.Object) -> assertTypeMatch
    void checkTag(int) -> checkTag
    java.lang.Object convert(java.lang.Object,int) -> convert
    int getCount(java.lang.Object) -> getCount
    java.lang.Object getDefault(int) -> getDefault
    java.lang.Object getObject(int,int) -> getObject
    java.lang.Object getObject(int,int,int) -> getObject
    java.lang.Object getObjectWithoutArgChecking(int,int,int,java.lang.Object) -> getObjectWithoutArgChecking
    int getVarIntSize(long) -> getVarIntSize
    int getWireType(int) -> getWireType
    void insertObject(int,int,java.lang.Object,boolean) -> insertObject
    boolean isZigZagEncodedType(int) -> isZigZagEncodedType
    int outputField(int,android_maps_conflict_avoidance.com.google.common.io.MarkedOutputStream) -> outputField
    void outputTo(java.io.OutputStream,boolean) -> outputTo
    int outputToInternal(android_maps_conflict_avoidance.com.google.common.io.MarkedOutputStream) -> outputToInternal
    int parseInternal(java.io.InputStream,int,boolean,android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBuf$SimpleCounter) -> parseInternal
    long readVarInt(java.io.InputStream,boolean,android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBuf$SimpleCounter) -> readVarInt
    void setObject(int,java.lang.Object) -> setObject
    int writeVarInt(java.io.OutputStream,long) -> writeVarInt
    long zigZagDecode(long) -> zigZagDecode
    long zigZagEncode(long) -> zigZagEncode
    void addProtoBuf(int,android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBuf) -> addProtoBuf
    void clear() -> clear
    boolean getBool(int) -> getBool
    byte[] getBytes(int) -> getBytes
    int getCount(int) -> getCount
    int getInt(int) -> getInt
    long getLong(int) -> getLong
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBuf getProtoBuf(int) -> getProtoBuf
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBuf getProtoBuf(int,int) -> getProtoBuf
    java.lang.String getString(int) -> getString
    java.lang.String getString(int,int) -> getString
    int getType(int) -> getType
    boolean has(int) -> has
    void outputTo(java.io.OutputStream) -> outputTo
    void outputWithSizeTo(java.io.OutputStream) -> outputWithSizeTo
    int parse(java.io.InputStream,int) -> parse
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBuf parse(java.io.InputStream) -> parse
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBuf parse(byte[]) -> parse
    void setInt(int,int) -> setInt
    void setLong(int,long) -> setLong
    void setString(int,java.lang.String) -> setString
android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBuf$1 -> android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBuf$1:
android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBuf$SimpleCounter -> android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBuf$SimpleCounter:
    int count -> count
android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType -> android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType:
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType$TypeInfo[] NULL_DATA_TYPEINFOS -> NULL_DATA_TYPEINFOS
    java.lang.String typeName -> typeName
    android_maps_conflict_avoidance.com.google.common.util.IntMap types -> types
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType$TypeInfo getCacheTypeInfoForNullData(int) -> getCacheTypeInfoForNullData
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType addElement(int,int,java.lang.Object) -> addElement
    boolean equals(java.lang.Object) -> equals
    java.lang.Object getData(int) -> getData
    int getType(int) -> getType
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType$TypeInfo -> android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType$TypeInfo:
    java.lang.Object data -> data
    int type -> type
    int access$000(android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType$TypeInfo) -> access$000
    java.lang.Object access$100(android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType$TypeInfo) -> access$100
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufUtil -> android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufUtil:
    boolean isGzipResponseSeen -> isGzipResponseSeen
    java.io.InputStream getInputStreamForProtoBufResponse(java.io.DataInput) -> getInputStreamForProtoBufResponse
    long getProtoLongValueOrZero(android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBuf,int) -> getProtoLongValueOrZero
    int getProtoValueOrDefault(android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBuf,int,int) -> getProtoValueOrDefault
    java.lang.String getProtoValueOrEmpty(android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBuf,int) -> getProtoValueOrEmpty
    boolean getProtoValueOrFalse(android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBuf,int) -> getProtoValueOrFalse
    long getProtoValueOrNegativeOne(android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBuf,int) -> getProtoValueOrNegativeOne
    int getProtoValueOrZero(android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBuf,int) -> getProtoValueOrZero
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBuf getSubProtoOrNull(android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBuf,int) -> getSubProtoOrNull
    java.lang.String getSubProtoValueOrEmpty(android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBuf,int,int) -> getSubProtoValueOrEmpty
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBuf readProtoBufResponse(android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType,java.io.DataInput) -> readProtoBufResponse
    void writeProtoBufToOutput(java.io.DataOutput,android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBuf) -> writeProtoBufToOutput
android_maps_conflict_avoidance.com.google.common.lang.BackgroundThreadFactory -> android_maps_conflict_avoidance.com.google.common.lang.BackgroundThreadFactory:
    android_maps_conflict_avoidance.com.google.common.lang.ThreadFactory threadFactory -> threadFactory
android_maps_conflict_avoidance.com.google.common.lang.BaseThreadFactory -> android_maps_conflict_avoidance.com.google.common.lang.BaseThreadFactory:
    int created -> created
    int running -> running
android_maps_conflict_avoidance.com.google.common.lang.ThreadFactory -> android_maps_conflict_avoidance.com.google.common.lang.ThreadFactory:
android_maps_conflict_avoidance.com.google.common.task.AbstractTask -> android_maps_conflict_avoidance.com.google.common.task.AbstractTask:
    android_maps_conflict_avoidance.com.google.common.task.AbstractTask[] EMPTY_TASK_ARRAY -> EMPTY_TASK_ARRAY
    java.lang.String name -> name
    int runCounter -> runCounter
    java.lang.Object runCounterLock -> runCounterLock
    java.lang.Runnable runnable -> runnable
    android_maps_conflict_avoidance.com.google.common.task.TaskRunner runner -> runner
    int state -> state
    java.util.Vector tasks -> tasks
    java.lang.String varzInsideQueue -> varzInsideQueue
    java.lang.String varzOutsideQueue -> varzOutsideQueue
    java.lang.String varzTime -> varzTime
    int cancelInternal() -> cancelInternal
    int getState() -> getState
    android_maps_conflict_avoidance.com.google.common.task.AbstractTask[] getTasks() -> getTasks
    void run() -> run
    void runInternal() -> runInternal
    void schedule() -> schedule
    void scheduleInternal() -> scheduleInternal
    void setState(int) -> setState
    void updateFinishTimestamp() -> updateFinishTimestamp
    void updateRunnableTimestamp() -> updateRunnableTimestamp
    void updateScheduleTimestamp() -> updateScheduleTimestamp
    void updateStartTimestamp() -> updateStartTimestamp
android_maps_conflict_avoidance.com.google.common.task.Task -> android_maps_conflict_avoidance.com.google.common.task.Task:
    int priority -> priority
    void setPriorityInternal(int) -> setPriorityInternal
    int cancelInternal() -> cancelInternal
    int getPriority() -> getPriority
    void scheduleInternal() -> scheduleInternal
android_maps_conflict_avoidance.com.google.common.task.TaskRunner -> android_maps_conflict_avoidance.com.google.common.task.TaskRunner:
    android_maps_conflict_avoidance.com.google.common.Clock clock -> clock
    int defaultPriority -> defaultPriority
    android_maps_conflict_avoidance.com.google.common.lang.ThreadFactory factory -> factory
    int maxPriority -> maxPriority
    int minPriority -> minPriority
    java.lang.Object mutex -> mutex
    java.lang.String name -> name
    java.util.Vector priorityTaskQueue -> priorityTaskQueue
    boolean running -> running
    java.util.Hashtable runningTaskMap -> runningTaskMap
    java.util.Hashtable taskMap -> taskMap
    java.util.Vector timerTaskQueue -> timerTaskQueue
    java.lang.Thread[] workers -> workers
    int cancelTask(android_maps_conflict_avoidance.com.google.common.task.AbstractTask) -> cancelTask
    boolean cancelTaskInternal(android_maps_conflict_avoidance.com.google.common.task.AbstractTask) -> cancelTaskInternal
    int getDefaultPriority() -> getDefaultPriority
    android_maps_conflict_avoidance.com.google.common.task.Task getNextTaskToRun() -> getNextTaskToRun
    void run() -> run
    void schedulePriorityTaskInternal(android_maps_conflict_avoidance.com.google.common.task.Task) -> schedulePriorityTaskInternal
    void scheduleTask(android_maps_conflict_avoidance.com.google.common.task.AbstractTask) -> scheduleTask
    void scheduleTimerTaskInternal(android_maps_conflict_avoidance.com.google.common.task.TimerTask) -> scheduleTimerTaskInternal
    boolean waitForSomethingToDo() -> waitForSomethingToDo
android_maps_conflict_avoidance.com.google.common.task.TimerTask -> android_maps_conflict_avoidance.com.google.common.task.TimerTask:
    int count -> count
    long deadline -> deadline
    long delay -> delay
    boolean isFixedRate -> isFixedRate
    long period -> period
    long scheduled -> scheduled
    int cancelInternal() -> cancelInternal
    long getScheduledTime() -> getScheduledTime
    boolean isUnscheduled() -> isUnscheduled
    void runInternal() -> runInternal
    void schedule() -> schedule
    void scheduleInternal() -> scheduleInternal
    void setDelay(long) -> setDelay
android_maps_conflict_avoidance.com.google.common.ui.RepaintListener -> android_maps_conflict_avoidance.com.google.common.ui.RepaintListener:
    void repaint() -> repaint
android_maps_conflict_avoidance.com.google.common.util.ArrayUtil -> android_maps_conflict_avoidance.com.google.common.util.ArrayUtil:
    void copyIntoVector(java.util.Vector,int,java.util.Vector) -> copyIntoVector
android_maps_conflict_avoidance.com.google.common.util.ConversionUtil -> android_maps_conflict_avoidance.com.google.common.util.ConversionUtil:
    int byteArrayToInt(byte[]) -> byteArrayToInt
android_maps_conflict_avoidance.com.google.common.util.IntMap -> android_maps_conflict_avoidance.com.google.common.util.IntMap:
    java.util.Hashtable higher -> higher
    java.lang.Object[] lower -> lower
    int lowerCount -> lowerCount
    int maxKey -> maxKey
    int maxLowerKey -> maxLowerKey
    int access$000(android_maps_conflict_avoidance.com.google.common.util.IntMap) -> access$000
    java.lang.Object[] access$100(android_maps_conflict_avoidance.com.google.common.util.IntMap) -> access$100
    java.util.Hashtable access$200(android_maps_conflict_avoidance.com.google.common.util.IntMap) -> access$200
    boolean compareHashtable(java.util.Hashtable,java.util.Hashtable) -> compareHashtable
    boolean compareLowerBuffer(java.lang.Object[],java.lang.Object[]) -> compareLowerBuffer
    boolean expandLowerIfNecessary(int) -> expandLowerIfNecessary
    void clear() -> clear
    boolean equals(java.lang.Object) -> equals
    java.lang.Object get(int) -> get
    int hashCode() -> hashCode
    android_maps_conflict_avoidance.com.google.common.util.IntMap$KeyIterator keys() -> keys
    void put(int,java.lang.Object) -> put
    java.lang.Object remove(int) -> remove
    int size() -> size
    java.lang.String toString() -> toString
android_maps_conflict_avoidance.com.google.common.util.IntMap$KeyIterator -> android_maps_conflict_avoidance.com.google.common.util.IntMap$KeyIterator:
    int currentKey -> currentKey
    java.util.Enumeration higherKeyEnumerator -> higherKeyEnumerator
    int oneAheadIndex -> oneAheadIndex
    android_maps_conflict_avoidance.com.google.common.util.IntMap this$0 -> this$0
    boolean hasNext() -> hasNext
    int next() -> next
android_maps_conflict_avoidance.com.google.common.util.MathUtil -> android_maps_conflict_avoidance.com.google.common.util.MathUtil:
    byte[] sinArray -> sinArray
    int ceiledDivision(int,int) -> ceiledDivision
android_maps_conflict_avoidance.com.google.common.util.Primitives -> android_maps_conflict_avoidance.com.google.common.util.Primitives:
    android_maps_conflict_avoidance.com.google.common.util.Primitives$PrimitiveConverter converter -> converter
    void resetConverter() -> resetConverter
    java.lang.Integer toInteger(int) -> toInteger
    java.lang.Long toLong(long) -> toLong
android_maps_conflict_avoidance.com.google.common.util.Primitives$1 -> android_maps_conflict_avoidance.com.google.common.util.Primitives$1:
android_maps_conflict_avoidance.com.google.common.util.Primitives$J2meConverter -> android_maps_conflict_avoidance.com.google.common.util.Primitives$J2meConverter:
    java.lang.Integer[] SMALL_INTS -> SMALL_INTS
    java.lang.Long[] SMALL_LONGS -> SMALL_LONGS
    java.lang.Integer toInteger(int) -> toInteger
    java.lang.Long toLong(long) -> toLong
android_maps_conflict_avoidance.com.google.common.util.Primitives$PrimitiveConverter -> android_maps_conflict_avoidance.com.google.common.util.Primitives$PrimitiveConverter:
    java.lang.Integer toInteger(int) -> toInteger
    java.lang.Long toLong(long) -> toLong
android_maps_conflict_avoidance.com.google.common.util.RuntimeCheck -> android_maps_conflict_avoidance.com.google.common.util.RuntimeCheck:
    boolean isStartupComplete -> isStartupComplete
    boolean isTrackingStartup -> isTrackingStartup
    boolean isTest() -> isTest
android_maps_conflict_avoidance.com.google.common.util.StopwatchStats -> android_maps_conflict_avoidance.com.google.common.util.StopwatchStats:
    java.util.Hashtable instancesByName -> instancesByName
    android_maps_conflict_avoidance.com.google.common.Clock clock -> clock
    int count -> count
    short eventType -> eventType
    int last -> last
    java.lang.String logStatus -> logStatus
    int max -> max
    int min -> min
    java.lang.String name -> name
    long start -> start
    long total -> total
    void addSample(int) -> addSample
    long getCurrentTime() -> getCurrentTime
    int getAverage() -> getAverage
    int getLast() -> getLast
    int getMax() -> getMax
    int getMin() -> getMin
    void start() -> start
    void stop() -> stop
    java.lang.String toString() -> toString
android_maps_conflict_avoidance.com.google.common.util.text.TextUtil -> android_maps_conflict_avoidance.com.google.common.util.text.TextUtil:
    java.lang.Boolean FALSE -> FALSE
    java.lang.Boolean TRUE -> TRUE
    java.lang.String e6ToString(int) -> e6ToString
    boolean isEmpty(java.lang.String) -> isEmpty
    java.lang.String join(java.util.Vector,java.lang.String) -> join
    int replace(java.lang.String,java.lang.String,java.lang.StringBuffer) -> replace
    java.lang.String[] split(java.lang.String,char) -> split
    java.lang.String[] split(java.lang.String,java.lang.String) -> split
android_maps_conflict_avoidance.com.google.debug.DebugUtil -> android_maps_conflict_avoidance.com.google.debug.DebugUtil:
    java.lang.String getAntProperty(java.lang.String,java.lang.String) -> getAntProperty
    java.lang.String getAntPropertyOrNull(java.lang.String) -> getAntPropertyOrNull
    boolean isAntPropertyExpanded(java.lang.String) -> isAntPropertyExpanded
    java.lang.Object newInstance(java.lang.Class) -> newInstance
android_maps_conflict_avoidance.com.google.debug.Log -> android_maps_conflict_avoidance.com.google.debug.Log:
    java.lang.String[] LEVEL_NAMES -> LEVEL_NAMES
    android_maps_conflict_avoidance.com.google.debug.Logger logger -> logger
    java.util.Hashtable timers -> timers
    void logThrowable(java.lang.Object,java.lang.Throwable) -> logThrowable
    java.lang.Class logger() -> logger
    void xlogThrowable(java.lang.Object,java.lang.Throwable,int,java.lang.String,java.lang.String,int) -> xlogThrowable
    void xlogThrowable(java.lang.Object,java.lang.Throwable,java.lang.String,java.lang.String,int) -> xlogThrowable
android_maps_conflict_avoidance.com.google.debug.Logger -> android_maps_conflict_avoidance.com.google.debug.Logger:
    void logThrowable(java.lang.Object,java.lang.Throwable,int,java.lang.String,java.lang.String,int) -> logThrowable
android_maps_conflict_avoidance.com.google.googlenav.AddressUtil -> android_maps_conflict_avoidance.com.google.googlenav.AddressUtil:
    java.lang.String getAddressLine(int,int,android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBuf) -> getAddressLine
android_maps_conflict_avoidance.com.google.googlenav.GmmLogger -> android_maps_conflict_avoidance.com.google.googlenav.GmmLogger:
    void logTimingTileLatency(java.lang.String,int,int,int,int,int) -> logTimingTileLatency
android_maps_conflict_avoidance.com.google.googlenav.GmmSettings -> android_maps_conflict_avoidance.com.google.googlenav.GmmSettings:
    android_maps_conflict_avoidance.com.google.map.MapPoint FEATURE_TEST_DEFAULT_START -> FEATURE_TEST_DEFAULT_START
    java.lang.String defaultRemoteStringVersion -> defaultRemoteStringVersion
    boolean isFirstInvocation -> isFirstInvocation
    boolean migrateLatitudeUserTermsPrefOnUpgrade -> migrateLatitudeUserTermsPrefOnUpgrade
    java.lang.String remoteStringResource -> remoteStringResource
    boolean requireTermsAndConditionsOnUpgrade -> requireTermsAndConditionsOnUpgrade
    boolean upgradeChecked -> upgradeChecked
    boolean isDebugBuild() -> isDebugBuild
    boolean isTermsAndConditionsPrefSet() -> isTermsAndConditionsPrefSet
android_maps_conflict_avoidance.com.google.googlenav.LayerPlacemark -> android_maps_conflict_avoidance.com.google.googlenav.LayerPlacemark:
    int activeIconIndex -> activeIconIndex
    long authorGaiaId -> authorGaiaId
    java.lang.String authorName -> authorName
    java.lang.String clusterDocId -> clusterDocId
    java.lang.String content -> content
    long distanceSquaredToTarget -> distanceSquaredToTarget
    int height -> height
    java.lang.String itemId -> itemId
    java.lang.String layerId -> layerId
    java.lang.String locationName -> locationName
    java.util.Vector mediaUrls -> mediaUrls
    boolean needToFetchDetails -> needToFetchDetails
    long nextRefreshTime -> nextRefreshTime
    int normalIconIndex -> normalIconIndex
    int numberComments -> numberComments
    int shadowIconIndex -> shadowIconIndex
    java.lang.String snippet -> snippet
    long timestamp -> timestamp
    int width -> width
android_maps_conflict_avoidance.com.google.googlenav.Placemark -> android_maps_conflict_avoidance.com.google.googlenav.Placemark:
    android_maps_conflict_avoidance.com.google.googlenav.Placemark$EnhancedDataSource[] EMPTY_ENHANCED_DATA_SOURCE -> EMPTY_ENHANCED_DATA_SOURCE
    android_maps_conflict_avoidance.com.google.googlenav.Placemark$ImageResource[] EMPTY_IMAGE_SOURCE -> EMPTY_IMAGE_SOURCE
    android_maps_conflict_avoidance.com.google.googlenav.Placemark$SnippetSource[] EMPTY_SNIPPET_SOURCE -> EMPTY_SNIPPET_SOURCE
    java.util.Hashtable events -> events
    android_maps_conflict_avoidance.com.google.map.Geometry geometry -> geometry
    byte iconClass -> iconClass
    boolean isSelectable -> isSelectable
    java.lang.String name -> name
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBuf proto -> proto
    int resultType -> resultType
    java.lang.String getAddressLine1() -> getAddressLine1
    java.lang.String getAddressLine2() -> getAddressLine2
    android_maps_conflict_avoidance.com.google.map.Geometry getGeometry() -> getGeometry
    java.lang.String getKmlSnippet() -> getKmlSnippet
    java.lang.String getKmlSupplementalDisplayLine() -> getKmlSupplementalDisplayLine
    android_maps_conflict_avoidance.com.google.map.MapPoint getLocation() -> getLocation
    java.lang.String getTitle() -> getTitle
    boolean isKml() -> isKml
    boolean isKmlPlacemark() -> isKmlPlacemark
    boolean isKmlResult() -> isKmlResult
    java.lang.String toString() -> toString
android_maps_conflict_avoidance.com.google.googlenav.Placemark$EnhancedDataSource -> android_maps_conflict_avoidance.com.google.googlenav.Placemark$EnhancedDataSource:
android_maps_conflict_avoidance.com.google.googlenav.Placemark$ImageResource -> android_maps_conflict_avoidance.com.google.googlenav.Placemark$ImageResource:
android_maps_conflict_avoidance.com.google.googlenav.Placemark$SnippetSource -> android_maps_conflict_avoidance.com.google.googlenav.Placemark$SnippetSource:
android_maps_conflict_avoidance.com.google.googlenav.StartupHelper -> android_maps_conflict_avoidance.com.google.googlenav.StartupHelper:
    java.util.Vector startupCallbacksForBgThread -> startupCallbacksForBgThread
    java.util.Vector startupCallbacksForUiThread -> startupCallbacksForUiThread
    void addPostStartupBgCallback(java.lang.Runnable) -> addPostStartupBgCallback
    void addPostStartupCallback(java.lang.Runnable,boolean) -> addPostStartupCallback
android_maps_conflict_avoidance.com.google.googlenav.Stats -> android_maps_conflict_avoidance.com.google.googlenav.Stats:
    android_maps_conflict_avoidance.com.google.googlenav.Stats currentInstance -> currentInstance
    int bytesDownloaded -> bytesDownloaded
    int bytesUploaded -> bytesUploaded
    int flashCacheHits -> flashCacheHits
    int flashCacheHitsSinceLastLog -> flashCacheHitsSinceLastLog
    int flashCacheMisses -> flashCacheMisses
    int flashCacheMissesSinceLastLog -> flashCacheMissesSinceLastLog
    android_maps_conflict_avoidance.com.google.googlenav.Stats getInstance() -> getInstance
    void log(boolean) -> log
    android_maps_conflict_avoidance.com.google.googlenav.Stats read() -> read
    void flashCacheHit() -> flashCacheHit
    void flashCacheMiss() -> flashCacheMiss
android_maps_conflict_avoidance.com.google.googlenav.android.TaskRunnerManager -> android_maps_conflict_avoidance.com.google.googlenav.android.TaskRunnerManager:
    android_maps_conflict_avoidance.com.google.common.task.TaskRunner getTaskRunner() -> getTaskRunner
android_maps_conflict_avoidance.com.google.googlenav.android.TaskRunnerManager$TaskRunnerHolder -> android_maps_conflict_avoidance.com.google.googlenav.android.TaskRunnerManager$TaskRunnerHolder:
    android_maps_conflict_avoidance.com.google.common.task.TaskRunner instance -> instance
    android_maps_conflict_avoidance.com.google.common.task.TaskRunner access$000() -> access$000
android_maps_conflict_avoidance.com.google.googlenav.datarequest.BaseDataRequest -> android_maps_conflict_avoidance.com.google.googlenav.datarequest.BaseDataRequest:
    boolean isCancelled -> isCancelled
    int serverFailureCount -> serverFailureCount
    boolean isCancelled() -> isCancelled
    boolean isForeground() -> isForeground
    boolean isImmediate() -> isImmediate
    boolean isSubmission() -> isSubmission
    void onServerFailure() -> onServerFailure
    boolean retryOnFailure() -> retryOnFailure
android_maps_conflict_avoidance.com.google.googlenav.datarequest.ClientPropertiesRequest -> android_maps_conflict_avoidance.com.google.googlenav.datarequest.ClientPropertiesRequest:
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBuf properties -> properties
    java.lang.String readCohortFromFlash() -> readCohortFromFlash
    int getRequestType() -> getRequestType
    boolean isForeground() -> isForeground
    boolean isImmediate() -> isImmediate
    boolean readResponseData(java.io.DataInput) -> readResponseData
    void writeRequestData(java.io.DataOutput) -> writeRequestData
android_maps_conflict_avoidance.com.google.googlenav.datarequest.ConnectionWarmUpManager -> android_maps_conflict_avoidance.com.google.googlenav.datarequest.ConnectionWarmUpManager:
    android_maps_conflict_avoidance.com.google.common.Clock clock -> clock
    android_maps_conflict_avoidance.com.google.googlenav.datarequest.DataRequestDispatcher drd -> drd
    java.lang.Object pendingKey -> pendingKey
    java.lang.String pendingSource -> pendingSource
    long pendingWarmUpTime -> pendingWarmUpTime
    java.lang.String requestSource -> requestSource
    int state -> state
    void logUsed(java.lang.String,int,int,int) -> logUsed
    void logWithSource(java.lang.String,java.lang.String,java.lang.String) -> logWithSource
    void onFinishServiceRequests(java.lang.Object,long,int,int) -> onFinishServiceRequests
    void onStartServiceRequests(java.lang.Object) -> onStartServiceRequests
android_maps_conflict_avoidance.com.google.googlenav.datarequest.DataRequest -> android_maps_conflict_avoidance.com.google.googlenav.datarequest.DataRequest:
    int getRequestType() -> getRequestType
    boolean isCancelled() -> isCancelled
    boolean isForeground() -> isForeground
    boolean isImmediate() -> isImmediate
    boolean isSubmission() -> isSubmission
    void onServerFailure() -> onServerFailure
    boolean readResponseData(java.io.DataInput) -> readResponseData
    boolean retryOnFailure() -> retryOnFailure
    void writeRequestData(java.io.DataOutput) -> writeRequestData
android_maps_conflict_avoidance.com.google.googlenav.datarequest.DataRequestDispatcher -> android_maps_conflict_avoidance.com.google.googlenav.datarequest.DataRequestDispatcher:
    int MAX_WORKER_THREAD_COUNT -> MAX_WORKER_THREAD_COUNT
    android_maps_conflict_avoidance.com.google.googlenav.datarequest.DataRequestDispatcher instance -> instance
    int requestId -> requestId
    boolean active -> active
    int bytesReceived -> bytesReceived
    int bytesSent -> bytesSent
    android_maps_conflict_avoidance.com.google.common.Clock clock -> clock
    android_maps_conflict_avoidance.com.google.common.io.HttpConnectionFactory connectionFactory -> connectionFactory
    long cookie -> cookie
    boolean debug -> debug
    android_maps_conflict_avoidance.com.google.googlenav.datarequest.DataRequestDispatcher$DispatcherServer defaultServer -> defaultServer
    java.lang.String distributionChannel -> distributionChannel
    long errorRetryTime -> errorRetryTime
    long firstConnectionErrorTime -> firstConnectionErrorTime
    java.lang.String globalSpecialUrlArguments -> globalSpecialUrlArguments
    long lastActiveTime -> lastActiveTime
    java.lang.Throwable lastException -> lastException
    long lastExceptionTime -> lastExceptionTime
    long lastSuccessTime -> lastSuccessTime
    java.util.Vector listeners -> listeners
    long maxNetworkErrorRetryTimeout -> maxNetworkErrorRetryTimeout
    boolean mockLostDataConnection -> mockLostDataConnection
    boolean networkErrorMode -> networkErrorMode
    int networkSpeedBytesPerSecond -> networkSpeedBytesPerSecond
    java.lang.String platformID -> platformID
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBuf properties -> properties
    java.lang.String serverAddress -> serverAddress
    java.lang.String softwareVersion -> softwareVersion
    int suspendCount -> suspendCount
    java.util.Vector thirdPartyServers -> thirdPartyServers
    java.lang.Object threadDispatchLock -> threadDispatchLock
    android_maps_conflict_avoidance.com.google.googlenav.datarequest.ConnectionWarmUpManager warmUpManager -> warmUpManager
    int workerForegroundThreadCount -> workerForegroundThreadCount
    int workerSubmissionThreadCount -> workerSubmissionThreadCount
    int workerThreadCount -> workerThreadCount
    long access$1002(android_maps_conflict_avoidance.com.google.googlenav.datarequest.DataRequestDispatcher,long) -> access$1002
    void access$1100(android_maps_conflict_avoidance.com.google.googlenav.datarequest.DataRequestDispatcher,int,java.lang.Throwable) -> access$1100
    java.lang.Object access$200(android_maps_conflict_avoidance.com.google.googlenav.datarequest.DataRequestDispatcher) -> access$200
    int access$308(android_maps_conflict_avoidance.com.google.googlenav.datarequest.DataRequestDispatcher) -> access$308
    int access$310(android_maps_conflict_avoidance.com.google.googlenav.datarequest.DataRequestDispatcher) -> access$310
    int access$408(android_maps_conflict_avoidance.com.google.googlenav.datarequest.DataRequestDispatcher) -> access$408
    int access$410(android_maps_conflict_avoidance.com.google.googlenav.datarequest.DataRequestDispatcher) -> access$410
    int access$508(android_maps_conflict_avoidance.com.google.googlenav.datarequest.DataRequestDispatcher) -> access$508
    int access$510(android_maps_conflict_avoidance.com.google.googlenav.datarequest.DataRequestDispatcher) -> access$510
    long access$602(android_maps_conflict_avoidance.com.google.googlenav.datarequest.DataRequestDispatcher,long) -> access$602
    android_maps_conflict_avoidance.com.google.common.Clock access$700(android_maps_conflict_avoidance.com.google.googlenav.datarequest.DataRequestDispatcher) -> access$700
    long access$800(android_maps_conflict_avoidance.com.google.googlenav.datarequest.DataRequestDispatcher) -> access$800
    void access$900(android_maps_conflict_avoidance.com.google.googlenav.datarequest.DataRequestDispatcher) -> access$900
    void addClientPropertiesRequest(java.util.Vector,android_maps_conflict_avoidance.com.google.googlenav.datarequest.DataRequestDispatcher$DispatcherServer) -> addClientPropertiesRequest
    void clearNetworkError() -> clearNetworkError
    boolean containsForegroundRequest(java.util.Vector) -> containsForegroundRequest
    boolean containsSubmissionRequest(java.util.Vector) -> containsSubmissionRequest
    android_maps_conflict_avoidance.com.google.googlenav.datarequest.DataRequestDispatcher createInstance(java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean) -> createInstance
    android_maps_conflict_avoidance.com.google.googlenav.datarequest.DataRequestDispatcher getInstance() -> getInstance
    void handleError(int,java.lang.Throwable) -> handleError
    void saveCookie(long) -> saveCookie
    void addDataRequest(android_maps_conflict_avoidance.com.google.googlenav.datarequest.DataRequest) -> addDataRequest
    void addDataRequestListener(android_maps_conflict_avoidance.com.google.googlenav.datarequest.DataRequestListener) -> addDataRequestListener
    void addSimpleRequest(int,byte[],boolean,boolean) -> addSimpleRequest
    boolean canDispatchNow() -> canDispatchNow
    void generateRequest(java.util.Vector,java.io.OutputStream,android_maps_conflict_avoidance.com.google.googlenav.datarequest.DataRequestDispatcher$DispatcherServer) -> generateRequest
    boolean isSuspended() -> isSuspended
    long loadOrRequestCookie() -> loadOrRequestCookie
    void maybeNotifyNetworkError(int) -> maybeNotifyNetworkError
    void notifyComplete(android_maps_conflict_avoidance.com.google.googlenav.datarequest.DataRequest) -> notifyComplete
    void notifyNetworkError(int,boolean,java.lang.String) -> notifyNetworkError
    void processDataRequest(java.io.DataInput,android_maps_conflict_avoidance.com.google.googlenav.datarequest.DataRequest,android_maps_conflict_avoidance.com.google.googlenav.datarequest.DataRequestDispatcher$DispatcherServer) -> processDataRequest
    void removeDataRequestListener(android_maps_conflict_avoidance.com.google.googlenav.datarequest.DataRequestListener) -> removeDataRequestListener
    void resetConnectionFactory() -> resetConnectionFactory
    void serviceRequests(java.util.Vector,android_maps_conflict_avoidance.com.google.googlenav.datarequest.DataRequestDispatcher$DispatcherServer) -> serviceRequests
    void setAndroidLoggingId2(java.lang.String) -> setAndroidLoggingId2
    void setAndroidMapKey(java.lang.String) -> setAndroidMapKey
    void setAndroidSignature(java.lang.String) -> setAndroidSignature
    void setApplicationName(java.lang.String) -> setApplicationName
    android_maps_conflict_avoidance.com.google.googlenav.datarequest.DataRequestListener[] snapshotListeners() -> snapshotListeners
    void start() -> start
    void stop() -> stop
    java.lang.String urlArguments(java.util.Vector) -> urlArguments
android_maps_conflict_avoidance.com.google.googlenav.datarequest.DataRequestDispatcher$1 -> android_maps_conflict_avoidance.com.google.googlenav.datarequest.DataRequestDispatcher$1:
android_maps_conflict_avoidance.com.google.googlenav.datarequest.DataRequestDispatcher$CookieDataRequest -> android_maps_conflict_avoidance.com.google.googlenav.datarequest.DataRequestDispatcher$CookieDataRequest:
    android_maps_conflict_avoidance.com.google.googlenav.datarequest.DataRequestDispatcher this$0 -> this$0
    int getRequestType() -> getRequestType
    boolean isImmediate() -> isImmediate
    boolean readResponseData(java.io.DataInput) -> readResponseData
    void writeRequestData(java.io.DataOutput) -> writeRequestData
android_maps_conflict_avoidance.com.google.googlenav.datarequest.DataRequestDispatcher$DataRequestEventUploader -> android_maps_conflict_avoidance.com.google.googlenav.datarequest.DataRequestDispatcher$DataRequestEventUploader:
    android_maps_conflict_avoidance.com.google.googlenav.datarequest.DataRequestDispatcher drd -> drd
    java.lang.Object uploadEventLog(boolean,java.lang.Object,byte[]) -> uploadEventLog
android_maps_conflict_avoidance.com.google.googlenav.datarequest.DataRequestDispatcher$DispatcherServer -> android_maps_conflict_avoidance.com.google.googlenav.datarequest.DataRequestDispatcher$DispatcherServer:
    byte headerFlag -> headerFlag
    java.lang.String serverAddress -> serverAddress
    java.util.Vector serverRequests -> serverRequests
    java.util.Vector supportedDataRequests -> supportedDataRequests
    java.util.Vector tempRequests -> tempRequests
    android_maps_conflict_avoidance.com.google.googlenav.datarequest.DataRequestDispatcher this$0 -> this$0
    boolean checkNeedToActivate() -> checkNeedToActivate
    void networkAccessDenied(java.lang.Exception) -> networkAccessDenied
    void activate() -> activate
    void activateIfNeeded() -> activateIfNeeded
    void addDataRequest(android_maps_conflict_avoidance.com.google.googlenav.datarequest.DataRequest) -> addDataRequest
    boolean canHandle(int) -> canHandle
    java.util.Vector dequeuePendingRequests() -> dequeuePendingRequests
    void run() -> run
    void start() -> start
android_maps_conflict_avoidance.com.google.googlenav.datarequest.DataRequestListener -> android_maps_conflict_avoidance.com.google.googlenav.datarequest.DataRequestListener:
    void onComplete(android_maps_conflict_avoidance.com.google.googlenav.datarequest.DataRequest) -> onComplete
    void onNetworkError(int,boolean,java.lang.String) -> onNetworkError
android_maps_conflict_avoidance.com.google.googlenav.datarequest.NeedsSpecialUrl -> android_maps_conflict_avoidance.com.google.googlenav.datarequest.NeedsSpecialUrl:
    java.lang.String getParams() -> getParams
android_maps_conflict_avoidance.com.google.googlenav.datarequest.SimpleDataRequest -> android_maps_conflict_avoidance.com.google.googlenav.datarequest.SimpleDataRequest:
    byte[] data -> data
    boolean foreground -> foreground
    boolean immediate -> immediate
    boolean received -> received
    int requestType -> requestType
    boolean sent -> sent
    java.lang.Object waitObject -> waitObject
    int getRequestType() -> getRequestType
    boolean isForeground() -> isForeground
    boolean isImmediate() -> isImmediate
    boolean readResponseData(java.io.DataInput) -> readResponseData
    void writeRequestData(java.io.DataOutput) -> writeRequestData
android_maps_conflict_avoidance.com.google.googlenav.labs.LocalLanguageTileLab -> android_maps_conflict_avoidance.com.google.googlenav.labs.LocalLanguageTileLab:
    android_maps_conflict_avoidance.com.google.googlenav.labs.LocalLanguageTileLab INSTANCE -> INSTANCE
android_maps_conflict_avoidance.com.google.googlenav.labs.SimpleLab -> android_maps_conflict_avoidance.com.google.googlenav.labs.SimpleLab:
    boolean active -> active
    boolean isActive() -> isActive
android_maps_conflict_avoidance.com.google.googlenav.labs.android.TrafficWithLabelsLab -> android_maps_conflict_avoidance.com.google.googlenav.labs.android.TrafficWithLabelsLab:
    android_maps_conflict_avoidance.com.google.googlenav.labs.android.TrafficWithLabelsLab INSTANCE -> INSTANCE
android_maps_conflict_avoidance.com.google.googlenav.layer.ClickableArea -> android_maps_conflict_avoidance.com.google.googlenav.layer.ClickableArea:
    android_maps_conflict_avoidance.com.google.map.MapPoint centerPoint -> centerPoint
    int height -> height
    int iconInactiveIndex -> iconInactiveIndex
    int iconIndex -> iconIndex
    int iconShadowIndex -> iconShadowIndex
    android_maps_conflict_avoidance.com.google.googlenav.layer.LayerItem[] items -> items
    int type -> type
    int width -> width
    android_maps_conflict_avoidance.com.google.map.MapPoint getCenterPoint() -> getCenterPoint
    int getHeight() -> getHeight
    int getIconInactiveIndex() -> getIconInactiveIndex
    int getIconIndex() -> getIconIndex
    int getIconShadowIndex() -> getIconShadowIndex
    android_maps_conflict_avoidance.com.google.googlenav.layer.LayerItem[] getItems() -> getItems
    int getWidth() -> getWidth
    java.lang.String toString() -> toString
android_maps_conflict_avoidance.com.google.googlenav.layer.LayerInfo -> android_maps_conflict_avoidance.com.google.googlenav.layer.LayerInfo:
    java.lang.String description -> description
    java.lang.String id -> id
    int maxZoomLevel -> maxZoomLevel
    int minZoomLevel -> minZoomLevel
    java.lang.String name -> name
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBuf[] parameters -> parameters
    java.lang.String getId() -> getId
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBuf[] getParameters() -> getParameters
    boolean isValidZoomLevel(int) -> isValidZoomLevel
    java.lang.String toString() -> toString
android_maps_conflict_avoidance.com.google.googlenav.layer.LayerItem -> android_maps_conflict_avoidance.com.google.googlenav.layer.LayerItem:
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBuf activitySnippet -> activitySnippet
    boolean isRoutable -> isRoutable
    java.lang.String itemId -> itemId
    java.lang.String layerId -> layerId
    java.lang.String name -> name
    int ranking -> ranking
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBuf rating -> rating
    java.lang.String snippet -> snippet
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBuf getBuzzSnippet() -> getBuzzSnippet
    java.lang.String getItemId() -> getItemId
    java.lang.String getLayerId() -> getLayerId
    java.lang.String getName() -> getName
    java.lang.String getSnippet() -> getSnippet
    java.lang.String toString() -> toString
android_maps_conflict_avoidance.com.google.googlenav.map.AndroidTrafficPainter -> android_maps_conflict_avoidance.com.google.googlenav.map.AndroidTrafficPainter:
    float[] MAJOR_DASH_INTERVALS -> MAJOR_DASH_INTERVALS
    float[] MINOR_DASH_INTERVALS -> MINOR_DASH_INTERVALS
    android.graphics.Canvas canvas -> canvas
    boolean isPreserveLabels -> isPreserveLabels
    android.graphics.Xfermode mainXfermode -> mainXfermode
    android.graphics.PathEffect majorDash -> majorDash
    android.graphics.PathEffect minorDash -> minorDash
    android.graphics.Paint paint -> paint
    android.graphics.AvoidXfermode preserveLabels -> preserveLabels
    void addTrafficLine(android_maps_conflict_avoidance.com.google.googlenav.map.TrafficRenderer$Path,int,int) -> addTrafficLine
    android_maps_conflict_avoidance.com.google.googlenav.map.TrafficRenderer$Path createPathObject() -> createPathObject
    void setup(android.graphics.Canvas) -> setup
android_maps_conflict_avoidance.com.google.googlenav.map.AndroidTrafficPainter$1 -> android_maps_conflict_avoidance.com.google.googlenav.map.AndroidTrafficPainter$1:
android_maps_conflict_avoidance.com.google.googlenav.map.AndroidTrafficPainter$AndroidPath -> android_maps_conflict_avoidance.com.google.googlenav.map.AndroidTrafficPainter$AndroidPath:
    android.graphics.Path path -> path
    android.graphics.Path getPath() -> getPath
    void lineTo(int,int) -> lineTo
    void moveTo(int,int) -> moveTo
android_maps_conflict_avoidance.com.google.googlenav.map.BaseTileRequest -> android_maps_conflict_avoidance.com.google.googlenav.map.BaseTileRequest:
    long createTime -> createTime
    int requestType -> requestType
    android_maps_conflict_avoidance.com.google.common.util.StopwatchStats stopwatchStatsTile -> stopwatchStatsTile
    int textSize -> textSize
    int writeLatency -> writeLatency
    java.lang.String formatTileTypesForLog(int) -> formatTileTypesForLog
    byte[] readImageData(java.io.DataInput) -> readImageData
    int getRequestType() -> getRequestType
    void handleEndOfResponse(int) -> handleEndOfResponse
    boolean processDownloadedTile(int,android_maps_conflict_avoidance.com.google.googlenav.map.Tile,byte[]) -> processDownloadedTile
    boolean readResponseData(java.io.DataInput) -> readResponseData
    void setTileEditionAndTextSize(int,int) -> setTileEditionAndTextSize
    void writeRequestForTiles(android_maps_conflict_avoidance.com.google.googlenav.map.Tile[],java.io.DataOutput) -> writeRequestForTiles
android_maps_conflict_avoidance.com.google.googlenav.map.FlashEntry -> android_maps_conflict_avoidance.com.google.googlenav.map.FlashEntry:
    int SIZE_IN_CATALOG -> SIZE_IN_CATALOG
    int dataSize -> dataSize
    android_maps_conflict_avoidance.com.google.googlenav.map.FlashRecord flashRecord -> flashRecord
    android_maps_conflict_avoidance.com.google.googlenav.map.Tile tile -> tile
    int time -> time
    android_maps_conflict_avoidance.com.google.googlenav.map.FlashEntry readFromCatalog(java.io.DataInput) -> readFromCatalog
    boolean equals(java.lang.Object) -> equals
    int getByteSize() -> getByteSize
    android_maps_conflict_avoidance.com.google.googlenav.map.FlashRecord getFlashRecord() -> getFlashRecord
    long getLastAccessTime() -> getLastAccessTime
    android_maps_conflict_avoidance.com.google.googlenav.map.Tile getTile() -> getTile
    int hashCode() -> hashCode
    void setFlashRecord(android_maps_conflict_avoidance.com.google.googlenav.map.FlashRecord) -> setFlashRecord
    void setLastAccessTime(long) -> setLastAccessTime
    java.lang.String toString() -> toString
    void writeToCatalog(java.io.DataOutput) -> writeToCatalog
android_maps_conflict_avoidance.com.google.googlenav.map.FlashRecord -> android_maps_conflict_avoidance.com.google.googlenav.map.FlashRecord:
    java.lang.Object lastCacheDataLock -> lastCacheDataLock
    byte[] lastCachedData -> lastCachedData
    android_maps_conflict_avoidance.com.google.googlenav.map.FlashRecord lastFlashRecord -> lastFlashRecord
    java.util.Vector flashEntries -> flashEntries
    int recordId -> recordId
    boolean unverified -> unverified
    void clearDataCache() -> clearDataCache
    android_maps_conflict_avoidance.com.google.googlenav.map.MapTile loadTileFromDataEntry(byte[],android_maps_conflict_avoidance.com.google.googlenav.map.Tile) -> loadTileFromDataEntry
    android_maps_conflict_avoidance.com.google.googlenav.map.FlashRecord readFromCatalog(java.io.DataInput) -> readFromCatalog
    boolean addEntry(android_maps_conflict_avoidance.com.google.googlenav.map.FlashEntry) -> addEntry
    byte[] createDataEntry(java.util.Hashtable) -> createDataEntry
    boolean equals(java.lang.Object) -> equals
    int getDataSize() -> getDataSize
    android_maps_conflict_avoidance.com.google.googlenav.map.FlashEntry getEntry(int) -> getEntry
    android_maps_conflict_avoidance.com.google.googlenav.map.FlashEntry getEntry(android_maps_conflict_avoidance.com.google.googlenav.map.Tile) -> getEntry
    int getRecordId() -> getRecordId
    long getScore(long) -> getScore
    int hashCode() -> hashCode
    boolean isSaved() -> isSaved
    android_maps_conflict_avoidance.com.google.googlenav.map.MapTile loadTile(java.lang.String,android_maps_conflict_avoidance.com.google.googlenav.map.Tile) -> loadTile
    int numEntries() -> numEntries
    void setUnsaved() -> setUnsaved
    java.lang.String toString() -> toString
    void writeRecord(java.lang.String,int,byte[]) -> writeRecord
    void writeToCatalog(java.io.DataOutput) -> writeToCatalog
android_maps_conflict_avoidance.com.google.googlenav.map.LayerService -> android_maps_conflict_avoidance.com.google.googlenav.map.LayerService:
    java.util.Hashtable cache -> cache
    long nextRefreshTime -> nextRefreshTime
    java.util.Vector observers -> observers
    long refreshMillis -> refreshMillis
    android_maps_conflict_avoidance.com.google.googlenav.map.LayerService$LayerTileRequest request -> request
    java.util.Hashtable requestedTiles -> requestedTiles
    java.util.Vector access$000(android_maps_conflict_avoidance.com.google.googlenav.map.LayerService) -> access$000
    java.util.Hashtable access$100(android_maps_conflict_avoidance.com.google.googlenav.map.LayerService) -> access$100
    java.util.Hashtable access$200(android_maps_conflict_avoidance.com.google.googlenav.map.LayerService) -> access$200
    boolean isTileLocationValid(android_maps_conflict_avoidance.com.google.googlenav.map.Tile) -> isTileLocationValid
    void requestTile(android_maps_conflict_avoidance.com.google.googlenav.map.Tile,android_maps_conflict_avoidance.com.google.googlenav.map.LayerTile) -> requestTile
    void clearTileCache() -> clearTileCache
    void close() -> close
    void doCompact(android_maps_conflict_avoidance.com.google.googlenav.map.Tile) -> doCompact
    android_maps_conflict_avoidance.com.google.googlenav.map.LayerTile getTile(android_maps_conflict_avoidance.com.google.googlenav.map.Tile,boolean) -> getTile
    void handleOutOfMemory(boolean) -> handleOutOfMemory
    boolean needFetchLayerTiles() -> needFetchLayerTiles
    void notifyLayerTilesDirty() -> notifyLayerTilesDirty
    void notifyNewLayerInfo(java.lang.String,android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBuf[]) -> notifyNewLayerInfo
    void requestTiles() -> requestTiles
android_maps_conflict_avoidance.com.google.googlenav.map.LayerService$LayerTileRequest -> android_maps_conflict_avoidance.com.google.googlenav.map.LayerService$LayerTileRequest:
    boolean closed -> closed
    android_maps_conflict_avoidance.com.google.googlenav.map.LayerService this$0 -> this$0
    java.util.Vector tiles -> tiles
    void addTile(android_maps_conflict_avoidance.com.google.googlenav.map.LayerTile) -> addTile
    int getRequestType() -> getRequestType
    void processLayerTile(android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBuf,boolean) -> processLayerTile
    void processResponseHeader(android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBuf) -> processResponseHeader
    boolean readResponseData(java.io.DataInput) -> readResponseData
    void writeRequestData(java.io.DataOutput) -> writeRequestData
android_maps_conflict_avoidance.com.google.googlenav.map.LayerService$TileUpdateObserver -> android_maps_conflict_avoidance.com.google.googlenav.map.LayerService$TileUpdateObserver:
    android_maps_conflict_avoidance.com.google.googlenav.layer.LayerInfo getLayerInfo() -> getLayerInfo
    void setLayerTilesDirty() -> setLayerTilesDirty
    void updateLayerInfo(java.lang.String,android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBuf[]) -> updateLayerInfo
android_maps_conflict_avoidance.com.google.googlenav.map.LayerTile -> android_maps_conflict_avoidance.com.google.googlenav.map.LayerTile:
    java.util.Hashtable cache -> cache
    long dataTime -> dataTime
    android_maps_conflict_avoidance.com.google.common.graphics.GoogleImage image -> image
    boolean isComplete -> isComplete
    android_maps_conflict_avoidance.com.google.googlenav.map.Tile location -> location
    void compact() -> compact
    long getDataTime() -> getDataTime
    android_maps_conflict_avoidance.com.google.common.graphics.GoogleImage getImage() -> getImage
    android_maps_conflict_avoidance.com.google.googlenav.map.Tile getLocation() -> getLocation
    boolean hasImage() -> hasImage
    boolean isComplete() -> isComplete
    boolean isEmpty() -> isEmpty
    void setImage(byte[]) -> setImage
    void setLayerTileData(android_maps_conflict_avoidance.com.google.googlenav.layer.ClickableArea[]) -> setLayerTileData
    void updateLayerTileData(android_maps_conflict_avoidance.com.google.googlenav.layer.ClickableArea[]) -> updateLayerTileData
android_maps_conflict_avoidance.com.google.googlenav.map.Map -> android_maps_conflict_avoidance.com.google.googlenav.map.Map:
    android_maps_conflict_avoidance.com.google.googlenav.map.MapBiller biller -> biller
    int centerPixelX -> centerPixelX
    int centerPixelY -> centerPixelY
    int completeTilesInViewport -> completeTilesInViewport
    int cornerToCenterDist -> cornerToCenterDist
    int displayHeight -> displayHeight
    int displayWidth -> displayWidth
    long earliestTileNeededTime -> earliestTileNeededTime
    int estimatedCountOfRenderedImagesInMapCache -> estimatedCountOfRenderedImagesInMapCache
    int halfDisplayHeight -> halfDisplayHeight
    int halfDisplayWidth -> halfDisplayWidth
    int halfHeight -> halfHeight
    int halfWidth -> halfWidth
    boolean hardwareAcceleration -> hardwareAcceleration
    int height -> height
    boolean isViewportAllNew -> isViewportAllNew
    long lastPaintStartTime -> lastPaintStartTime
    android_maps_conflict_avoidance.com.google.googlenav.map.MapService mapService -> mapService
    android_maps_conflict_avoidance.com.google.map.MapState mapState -> mapState
    android_maps_conflict_avoidance.com.google.googlenav.map.Map$PixelMapper pixelMapper -> pixelMapper
    boolean running -> running
    android_maps_conflict_avoidance.com.google.googlenav.map.TileOverlayRenderer tileOverlayRenderer -> tileOverlayRenderer
    android_maps_conflict_avoidance.com.google.googlenav.map.Tile[] tiles -> tiles
    android_maps_conflict_avoidance.com.google.googlenav.map.Tile topLeftDisplayTile -> topLeftDisplayTile
    android_maps_conflict_avoidance.com.google.googlenav.map.Tile topLeftTile -> topLeftTile
    int width -> width
    int xDisplayTiles -> xDisplayTiles
    int xTiles -> xTiles
    int yDisplayTiles -> yDisplayTiles
    int yTiles -> yTiles
    void calculateCenterPixel() -> calculateCenterPixel
    boolean checkPaintTimeExceeded(long) -> checkPaintTimeExceeded
    boolean drawMapBackground(android_maps_conflict_avoidance.com.google.common.graphics.GoogleGraphics,boolean,boolean) -> drawMapBackground
    boolean drawTile(android_maps_conflict_avoidance.com.google.googlenav.map.Tile,int,int,android_maps_conflict_avoidance.com.google.common.graphics.GoogleGraphics,int,int,boolean,boolean,boolean,long,long) -> drawTile
    android_maps_conflict_avoidance.com.google.map.Zoom findZoom(int,int,android_maps_conflict_avoidance.com.google.map.MapState) -> findZoom
    int getMaxMapInitialZoomForPoint(android_maps_conflict_avoidance.com.google.map.MapPoint) -> getMaxMapInitialZoomForPoint
    int getMaxTiles(int) -> getMaxTiles
    byte getTileFlagsForMapMode() -> getTileFlagsForMapMode
    boolean isMapPointInJapanBoundingBox(android_maps_conflict_avoidance.com.google.map.MapPoint) -> isMapPointInJapanBoundingBox
    boolean isMapPointInKoreaBoundingBox(android_maps_conflict_avoidance.com.google.map.MapPoint) -> isMapPointInKoreaBoundingBox
    boolean isTileOnScreenX(android_maps_conflict_avoidance.com.google.googlenav.map.Tile) -> isTileOnScreenX
    boolean isTileOnScreenY(android_maps_conflict_avoidance.com.google.googlenav.map.Tile) -> isTileOnScreenY
    void load(android_maps_conflict_avoidance.com.google.map.MapPoint,android_maps_conflict_avoidance.com.google.map.Zoom) -> load
    void logIfPreCached(android_maps_conflict_avoidance.com.google.googlenav.map.MapTile) -> logIfPreCached
    void logPerceivedTileLatency(int) -> logPerceivedTileLatency
    void precalculateTiles() -> precalculateTiles
    void updatePerceivedTileLatency(android_maps_conflict_avoidance.com.google.googlenav.map.MapTile) -> updatePerceivedTileLatency
    void updateTopLeftTile(boolean,boolean) -> updateTopLeftTile
    boolean canCover(android_maps_conflict_avoidance.com.google.map.MapPoint,boolean) -> canCover
    boolean canCover(android_maps_conflict_avoidance.com.google.map.MapPoint,boolean,android_maps_conflict_avoidance.com.google.map.Zoom) -> canCover
    void close(boolean) -> close
    boolean drawMap(android_maps_conflict_avoidance.com.google.common.graphics.GoogleGraphics,boolean,boolean,boolean,boolean,boolean) -> drawMap
    android_maps_conflict_avoidance.com.google.map.MapPoint getCenterPoint() -> getCenterPoint
    int getDisplayHeight() -> getDisplayHeight
    int getDisplayWidth() -> getDisplayWidth
    int getHeight() -> getHeight
    int getLatitudeSpan() -> getLatitudeSpan
    int getLatitudeSpan(android_maps_conflict_avoidance.com.google.map.MapState) -> getLatitudeSpan
    int getLongitudeSpan(android_maps_conflict_avoidance.com.google.map.MapState) -> getLongitudeSpan
    android_maps_conflict_avoidance.com.google.map.MapState getMapState() -> getMapState
    int getMaxMapZoomForPoint(android_maps_conflict_avoidance.com.google.map.MapPoint) -> getMaxMapZoomForPoint
    android_maps_conflict_avoidance.com.google.common.geom.Point getPixelOffsetFromCenter(android_maps_conflict_avoidance.com.google.map.MapPoint) -> getPixelOffsetFromCenter
    void getPixelOffsetFromCenter(android_maps_conflict_avoidance.com.google.map.MapPoint,android_maps_conflict_avoidance.com.google.common.geom.Point) -> getPixelOffsetFromCenter
    android_maps_conflict_avoidance.com.google.common.geom.Point getPointXY(android_maps_conflict_avoidance.com.google.map.MapPoint) -> getPointXY
    void getPointXY(android_maps_conflict_avoidance.com.google.map.MapPoint,android_maps_conflict_avoidance.com.google.common.geom.Point) -> getPointXY
    byte getTileFlags() -> getTileFlags
    android_maps_conflict_avoidance.com.google.googlenav.map.Tile getTopLeftTile(int,int) -> getTopLeftTile
    int getWidth() -> getWidth
    android_maps_conflict_avoidance.com.google.map.Zoom getZoom() -> getZoom
    boolean isSatellite() -> isSatellite
    boolean isTileOnScreen(android_maps_conflict_avoidance.com.google.googlenav.map.Tile) -> isTileOnScreen
    void pause() -> pause
    void preLoad(android_maps_conflict_avoidance.com.google.map.MapPoint) -> preLoad
    void resize(int,int) -> resize
    void resize(int,int,int,int) -> resize
    void resume() -> resume
    void saveState() -> saveState
    void setCenterPoint(android_maps_conflict_avoidance.com.google.map.MapPoint) -> setCenterPoint
    void setMapMode(int) -> setMapMode
    void setMapState(android_maps_conflict_avoidance.com.google.map.MapState) -> setMapState
    void setTileOverlayRenderer(android_maps_conflict_avoidance.com.google.googlenav.map.TileOverlayRenderer) -> setTileOverlayRenderer
    void setZoom(android_maps_conflict_avoidance.com.google.map.Zoom) -> setZoom
    void zoomToSpan(int,int) -> zoomToSpan
android_maps_conflict_avoidance.com.google.googlenav.map.Map$BillingPointListener -> android_maps_conflict_avoidance.com.google.googlenav.map.Map$BillingPointListener:
    void billingPointSent(android_maps_conflict_avoidance.com.google.map.MapState) -> billingPointSent
android_maps_conflict_avoidance.com.google.googlenav.map.Map$PixelMapper -> android_maps_conflict_avoidance.com.google.googlenav.map.Map$PixelMapper:
    void transformPoint(android_maps_conflict_avoidance.com.google.common.geom.Point) -> transformPoint
android_maps_conflict_avoidance.com.google.googlenav.map.MapBiller -> android_maps_conflict_avoidance.com.google.googlenav.map.MapBiller:
    android_maps_conflict_avoidance.com.google.map.MapPoint lastBilled -> lastBilled
    android_maps_conflict_avoidance.com.google.map.Zoom lastBilledZoom -> lastBilledZoom
    android_maps_conflict_avoidance.com.google.googlenav.map.Map$BillingPointListener listener -> listener
    android_maps_conflict_avoidance.com.google.map.MapPoint previousBilled -> previousBilled
    android_maps_conflict_avoidance.com.google.map.Zoom previousBilledZoom -> previousBilledZoom
    boolean isBillingRequiredForSatellite() -> isBillingRequiredForSatellite
    void sendBill(android_maps_conflict_avoidance.com.google.map.MapPoint,boolean,boolean,android_maps_conflict_avoidance.com.google.googlenav.map.Map) -> sendBill
    void sendBillingPointToServer(android_maps_conflict_avoidance.com.google.map.MapPoint,boolean,boolean,android_maps_conflict_avoidance.com.google.googlenav.map.Map) -> sendBillingPointToServer
    void doBilling(boolean,boolean,android_maps_conflict_avoidance.com.google.googlenav.map.Map) -> doBilling
android_maps_conflict_avoidance.com.google.googlenav.map.MapFlashService -> android_maps_conflict_avoidance.com.google.googlenav.map.MapFlashService:
    int catalogRecordBytes -> catalogRecordBytes
    boolean catalogUpdatedSinceLastWrite -> catalogUpdatedSinceLastWrite
    java.util.Vector flashRecords -> flashRecords
    int highestRecordId -> highestRecordId
    long lastChangedTime -> lastChangedTime
    android_maps_conflict_avoidance.com.google.googlenav.map.MapService mapService -> mapService
    int maxFlashSize -> maxFlashSize
    int maxRecordBlocks -> maxRecordBlocks
    boolean needsScavenge -> needsScavenge
    long nextPersistTime -> nextPersistTime
    java.lang.String recordStoreBaseName -> recordStoreBaseName
    android_maps_conflict_avoidance.com.google.common.io.PersistentStore store -> store
    int textSize -> textSize
    int tileEdition -> tileEdition
    java.util.Hashtable tileToRecordMap -> tileToRecordMap
    void addToFlashCatalog(android_maps_conflict_avoidance.com.google.googlenav.map.FlashRecord) -> addToFlashCatalog
    boolean canCreateAnEmptyRecordStore() -> canCreateAnEmptyRecordStore
    android_maps_conflict_avoidance.com.google.googlenav.map.FlashRecord fillNewRecord(java.util.Hashtable,int) -> fillNewRecord
    int findRecordIndexByID(int) -> findRecordIndexByID
    android_maps_conflict_avoidance.com.google.googlenav.map.FlashEntry getFlashEntry(android_maps_conflict_avoidance.com.google.googlenav.map.Tile) -> getFlashEntry
    android_maps_conflict_avoidance.com.google.googlenav.map.FlashRecord getFlashRecord(int) -> getFlashRecord
    void handlePersistentStoreWriteException(android_maps_conflict_avoidance.com.google.common.io.PersistentStore$PersistentStoreException,boolean) -> handlePersistentStoreWriteException
    android_maps_conflict_avoidance.com.google.googlenav.map.MapTile loadFlashRecordTile(android_maps_conflict_avoidance.com.google.googlenav.map.FlashRecord,android_maps_conflict_avoidance.com.google.googlenav.map.Tile) -> loadFlashRecordTile
    void persistRecord(android_maps_conflict_avoidance.com.google.googlenav.map.FlashRecord,byte[],int) -> persistRecord
    void readCatalog() -> readCatalog
    void removeFromFlashCatalog(android_maps_conflict_avoidance.com.google.googlenav.map.FlashRecord,int) -> removeFromFlashCatalog
    boolean removeNameFromArray(java.lang.String,java.lang.String[]) -> removeNameFromArray
    void close(boolean) -> close
    int doPersist(java.util.Hashtable) -> doPersist
    void eraseAll() -> eraseAll
    int getFlashRecordsSize() -> getFlashRecordsSize
    android_maps_conflict_avoidance.com.google.googlenav.map.MapTile getMapTile(android_maps_conflict_avoidance.com.google.googlenav.map.Tile) -> getMapTile
    int getNumBlocks() -> getNumBlocks
    int getSize() -> getSize
    void mapChanged() -> mapChanged
    java.lang.String recordBlockName(int) -> recordBlockName
    java.lang.String recordBlockName(android_maps_conflict_avoidance.com.google.googlenav.map.FlashRecord) -> recordBlockName
    boolean scavengeCatalog() -> scavengeCatalog
    boolean setTileEditionAndTextSize(int,int) -> setTileEditionAndTextSize
    boolean writeCache() -> writeCache
    boolean writeCatalog() -> writeCatalog
android_maps_conflict_avoidance.com.google.googlenav.map.MapService -> android_maps_conflict_avoidance.com.google.googlenav.map.MapService:
    boolean autoConfigCache -> autoConfigCache
    android_maps_conflict_avoidance.com.google.googlenav.map.MapService$MapTileRequest currentRequest -> currentRequest
    boolean exitWorkThread -> exitWorkThread
    android_maps_conflict_avoidance.com.google.googlenav.map.MapTileStorage flashService -> flashService
    java.lang.Object indefiniteThreadLockObject -> indefiniteThreadLockObject
    long lastMapMoveTime -> lastMapMoveTime
    java.util.Vector layerImageTiles -> layerImageTiles
    java.util.Vector layerServices -> layerServices
    java.util.Hashtable mapCache -> mapCache
    boolean mapCacheLocked -> mapCacheLocked
    int maxCacheDataSize -> maxCacheDataSize
    android_maps_conflict_avoidance.com.google.googlenav.map.LayerService$TileUpdateObserver observer -> observer
    long outOfMemoryTime -> outOfMemoryTime
    java.util.Vector repaintListeners -> repaintListeners
    int requestType -> requestType
    int requestsOutstanding -> requestsOutstanding
    int targetCacheDataSize -> targetCacheDataSize
    java.util.Hashtable tempScaledImages -> tempScaledImages
    java.lang.Object timedThreadLockObject -> timedThreadLockObject
    void access$000(android_maps_conflict_avoidance.com.google.googlenav.map.MapService) -> access$000
    int access$100(android_maps_conflict_avoidance.com.google.googlenav.map.MapService) -> access$100
    int access$208(android_maps_conflict_avoidance.com.google.googlenav.map.MapService) -> access$208
    int access$210(android_maps_conflict_avoidance.com.google.googlenav.map.MapService) -> access$210
    java.util.Hashtable access$300(android_maps_conflict_avoidance.com.google.googlenav.map.MapService) -> access$300
    java.util.Vector access$400(android_maps_conflict_avoidance.com.google.googlenav.map.MapService) -> access$400
    void addMapEntry(android_maps_conflict_avoidance.com.google.googlenav.map.MapTile) -> addMapEntry
    void clearScaledImages() -> clearScaledImages
    android_maps_conflict_avoidance.com.google.common.graphics.GoogleImage createScaledImage(android_maps_conflict_avoidance.com.google.googlenav.map.Tile) -> createScaledImage
    android_maps_conflict_avoidance.com.google.common.graphics.GoogleImage createScaledImage(android_maps_conflict_avoidance.com.google.googlenav.map.Tile,android_maps_conflict_avoidance.com.google.googlenav.map.Tile,android_maps_conflict_avoidance.com.google.common.graphics.GoogleImage) -> createScaledImage
    void doCompact(boolean) -> doCompact
    android_maps_conflict_avoidance.com.google.common.graphics.GoogleImage getOrCreateScaledImage(android_maps_conflict_avoidance.com.google.googlenav.map.Tile) -> getOrCreateScaledImage
    long getRelativeTime() -> getRelativeTime
    android_maps_conflict_avoidance.com.google.common.graphics.GoogleImage getScaledImageFromCache(android_maps_conflict_avoidance.com.google.googlenav.map.Tile) -> getScaledImageFromCache
    long getScore(android_maps_conflict_avoidance.com.google.googlenav.map.Tile,long,long) -> getScore
    android_maps_conflict_avoidance.com.google.common.graphics.GoogleImage getTempImage(android_maps_conflict_avoidance.com.google.googlenav.map.Tile,int) -> getTempImage
    int partition(long[],android_maps_conflict_avoidance.com.google.googlenav.map.Tile[],int,int,int) -> partition
    void qsort(long[],android_maps_conflict_avoidance.com.google.googlenav.map.Tile[],int,int) -> qsort
    void queueTileRequest(android_maps_conflict_avoidance.com.google.googlenav.map.MapTile,int) -> queueTileRequest
    void setAutoTargetCacheSize() -> setAutoTargetCacheSize
    void sort(long[],android_maps_conflict_avoidance.com.google.googlenav.map.Tile[]) -> sort
    void startWorkThread() -> startWorkThread
    void stopWorkThread() -> stopWorkThread
    void swap(long[],android_maps_conflict_avoidance.com.google.googlenav.map.Tile[],int,int) -> swap
    void trimCache(int) -> trimCache
    void checkTrimCache() -> checkTrimCache
    void close(boolean) -> close
    int getCacheSize() -> getCacheSize
    java.util.Vector getLayerTiles(android_maps_conflict_avoidance.com.google.googlenav.map.Tile,boolean) -> getLayerTiles
    java.util.Hashtable getMapCache() -> getMapCache
    int getRenderedImageCount() -> getRenderedImageCount
    android_maps_conflict_avoidance.com.google.googlenav.map.Tile[] getSortedCacheList() -> getSortedCacheList
    android_maps_conflict_avoidance.com.google.googlenav.map.MapTile getTile(android_maps_conflict_avoidance.com.google.googlenav.map.Tile,int,boolean,int,long) -> getTile
    android_maps_conflict_avoidance.com.google.googlenav.map.MapTile getTile(android_maps_conflict_avoidance.com.google.googlenav.map.Tile,int,boolean,boolean) -> getTile
    android_maps_conflict_avoidance.com.google.googlenav.map.MapTile getTile(android_maps_conflict_avoidance.com.google.googlenav.map.Tile,int,boolean,boolean,long) -> getTile
    long getTileDate(android_maps_conflict_avoidance.com.google.googlenav.map.Tile) -> getTileDate
    void handleOutOfMemory(boolean) -> handleOutOfMemory
    void mapChanged() -> mapChanged
    void notifyLayerTilesDirty() -> notifyLayerTilesDirty
    void pause() -> pause
    void requestLayerTiles() -> requestLayerTiles
    boolean requestTiles() -> requestTiles
    int restoreBaseImagesIfNeeded() -> restoreBaseImagesIfNeeded
    void resume() -> resume
    void run() -> run
    void setMapCacheLocked(boolean) -> setMapCacheLocked
    void setTileEditionAndTextSize(int,int) -> setTileEditionAndTextSize
android_maps_conflict_avoidance.com.google.googlenav.map.MapService$1 -> android_maps_conflict_avoidance.com.google.googlenav.map.MapService$1:
    android_maps_conflict_avoidance.com.google.googlenav.map.MapService this$0 -> this$0
    void run() -> run
android_maps_conflict_avoidance.com.google.googlenav.map.MapService$MapTileRequest -> android_maps_conflict_avoidance.com.google.googlenav.map.MapService$MapTileRequest:
    boolean closed -> closed
    boolean isForeground -> isForeground
    android_maps_conflict_avoidance.com.google.googlenav.map.MapService this$0 -> this$0
    java.util.Vector tilePriorityList -> tilePriorityList
    java.util.Vector tileSchedule -> tileSchedule
    void handleEndOfResponse(int) -> handleEndOfResponse
    boolean isForeground() -> isForeground
    boolean processDownloadedTile(int,android_maps_conflict_avoidance.com.google.googlenav.map.Tile,byte[]) -> processDownloadedTile
    boolean readResponseData(java.io.DataInput) -> readResponseData
    void requestTile(android_maps_conflict_avoidance.com.google.googlenav.map.MapTile,int) -> requestTile
    void setTileEditionAndTextSize(int,int) -> setTileEditionAndTextSize
    void writeRequestData(java.io.DataOutput) -> writeRequestData
android_maps_conflict_avoidance.com.google.googlenav.map.MapTile -> android_maps_conflict_avoidance.com.google.googlenav.map.MapTile:
    byte[] CJPG_HEADER -> CJPG_HEADER
    byte[] LAYER_DATA_HEADER -> LAYER_DATA_HEADER
    android_maps_conflict_avoidance.com.google.common.graphics.GoogleImage loadingImage -> loadingImage
    android_maps_conflict_avoidance.com.google.common.graphics.GoogleImage notAvailableImage -> notAvailableImage
    android_maps_conflict_avoidance.com.google.common.graphics.GoogleImage notLoadingImage -> notLoadingImage
    int textSize -> textSize
    java.util.Hashtable unicolorTiles -> unicolorTiles
    android_maps_conflict_avoidance.com.google.common.graphics.GoogleImage baseMapImage -> baseMapImage
    int completePaintCount -> completePaintCount
    byte[] data -> data
    long firstPaintTime -> firstPaintTime
    boolean hasScaledImage -> hasScaledImage
    int imageVersion -> imageVersion
    boolean isBaseMapImageRecyclable -> isBaseMapImageRecyclable
    boolean isMapImageRecyclable -> isMapImageRecyclable
    boolean isPreCached -> isPreCached
    boolean isTemp -> isTemp
    long lastAccessTime -> lastAccessTime
    long lastPaintTime -> lastPaintTime
    android_maps_conflict_avoidance.com.google.googlenav.map.LayerTile layerTile -> layerTile
    android_maps_conflict_avoidance.com.google.googlenav.map.Tile location -> location
    android_maps_conflict_avoidance.com.google.common.graphics.GoogleImage mapImage -> mapImage
    boolean requested -> requested
    void createTempImages() -> createTempImages
    boolean equalBytes(byte[],int,byte[]) -> equalBytes
    byte[] extractLayerTileAndImageData() -> extractLayerTileAndImageData
    android_maps_conflict_avoidance.com.google.common.graphics.GoogleImage getImageFromCjpg(byte[]) -> getImageFromCjpg
    android_maps_conflict_avoidance.com.google.common.graphics.GoogleImage getImageFromUnicolor(byte[]) -> getImageFromUnicolor
    android_maps_conflict_avoidance.com.google.common.graphics.GoogleImage getNotAvailableImage() -> getNotAvailableImage
    android_maps_conflict_avoidance.com.google.common.graphics.GoogleImage getTempImage() -> getTempImage
    int getTextSize() -> getTextSize
    android_maps_conflict_avoidance.com.google.googlenav.map.MapTile read(java.io.DataInput) -> read
    void setBaseMapImage(android_maps_conflict_avoidance.com.google.common.graphics.GoogleImage,boolean) -> setBaseMapImage
    void setMapImage(android_maps_conflict_avoidance.com.google.common.graphics.GoogleImage,boolean) -> setMapImage
    void setTextSize(int) -> setTextSize
    void verifyTileDimensions(android_maps_conflict_avoidance.com.google.common.graphics.GoogleImage) -> verifyTileDimensions
    void compact() -> compact
    void createImage() -> createImage
    boolean equals(java.lang.Object) -> equals
    int getCompletePaintCount() -> getCompletePaintCount
    int getDataSize() -> getDataSize
    long getFirstPaintTime() -> getFirstPaintTime
    android_maps_conflict_avoidance.com.google.common.graphics.GoogleImage getImage() -> getImage
    android_maps_conflict_avoidance.com.google.common.graphics.GoogleImage getImage(long) -> getImage
    int getImageVersion() -> getImageVersion
    boolean getIsPreCached() -> getIsPreCached
    long getLastAccessTime() -> getLastAccessTime
    android_maps_conflict_avoidance.com.google.googlenav.map.Tile getLocation() -> getLocation
    boolean getRequested() -> getRequested
    boolean hasImage() -> hasImage
    boolean hasRenderedImage() -> hasRenderedImage
    boolean hasScaledImage() -> hasScaledImage
    int hashCode() -> hashCode
    boolean isComplete() -> isComplete
    void removeScaledImage() -> removeScaledImage
    void restoreBaseImage() -> restoreBaseImage
    void setData(byte[]) -> setData
    void setImage(android_maps_conflict_avoidance.com.google.common.graphics.GoogleImage,int,boolean) -> setImage
    void setImageVersion(int) -> setImageVersion
    void setLastAccessTime(long) -> setLastAccessTime
    void setPaint(long,long) -> setPaint
    void setRequested(boolean) -> setRequested
    java.lang.String toString() -> toString
    void write(java.io.DataOutput) -> write
android_maps_conflict_avoidance.com.google.googlenav.map.MapTileStorage -> android_maps_conflict_avoidance.com.google.googlenav.map.MapTileStorage:
    void close(boolean) -> close
    android_maps_conflict_avoidance.com.google.googlenav.map.MapTile getMapTile(android_maps_conflict_avoidance.com.google.googlenav.map.Tile) -> getMapTile
    void mapChanged() -> mapChanged
    boolean setTileEditionAndTextSize(int,int) -> setTileEditionAndTextSize
    boolean writeCache() -> writeCache
android_maps_conflict_avoidance.com.google.googlenav.map.NullMapTileStorage -> android_maps_conflict_avoidance.com.google.googlenav.map.NullMapTileStorage:
    int textSize -> textSize
    int tileEdition -> tileEdition
    void close(boolean) -> close
    android_maps_conflict_avoidance.com.google.googlenav.map.MapTile getMapTile(android_maps_conflict_avoidance.com.google.googlenav.map.Tile) -> getMapTile
    void mapChanged() -> mapChanged
    boolean setTileEditionAndTextSize(int,int) -> setTileEditionAndTextSize
    boolean writeCache() -> writeCache
android_maps_conflict_avoidance.com.google.googlenav.map.Tile -> android_maps_conflict_avoidance.com.google.googlenav.map.Tile:
    int[] CACHE_SIZES -> CACHE_SIZES
    android_maps_conflict_avoidance.com.google.googlenav.map.Tile[] tileObjectCache -> tileObjectCache
    int tileObjectCacheSize -> tileObjectCacheSize
    byte flags -> flags
    int hashCode -> hashCode
    int xIndex -> xIndex
    int yIndex -> yIndex
    android_maps_conflict_avoidance.com.google.map.Zoom zoom -> zoom
    int calculateHashCode(int,int,android_maps_conflict_avoidance.com.google.map.Zoom,int) -> calculateHashCode
    int getCacheSizeFromMinCacheSize(int) -> getCacheSizeFromMinCacheSize
    byte getSatType() -> getSatType
    android_maps_conflict_avoidance.com.google.googlenav.map.Tile getTile(byte,int,int,android_maps_conflict_avoidance.com.google.map.Zoom) -> getTile
    android_maps_conflict_avoidance.com.google.googlenav.map.Tile getTile(byte,android_maps_conflict_avoidance.com.google.googlenav.map.Tile) -> getTile
    android_maps_conflict_avoidance.com.google.googlenav.map.Tile getTile(byte,android_maps_conflict_avoidance.com.google.map.MapPoint,android_maps_conflict_avoidance.com.google.map.Zoom) -> getTile
    int getXTileIndex(android_maps_conflict_avoidance.com.google.map.MapPoint,android_maps_conflict_avoidance.com.google.map.Zoom) -> getXTileIndex
    int getYTileIndex(android_maps_conflict_avoidance.com.google.map.MapPoint,android_maps_conflict_avoidance.com.google.map.Zoom) -> getYTileIndex
    void initializeTileObjectCache(int) -> initializeTileObjectCache
    android_maps_conflict_avoidance.com.google.googlenav.map.Tile read(java.io.DataInput) -> read
    boolean equals(java.lang.Object) -> equals
    byte getFlags() -> getFlags
    int getXIndex() -> getXIndex
    int getXPixelTopLeft() -> getXPixelTopLeft
    int getYIndex() -> getYIndex
    int getYPixelTopLeft() -> getYPixelTopLeft
    android_maps_conflict_avoidance.com.google.map.Zoom getZoom() -> getZoom
    android_maps_conflict_avoidance.com.google.googlenav.map.Tile getZoomParent() -> getZoomParent
    int hashCode() -> hashCode
    boolean notValid() -> notValid
    java.lang.String toString() -> toString
    android_maps_conflict_avoidance.com.google.googlenav.map.Tile toTraffic() -> toTraffic
    void write(java.io.DataOutput) -> write
android_maps_conflict_avoidance.com.google.googlenav.map.TileOverlayRenderer -> android_maps_conflict_avoidance.com.google.googlenav.map.TileOverlayRenderer:
    void begin() -> begin
    void end() -> end
    boolean renderTile(android_maps_conflict_avoidance.com.google.googlenav.map.MapTile,boolean) -> renderTile
android_maps_conflict_avoidance.com.google.googlenav.map.TrafficRenderer -> android_maps_conflict_avoidance.com.google.googlenav.map.TrafficRenderer:
    void drawRoadBackgroundLines(android_maps_conflict_avoidance.com.google.googlenav.map.TrafficRoad[],android_maps_conflict_avoidance.com.google.googlenav.map.TrafficRenderer$TrafficPainter) -> drawRoadBackgroundLines
    void drawRoadForegroundLines(android_maps_conflict_avoidance.com.google.googlenav.map.TrafficRoad[],android_maps_conflict_avoidance.com.google.googlenav.map.TrafficRenderer$TrafficPainter) -> drawRoadForegroundLines
    int getColor(android_maps_conflict_avoidance.com.google.googlenav.map.TrafficRoad,int) -> getColor
    void addPathPoint(android_maps_conflict_avoidance.com.google.googlenav.map.TrafficRenderer$Path,android_maps_conflict_avoidance.com.google.googlenav.map.TrafficRoad,int,boolean) -> addPathPoint
    android_maps_conflict_avoidance.com.google.googlenav.map.TrafficRenderer$Path initPath(android_maps_conflict_avoidance.com.google.googlenav.map.TrafficRenderer$TrafficPainter,android_maps_conflict_avoidance.com.google.googlenav.map.TrafficRoad,int) -> initPath
    void renderTrafficTile(android_maps_conflict_avoidance.com.google.googlenav.map.TrafficTile,android_maps_conflict_avoidance.com.google.googlenav.map.TrafficRenderer$TrafficPainter) -> renderTrafficTile
android_maps_conflict_avoidance.com.google.googlenav.map.TrafficRenderer$Path -> android_maps_conflict_avoidance.com.google.googlenav.map.TrafficRenderer$Path:
    void lineTo(int,int) -> lineTo
    void moveTo(int,int) -> moveTo
android_maps_conflict_avoidance.com.google.googlenav.map.TrafficRenderer$TrafficPainter -> android_maps_conflict_avoidance.com.google.googlenav.map.TrafficRenderer$TrafficPainter:
    void addTrafficLine(android_maps_conflict_avoidance.com.google.googlenav.map.TrafficRenderer$Path,int,int) -> addTrafficLine
    android_maps_conflict_avoidance.com.google.googlenav.map.TrafficRenderer$Path createPathObject() -> createPathObject
android_maps_conflict_avoidance.com.google.googlenav.map.TrafficRoad -> android_maps_conflict_avoidance.com.google.googlenav.map.TrafficRoad:
    byte[] roadContent -> roadContent
    int readShortFrom(byte[],int) -> readShortFrom
    android_maps_conflict_avoidance.com.google.googlenav.map.TrafficRoad readTrafficRoad(java.io.DataInput,int,int) -> readTrafficRoad
    int writeShortTo(int,byte[],int) -> writeShortTo
    int getNumPoints() -> getNumPoints
    int getSpeedCategory(int) -> getSpeedCategory
    int getTrafficLineBackgroundWidth() -> getTrafficLineBackgroundWidth
    int getTrafficLineWidth() -> getTrafficLineWidth
    int getXOffset(int) -> getXOffset
    int getYOffset(int) -> getYOffset
android_maps_conflict_avoidance.com.google.googlenav.map.TrafficService -> android_maps_conflict_avoidance.com.google.googlenav.map.TrafficService:
    android_maps_conflict_avoidance.com.google.googlenav.map.TrafficRoad[] EMPTY_TRAFFICROAD_ARRAY -> EMPTY_TRAFFICROAD_ARRAY
    java.util.Hashtable cache -> cache
    long nextRefreshTime -> nextRefreshTime
    long refreshMillis -> refreshMillis
    android_maps_conflict_avoidance.com.google.googlenav.map.TrafficService$TrafficTileRequest request -> request
    java.util.Hashtable requestedTiles -> requestedTiles
    boolean stopCleanCache -> stopCleanCache
    android_maps_conflict_avoidance.com.google.common.task.TimerTask timerTask -> timerTask
    java.util.Hashtable access$000(android_maps_conflict_avoidance.com.google.googlenav.map.TrafficService) -> access$000
    android_maps_conflict_avoidance.com.google.googlenav.map.TrafficRoad[] access$100() -> access$100
    java.util.Hashtable access$200(android_maps_conflict_avoidance.com.google.googlenav.map.TrafficService) -> access$200
    void access$300(android_maps_conflict_avoidance.com.google.googlenav.map.TrafficService) -> access$300
    void notifyDownloadedTile() -> notifyDownloadedTile
    void requestTile(android_maps_conflict_avoidance.com.google.googlenav.map.Tile,android_maps_conflict_avoidance.com.google.googlenav.map.TrafficTile) -> requestTile
    void cleanCache(long) -> cleanCache
    void close() -> close
    android_maps_conflict_avoidance.com.google.googlenav.map.TrafficTile getTile(android_maps_conflict_avoidance.com.google.googlenav.map.Tile,boolean) -> getTile
    void handleOutOfMemory(boolean) -> handleOutOfMemory
    void requestTiles() -> requestTiles
    void run() -> run
    void start() -> start
    void stop() -> stop
android_maps_conflict_avoidance.com.google.googlenav.map.TrafficService$TrafficTileRequest -> android_maps_conflict_avoidance.com.google.googlenav.map.TrafficService$TrafficTileRequest:
    android_maps_conflict_avoidance.com.google.googlenav.map.TrafficService this$0 -> this$0
    java.util.Vector tiles -> tiles
    void addTile(android_maps_conflict_avoidance.com.google.googlenav.map.TrafficTile) -> addTile
    void handleEndOfResponse(int) -> handleEndOfResponse
    boolean processDownloadedTile(int,android_maps_conflict_avoidance.com.google.googlenav.map.Tile,byte[]) -> processDownloadedTile
    void setTileEditionAndTextSize(int,int) -> setTileEditionAndTextSize
    void writeRequestData(java.io.DataOutput) -> writeRequestData
android_maps_conflict_avoidance.com.google.googlenav.map.TrafficTile -> android_maps_conflict_avoidance.com.google.googlenav.map.TrafficTile:
    long dataTime -> dataTime
    long lastAccess -> lastAccess
    android_maps_conflict_avoidance.com.google.googlenav.map.Tile location -> location
    android_maps_conflict_avoidance.com.google.googlenav.map.TrafficRoad[] roads -> roads
    long getDataTime() -> getDataTime
    long getLastAccess() -> getLastAccess
    android_maps_conflict_avoidance.com.google.googlenav.map.Tile getLocation() -> getLocation
    android_maps_conflict_avoidance.com.google.googlenav.map.TrafficRoad[] getTrafficRoads() -> getTrafficRoads
    boolean isComplete() -> isComplete
    boolean isEmpty() -> isEmpty
    void readData(byte[]) -> readData
    void setData(long,android_maps_conflict_avoidance.com.google.googlenav.map.TrafficRoad[]) -> setData
    void setLastAccess(long) -> setLastAccess
android_maps_conflict_avoidance.com.google.googlenav.proto.GmmMessageTypes -> android_maps_conflict_avoidance.com.google.googlenav.proto.GmmMessageTypes:
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType ACCEPT_PUBLIC_UPDATE_TERMS_REQUEST_PAYLOAD -> ACCEPT_PUBLIC_UPDATE_TERMS_REQUEST_PAYLOAD
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType ACCEPT_PUBLIC_UPDATE_TERMS_RESPONSE -> ACCEPT_PUBLIC_UPDATE_TERMS_RESPONSE
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType ACTIVITY -> ACTIVITY
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType ACTIVITY_FRIEND -> ACTIVITY_FRIEND
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType AD_EVENT_REPORT_REQUEST_PROTO -> AD_EVENT_REPORT_REQUEST_PROTO
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType AD_EVENT_REPORT_RESPONSE_PROTO -> AD_EVENT_REPORT_RESPONSE_PROTO
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType AD_LAYER -> AD_LAYER
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType BATCH_SPEECH_REQUEST_PROTO -> BATCH_SPEECH_REQUEST_PROTO
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType BATCH_SPEECH_RESPONSE_PROTO -> BATCH_SPEECH_RESPONSE_PROTO
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType BATTERY_STEP -> BATTERY_STEP
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType BATTERY_STEP_SETTING -> BATTERY_STEP_SETTING
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType BATTERY_STEP_SETTINGS -> BATTERY_STEP_SETTINGS
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType BUZZ_LAYER_SNIPPET -> BUZZ_LAYER_SNIPPET
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType BUZZ_USER_STATE_PROTO -> BUZZ_USER_STATE_PROTO
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType CAPTCHA_REQUEST_PROTO -> CAPTCHA_REQUEST_PROTO
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType CAPTCHA_RESPONSE_PROTO -> CAPTCHA_RESPONSE_PROTO
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType CATEGORY_INFO_LIST_PROTO -> CATEGORY_INFO_LIST_PROTO
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType CATEGORY_INFO_PROTO -> CATEGORY_INFO_PROTO
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType CATEGORY_TREE_INNER_NODE_PROTO -> CATEGORY_TREE_INNER_NODE_PROTO
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType CLICKABLE_AREA_PROTO -> CLICKABLE_AREA_PROTO
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType CLIENT_CAPABILITIES_PROTO -> CLIENT_CAPABILITIES_PROTO
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType CLIENT_CATEGORY_HISTORY_PROTO -> CLIENT_CATEGORY_HISTORY_PROTO
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType CLIENT_FEATURE_PROTO -> CLIENT_FEATURE_PROTO
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType CLIENT_INFO_MATCH_PROTO -> CLIENT_INFO_MATCH_PROTO
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType CLIENT_LATITUDE_WIDGET_MODEL_PROTO -> CLIENT_LATITUDE_WIDGET_MODEL_PROTO
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType CLIENT_LAYER_MANAGER_STATE_PROTO -> CLIENT_LAYER_MANAGER_STATE_PROTO
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType CLIENT_PARAMETERS_REQUEST_PROTO -> CLIENT_PARAMETERS_REQUEST_PROTO
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType CLIENT_PARAMETERS_RESPONSE_PROTO -> CLIENT_PARAMETERS_RESPONSE_PROTO
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType CLIENT_POST_UPDATE_WIZARD_STATE_PROTO -> CLIENT_POST_UPDATE_WIZARD_STATE_PROTO
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType CLIENT_PROPERTIES_REQUEST_PROTO -> CLIENT_PROPERTIES_REQUEST_PROTO
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType CLIENT_PROPERTIES_RESPONSE_PROTO -> CLIENT_PROPERTIES_RESPONSE_PROTO
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType CLIENT_REQUIREMENTS_PROTO -> CLIENT_REQUIREMENTS_PROTO
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType CLIENT_SAVED_ACTIVITY_FULL_PREFS_PROTO -> CLIENT_SAVED_ACTIVITY_FULL_PREFS_PROTO
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType CLIENT_SAVED_DIRECTIONS_PROTO -> CLIENT_SAVED_DIRECTIONS_PROTO
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType CLIENT_SAVED_FRIENDS_MINIMAL_SETTINGS_PROTO -> CLIENT_SAVED_FRIENDS_MINIMAL_SETTINGS_PROTO
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType CLIENT_SAVED_FRIENDS_PROTO -> CLIENT_SAVED_FRIENDS_PROTO
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType CLIENT_SAVED_FRIEND_PHOTOS_PROTO -> CLIENT_SAVED_FRIEND_PHOTOS_PROTO
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType CLIENT_SAVED_GAIA_ACCOUNT_STATE_PROTO -> CLIENT_SAVED_GAIA_ACCOUNT_STATE_PROTO
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType CLIENT_SAVED_OPTION_PROTO -> CLIENT_SAVED_OPTION_PROTO
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType CLIENT_SAVED_PHOTO_CACHE_INDEX -> CLIENT_SAVED_PHOTO_CACHE_INDEX
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType CLIENT_SAVED_SEARCH_PROTO -> CLIENT_SAVED_SEARCH_PROTO
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType CLIENT_WAYPOINT_HISTORY_PROTO -> CLIENT_WAYPOINT_HISTORY_PROTO
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType CLIENT_WAYPOINT_INFO_PROTO -> CLIENT_WAYPOINT_INFO_PROTO
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType CLIENT_WIZARD_MANAGER_STATE_PROTO -> CLIENT_WIZARD_MANAGER_STATE_PROTO
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType COMMENT -> COMMENT
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType COUNTRY_TO_TREE_MAP_PROTO -> COUNTRY_TO_TREE_MAP_PROTO
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType COUPON_PROTO -> COUPON_PROTO
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType CREATE_ACTIVITY_REQUEST_PAYLOAD -> CREATE_ACTIVITY_REQUEST_PAYLOAD
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType CREATE_ACTIVITY_REQUEST_PROTO -> CREATE_ACTIVITY_REQUEST_PROTO
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType CREATE_ACTIVITY_RESPONSE -> CREATE_ACTIVITY_RESPONSE
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType CREATE_ACTIVITY_RESPONSE_PROTO -> CREATE_ACTIVITY_RESPONSE_PROTO
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType CREATE_COMMENT_REQUEST_PAYLOAD -> CREATE_COMMENT_REQUEST_PAYLOAD
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType CREATE_COMMENT_REQUEST_PROTO -> CREATE_COMMENT_REQUEST_PROTO
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType CREATE_COMMENT_RESPONSE -> CREATE_COMMENT_RESPONSE
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType CREATE_COMMENT_RESPONSE_PROTO -> CREATE_COMMENT_RESPONSE_PROTO
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType CREATE_RALLY_POINT_REQUEST_PROTO -> CREATE_RALLY_POINT_REQUEST_PROTO
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType CREATE_RALLY_POINT_RESPONSE_PROTO -> CREATE_RALLY_POINT_RESPONSE_PROTO
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType CURRENT_MOTION_PROTO -> CURRENT_MOTION_PROTO
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType DATA_REQUEST_PROTO -> DATA_REQUEST_PROTO
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType DATE_TIME_PROTO -> DATE_TIME_PROTO
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType DELETE_RALLY_POINT_REQUEST_PROTO -> DELETE_RALLY_POINT_REQUEST_PROTO
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType DELETE_RALLY_POINT_RESPONSE_PROTO -> DELETE_RALLY_POINT_RESPONSE_PROTO
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType DEPARTURE_PROTO -> DEPARTURE_PROTO
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType DETAIL_ITEM -> DETAIL_ITEM
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType DIRECTIONS_ALERT_PROTO -> DIRECTIONS_ALERT_PROTO
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType DIRECTIONS_ICON_REQUEST_PROTO -> DIRECTIONS_ICON_REQUEST_PROTO
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType DIRECTIONS_ICON_RESPONSE_PROTO -> DIRECTIONS_ICON_RESPONSE_PROTO
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType DIRECTIONS_NOTE_PROTO -> DIRECTIONS_NOTE_PROTO
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType DIRECTIONS_OPTION_DEFINITION_PROTO -> DIRECTIONS_OPTION_DEFINITION_PROTO
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType DIRECTIONS_OPTION_REQUEST_PROTO -> DIRECTIONS_OPTION_REQUEST_PROTO
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType DIRECTIONS_OPTION_RESPONSE_PROTO -> DIRECTIONS_OPTION_RESPONSE_PROTO
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType DIRECTIONS_OPTION_VALUE_PROTO -> DIRECTIONS_OPTION_VALUE_PROTO
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType DIRECTIONS_REQUEST_PROTO -> DIRECTIONS_REQUEST_PROTO
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType DIRECTIONS_RESPONSE_PROTO -> DIRECTIONS_RESPONSE_PROTO
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType DIRECTIONS_STEP_CUE_PROTO -> DIRECTIONS_STEP_CUE_PROTO
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType DIRECTIONS_STEP_INFO -> DIRECTIONS_STEP_INFO
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType DIRECTIONS_TRAFFIC_SPAN -> DIRECTIONS_TRAFFIC_SPAN
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType DISMISS_SUGGESTED_FRIEND_REQUEST_PROTO -> DISMISS_SUGGESTED_FRIEND_REQUEST_PROTO
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType DISMISS_SUGGESTED_FRIEND_RESPONSE_PROTO -> DISMISS_SUGGESTED_FRIEND_RESPONSE_PROTO
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType DOCUMENT_INFO_PROTO -> DOCUMENT_INFO_PROTO
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType EFFICIENT_MAP_POINT_PROTO -> EFFICIENT_MAP_POINT_PROTO
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType EMAIL_OPTIONS -> EMAIL_OPTIONS
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType ENABLE_FEATURE_PARAMETERS_PROTO -> ENABLE_FEATURE_PARAMETERS_PROTO
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType EXPORTABLE_INTERSECTION -> EXPORTABLE_INTERSECTION
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType EXPORTABLE_PGRAPH -> EXPORTABLE_PGRAPH
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType EXPORTABLE_ROUTE_NAME -> EXPORTABLE_ROUTE_NAME
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType EXPORTABLE_SEGMENT -> EXPORTABLE_SEGMENT
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType EXPORTABLE_SHARED_SEGMENT -> EXPORTABLE_SHARED_SEGMENT
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType EXPORTABLE_SIGN_NAME -> EXPORTABLE_SIGN_NAME
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType FEATURE_RANGE -> FEATURE_RANGE
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType FEATURE_RESTRICTIONS_PROTO -> FEATURE_RESTRICTIONS_PROTO
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType FEATURE_RESTRICTIONS_REQUEST_PROTO -> FEATURE_RESTRICTIONS_REQUEST_PROTO
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType FEATURE_RESTRICTIONS_RESPONSE_PROTO -> FEATURE_RESTRICTIONS_RESPONSE_PROTO
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType FEEDBACK_PROTO -> FEEDBACK_PROTO
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType FRIEND_ENTRY -> FRIEND_ENTRY
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType FRIEND_PROFILE -> FRIEND_PROFILE
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType GAIA_RESPONSE_PROTO -> GAIA_RESPONSE_PROTO
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType GEOMETRY_PROTO -> GEOMETRY_PROTO
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType GET_ACTIVITY_REQUEST_PAYLOAD -> GET_ACTIVITY_REQUEST_PAYLOAD
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType GET_ACTIVITY_REQUEST_PROTO -> GET_ACTIVITY_REQUEST_PROTO
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType GET_ACTIVITY_RESPONSE -> GET_ACTIVITY_RESPONSE
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType GET_ACTIVITY_RESPONSE_PROTO -> GET_ACTIVITY_RESPONSE_PROTO
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType GET_ACTIVITY_STREAM_REQUEST_PAYLOAD -> GET_ACTIVITY_STREAM_REQUEST_PAYLOAD
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType GET_ACTIVITY_STREAM_REQUEST_PROTO -> GET_ACTIVITY_STREAM_REQUEST_PROTO
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType GET_ACTIVITY_STREAM_RESPONSE -> GET_ACTIVITY_STREAM_RESPONSE
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType GET_ACTIVITY_STREAM_RESPONSE_PROTO -> GET_ACTIVITY_STREAM_RESPONSE_PROTO
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType GET_FRIENDS_LOCATIONS_REQUEST_PROTO -> GET_FRIENDS_LOCATIONS_REQUEST_PROTO
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType GET_FRIENDS_LOCATIONS_RESPONSE_PROTO -> GET_FRIENDS_LOCATIONS_RESPONSE_PROTO
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType GET_FRIENDS_PROFILES_REQUEST_PROTO -> GET_FRIENDS_PROFILES_REQUEST_PROTO
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType GET_FRIENDS_PROFILES_RESPONSE_PROTO -> GET_FRIENDS_PROFILES_RESPONSE_PROTO
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType GET_FRIEND_FINDER_USERS_REQUEST_PROTO -> GET_FRIEND_FINDER_USERS_REQUEST_PROTO
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType GET_FRIEND_FINDER_USERS_RESPONSE_PROTO -> GET_FRIEND_FINDER_USERS_RESPONSE_PROTO
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType GET_INVITE_CONTACT_LIST_REQUEST_PROTO -> GET_INVITE_CONTACT_LIST_REQUEST_PROTO
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType GET_INVITE_CONTACT_LIST_RESPONSE_PROTO -> GET_INVITE_CONTACT_LIST_RESPONSE_PROTO
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType GET_INVITE_GROUP_LIST_REQUEST_PROTO -> GET_INVITE_GROUP_LIST_REQUEST_PROTO
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType GET_INVITE_GROUP_LIST_RESPONSE_PROTO -> GET_INVITE_GROUP_LIST_RESPONSE_PROTO
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType GET_PRODUCTION_STREAM_REQUEST_PAYLOAD -> GET_PRODUCTION_STREAM_REQUEST_PAYLOAD
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType GET_PRODUCTION_STREAM_REQUEST_PROTO -> GET_PRODUCTION_STREAM_REQUEST_PROTO
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType GET_PRODUCTION_STREAM_RESPONSE_PROTO -> GET_PRODUCTION_STREAM_RESPONSE_PROTO
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType GET_RALLY_POINTS_FOR_USER_REQUEST_PROTO -> GET_RALLY_POINTS_FOR_USER_REQUEST_PROTO
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType GET_RALLY_POINTS_FOR_USER_RESPONSE_PROTO -> GET_RALLY_POINTS_FOR_USER_RESPONSE_PROTO
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType GET_RALLY_POINT_REQUEST_PROTO -> GET_RALLY_POINT_REQUEST_PROTO
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType GET_RALLY_POINT_RESPONSE_PROTO -> GET_RALLY_POINT_RESPONSE_PROTO
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType GET_SUGGESTED_FRIEND_LIST_REQUEST_PROTO -> GET_SUGGESTED_FRIEND_LIST_REQUEST_PROTO
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType GET_SUGGESTED_FRIEND_LIST_RESPONSE_PROTO -> GET_SUGGESTED_FRIEND_LIST_RESPONSE_PROTO
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType GET_USER_PROFILE_REQUEST_PAYLOAD -> GET_USER_PROFILE_REQUEST_PAYLOAD
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType GET_USER_PROFILE_REQUEST_PROTO -> GET_USER_PROFILE_REQUEST_PROTO
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType GET_USER_PROFILE_RESPONSE -> GET_USER_PROFILE_RESPONSE
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType GET_USER_PROFILE_RESPONSE_PROTO -> GET_USER_PROFILE_RESPONSE_PROTO
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType GET_USER_STATE_REQUEST_PROTO -> GET_USER_STATE_REQUEST_PROTO
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType GET_USER_STATE_RESPONSE_PROTO -> GET_USER_STATE_RESPONSE_PROTO
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType GUIDANCE_EVENT_PROTO -> GUIDANCE_EVENT_PROTO
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType HAS_ACCEPTED_PUBLIC_UPDATE_TERMS_REQUEST_PAYLOAD -> HAS_ACCEPTED_PUBLIC_UPDATE_TERMS_REQUEST_PAYLOAD
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType HAS_ACCEPTED_PUBLIC_UPDATE_TERMS_RESPONSE -> HAS_ACCEPTED_PUBLIC_UPDATE_TERMS_RESPONSE
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType HOTPOT_UPDATE -> HOTPOT_UPDATE
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType HOTPOT_UPDATE_PARAM -> HOTPOT_UPDATE_PARAM
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType IMAGE_PROTO -> IMAGE_PROTO
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType IMPLICIT_LOCATION_PROTO -> IMPLICIT_LOCATION_PROTO
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType INVITE_GROUP_ID_PROTO -> INVITE_GROUP_ID_PROTO
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType JOIN_EXPERIMENTS_REQUEST_PROTO -> JOIN_EXPERIMENTS_REQUEST_PROTO
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType JOIN_EXPERIMENTS_RESPONSE_PROTO -> JOIN_EXPERIMENTS_RESPONSE_PROTO
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType JUSTIFICATION -> JUSTIFICATION
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType LAYER_CATEGORY_REQUEST_PROTO -> LAYER_CATEGORY_REQUEST_PROTO
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType LAYER_CATEGORY_RESPONSE_PROTO -> LAYER_CATEGORY_RESPONSE_PROTO
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType LAYER_EVENT_REPORT_REQUEST_PROTO -> LAYER_EVENT_REPORT_REQUEST_PROTO
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType LAYER_EVENT_REPORT_RESPONSE_PROTO -> LAYER_EVENT_REPORT_RESPONSE_PROTO
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType LAYER_INFO_PROTO -> LAYER_INFO_PROTO
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType LAYER_ITEM_DETAIL_PROTO -> LAYER_ITEM_DETAIL_PROTO
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType LAYER_ITEM_REQUEST_PROTO -> LAYER_ITEM_REQUEST_PROTO
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType LAYER_ITEM_RESPONSE_PROTO -> LAYER_ITEM_RESPONSE_PROTO
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType LAYER_ITEM_SNIPPET_PROTO -> LAYER_ITEM_SNIPPET_PROTO
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType LAYER_LIST_REQUEST_PROTO -> LAYER_LIST_REQUEST_PROTO
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType LAYER_LIST_RESPONSE_PROTO -> LAYER_LIST_RESPONSE_PROTO
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType LAYER_PARAMETER_PROTO -> LAYER_PARAMETER_PROTO
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType LAYER_TILE_INFO_PROTO -> LAYER_TILE_INFO_PROTO
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType LAYER_TILE_REQUEST_PROTO -> LAYER_TILE_REQUEST_PROTO
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType LAYER_TILE_RESPONSE_HEADER_PROTO -> LAYER_TILE_RESPONSE_HEADER_PROTO
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType LAYER_TILE_RESPONSE_PROTO -> LAYER_TILE_RESPONSE_PROTO
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType LOCALE_AND_LABEL_PAIR_PROTO -> LOCALE_AND_LABEL_PAIR_PROTO
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType LOCAL_DETAILS_REQUEST_PROTO -> LOCAL_DETAILS_REQUEST_PROTO
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType LOCAL_DETAILS_RESPONSE_PROTO -> LOCAL_DETAILS_RESPONSE_PROTO
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType LOCATION -> LOCATION
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType LOCATION_PRIVACY_SETTING_PROTO -> LOCATION_PRIVACY_SETTING_PROTO
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType LOCATION_PROTO -> LOCATION_PROTO
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType LOCATION_REPORT_REASON -> LOCATION_REPORT_REASON
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType LOCATION_SHIFT_REQUEST_PROTO -> LOCATION_SHIFT_REQUEST_PROTO
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType LOCATION_SHIFT_RESPONSE_PROTO -> LOCATION_SHIFT_RESPONSE_PROTO
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType LOCATION_UPDATE_REQUEST_PROTO -> LOCATION_UPDATE_REQUEST_PROTO
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType LOCATION_UPDATE_RESPONSE_PROTO -> LOCATION_UPDATE_RESPONSE_PROTO
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType MAPS_ADDRESS_BOOK_ENTRY_PROTO -> MAPS_ADDRESS_BOOK_ENTRY_PROTO
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType MAP_INFO_PROTO -> MAP_INFO_PROTO
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType MAP_POINT_PROTO -> MAP_POINT_PROTO
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType MAP_SHOP_RAW_REQUESTS -> MAP_SHOP_RAW_REQUESTS
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType MAP_TILE_PROTO -> MAP_TILE_PROTO
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType MEDIA -> MEDIA
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType MORE_DETAILS_PROTO -> MORE_DETAILS_PROTO
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType NAVIGATION_PARAMETERS_PROTO -> NAVIGATION_PARAMETERS_PROTO
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType NETWORK_INITIATED_PREFERENCE -> NETWORK_INITIATED_PREFERENCE
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType NOTIFICATIONS_REQUEST_PROTO -> NOTIFICATIONS_REQUEST_PROTO
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType NOTIFICATIONS_RESPONSE_PROTO -> NOTIFICATIONS_RESPONSE_PROTO
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType NOTIFICATION_CHECK_REQUEST_PAYLOAD -> NOTIFICATION_CHECK_REQUEST_PAYLOAD
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType NOTIFICATION_CHECK_REQUEST_PROTO -> NOTIFICATION_CHECK_REQUEST_PROTO
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType NOTIFICATION_CHECK_RESPONSE -> NOTIFICATION_CHECK_RESPONSE
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType NOTIFICATION_CHECK_RESPONSE_PROTO -> NOTIFICATION_CHECK_RESPONSE_PROTO
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType NOTIFICATION_RESPONSE -> NOTIFICATION_RESPONSE
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType PARAMETER_CONFIGURATION_PROTO -> PARAMETER_CONFIGURATION_PROTO
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType PARAMETER_GROUP_PROTO -> PARAMETER_GROUP_PROTO
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType PARAMETER_RULE_PROTO -> PARAMETER_RULE_PROTO
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType PHOTO_DATA -> PHOTO_DATA
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType PHOTO_ID -> PHOTO_ID
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType PHOTO_PROTO -> PHOTO_PROTO
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType PHOTO_UPLOAD -> PHOTO_UPLOAD
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType PIXEL_POINT_PROTO -> PIXEL_POINT_PROTO
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType POINT -> POINT
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType PROFILE_PHOTO -> PROFILE_PHOTO
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType PROFILE_PHOTO_DATA -> PROFILE_PHOTO_DATA
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType PROFILE_PHOTO_REQUEST_PROTO -> PROFILE_PHOTO_REQUEST_PROTO
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType PROFILE_PHOTO_RESPONSE_PROTO -> PROFILE_PHOTO_RESPONSE_PROTO
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType PROFILE_PHOTO_SPEC_PROTO -> PROFILE_PHOTO_SPEC_PROTO
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType PUBLIC_UPDATE_TERMS_AND_CONDITIONS -> PUBLIC_UPDATE_TERMS_AND_CONDITIONS
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType QUERY_PARAMETERS -> QUERY_PARAMETERS
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType RALLY_POINT -> RALLY_POINT
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType RATING_PROTO -> RATING_PROTO
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType REAL_ESTATE_QUERY_REFINEMENT -> REAL_ESTATE_QUERY_REFINEMENT
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType RECOMMENDATION_REASON_PROTO -> RECOMMENDATION_REASON_PROTO
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType RECOMMENDATION_REQUEST_PROTO -> RECOMMENDATION_REQUEST_PROTO
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType REPORT_MAP_ISSUE_REQUEST_PROTO -> REPORT_MAP_ISSUE_REQUEST_PROTO
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType REPORT_MAP_ISSUE_RESPONSE_PROTO -> REPORT_MAP_ISSUE_RESPONSE_PROTO
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType RESOURCE_REQUEST_PROTO -> RESOURCE_REQUEST_PROTO
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType RESOURCE_RESPONSE_PROTO -> RESOURCE_RESPONSE_PROTO
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType REVERSE_GEOCODE_REQUEST_PROTO -> REVERSE_GEOCODE_REQUEST_PROTO
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType REVERSE_GEOCODE_RESPONSE_PROTO -> REVERSE_GEOCODE_RESPONSE_PROTO
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType REVERSE_GEOCODE_RESULT_PROTO -> REVERSE_GEOCODE_RESULT_PROTO
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType REVERSE_GEOCODE_RESULT_TYPE_ENUM -> REVERSE_GEOCODE_RESULT_TYPE_ENUM
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType REVIEW -> REVIEW
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType REVIEWS_PROTO -> REVIEWS_PROTO
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType REVIEW_PROTO -> REVIEW_PROTO
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType ROADWAY_PROTO -> ROADWAY_PROTO
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType ROAD_POINT_PROTO -> ROAD_POINT_PROTO
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType ROUTE_PROTO -> ROUTE_PROTO
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType SEARCH_DIALOG_PREFERENCES_PROTO -> SEARCH_DIALOG_PREFERENCES_PROTO
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType SEARCH_PUBLIC_ACTIVITIES_BY_CIDREQUEST_PAYLOAD -> SEARCH_PUBLIC_ACTIVITIES_BY_CIDREQUEST_PAYLOAD
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType SEARCH_PUBLIC_ACTIVITIES_BY_CIDREQUEST_PROTO -> SEARCH_PUBLIC_ACTIVITIES_BY_CIDREQUEST_PROTO
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType SEARCH_PUBLIC_ACTIVITIES_NEARBY_REQUEST_PAYLOAD -> SEARCH_PUBLIC_ACTIVITIES_NEARBY_REQUEST_PAYLOAD
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType SEARCH_PUBLIC_ACTIVITIES_NEARBY_REQUEST_PROTO -> SEARCH_PUBLIC_ACTIVITIES_NEARBY_REQUEST_PROTO
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType SEARCH_PUBLIC_ACTIVITIES_OPTIONS -> SEARCH_PUBLIC_ACTIVITIES_OPTIONS
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType SEARCH_PUBLIC_ACTIVITIES_REQUEST_PAYLOAD -> SEARCH_PUBLIC_ACTIVITIES_REQUEST_PAYLOAD
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType SEARCH_PUBLIC_ACTIVITIES_RESPONSE -> SEARCH_PUBLIC_ACTIVITIES_RESPONSE
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType SEARCH_PUBLIC_ACTIVITIES_RESPONSE_PROTO -> SEARCH_PUBLIC_ACTIVITIES_RESPONSE_PROTO
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType SEARCH_PUBLIC_ACTIVITIES_VIEWPORT_REQUEST_PAYLOAD -> SEARCH_PUBLIC_ACTIVITIES_VIEWPORT_REQUEST_PAYLOAD
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType SEARCH_PUBLIC_ACTIVITIES_VIEWPORT_REQUEST_PROTO -> SEARCH_PUBLIC_ACTIVITIES_VIEWPORT_REQUEST_PROTO
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType SEARCH_REQUEST_PROTO -> SEARCH_REQUEST_PROTO
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType SEARCH_RESPONSE_PROTO -> SEARCH_RESPONSE_PROTO
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType SEARCH_RESPONSE_WITH_PAYLOAD_PROTO -> SEARCH_RESPONSE_WITH_PAYLOAD_PROTO
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType SEARCH_RESULT_PROTO -> SEARCH_RESULT_PROTO
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType SECURITY_POPUP_SETTINGS -> SECURITY_POPUP_SETTINGS
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType SEED_PLACE -> SEED_PLACE
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType SERVER_SETTING_PARAMETERS_PROTO -> SERVER_SETTING_PARAMETERS_PROTO
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType SESAME_REQUEST_PROTO -> SESAME_REQUEST_PROTO
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType SESAME_RESPONSE_PROTO -> SESAME_RESPONSE_PROTO
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType SET_HTTP_COOKIE_REQUEST_PROTO -> SET_HTTP_COOKIE_REQUEST_PROTO
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType SET_HTTP_COOKIE_RESPONSE_PROTO -> SET_HTTP_COOKIE_RESPONSE_PROTO
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType SET_LOCATION_PRIVACY_SETTING_REQUEST_PROTO -> SET_LOCATION_PRIVACY_SETTING_REQUEST_PROTO
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType SET_LOCATION_PRIVACY_SETTING_RESPONSE_PROTO -> SET_LOCATION_PRIVACY_SETTING_RESPONSE_PROTO
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType SET_NETWORK_INITIATED_PREFERENCE_REQUEST_PROTO -> SET_NETWORK_INITIATED_PREFERENCE_REQUEST_PROTO
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType SET_NETWORK_INITIATED_PREFERENCE_RESPONSE_PROTO -> SET_NETWORK_INITIATED_PREFERENCE_RESPONSE_PROTO
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType SET_USER_STATE_REQUEST_PROTO -> SET_USER_STATE_REQUEST_PROTO
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType SET_USER_STATE_RESPONSE_PROTO -> SET_USER_STATE_RESPONSE_PROTO
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType SHARE_WITH_FRIEND_REQUEST_PROTO -> SHARE_WITH_FRIEND_REQUEST_PROTO
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType SHARE_WITH_FRIEND_RESPONSE_PROTO -> SHARE_WITH_FRIEND_RESPONSE_PROTO
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType SNAP_TO_PLACE_REQUEST_PROTO -> SNAP_TO_PLACE_REQUEST_PROTO
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType SNAP_TO_PLACE_RESPONSE_PROTO -> SNAP_TO_PLACE_RESPONSE_PROTO
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType SNIPPET_PROTO -> SNIPPET_PROTO
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType SPEECH_REQUEST_PROTO -> SPEECH_REQUEST_PROTO
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType SPEECH_RESPONSE_PROTO -> SPEECH_RESPONSE_PROTO
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType STARRING_PREFS_PROTO -> STARRING_PREFS_PROTO
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType STAR_DETAILS_PROTO -> STAR_DETAILS_PROTO
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType STAR_DETAILS_STORAGE_PROTO -> STAR_DETAILS_STORAGE_PROTO
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType STAR_MRUITEM -> STAR_MRUITEM
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType STAR_PROTO -> STAR_PROTO
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType STAR_RESULT_PROTO -> STAR_RESULT_PROTO
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType STAR_WITH_DETAILS_PROTO -> STAR_WITH_DETAILS_PROTO
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType STEP_PROTO -> STEP_PROTO
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType STREAM -> STREAM
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType STREET_VIEW_METADATA_PROTO -> STREET_VIEW_METADATA_PROTO
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType STREET_VIEW_REPORT_PROTO -> STREET_VIEW_REPORT_PROTO
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType STREET_VIEW_REPORT_RESPONSE_PROTO -> STREET_VIEW_REPORT_RESPONSE_PROTO
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType STREET_VIEW_REQUEST_PROTO -> STREET_VIEW_REQUEST_PROTO
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType STREET_VIEW_RESPONSE_PROTO -> STREET_VIEW_RESPONSE_PROTO
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType STREET_VIEW_TAKE_DOWN_REQUEST_PROTO -> STREET_VIEW_TAKE_DOWN_REQUEST_PROTO
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType STREET_VIEW_TAKE_DOWN_RESPONSE_PROTO -> STREET_VIEW_TAKE_DOWN_RESPONSE_PROTO
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType STRUCTURED_ADDRESS_PROTO -> STRUCTURED_ADDRESS_PROTO
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType STRUCTURED_INSTRUCTIONS_PROTO -> STRUCTURED_INSTRUCTIONS_PROTO
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType SUBMIT_REVIEW_REQUEST_PROTO -> SUBMIT_REVIEW_REQUEST_PROTO
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType SUBMIT_REVIEW_RESPONSE_PROTO -> SUBMIT_REVIEW_RESPONSE_PROTO
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType SUGGESTION_GROUP_PROTO -> SUGGESTION_GROUP_PROTO
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType SUGGESTION_PROTO -> SUGGESTION_PROTO
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType SUGGEST_REQUEST_PROTO -> SUGGEST_REQUEST_PROTO
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType SUGGEST_RESPONSE_PROTO -> SUGGEST_RESPONSE_PROTO
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType SYNCED_DATA_CORPUS_STORAGE_PROTO -> SYNCED_DATA_CORPUS_STORAGE_PROTO
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType SYNCED_DATA_PENDING_QUEUE_PROTO -> SYNCED_DATA_PENDING_QUEUE_PROTO
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType SYNCED_DATA_PREFERENCES_PROTO -> SYNCED_DATA_PREFERENCES_PROTO
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType SYNCED_DATA_STORAGE_PROTO -> SYNCED_DATA_STORAGE_PROTO
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType SYNCED_DATA_VIEW_PROTO -> SYNCED_DATA_VIEW_PROTO
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType SYNC_CORPUS_REQUEST_PROTO -> SYNC_CORPUS_REQUEST_PROTO
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType SYNC_CORPUS_RESPONSE_PROTO -> SYNC_CORPUS_RESPONSE_PROTO
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType SYNC_ERROR_PROTO -> SYNC_ERROR_PROTO
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType SYNC_ITEM -> SYNC_ITEM
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType SYNC_ITEM_UPDATE_REQUEST -> SYNC_ITEM_UPDATE_REQUEST
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType SYNC_ITEM_UPDATE_RESPONSE -> SYNC_ITEM_UPDATE_RESPONSE
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType SYNC_OPERATION -> SYNC_OPERATION
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType SYNC_REQUEST_PROTO -> SYNC_REQUEST_PROTO
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType SYNC_RESPONSE_PROTO -> SYNC_RESPONSE_PROTO
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType TRAFFIC_VECTOR_TILE_PROTO -> TRAFFIC_VECTOR_TILE_PROTO
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType TRANSIT_AGENCY_PROTO -> TRANSIT_AGENCY_PROTO
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType TRANSIT_LINE_DISPLAY_PROPERTIES_PROTO -> TRANSIT_LINE_DISPLAY_PROPERTIES_PROTO
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType TRANSIT_LINE_INFO_PROTO -> TRANSIT_LINE_INFO_PROTO
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType TRANSIT_LINE_RESULT_PROTO -> TRANSIT_LINE_RESULT_PROTO
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType TRANSIT_LINE_WITH_DEPARTURES_AT_STATION_PROTO -> TRANSIT_LINE_WITH_DEPARTURES_AT_STATION_PROTO
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType TRANSIT_STATION_INFO_PROTO -> TRANSIT_STATION_INFO_PROTO
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType TRANSIT_STATION_RESULT_PROTO -> TRANSIT_STATION_RESULT_PROTO
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType TRIP_GROUP_AND_DEPARTURES_PROTO -> TRIP_GROUP_AND_DEPARTURES_PROTO
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType UPDATE_ACTIVITY_REQUEST_PAYLOAD -> UPDATE_ACTIVITY_REQUEST_PAYLOAD
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType UPDATE_ACTIVITY_REQUEST_PROTO -> UPDATE_ACTIVITY_REQUEST_PROTO
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType UPDATE_ACTIVITY_RESPONSE -> UPDATE_ACTIVITY_RESPONSE
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType UPDATE_ACTIVITY_RESPONSE_PROTO -> UPDATE_ACTIVITY_RESPONSE_PROTO
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType UPDATE_FRIEND_STATE_REQUEST_PROTO -> UPDATE_FRIEND_STATE_REQUEST_PROTO
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType UPDATE_FRIEND_STATE_RESPONSE_PROTO -> UPDATE_FRIEND_STATE_RESPONSE_PROTO
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType UPDATE_LOCATION_ACL_REQUEST_PROTO -> UPDATE_LOCATION_ACL_REQUEST_PROTO
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType UPDATE_LOCATION_ACL_RESPONSE_PROTO -> UPDATE_LOCATION_ACL_RESPONSE_PROTO
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType URL_REQUEST_PROTO -> URL_REQUEST_PROTO
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType URL_RESPONSE_PROTO -> URL_RESPONSE_PROTO
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType USER_CONTENT_REQUEST_PROTO -> USER_CONTENT_REQUEST_PROTO
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType USER_CONTENT_RESPONSE_META -> USER_CONTENT_RESPONSE_META
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType USER_CONTENT_RESPONSE_PROTO -> USER_CONTENT_RESPONSE_PROTO
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType USER_LOCATION_DEBUG_INFO -> USER_LOCATION_DEBUG_INFO
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType USER_MAP_LISTING_PROTO -> USER_MAP_LISTING_PROTO
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType USER_PHOTO_DATA -> USER_PHOTO_DATA
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType USER_PROFILE_UPDATE_REQUEST_PROTO -> USER_PROFILE_UPDATE_REQUEST_PROTO
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType USER_PROFILE_UPDATE_RESPONSE_PROTO -> USER_PROFILE_UPDATE_RESPONSE_PROTO
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType USER_STATE_PROTO -> USER_STATE_PROTO
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType VOICE_SEARCH_LANGUAGE_PROTO -> VOICE_SEARCH_LANGUAGE_PROTO
    android_maps_conflict_avoidance.com.google.common.io.protocol.ProtoBufType VOICE_SEARCH_PARAMETERS_PROTO -> VOICE_SEARCH_PARAMETERS_PROTO
android_maps_conflict_avoidance.com.google.googlenav.ui.GmmTileOverlayRenderer -> android_maps_conflict_avoidance.com.google.googlenav.ui.GmmTileOverlayRenderer:
android_maps_conflict_avoidance.com.google.googlenav.ui.GmmTileOverlayRendererImpl -> android_maps_conflict_avoidance.com.google.googlenav.ui.GmmTileOverlayRendererImpl:
    java.util.Vector shapeProviders -> shapeProviders
    android_maps_conflict_avoidance.com.google.googlenav.ui.ShapeRenderer shapeRenderer -> shapeRenderer
    int shapeRendererVersion -> shapeRendererVersion
    boolean showTraffic -> showTraffic
    android_maps_conflict_avoidance.com.google.googlenav.map.TrafficRenderer trafficRenderer -> trafficRenderer
    android_maps_conflict_avoidance.com.google.googlenav.map.TrafficService trafficService -> trafficService
    int getImageVersion(android_maps_conflict_avoidance.com.google.googlenav.map.MapTile) -> getImageVersion
    boolean renderTileImage(android_maps_conflict_avoidance.com.google.googlenav.map.MapTile,boolean) -> renderTileImage
    void updateTileImage(android_maps_conflict_avoidance.com.google.googlenav.map.MapTile,android_maps_conflict_avoidance.com.google.googlenav.map.TrafficTile,int) -> updateTileImage
    void begin() -> begin
    void end() -> end
    android_maps_conflict_avoidance.com.google.common.graphics.GoogleImage generateNewTileImage(android_maps_conflict_avoidance.com.google.googlenav.map.MapTile,android_maps_conflict_avoidance.com.google.googlenav.map.TrafficTile) -> generateNewTileImage
    boolean isFast() -> isFast
    boolean isShowTraffic() -> isShowTraffic
    boolean renderTile(android_maps_conflict_avoidance.com.google.googlenav.map.MapTile,boolean) -> renderTile
    void setShowTraffic(boolean) -> setShowTraffic
    void setTrafficService(android_maps_conflict_avoidance.com.google.googlenav.map.TrafficService) -> setTrafficService
android_maps_conflict_avoidance.com.google.googlenav.ui.RenderableEllipse -> android_maps_conflict_avoidance.com.google.googlenav.ui.RenderableEllipse:
    android_maps_conflict_avoidance.com.google.map.MapPoint getCenter() -> getCenter
    int getEllipseHeight() -> getEllipseHeight
    int getEllipseWidth() -> getEllipseWidth
android_maps_conflict_avoidance.com.google.googlenav.ui.RenderablePoly -> android_maps_conflict_avoidance.com.google.googlenav.ui.RenderablePoly:
    android_maps_conflict_avoidance.com.google.map.MapPoint[][] getInnerBoundaries() -> getInnerBoundaries
    android_maps_conflict_avoidance.com.google.map.MapPoint[] getLine() -> getLine
    int getLineStyle() -> getLineStyle
android_maps_conflict_avoidance.com.google.googlenav.ui.RenderableShape -> android_maps_conflict_avoidance.com.google.googlenav.ui.RenderableShape:
    int getFillColor() -> getFillColor
    int getId() -> getId
    int getLineColor() -> getLineColor
    int getLineWidthForZoom(android_maps_conflict_avoidance.com.google.map.Zoom) -> getLineWidthForZoom
    boolean isAvailable() -> isAvailable
    boolean isFilled() -> isFilled
android_maps_conflict_avoidance.com.google.googlenav.ui.ShapeRenderer -> android_maps_conflict_avoidance.com.google.googlenav.ui.ShapeRenderer:
    android_maps_conflict_avoidance.com.google.map.Zoom pixelZoom -> pixelZoom
    long[][][] polyBoundaryPixelXY -> polyBoundaryPixelXY
    android_maps_conflict_avoidance.com.google.googlenav.ui.RenderableShape[] shapes -> shapes
    android_maps_conflict_avoidance.com.google.map.MapPoint[][] getBoundaries(android_maps_conflict_avoidance.com.google.googlenav.ui.RenderablePoly) -> getBoundaries
    int getBoundaryCount(android_maps_conflict_avoidance.com.google.googlenav.ui.RenderablePoly) -> getBoundaryCount
    long[] getPixelXYOnScreen(int,int,long[]) -> getPixelXYOnScreen
    int getX(long) -> getX
    long getXY(int,int) -> getXY
    int getY(long) -> getY
    boolean isInRange(int[]) -> isInRange
    void makeInRange(int,int,int,int,int[]) -> makeInRange
    int outcode(int,int,int,int) -> outcode
    void precalculatePixels(android_maps_conflict_avoidance.com.google.map.Zoom) -> precalculatePixels
    void renderEllipse(android_maps_conflict_avoidance.com.google.googlenav.ui.ShapeRenderer$Painter,int,int,int,int,android_maps_conflict_avoidance.com.google.googlenav.ui.RenderableEllipse,android_maps_conflict_avoidance.com.google.map.Zoom) -> renderEllipse
    void renderLine(android_maps_conflict_avoidance.com.google.googlenav.ui.ShapeRenderer$Painter,int,int,int,int,long[],android_maps_conflict_avoidance.com.google.googlenav.ui.RenderablePoly,android_maps_conflict_avoidance.com.google.map.Zoom) -> renderLine
    void renderPolygonFill(android_maps_conflict_avoidance.com.google.googlenav.ui.ShapeRenderer$Painter,int,int,int,int,long[][],android_maps_conflict_avoidance.com.google.googlenav.ui.RenderablePoly,android_maps_conflict_avoidance.com.google.map.Zoom) -> renderPolygonFill
    int getImageVersion() -> getImageVersion
    void render(android_maps_conflict_avoidance.com.google.googlenav.ui.ShapeRenderer$Painter,int,int,int,int,android_maps_conflict_avoidance.com.google.map.Zoom) -> render
android_maps_conflict_avoidance.com.google.googlenav.ui.ShapeRenderer$Painter -> android_maps_conflict_avoidance.com.google.googlenav.ui.ShapeRenderer$Painter:
    void addLineSegment(int[],int[],boolean) -> addLineSegment
    void endLine() -> endLine
    void paintEllipse(int,int,int,int,int,int,int) -> paintEllipse
    void paintPolygon(long[][],int,int,int) -> paintPolygon
    void startLine(int,int,int) -> startLine
android_maps_conflict_avoidance.com.google.googlenav.ui.android.AndroidTileOverlayRenderer -> android_maps_conflict_avoidance.com.google.googlenav.ui.android.AndroidTileOverlayRenderer:
    android.graphics.PathEffect WALKING_DASH_PATH_EFFECT -> WALKING_DASH_PATH_EFFECT
    android.graphics.Paint bgPaint -> bgPaint
    android_maps_conflict_avoidance.com.google.googlenav.ui.android.AndroidTileOverlayRenderer$AndroidPainter painter -> painter
    android_maps_conflict_avoidance.com.google.googlenav.map.AndroidTrafficPainter trafficPainter -> trafficPainter
    android.graphics.Canvas access$000(android.graphics.Bitmap,android_maps_conflict_avoidance.com.google.common.graphics.android.AndroidImage) -> access$000
    android.graphics.PathEffect access$100() -> access$100
    android.graphics.Canvas paintTileBgAndCreateCanvas(android.graphics.Bitmap,android_maps_conflict_avoidance.com.google.common.graphics.android.AndroidImage) -> paintTileBgAndCreateCanvas
    android_maps_conflict_avoidance.com.google.common.graphics.GoogleImage generateNewTileImage(android_maps_conflict_avoidance.com.google.googlenav.map.MapTile,android_maps_conflict_avoidance.com.google.googlenav.map.TrafficTile) -> generateNewTileImage
    boolean isFast() -> isFast
android_maps_conflict_avoidance.com.google.googlenav.ui.android.AndroidTileOverlayRenderer$AndroidPainter -> android_maps_conflict_avoidance.com.google.googlenav.ui.android.AndroidTileOverlayRenderer$AndroidPainter:
    android.graphics.Bitmap bitmap -> bitmap
    android.graphics.Canvas canvas -> canvas
    android_maps_conflict_avoidance.com.google.common.graphics.android.AndroidImage image -> image
    android.graphics.Paint linePaint -> linePaint
    android.graphics.Path path -> path
    android.graphics.Paint polygonPaint -> polygonPaint
    android_maps_conflict_avoidance.com.google.googlenav.ui.android.AndroidTileOverlayRenderer this$0 -> this$0
    android.graphics.Paint vertexPaint -> vertexPaint
    void drawPendingLine() -> drawPendingLine
    void ensureCanvas() -> ensureCanvas
    void setColor(int,android.graphics.Paint) -> setColor
    void addLineSegment(int[],int[],boolean) -> addLineSegment
    void endLine() -> endLine
    android.graphics.Bitmap getBitmap() -> getBitmap
    void paintEllipse(int,int,int,int,int,int,int) -> paintEllipse
    void paintPolygon(long[][],int,int,int) -> paintPolygon
    void setup(android.graphics.Canvas,android.graphics.Bitmap,android_maps_conflict_avoidance.com.google.common.graphics.android.AndroidImage) -> setup
    void startLine(int,int,int) -> startLine
android_maps_conflict_avoidance.com.google.image.compression.jpeg.GenerateJpegHeader -> android_maps_conflict_avoidance.com.google.image.compression.jpeg.GenerateJpegHeader:
    byte[] JPEG_STANDARD_HEADER -> JPEG_STANDARD_HEADER
    int JPEG_STANDARD_HEADER_CHROMINANCE_QUANT_OFFSET -> JPEG_STANDARD_HEADER_CHROMINANCE_QUANT_OFFSET
    int JPEG_STANDARD_HEADER_LUMINANCE_QUANT_OFFSET -> JPEG_STANDARD_HEADER_LUMINANCE_QUANT_OFFSET
    int JPEG_STANDARD_HEADER_Y_X_OFFSET -> JPEG_STANDARD_HEADER_Y_X_OFFSET
    void copyQuantTable(byte[],int,int,int,int) -> copyQuantTable
    int generate(byte[],int,int,int,int,int,int) -> generate
    int getHeaderLength(int) -> getHeaderLength
android_maps_conflict_avoidance.com.google.image.compression.jpeg.JpegHeaderParams -> android_maps_conflict_avoidance.com.google.image.compression.jpeg.JpegHeaderParams:
    int headerLength -> headerLength
    int height -> height
    int quality -> quality
    int qualityAlgorithm -> qualityAlgorithm
    int variant -> variant
    int width -> width
    int getHeight() -> getHeight
    int getQuality() -> getQuality
    int getQualityAlgorithm() -> getQualityAlgorithm
    int getVariant() -> getVariant
    int getWidth() -> getWidth
android_maps_conflict_avoidance.com.google.image.compression.jpeg.JpegUtil -> android_maps_conflict_avoidance.com.google.image.compression.jpeg.JpegUtil:
    byte[][] JPEG_QUANT_TABLES -> JPEG_QUANT_TABLES
    int[] imageIoScaleFactor -> imageIoScaleFactor
    byte[] getQuantTable(int,int,int) -> getQuantTable
    byte getScaledQuantizationFactor(int,int,int) -> getScaledQuantizationFactor
    void prependStandardHeader(byte[],int,int,byte[],int,android_maps_conflict_avoidance.com.google.image.compression.jpeg.JpegHeaderParams) -> prependStandardHeader
    byte[] uncompactJpeg(byte[]) -> uncompactJpeg
    byte[] uncompactJpeg(byte[],int,int) -> uncompactJpeg
android_maps_conflict_avoidance.com.google.map.Geometry -> android_maps_conflict_avoidance.com.google.map.Geometry:
    android_maps_conflict_avoidance.com.google.map.MapPoint getDefiningPoint() -> getDefiningPoint
android_maps_conflict_avoidance.com.google.map.MapPoint -> android_maps_conflict_avoidance.com.google.map.MapPoint:
    android_maps_conflict_avoidance.com.google.map.Zoom PIXEL_COORDS_ZOOM -> PIXEL_COORDS_ZOOM
    int[] mercatorValues -> mercatorValues
    int[] reverseMercatorValues -> reverseMercatorValues
    int latitudeE6 -> latitudeE6
    int longitudeE6 -> longitudeE6
    int pixelCoordX -> pixelCoordX
    int pixelCoordY -> pixelCoordY
    int adjustLongitude(int) -> adjustLongitude
    int adjustPixelX(int,int) -> adjustPixelX
    int adjustPixelY(int,int) -> adjustPixelY
    int getLatitudeFromY(int,android_maps_conflict_avoidance.com.google.map.Zoom) -> getLatitudeFromY
    int getLongitudeFromX(int,android_maps_conflict_avoidance.com.google.map.Zoom) -> getLongitudeFromX
    android_maps_conflict_avoidance.com.google.map.MapPoint getMapPointFromXY(int,int,int) -> getMapPointFromXY
    int getMercatorIndex(int) -> getMercatorIndex
    int[] getMercatorValues() -> getMercatorValues
    int[] getReverseMercatorValues() -> getReverseMercatorValues
    int getXPixelFromLon(int,android_maps_conflict_avoidance.com.google.map.Zoom) -> getXPixelFromLon
    int getYPixelFromLat(int,android_maps_conflict_avoidance.com.google.map.Zoom) -> getYPixelFromLat
    java.lang.String latLonToString(int,int) -> latLonToString
    int mercatorToPixelsTimesTen(int,android_maps_conflict_avoidance.com.google.map.Zoom) -> mercatorToPixelsTimesTen
    int pixelsToMercator(int,android_maps_conflict_avoidance.com.google.map.Zoom) -> pixelsToMercator
    void readMercatorValues(java.io.DataInput,int[]) -> readMercatorValues
    android_maps_conflict_avoidance.com.google.map.MapPoint readPoint(java.io.DataInput) -> readPoint
    void writePoint(android_maps_conflict_avoidance.com.google.map.MapPoint,java.io.DataOutput) -> writePoint
    void writePoint(java.io.DataOutput) -> writePoint
    long distanceSquared(android_maps_conflict_avoidance.com.google.map.MapPoint) -> distanceSquared
    boolean equals(java.lang.Object) -> equals
    android_maps_conflict_avoidance.com.google.map.MapPoint getDefiningPoint() -> getDefiningPoint
    int getLatitude() -> getLatitude
    int getLongitude() -> getLongitude
    int getXPixel(android_maps_conflict_avoidance.com.google.map.Zoom) -> getXPixel
    int getYPixel(android_maps_conflict_avoidance.com.google.map.Zoom) -> getYPixel
    int hashCode() -> hashCode
    long pixelDistanceSquared(android_maps_conflict_avoidance.com.google.map.MapPoint,android_maps_conflict_avoidance.com.google.map.Zoom) -> pixelDistanceSquared
    android_maps_conflict_avoidance.com.google.map.MapPoint pixelOffset(int,int,android_maps_conflict_avoidance.com.google.map.Zoom) -> pixelOffset
    java.lang.String toString() -> toString
android_maps_conflict_avoidance.com.google.map.MapState -> android_maps_conflict_avoidance.com.google.map.MapState:
    boolean bicyclingLayerEnabled -> bicyclingLayerEnabled
    android_maps_conflict_avoidance.com.google.map.MapPoint centerPoint -> centerPoint
    int mapMode -> mapMode
    android_maps_conflict_avoidance.com.google.map.Zoom zoom -> zoom
    android_maps_conflict_avoidance.com.google.map.MapPoint getCenterPoint() -> getCenterPoint
    int getMapMode() -> getMapMode
    android_maps_conflict_avoidance.com.google.map.Zoom getZoom() -> getZoom
    boolean isBicyclingLayerEnabled() -> isBicyclingLayerEnabled
    boolean isSatellite() -> isSatellite
    boolean isTerrain() -> isTerrain
    android_maps_conflict_avoidance.com.google.map.MapState newMapState(int) -> newMapState
    android_maps_conflict_avoidance.com.google.map.MapState newMapState(android_maps_conflict_avoidance.com.google.map.MapPoint) -> newMapState
    android_maps_conflict_avoidance.com.google.map.MapState newMapState(android_maps_conflict_avoidance.com.google.map.Zoom) -> newMapState
android_maps_conflict_avoidance.com.google.map.Zoom -> android_maps_conflict_avoidance.com.google.map.Zoom:
    int minZoomLevel -> minZoomLevel
    android_maps_conflict_avoidance.com.google.map.Zoom[] zoomArray -> zoomArray
    int equatorPixels -> equatorPixels
    int zoomLevel -> zoomLevel
    android_maps_conflict_avoidance.com.google.map.Zoom getZoom(int) -> getZoom
    int changePixelsToTargetZoomlevel(int,int) -> changePixelsToTargetZoomlevel
    int getEquatorPixels() -> getEquatorPixels
    android_maps_conflict_avoidance.com.google.map.Zoom getNextHigherZoom() -> getNextHigherZoom
    android_maps_conflict_avoidance.com.google.map.Zoom getNextLowerZoom() -> getNextLowerZoom
    int getPixelsForDistance(int) -> getPixelsForDistance
    int getZoomLevel() -> getZoomLevel
    int getZoomRatio(android_maps_conflict_avoidance.com.google.map.Zoom) -> getZoomRatio
    boolean isMoreZoomedIn(android_maps_conflict_avoidance.com.google.map.Zoom) -> isMoreZoomedIn
    java.lang.String toString() -> toString
cn.sharesdk.facebook.Facebook -> cn.sharesdk.facebook.Facebook:
    java.lang.String NAME -> NAME
    java.lang.String a -> a
    java.lang.String b -> b
    void initDevInfo(java.lang.String) -> initDevInfo
    int getPlatformId() -> getPlatformId
    java.lang.String getName() -> getName
    int getVersion() -> getVersion
    void setNetworkDevinfo() -> setNetworkDevinfo
    void doAuthorize(java.lang.String[]) -> doAuthorize
    boolean isClientValid() -> isClientValid
    boolean checkAuthorize(int,java.lang.Object) -> checkAuthorize
    void doShare(cn.sharesdk.framework.Platform$ShareParams) -> doShare
    void userInfor(java.lang.String) -> userInfor
    cn.sharesdk.framework.statistics.b.f$a filterShareContent(cn.sharesdk.framework.Platform$ShareParams,java.util.HashMap) -> filterShareContent
    void follow(java.lang.String) -> follow
    void timeline(int,int,java.lang.String) -> timeline
    void getFriendList(int,int,java.lang.String) -> getFriendList
    void doCustomerProtocol(java.lang.String,java.lang.String,int,java.util.HashMap,java.util.HashMap) -> doCustomerProtocol
    java.util.HashMap getFollowings(int,int,java.lang.String) -> getFollowings
    java.util.HashMap getFollowers(int,int,java.lang.String) -> getFollowers
    java.util.HashMap getBilaterals(int,int,java.lang.String) -> getBilaterals
    java.util.HashMap filterFriendshipInfo(int,java.util.HashMap) -> filterFriendshipInfo
    boolean hasShareCallback() -> hasShareCallback
    cn.sharesdk.framework.PlatformActionListener a(cn.sharesdk.facebook.Facebook) -> a
    cn.sharesdk.framework.PlatformActionListener b(cn.sharesdk.facebook.Facebook) -> b
    cn.sharesdk.framework.PlatformDb c(cn.sharesdk.facebook.Facebook) -> c
    cn.sharesdk.framework.PlatformDb d(cn.sharesdk.facebook.Facebook) -> d
    void a(cn.sharesdk.facebook.Facebook,int,java.lang.Object) -> a
    cn.sharesdk.framework.PlatformActionListener e(cn.sharesdk.facebook.Facebook) -> e
    cn.sharesdk.framework.PlatformActionListener f(cn.sharesdk.facebook.Facebook) -> f
cn.sharesdk.facebook.Facebook$ShareParams -> cn.sharesdk.facebook.Facebook$ShareParams:
cn.sharesdk.facebook.a -> cn.sharesdk.facebook.a:
    cn.sharesdk.facebook.e a -> a
    cn.sharesdk.facebook.Facebook b -> b
    void onError(java.lang.Throwable) -> onError
    void onComplete(android.os.Bundle) -> onComplete
    void onCancel() -> onCancel
cn.sharesdk.facebook.b -> cn.sharesdk.facebook.b:
    java.lang.String d -> d
    java.lang.String[] e -> e
    void a(java.lang.String,java.lang.String[]) -> a
    void a() -> a
    boolean b() -> b
    boolean b(android.content.Intent) -> b
    void a(int,int,android.content.Intent) -> a
    void c(android.content.Intent) -> c
    void d(android.content.Intent) -> d
cn.sharesdk.facebook.c -> cn.sharesdk.facebook.c:
    boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String) -> shouldOverrideUrlLoading
    void a(java.lang.String) -> a
    cn.sharesdk.framework.authorize.g a(cn.sharesdk.facebook.c) -> a
cn.sharesdk.facebook.d -> cn.sharesdk.facebook.d:
    cn.sharesdk.facebook.c a -> a
    void run() -> run
cn.sharesdk.facebook.e -> cn.sharesdk.facebook.e:
    java.lang.String[] b -> b
    cn.sharesdk.facebook.e c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    long f -> f
    java.lang.String g -> g
    cn.sharesdk.framework.a.a h -> h
    java.lang.String[] i -> i
    java.lang.String j -> j
    cn.sharesdk.facebook.e a(cn.sharesdk.framework.Platform) -> a
    void a(java.lang.String) -> a
    void a(java.lang.String,java.lang.String) -> a
    boolean a() -> a
    java.lang.String getAuthorizeUrl() -> getAuthorizeUrl
    void a(java.lang.String[]) -> a
    cn.sharesdk.framework.authorize.b getAuthorizeWebviewClient(cn.sharesdk.framework.authorize.g) -> getAuthorizeWebviewClient
    java.lang.String getRedirectUri() -> getRedirectUri
    boolean b() -> b
    cn.sharesdk.framework.authorize.f getSSOProcessor(cn.sharesdk.framework.authorize.e) -> getSSOProcessor
    void a(cn.sharesdk.framework.authorize.AuthorizeListener,boolean) -> a
    java.util.HashMap b(java.lang.String) -> b
    java.util.HashMap b(java.lang.String,java.lang.String) -> b
    java.util.HashMap c(java.lang.String) -> c
    java.util.HashMap d(java.lang.String) -> d
    java.util.HashMap a(int,int,java.lang.String) -> a
    java.util.HashMap a(java.lang.String,java.lang.String,java.util.HashMap,java.util.HashMap) -> a
    void e(java.lang.String) -> e
    void a(cn.sharesdk.facebook.e,cn.sharesdk.framework.authorize.AuthorizeListener) -> a
cn.sharesdk.facebook.f -> cn.sharesdk.facebook.f:
    cn.sharesdk.framework.authorize.AuthorizeListener a -> a
    cn.sharesdk.facebook.e b -> b
    void onFailed(java.lang.Throwable) -> onFailed
    void onComplete(android.os.Bundle) -> onComplete
    void onCancel() -> onCancel
cn.sharesdk.framework.CustomPlatform -> cn.sharesdk.framework.CustomPlatform:
    void initDevInfo(java.lang.String) -> initDevInfo
    java.lang.String getName() -> getName
    int getVersion() -> getVersion
    int getPlatformId() -> getPlatformId
    int getCustomPlatformId() -> getCustomPlatformId
    void setNetworkDevinfo() -> setNetworkDevinfo
    void doAuthorize(java.lang.String[]) -> doAuthorize
    boolean checkAuthorize(int,java.lang.Object) -> checkAuthorize
    void doShare(cn.sharesdk.framework.Platform$ShareParams) -> doShare
    void follow(java.lang.String) -> follow
    void timeline(int,int,java.lang.String) -> timeline
    void userInfor(java.lang.String) -> userInfor
    void doCustomerProtocol(java.lang.String,java.lang.String,int,java.util.HashMap,java.util.HashMap) -> doCustomerProtocol
    cn.sharesdk.framework.statistics.b.f$a filterShareContent(cn.sharesdk.framework.Platform$ShareParams,java.util.HashMap) -> filterShareContent
    void getFriendList(int,int,java.lang.String) -> getFriendList
    java.util.HashMap getFollowings(int,int,java.lang.String) -> getFollowings
    java.util.HashMap getFollowers(int,int,java.lang.String) -> getFollowers
    java.util.HashMap getBilaterals(int,int,java.lang.String) -> getBilaterals
    java.util.HashMap filterFriendshipInfo(int,java.util.HashMap) -> filterFriendshipInfo
    boolean hasShareCallback() -> hasShareCallback
cn.sharesdk.framework.Platform -> cn.sharesdk.framework.Platform:
    int ACTION_AUTHORIZING -> ACTION_AUTHORIZING
    int ACTION_GETTING_FRIEND_LIST -> ACTION_GETTING_FRIEND_LIST
    int ACTION_SENDING_DIRECT_MESSAGE -> ACTION_SENDING_DIRECT_MESSAGE
    int ACTION_FOLLOWING_USER -> ACTION_FOLLOWING_USER
    int ACTION_TIMELINE -> ACTION_TIMELINE
    int ACTION_USER_INFOR -> ACTION_USER_INFOR
    int ACTION_SHARE -> ACTION_SHARE
    int ACTION_GETTING_BILATERAL_LIST -> ACTION_GETTING_BILATERAL_LIST
    int ACTION_GETTING_FOLLOWER_LIST -> ACTION_GETTING_FOLLOWER_LIST
    int ACTION_CUSTOMER -> ACTION_CUSTOMER
    int CUSTOMER_ACTION_MASK -> CUSTOMER_ACTION_MASK
    int SHARE_TEXT -> SHARE_TEXT
    int SHARE_IMAGE -> SHARE_IMAGE
    int SHARE_WEBPAGE -> SHARE_WEBPAGE
    int SHARE_MUSIC -> SHARE_MUSIC
    int SHARE_VIDEO -> SHARE_VIDEO
    int SHARE_APPS -> SHARE_APPS
    int SHARE_FILE -> SHARE_FILE
    int SHARE_EMOJI -> SHARE_EMOJI
    cn.sharesdk.framework.f a -> a
    android.content.Context context -> context
    cn.sharesdk.framework.PlatformDb db -> db
    cn.sharesdk.framework.PlatformActionListener listener -> listener
    void a() -> a
    void initDevInfo(java.lang.String) -> initDevInfo
    void copyDevinfo(java.lang.String,java.lang.String) -> copyDevinfo
    void copyNetworkDevinfo(int,int) -> copyNetworkDevinfo
    java.lang.String getDevinfo(java.lang.String) -> getDevinfo
    java.lang.String getDevinfo(java.lang.String,java.lang.String) -> getDevinfo
    java.lang.String getNetworkDevinfo(java.lang.String,java.lang.String) -> getNetworkDevinfo
    java.lang.String getNetworkDevinfo(int,java.lang.String,java.lang.String) -> getNetworkDevinfo
    android.content.Context getContext() -> getContext
    java.lang.String getName() -> getName
    int getVersion() -> getVersion
    int getId() -> getId
    int getPlatformId() -> getPlatformId
    int getSortId() -> getSortId
    void setPlatformActionListener(cn.sharesdk.framework.PlatformActionListener) -> setPlatformActionListener
    cn.sharesdk.framework.PlatformActionListener getPlatformActionListener() -> getPlatformActionListener
    boolean isAuthValid() -> isAuthValid
    boolean isClientValid() -> isClientValid
    boolean isValid() -> isValid
    void SSOSetting(boolean) -> SSOSetting
    boolean isSSODisable() -> isSSODisable
    boolean b() -> b
    void authorize() -> authorize
    void authorize(java.lang.String[]) -> authorize
    void setNetworkDevinfo() -> setNetworkDevinfo
    void doAuthorize(java.lang.String[]) -> doAuthorize
    boolean checkAuthorize(int,java.lang.Object) -> checkAuthorize
    void innerAuthorize(int,java.lang.Object) -> innerAuthorize
    void share(cn.sharesdk.framework.Platform$ShareParams) -> share
    void doShare(cn.sharesdk.framework.Platform$ShareParams) -> doShare
    void followFriend(java.lang.String) -> followFriend
    void follow(java.lang.String) -> follow
    void getTimeLine(java.lang.String,int,int) -> getTimeLine
    void timeline(int,int,java.lang.String) -> timeline
    void showUser(java.lang.String) -> showUser
    void userInfor(java.lang.String) -> userInfor
    void listFriend(int,int,java.lang.String) -> listFriend
    void getFriendList(int,int,java.lang.String) -> getFriendList
    java.util.HashMap getFollowings(int,int,java.lang.String) -> getFollowings
    java.util.HashMap getFollowers(int,int,java.lang.String) -> getFollowers
    java.util.HashMap getBilaterals(int,int,java.lang.String) -> getBilaterals
    java.util.HashMap filterFriendshipInfo(int,java.util.HashMap) -> filterFriendshipInfo
    void customerProtocol(java.lang.String,java.lang.String,short,java.util.HashMap,java.util.HashMap) -> customerProtocol
    void doCustomerProtocol(java.lang.String,java.lang.String,int,java.util.HashMap,java.util.HashMap) -> doCustomerProtocol
    void afterRegister(int,java.lang.Object) -> afterRegister
    cn.sharesdk.framework.PlatformDb getDb() -> getDb
    void removeAccount() -> removeAccount
    void removeAccount(boolean) -> removeAccount
    java.lang.String getShortLintk(java.lang.String,boolean) -> getShortLintk
    cn.sharesdk.framework.statistics.b.f$a filterShareContent(cn.sharesdk.framework.Platform$ShareParams,java.util.HashMap) -> filterShareContent
    java.lang.String uploadImageToFileServer(java.lang.String) -> uploadImageToFileServer
    java.lang.String uploadImageToFileServer(android.graphics.Bitmap) -> uploadImageToFileServer
    boolean hasShareCallback() -> hasShareCallback
cn.sharesdk.framework.Platform$ShareParams -> cn.sharesdk.framework.Platform$ShareParams:
    java.lang.String text -> text
    java.lang.String imagePath -> imagePath
cn.sharesdk.framework.PlatformActionListener -> cn.sharesdk.framework.PlatformActionListener:
    void onComplete(cn.sharesdk.framework.Platform,int,java.util.HashMap) -> onComplete
    void onError(cn.sharesdk.framework.Platform,int,java.lang.Throwable) -> onError
    void onCancel(cn.sharesdk.framework.Platform,int) -> onCancel
cn.sharesdk.framework.PlatformDb -> cn.sharesdk.framework.PlatformDb:
    java.lang.String DB_NAME -> DB_NAME
    android.content.SharedPreferences db -> db
    java.lang.String platformNname -> platformNname
    int platformVersion -> platformVersion
    void put(java.lang.String,java.lang.String) -> put
    java.lang.String get(java.lang.String) -> get
    java.lang.String getToken() -> getToken
    void putToken(java.lang.String) -> putToken
    java.lang.String getTokenSecret() -> getTokenSecret
    void putTokenSecret(java.lang.String) -> putTokenSecret
    long getExpiresIn() -> getExpiresIn
    void putExpiresIn(long) -> putExpiresIn
    long getExpiresTime() -> getExpiresTime
    int getPlatformVersion() -> getPlatformVersion
    java.lang.String getPlatformNname() -> getPlatformNname
    void putUserId(java.lang.String) -> putUserId
    java.lang.String getUserId() -> getUserId
    java.lang.String getUserName() -> getUserName
    java.lang.String getUserIcon() -> getUserIcon
    void removeAccount() -> removeAccount
    java.lang.String exportData() -> exportData
    void importData(java.lang.String) -> importData
    boolean isValid() -> isValid
    java.lang.String getUserGender() -> getUserGender
cn.sharesdk.framework.ReflectablePlatformActionListener -> cn.sharesdk.framework.ReflectablePlatformActionListener:
    int a -> a
    android.os.Handler$Callback b -> b
    int c -> c
    android.os.Handler$Callback d -> d
    int e -> e
    android.os.Handler$Callback f -> f
    void setOnCompleteCallback(int,android.os.Handler$Callback) -> setOnCompleteCallback
    void onComplete(cn.sharesdk.framework.Platform,int,java.util.HashMap) -> onComplete
    void setOnErrorCallback(int,android.os.Handler$Callback) -> setOnErrorCallback
    void onError(cn.sharesdk.framework.Platform,int,java.lang.Throwable) -> onError
    void setOnCancelCallback(int,android.os.Handler$Callback) -> setOnCancelCallback
    void onCancel(cn.sharesdk.framework.Platform,int) -> onCancel
cn.sharesdk.framework.Service -> cn.sharesdk.framework.Service:
    android.content.Context a -> a
    java.lang.String b -> b
    void a(android.content.Context) -> a
    android.content.Context getContext() -> getContext
    void a(java.lang.String) -> a
    java.lang.String getAppKey() -> getAppKey
    java.lang.String getDeviceKey() -> getDeviceKey
    int getServiceVersionInt() -> getServiceVersionInt
    java.lang.String getServiceVersionName() -> getServiceVersionName
    void onBind() -> onBind
    void onUnbind() -> onUnbind
    android.content.Context a(cn.sharesdk.framework.Service) -> a
cn.sharesdk.framework.Service$ServiceEvent -> cn.sharesdk.framework.Service$ServiceEvent:
    int PLATFORM -> PLATFORM
    cn.sharesdk.framework.Service service -> service
    java.util.HashMap toMap() -> toMap
    java.lang.String toString() -> toString
    java.util.HashMap filterShareContent(int,cn.sharesdk.framework.Platform$ShareParams,java.util.HashMap) -> filterShareContent
cn.sharesdk.framework.ShareSDK -> cn.sharesdk.framework.ShareSDK:
    cn.sharesdk.framework.k a -> a
    boolean b -> b
    void initSDK(android.content.Context) -> initSDK
    void initSDK(android.content.Context,boolean) -> initSDK
    void initSDK(android.content.Context,java.lang.String) -> initSDK
    void initSDK(android.content.Context,java.lang.String,boolean) -> initSDK
    void stopSDK(android.content.Context) -> stopSDK
    void stopSDK() -> stopSDK
    void c() -> c
    void registerService(java.lang.Class) -> registerService
    void unregisterService(java.lang.Class) -> unregisterService
    cn.sharesdk.framework.Service getService(java.lang.Class) -> getService
    void registerPlatform(java.lang.Class) -> registerPlatform
    void unregisterPlatform(java.lang.Class) -> unregisterPlatform
    java.lang.String getSDKVersionName() -> getSDKVersionName
    int getSDKVersionCode() -> getSDKVersionCode
    void setConnTimeout(int) -> setConnTimeout
    void setReadTimeout(int) -> setReadTimeout
    void removeCookieOnAuthorize(boolean) -> removeCookieOnAuthorize
    void deleteCache() -> deleteCache
    cn.sharesdk.framework.Platform[] getPlatformList(android.content.Context) -> getPlatformList
    cn.sharesdk.framework.Platform[] getPlatformList() -> getPlatformList
    cn.sharesdk.framework.Platform getPlatform(android.content.Context,java.lang.String) -> getPlatform
    cn.sharesdk.framework.Platform getPlatform(java.lang.String) -> getPlatform
    void logDemoEvent(int,cn.sharesdk.framework.Platform) -> logDemoEvent
    void logApiEvent(java.lang.String,int) -> logApiEvent
    void setPlatformDevInfo(java.lang.String,java.util.HashMap) -> setPlatformDevInfo
    java.lang.String platformIdToName(int) -> platformIdToName
    int platformNameToId(java.lang.String) -> platformNameToId
    boolean isRemoveCookieOnAuthorize() -> isRemoveCookieOnAuthorize
    void closeDebug() -> closeDebug
    boolean isDebug() -> isDebug
    void a(java.lang.String,java.lang.String) -> a
    void a(int,int) -> a
    java.lang.String b(java.lang.String,java.lang.String) -> b
    java.lang.String a(int,java.lang.String) -> a
    boolean a() -> a
    boolean b() -> b
    boolean a(java.util.HashMap) -> a
    boolean b(java.util.HashMap) -> b
    java.lang.String a(java.lang.String,boolean,int,java.lang.String) -> a
    java.lang.String a(java.lang.String) -> a
    java.lang.String a(android.graphics.Bitmap) -> a
cn.sharesdk.framework.TitleLayout -> cn.sharesdk.framework.TitleLayout:
    android.widget.ImageView btnBack -> btnBack
    android.widget.TextView tvTitle -> tvTitle
    android.widget.TextView btnRight -> btnRight
    void init(android.content.Context) -> init
    android.widget.ImageView getBtnBack() -> getBtnBack
    android.widget.TextView getTvTitle() -> getTvTitle
    android.widget.TextView getBtnRight() -> getBtnRight
cn.sharesdk.framework.a -> cn.sharesdk.framework.a:
    cn.sharesdk.framework.PlatformActionListener a -> a
    java.util.HashMap b -> b
    void a(cn.sharesdk.framework.PlatformActionListener) -> a
    cn.sharesdk.framework.PlatformActionListener a() -> a
    void a(cn.sharesdk.framework.Platform,cn.sharesdk.framework.Platform$ShareParams) -> a
    void onError(cn.sharesdk.framework.Platform,int,java.lang.Throwable) -> onError
    void onComplete(cn.sharesdk.framework.Platform,int,java.util.HashMap) -> onComplete
    void onCancel(cn.sharesdk.framework.Platform,int) -> onCancel
    void a(cn.sharesdk.framework.Platform,int,java.util.HashMap) -> a
    void b(cn.sharesdk.framework.Platform,int,java.util.HashMap) -> b
    void a(int,cn.sharesdk.framework.Platform) -> a
    void a(cn.sharesdk.framework.Platform,int,java.lang.Object) -> a
    java.lang.String a(cn.sharesdk.framework.Platform) -> a
    java.lang.String b(cn.sharesdk.framework.Platform) -> b
    java.lang.String a(cn.sharesdk.framework.PlatformDb,java.lang.String[]) -> a
    cn.sharesdk.framework.PlatformActionListener a(cn.sharesdk.framework.a,cn.sharesdk.framework.PlatformActionListener) -> a
    cn.sharesdk.framework.PlatformActionListener a(cn.sharesdk.framework.a) -> a
    java.lang.String a(cn.sharesdk.framework.a,cn.sharesdk.framework.Platform) -> a
    void a(cn.sharesdk.framework.a,int,cn.sharesdk.framework.Platform) -> a
cn.sharesdk.framework.a.a -> cn.sharesdk.framework.a.a:
    cn.sharesdk.framework.a.a a -> a
    cn.sharesdk.framework.a.a a() -> a
    java.lang.String a(java.lang.String,java.util.ArrayList,java.lang.String,int) -> a
    java.lang.String a(java.lang.String,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList,java.lang.String,int) -> a
    java.lang.String b(java.lang.String,java.util.ArrayList,java.lang.String,int) -> b
    java.lang.String a(java.lang.String,java.util.ArrayList,com.mob.tools.network.KVPair,java.lang.String,int) -> a
    java.lang.String a(java.lang.String,java.util.ArrayList,com.mob.tools.network.KVPair,java.util.ArrayList,java.lang.String,int) -> a
    java.lang.String a(java.lang.String,java.util.ArrayList,com.mob.tools.network.KVPair,java.util.ArrayList,java.util.ArrayList,java.lang.String,int) -> a
    java.lang.String b(java.lang.String,java.util.ArrayList,com.mob.tools.network.KVPair,java.util.ArrayList,java.util.ArrayList,java.lang.String,int) -> b
    void a(java.lang.String,java.util.ArrayList,com.mob.tools.network.HTTPPart,com.mob.tools.network.RawNetworkCallback,java.lang.String,int) -> a
    java.lang.String b(java.lang.String,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList,java.lang.String,int) -> b
    void a(java.lang.String,int) -> a
cn.sharesdk.framework.authorize.AuthorizeAdapter -> cn.sharesdk.framework.authorize.AuthorizeAdapter:
    android.app.Activity activity -> activity
    cn.sharesdk.framework.TitleLayout title -> title
    android.webkit.WebView webview -> webview
    boolean noTitle -> noTitle
    java.lang.String platform -> platform
    android.widget.RelativeLayout rlBody -> rlBody
    boolean popUpAnimationDisable -> popUpAnimationDisable
    void setActivity(android.app.Activity) -> setActivity
    android.app.Activity getActivity() -> getActivity
    void setTitleView(cn.sharesdk.framework.TitleLayout) -> setTitleView
    cn.sharesdk.framework.TitleLayout getTitleLayout() -> getTitleLayout
    void setWebView(android.webkit.WebView) -> setWebView
    android.webkit.WebView getWebBody() -> getWebBody
    void setNotitle(boolean) -> setNotitle
    boolean isNotitle() -> isNotitle
    void setPlatformName(java.lang.String) -> setPlatformName
    java.lang.String getPlatformName() -> getPlatformName
    void setBodyView(android.widget.RelativeLayout) -> setBodyView
    android.widget.RelativeLayout getBodyView() -> getBodyView
    void onCreate() -> onCreate
    void onResize(int,int,int,int) -> onResize
    void onDestroy() -> onDestroy
    boolean onKeyEvent(int,android.view.KeyEvent) -> onKeyEvent
    void disablePopUpAnimation() -> disablePopUpAnimation
    boolean isPopUpAnimationDisable() -> isPopUpAnimationDisable
    void onStart() -> onStart
    void onPause() -> onPause
    void onResume() -> onResume
    void onStop() -> onStop
    void onRestart() -> onRestart
    boolean onFinish() -> onFinish
    void hideShareSDKLogo() -> hideShareSDKLogo
cn.sharesdk.framework.authorize.AuthorizeHelper -> cn.sharesdk.framework.authorize.AuthorizeHelper:
    cn.sharesdk.framework.Platform getPlatform() -> getPlatform
    cn.sharesdk.framework.authorize.b getAuthorizeWebviewClient(cn.sharesdk.framework.authorize.g) -> getAuthorizeWebviewClient
    cn.sharesdk.framework.authorize.AuthorizeListener getAuthorizeListener() -> getAuthorizeListener
    java.lang.String getAuthorizeUrl() -> getAuthorizeUrl
    java.lang.String getRedirectUri() -> getRedirectUri
    cn.sharesdk.framework.authorize.f getSSOProcessor(cn.sharesdk.framework.authorize.e) -> getSSOProcessor
    cn.sharesdk.framework.authorize.SSOListener getSSOListener() -> getSSOListener
cn.sharesdk.framework.authorize.AuthorizeListener -> cn.sharesdk.framework.authorize.AuthorizeListener:
    void onComplete(android.os.Bundle) -> onComplete
    void onError(java.lang.Throwable) -> onError
    void onCancel() -> onCancel
cn.sharesdk.framework.authorize.RegisterView -> cn.sharesdk.framework.authorize.RegisterView:
    cn.sharesdk.framework.TitleLayout a -> a
    android.widget.RelativeLayout b -> b
    android.webkit.WebView c -> c
    android.widget.TextView d -> d
    void a(android.content.Context) -> a
    int b(android.content.Context) -> b
    android.view.View a() -> a
    void a(boolean) -> a
    android.webkit.WebView b() -> b
    cn.sharesdk.framework.TitleLayout c() -> c
    android.widget.RelativeLayout d() -> d
    android.widget.TextView a(cn.sharesdk.framework.authorize.RegisterView) -> a
cn.sharesdk.framework.authorize.ResizeLayout -> cn.sharesdk.framework.authorize.ResizeLayout:
    cn.sharesdk.framework.authorize.ResizeLayout$OnResizeListener a -> a
    void a(cn.sharesdk.framework.authorize.ResizeLayout$OnResizeListener) -> a
    void onSizeChanged(int,int,int,int) -> onSizeChanged
cn.sharesdk.framework.authorize.ResizeLayout$OnResizeListener -> cn.sharesdk.framework.authorize.ResizeLayout$OnResizeListener:
    void OnResize(int,int,int,int) -> OnResize
cn.sharesdk.framework.authorize.SSOListener -> cn.sharesdk.framework.authorize.SSOListener:
    void onFailed(java.lang.Throwable) -> onFailed
    void onCancel() -> onCancel
    void onComplete(android.os.Bundle) -> onComplete
cn.sharesdk.framework.authorize.a -> cn.sharesdk.framework.authorize.a:
    cn.sharesdk.framework.authorize.AuthorizeHelper a -> a
    void a(cn.sharesdk.framework.authorize.AuthorizeHelper) -> a
    void show(android.content.Context,android.content.Intent) -> show
    cn.sharesdk.framework.authorize.AuthorizeHelper a() -> a
cn.sharesdk.framework.authorize.b -> cn.sharesdk.framework.authorize.b:
    cn.sharesdk.framework.authorize.g a -> a
    java.lang.String b -> b
    cn.sharesdk.framework.authorize.AuthorizeListener c -> c
    void onReceivedError(android.webkit.WebView,int,java.lang.String,java.lang.String) -> onReceivedError
    void onReceivedSslError(android.webkit.WebView,android.webkit.SslErrorHandler,android.net.http.SslError) -> onReceivedSslError
cn.sharesdk.framework.authorize.c -> cn.sharesdk.framework.authorize.c:
    cn.sharesdk.framework.authorize.RegisterView a -> a
    void onClick(android.view.View) -> onClick
cn.sharesdk.framework.authorize.d -> cn.sharesdk.framework.authorize.d:
    int a -> a
    cn.sharesdk.framework.authorize.RegisterView b -> b
    void onProgressChanged(android.webkit.WebView,int) -> onProgressChanged
cn.sharesdk.framework.authorize.e -> cn.sharesdk.framework.authorize.e:
    cn.sharesdk.framework.authorize.f c -> c
    cn.sharesdk.framework.authorize.SSOListener b -> b
    void a(cn.sharesdk.framework.authorize.SSOListener) -> a
    void onCreate() -> onCreate
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onNewIntent(android.content.Intent) -> onNewIntent
cn.sharesdk.framework.authorize.f -> cn.sharesdk.framework.authorize.f:
    cn.sharesdk.framework.authorize.e a -> a
    int b -> b
    cn.sharesdk.framework.authorize.SSOListener c -> c
    void a() -> a
    void a(int) -> a
    void a(int,int,android.content.Intent) -> a
    void a(android.content.Intent) -> a
cn.sharesdk.framework.authorize.g -> cn.sharesdk.framework.authorize.g:
    cn.sharesdk.framework.authorize.AuthorizeAdapter c -> c
    cn.sharesdk.framework.authorize.RegisterView d -> d
    android.webkit.WebView e -> e
    cn.sharesdk.framework.authorize.AuthorizeListener b -> b
    void a(cn.sharesdk.framework.authorize.AuthorizeListener) -> a
    void setActivity(android.app.Activity) -> setActivity
    cn.sharesdk.framework.authorize.AuthorizeAdapter c() -> c
    void onCreate() -> onCreate
    cn.sharesdk.framework.authorize.RegisterView b() -> b
    boolean handleMessage(android.os.Message) -> handleMessage
    void OnResize(int,int,int,int) -> OnResize
    boolean onKeyEvent(int,android.view.KeyEvent) -> onKeyEvent
    void onStart() -> onStart
    void onPause() -> onPause
    void onResume() -> onResume
    void onStop() -> onStop
    void onRestart() -> onRestart
    boolean onFinish() -> onFinish
    void onDestroy() -> onDestroy
    android.app.Activity a(cn.sharesdk.framework.authorize.g) -> a
    android.app.Activity b(cn.sharesdk.framework.authorize.g) -> b
cn.sharesdk.framework.authorize.g$a -> cn.sharesdk.framework.authorize.g$a:
    float[] a -> a
    float getInterpolation(float) -> getInterpolation
cn.sharesdk.framework.authorize.h -> cn.sharesdk.framework.authorize.h:
    cn.sharesdk.framework.authorize.g a -> a
    void onClick(android.view.View) -> onClick
cn.sharesdk.framework.authorize.i -> cn.sharesdk.framework.authorize.i:
    cn.sharesdk.framework.authorize.h a -> a
    void run() -> run
cn.sharesdk.framework.authorize.j -> cn.sharesdk.framework.authorize.j:
    cn.sharesdk.framework.authorize.g a -> a
    void run() -> run
cn.sharesdk.framework.b -> cn.sharesdk.framework.b:
    cn.sharesdk.framework.PlatformActionListener a -> a
    int b -> b
    java.util.HashMap c -> c
    cn.sharesdk.framework.a d -> d
    void onComplete(cn.sharesdk.framework.Platform,int,java.util.HashMap) -> onComplete
    void onError(cn.sharesdk.framework.Platform,int,java.lang.Throwable) -> onError
    void onCancel(cn.sharesdk.framework.Platform,int) -> onCancel
cn.sharesdk.framework.c -> cn.sharesdk.framework.c:
    cn.sharesdk.framework.PlatformActionListener a -> a
    int b -> b
    java.lang.Object c -> c
    cn.sharesdk.framework.a d -> d
    void onError(cn.sharesdk.framework.Platform,int,java.lang.Throwable) -> onError
    void onComplete(cn.sharesdk.framework.Platform,int,java.util.HashMap) -> onComplete
    void onCancel(cn.sharesdk.framework.Platform,int) -> onCancel
cn.sharesdk.framework.d -> cn.sharesdk.framework.d:
    java.lang.String TEXT -> TEXT
    java.lang.String IMAGE_PATH -> IMAGE_PATH
    java.lang.String FILE_PATH -> FILE_PATH
    java.lang.String TITLE -> TITLE
    java.lang.String NOTEBOOK -> NOTEBOOK
    java.lang.String STACK -> STACK
    java.lang.String TAGS -> TAGS
    java.lang.String IS_PUBLIC -> IS_PUBLIC
    java.lang.String IS_FRIEND -> IS_FRIEND
    java.lang.String IS_FAMILY -> IS_FAMILY
    java.lang.String SAFETY_LEVEL -> SAFETY_LEVEL
    java.lang.String CONTENT_TYPE -> CONTENT_TYPE
    java.lang.String HIDDEN -> HIDDEN
    java.lang.String VENUE_NAME -> VENUE_NAME
    java.lang.String VENUE_DESCRIPTION -> VENUE_DESCRIPTION
    java.lang.String LATITUDE -> LATITUDE
    java.lang.String LONGITUDE -> LONGITUDE
    java.lang.String IMAGE_URL -> IMAGE_URL
    java.lang.String COMMENT -> COMMENT
    java.lang.String TITLE_URL -> TITLE_URL
    java.lang.String URL -> URL
    java.lang.String ADDRESS -> ADDRESS
    java.lang.String SITE -> SITE
    java.lang.String SITE_URL -> SITE_URL
    java.lang.String GROPU_ID -> GROPU_ID
    java.lang.String EXT_INFO -> EXT_INFO
    java.lang.String SHARE_TYPE -> SHARE_TYPE
    java.lang.String MUSIC_URL -> MUSIC_URL
    java.lang.String IMAGE_DATA -> IMAGE_DATA
    java.lang.String AUTHOR -> AUTHOR
    java.lang.String SCENCE -> SCENCE
    java.lang.String CUSTOM_FLAG -> CUSTOM_FLAG
    java.lang.String EXECUTE_URL -> EXECUTE_URL
    java.lang.String INSTALL_URL -> INSTALL_URL
    java.lang.String IS_SHARE_TENCENT_WEIBO -> IS_SHARE_TENCENT_WEIBO
    java.lang.String IMAGE_ARRAY -> IMAGE_ARRAY
    java.util.HashMap params -> params
    void set(java.lang.String,java.lang.Object) -> set
    java.lang.Object get(java.lang.String,java.lang.Class) -> get
    java.util.HashMap toMap() -> toMap
    java.lang.String toString() -> toString
    void setText(java.lang.String) -> setText
    java.lang.String getText() -> getText
    void setImagePath(java.lang.String) -> setImagePath
    java.lang.String getImagePath() -> getImagePath
    void setImageUrl(java.lang.String) -> setImageUrl
    java.lang.String getImageUrl() -> getImageUrl
    void setFilePath(java.lang.String) -> setFilePath
    java.lang.String getFilePath() -> getFilePath
    java.lang.String getTitle() -> getTitle
    void setTitle(java.lang.String) -> setTitle
    java.lang.String getNotebook() -> getNotebook
    void setNotebook(java.lang.String) -> setNotebook
    java.lang.String getStack() -> getStack
    void setStack(java.lang.String) -> setStack
    java.lang.String[] getTags() -> getTags
    void setTags(java.lang.String[]) -> setTags
    boolean isPublic() -> isPublic
    void setPublic(boolean) -> setPublic
    boolean isFriend() -> isFriend
    void setFriend(boolean) -> setFriend
    boolean isFamily() -> isFamily
    void setFamily(boolean) -> setFamily
    int getSafetyLevel() -> getSafetyLevel
    void setSafetyLevel(int) -> setSafetyLevel
    int getContentType() -> getContentType
    void setContentType(int) -> setContentType
    int getHidden() -> getHidden
    void setHidden(int) -> setHidden
    void setVenueName(java.lang.String) -> setVenueName
    java.lang.String getVenueName() -> getVenueName
    java.lang.String getVenueDescription() -> getVenueDescription
    void setVenueDescription(java.lang.String) -> setVenueDescription
    float getLatitude() -> getLatitude
    void setLatitude(float) -> setLatitude
    float getLongitude() -> getLongitude
    void setLongitude(float) -> setLongitude
    java.lang.String getTitleUrl() -> getTitleUrl
    void setTitleUrl(java.lang.String) -> setTitleUrl
    java.lang.String getComment() -> getComment
    void setComment(java.lang.String) -> setComment
    java.lang.String getUrl() -> getUrl
    void setUrl(java.lang.String) -> setUrl
    java.lang.String getAddress() -> getAddress
    void setAddress(java.lang.String) -> setAddress
    java.lang.String getMusicUrl() -> getMusicUrl
    void setMusicUrl(java.lang.String) -> setMusicUrl
    java.lang.String getSite() -> getSite
    void setSite(java.lang.String) -> setSite
    java.lang.String getSiteUrl() -> getSiteUrl
    void setSiteUrl(java.lang.String) -> setSiteUrl
    java.lang.String getGroupId() -> getGroupId
    void setGroupId(java.lang.String) -> setGroupId
    java.lang.String getAuthor() -> getAuthor
    void setAuthor(java.lang.String) -> setAuthor
    android.graphics.Bitmap getImageData() -> getImageData
    void setImageData(android.graphics.Bitmap) -> setImageData
    int getShareType() -> getShareType
    void setShareType(int) -> setShareType
    int getScence() -> getScence
    void setScence(int) -> setScence
    java.lang.String getExtInfo() -> getExtInfo
    void setExtInfo(java.lang.String) -> setExtInfo
    java.lang.String[] getCustomFlag() -> getCustomFlag
    void setCustomFlag(java.lang.String[]) -> setCustomFlag
    java.lang.String getExecuteUrl() -> getExecuteUrl
    void setExecuteUrl() -> setExecuteUrl
    java.lang.String getInstallUrl() -> getInstallUrl
    void setInstallUrl() -> setInstallUrl
    boolean isShareTencentWeibo() -> isShareTencentWeibo
    void setShareTencentWeibo(boolean) -> setShareTencentWeibo
    java.lang.String[] getImageArray() -> getImageArray
    void setImageArray(java.lang.String[]) -> setImageArray
cn.sharesdk.framework.e -> cn.sharesdk.framework.e:
    cn.sharesdk.framework.Platform a -> a
    cn.sharesdk.framework.authorize.AuthorizeListener b -> b
    cn.sharesdk.framework.authorize.SSOListener c -> c
    cn.sharesdk.framework.Platform getPlatform() -> getPlatform
    cn.sharesdk.framework.authorize.f getSSOProcessor(cn.sharesdk.framework.authorize.e) -> getSSOProcessor
    int c() -> c
    void b(cn.sharesdk.framework.authorize.AuthorizeListener) -> b
    cn.sharesdk.framework.authorize.AuthorizeListener getAuthorizeListener() -> getAuthorizeListener
    void a(cn.sharesdk.framework.authorize.SSOListener) -> a
    cn.sharesdk.framework.authorize.SSOListener getSSOListener() -> getSSOListener
cn.sharesdk.framework.f -> cn.sharesdk.framework.f:
    cn.sharesdk.framework.Platform a -> a
    android.content.Context b -> b
    cn.sharesdk.framework.PlatformDb c -> c
    cn.sharesdk.framework.a d -> d
    int e -> e
    int f -> f
    boolean g -> g
    boolean h -> h
    boolean i -> i
    void a(java.lang.String) -> a
    int a() -> a
    int b() -> b
    void a(cn.sharesdk.framework.PlatformActionListener) -> a
    cn.sharesdk.framework.PlatformActionListener c() -> c
    boolean d() -> d
    void a(boolean) -> a
    boolean e() -> e
    boolean f() -> f
    boolean j() -> j
    java.lang.String a(int,java.lang.String,java.lang.String) -> a
    void a(int,java.lang.Object) -> a
    void b(int,java.lang.Object) -> b
    void c(int,java.lang.Object) -> c
    void a(java.lang.String[]) -> a
    void a(cn.sharesdk.framework.Platform$ShareParams) -> a
    void b(java.lang.String) -> b
    void a(java.lang.String,int,int) -> a
    void c(java.lang.String) -> c
    void a(int,int,java.lang.String) -> a
    void a(java.lang.String,java.lang.String,short,java.util.HashMap,java.util.HashMap) -> a
    cn.sharesdk.framework.PlatformDb g() -> g
    void h() -> h
    java.lang.String a(java.lang.String,boolean) -> a
    java.lang.String k() -> k
    cn.sharesdk.framework.PlatformActionListener i() -> i
    java.lang.String d(java.lang.String) -> d
    java.lang.String a(android.graphics.Bitmap) -> a
    boolean a(cn.sharesdk.framework.f) -> a
    cn.sharesdk.framework.Platform b(cn.sharesdk.framework.f) -> b
cn.sharesdk.framework.g -> cn.sharesdk.framework.g:
    int a -> a
    java.lang.Object b -> b
    cn.sharesdk.framework.f c -> c
    void run() -> run
cn.sharesdk.framework.h -> cn.sharesdk.framework.h:
    java.lang.String[] a -> a
    cn.sharesdk.framework.f b -> b
    void run() -> run
cn.sharesdk.framework.i -> cn.sharesdk.framework.i:
    boolean a -> a
    java.util.ArrayList a(android.content.Context) -> a
    android.content.pm.PackageInfo c(android.content.Context) -> c
    java.util.ArrayList a(android.content.pm.PackageInfo,android.content.Context) -> a
    java.util.ArrayList d(android.content.Context) -> d
    void a(java.util.ArrayList) -> a
    void a(android.content.Context,java.lang.String,android.os.Handler,boolean,int) -> a
    void b(android.content.Context) -> b
    void a(int,cn.sharesdk.framework.Platform) -> a
    void a(java.lang.String,int) -> a
    void a(cn.sharesdk.framework.k) -> a
    java.lang.String a(int,java.lang.String,java.util.HashMap) -> a
    boolean a(java.util.HashMap,java.util.HashMap) -> a
    java.lang.String a(android.content.Context,java.lang.String,java.lang.String,boolean,int,java.lang.String) -> a
    java.lang.String a(android.content.Context,java.lang.String) -> a
    java.lang.String a(android.content.Context,android.graphics.Bitmap) -> a
    java.lang.String a() -> a
    int b() -> b
    void a(int,int,java.util.HashMap) -> a
cn.sharesdk.framework.j -> cn.sharesdk.framework.j:
    cn.sharesdk.framework.i a -> a
    int a(cn.sharesdk.framework.Platform,cn.sharesdk.framework.Platform) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
cn.sharesdk.framework.k -> cn.sharesdk.framework.k:
    cn.sharesdk.framework.k$a a -> a
    android.content.Context b -> b
    java.util.HashMap c -> c
    java.util.ArrayList d -> d
    java.util.HashMap e -> e
    java.util.HashMap f -> f
    java.util.HashMap g -> g
    java.util.HashMap h -> h
    java.util.HashMap i -> i
    java.lang.String j -> j
    boolean k -> k
    java.lang.String l -> l
    boolean m -> m
    boolean n -> n
    void a(java.lang.String) -> a
    void a(boolean) -> a
    void startThread() -> startThread
    void h() -> h
    void i() -> i
    void onStart(android.os.Message) -> onStart
    void j() -> j
    void k() -> k
    void l() -> l
    void onStop(android.os.Message) -> onStop
    void onMessage(android.os.Message) -> onMessage
    void a(java.lang.Class) -> a
    void b(java.lang.Class) -> b
    cn.sharesdk.framework.Service c(java.lang.Class) -> c
    void d(java.lang.Class) -> d
    void e(java.lang.Class) -> e
    cn.sharesdk.framework.Platform b(java.lang.String) -> b
    cn.sharesdk.framework.Platform[] a() -> a
    java.lang.String b() -> b
    int c() -> c
    void a(int) -> a
    void b(int) -> b
    void b(boolean) -> b
    boolean d() -> d
    void a(int,cn.sharesdk.framework.Platform) -> a
    void a(java.lang.String,int) -> a
    void a(java.lang.String,java.util.HashMap) -> a
    java.lang.String c(int) -> c
    int c(java.lang.String) -> c
    void a(java.lang.String,java.lang.String) -> a
    void a(int,int) -> a
    java.lang.String b(java.lang.String,java.lang.String) -> b
    java.lang.String a(int,java.lang.String) -> a
    boolean e() -> e
    boolean f() -> f
    boolean a(java.util.HashMap) -> a
    boolean a(cn.sharesdk.framework.statistics.a,java.util.HashMap,java.util.HashMap) -> a
    boolean b(java.util.HashMap) -> b
    java.lang.String a(java.lang.String,boolean,int,java.lang.String) -> a
    java.lang.String d(java.lang.String) -> d
    java.lang.String a(android.graphics.Bitmap) -> a
    void g() -> g
    java.lang.String a(cn.sharesdk.framework.k) -> a
    boolean a(cn.sharesdk.framework.k,cn.sharesdk.framework.statistics.a,java.util.HashMap,java.util.HashMap) -> a
cn.sharesdk.framework.k$a -> cn.sharesdk.framework.k$a:
    cn.sharesdk.framework.k$a a -> a
    cn.sharesdk.framework.k$a b -> b
    cn.sharesdk.framework.k$a c -> c
    cn.sharesdk.framework.k$a[] d -> d
    cn.sharesdk.framework.k$a[] values() -> values
    cn.sharesdk.framework.k$a valueOf(java.lang.String) -> valueOf
cn.sharesdk.framework.l -> cn.sharesdk.framework.l:
    cn.sharesdk.framework.k a -> a
    void run() -> run
cn.sharesdk.framework.m -> cn.sharesdk.framework.m:
    cn.sharesdk.framework.statistics.a a -> a
    cn.sharesdk.framework.k b -> b
    void run() -> run
cn.sharesdk.framework.n -> cn.sharesdk.framework.n:
    android.widget.ImageView a -> a
    cn.sharesdk.framework.TitleLayout b -> b
    void setVisibility(int) -> setVisibility
cn.sharesdk.framework.statistics.NewAppReceiver -> cn.sharesdk.framework.statistics.NewAppReceiver:
    java.lang.String[] a -> a
    cn.sharesdk.framework.statistics.NewAppReceiver b -> b
    android.content.Context c -> c
    android.content.IntentFilter[] d -> d
    android.os.Handler e -> e
    void a(android.content.Context) -> a
    void a() -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
    boolean a(java.lang.String) -> a
    boolean handleMessage(android.os.Message) -> handleMessage
cn.sharesdk.framework.statistics.NewAppReceiver$a -> cn.sharesdk.framework.statistics.NewAppReceiver$a:
    com.mob.tools.utils.LocalDB a -> a
    java.util.ArrayList a() -> a
    void a(java.util.ArrayList) -> a
    long b() -> b
    void a(long) -> a
cn.sharesdk.framework.statistics.NewAppReceiver$b -> cn.sharesdk.framework.statistics.NewAppReceiver$b:
    android.content.Context a -> a
    cn.sharesdk.framework.statistics.NewAppReceiver$a b -> b
    void a(android.content.Context) -> a
    void run() -> run
    java.util.HashMap a(java.util.ArrayList) -> a
    java.util.ArrayList a(java.util.HashMap) -> a
cn.sharesdk.framework.statistics.a -> cn.sharesdk.framework.statistics.a:
    cn.sharesdk.framework.statistics.a a -> a
    cn.sharesdk.framework.statistics.c b -> b
    cn.sharesdk.framework.statistics.a.c c -> c
    boolean d -> d
    cn.sharesdk.framework.statistics.a a(android.content.Context) -> a
    void a(java.lang.String,java.util.ArrayList) -> a
    void a(java.lang.String) -> a
    void b(java.lang.String) -> b
    void c(java.lang.String) -> c
    void d(java.lang.String) -> d
    void a(boolean) -> a
    void a(cn.sharesdk.framework.statistics.b.c) -> a
    void a(cn.sharesdk.framework.statistics.b.b) -> a
    void a(cn.sharesdk.framework.statistics.b.f) -> a
    java.lang.String a(java.lang.String,cn.sharesdk.framework.statistics.b) -> a
    java.lang.String h(java.lang.String) -> h
    java.lang.String a(android.graphics.Bitmap,cn.sharesdk.framework.statistics.b) -> a
    void a() -> a
    java.lang.String i(java.lang.String) -> i
    boolean a(java.lang.String,boolean) -> a
    java.lang.String a(java.lang.String,java.lang.String,int,boolean,java.lang.String) -> a
    java.lang.String a(java.lang.String,java.lang.String,java.lang.String,int,java.lang.String) -> a
    java.lang.String e(java.lang.String) -> e
    java.lang.String a(android.graphics.Bitmap) -> a
    java.util.HashMap f(java.lang.String) -> f
    java.util.HashMap g(java.lang.String) -> g
    void a(java.lang.String,java.util.HashMap) -> a
    java.util.HashMap a(java.lang.String,java.lang.String) -> a
cn.sharesdk.framework.statistics.a.a -> cn.sharesdk.framework.statistics.a.a:
    void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
    void onOpen(android.database.sqlite.SQLiteDatabase) -> onOpen
    void close() -> close
cn.sharesdk.framework.statistics.a.b -> cn.sharesdk.framework.statistics.a.b:
    android.content.Context a -> a
    cn.sharesdk.framework.statistics.a.a b -> b
    cn.sharesdk.framework.statistics.a.b c -> c
    cn.sharesdk.framework.statistics.a.b a(android.content.Context) -> a
    android.database.Cursor a(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String) -> a
    long a(java.lang.String,android.content.ContentValues) -> a
    int a(java.lang.String,java.lang.String,java.lang.String[]) -> a
    int a(java.lang.String) -> a
cn.sharesdk.framework.statistics.a.c -> cn.sharesdk.framework.statistics.a.c:
    android.content.Context a -> a
    android.content.SharedPreferences b -> b
    cn.sharesdk.framework.statistics.a.c c -> c
    cn.sharesdk.framework.statistics.a.c a(android.content.Context) -> a
    void a(java.lang.String,java.lang.String) -> a
    java.lang.String a(java.lang.String) -> a
    void a(java.lang.String,java.lang.Boolean) -> a
    void a(java.lang.String,java.lang.Long) -> a
    long b(java.lang.String) -> b
    void a(java.lang.String,int) -> a
    int c(java.lang.String) -> c
    long a() -> a
    boolean b() -> b
    boolean c() -> c
    int d() -> d
    void d(java.lang.String) -> d
    void e(java.lang.String) -> e
    void f(java.lang.String) -> f
    void b(java.lang.String,java.lang.String) -> b
    java.lang.String g(java.lang.String) -> g
    void h(java.lang.String) -> h
    java.lang.String e() -> e
    void i(java.lang.String) -> i
    java.lang.String f() -> f
    void a(long) -> a
    java.lang.Long g() -> g
    void a(boolean) -> a
    boolean h() -> h
    void b(long) -> b
    java.lang.Long i() -> i
cn.sharesdk.framework.statistics.a.d -> cn.sharesdk.framework.statistics.a.d:
    java.lang.String a -> a
    java.util.ArrayList b -> b
cn.sharesdk.framework.statistics.a.e -> cn.sharesdk.framework.statistics.a.e:
    int a -> a
    int b -> b
    int c -> c
    long a(android.content.Context,java.lang.String,long) -> a
    long a(android.content.Context,java.util.ArrayList) -> a
    java.util.ArrayList a(android.content.Context,java.lang.String,java.lang.String[]) -> a
    java.util.ArrayList a(android.content.Context) -> a
cn.sharesdk.framework.statistics.b -> cn.sharesdk.framework.statistics.b:
    cn.sharesdk.framework.statistics.b a -> a
    cn.sharesdk.framework.statistics.b b -> b
    cn.sharesdk.framework.statistics.b[] c -> c
    cn.sharesdk.framework.statistics.b[] values() -> values
    cn.sharesdk.framework.statistics.b valueOf(java.lang.String) -> valueOf
cn.sharesdk.framework.statistics.b.a -> cn.sharesdk.framework.statistics.b.a:
    int c -> c
    long d -> d
    int a -> a
    java.lang.String b -> b
    java.lang.String a() -> a
    java.lang.String toString() -> toString
    int b() -> b
    int c() -> c
    long d() -> d
    long e() -> e
    void f() -> f
    void a(long) -> a
cn.sharesdk.framework.statistics.b.b -> cn.sharesdk.framework.statistics.b.b:
    int n -> n
    long o -> o
    int a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String a() -> a
    java.lang.String toString() -> toString
    int b() -> b
    int c() -> c
    long d() -> d
    long e() -> e
    void f() -> f
    void a(long) -> a
cn.sharesdk.framework.statistics.b.c -> cn.sharesdk.framework.statistics.b.c:
    long e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    int i -> i
    java.lang.String j -> j
    int k -> k
    java.lang.String l -> l
    java.lang.String m -> m
    java.lang.String a() -> a
    int b() -> b
    int c() -> c
    long e() -> e
    long d() -> d
    void a(long) -> a
    void f() -> f
    boolean a(android.content.Context) -> a
    void b(android.content.Context) -> b
    java.lang.String toString() -> toString
cn.sharesdk.framework.statistics.b.d -> cn.sharesdk.framework.statistics.b.d:
    int d -> d
    long n -> n
    java.lang.String a -> a
    int b -> b
    java.lang.String c -> c
    java.lang.String a() -> a
    java.lang.String toString() -> toString
    int b() -> b
    int c() -> c
    long d() -> d
    long e() -> e
    void f() -> f
    void a(long) -> a
cn.sharesdk.framework.statistics.b.e -> cn.sharesdk.framework.statistics.b.e:
    int b -> b
    long c -> c
    long a -> a
    java.lang.String a() -> a
    int b() -> b
    int c() -> c
    boolean a(android.content.Context) -> a
    void b(android.content.Context) -> b
    long d() -> d
    long e() -> e
    void f() -> f
    void a(long) -> a
    java.lang.String toString() -> toString
cn.sharesdk.framework.statistics.b.f -> cn.sharesdk.framework.statistics.b.f:
    int p -> p
    long q -> q
    int a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    cn.sharesdk.framework.statistics.b.f$a d -> d
    java.lang.String n -> n
    java.lang.String[] o -> o
    java.lang.String a() -> a
    java.lang.String toString() -> toString
    int b() -> b
    int c() -> c
    long d() -> d
    long e() -> e
    void f() -> f
    void a(long) -> a
cn.sharesdk.framework.statistics.b.f$a -> cn.sharesdk.framework.statistics.b.f$a:
    java.lang.String a -> a
    java.lang.String b -> b
    java.util.ArrayList c -> c
    java.util.ArrayList d -> d
    java.util.ArrayList e -> e
    java.util.ArrayList f -> f
    java.util.HashMap g -> g
    java.lang.String toString() -> toString
cn.sharesdk.framework.statistics.b.g -> cn.sharesdk.framework.statistics.b.g:
    int a -> a
    long b -> b
    java.lang.String a() -> a
    int b() -> b
    int c() -> c
    boolean a(android.content.Context) -> a
    void b(android.content.Context) -> b
    long d() -> d
    long e() -> e
    void f() -> f
    void a(long) -> a
    java.lang.String toString() -> toString
cn.sharesdk.framework.statistics.c -> cn.sharesdk.framework.statistics.c:
    android.content.Context a -> a
    cn.sharesdk.framework.statistics.a.c b -> b
    com.mob.tools.utils.DeviceHelper c -> c
    com.mob.tools.network.NetworkHelper d -> d
    com.mob.tools.utils.Hashon e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    boolean h -> h
    void e() -> e
    java.lang.String f() -> f
    java.util.HashMap a(java.lang.String) -> a
    java.lang.String g() -> g
    long a() -> a
    java.lang.String h() -> h
    java.util.HashMap b(java.lang.String) -> b
    void c(java.lang.String) -> c
    java.lang.String i() -> i
    void a(java.lang.String,java.util.HashMap) -> a
    java.lang.String c(java.lang.String,java.util.HashMap) -> c
    java.util.HashMap b() -> b
    void a(java.lang.String,java.lang.String) -> a
    java.lang.String c() -> c
    void a(java.lang.String,java.util.ArrayList) -> a
    java.lang.String j() -> j
    java.util.HashMap d(java.lang.String) -> d
    java.lang.String k() -> k
    void a(java.lang.String,boolean) -> a
    java.lang.String l() -> l
    java.util.HashMap a(java.lang.String,java.lang.String,java.util.ArrayList,int,java.lang.String) -> a
    java.lang.String c(java.lang.String,java.lang.String) -> c
    java.lang.String m() -> m
    java.util.HashMap e(java.lang.String) -> e
    void a(cn.sharesdk.framework.statistics.b.c) -> a
    java.util.ArrayList d() -> d
    void a(java.util.ArrayList) -> a
    java.util.HashMap f(java.lang.String) -> f
    void b(java.lang.String,java.util.HashMap) -> b
    java.util.HashMap b(java.lang.String,java.lang.String) -> b
cn.sharesdk.framework.statistics.d -> cn.sharesdk.framework.statistics.d:
    cn.sharesdk.framework.statistics.d a -> a
    android.content.Context b -> b
    com.mob.tools.utils.DeviceHelper c -> c
    cn.sharesdk.framework.statistics.a d -> d
    java.lang.String e -> e
    android.os.Handler f -> f
    boolean g -> g
    int h -> h
    boolean i -> i
    long j -> j
    boolean k -> k
    cn.sharesdk.framework.statistics.d a(android.content.Context) -> a
    void a(java.lang.String) -> a
    void a(android.os.Handler) -> a
    void a(boolean) -> a
    void a(int) -> a
    void onStart(android.os.Message) -> onStart
    void onStop(android.os.Message) -> onStop
    void a(cn.sharesdk.framework.statistics.b.c) -> a
    void b(cn.sharesdk.framework.statistics.b.c) -> b
    void onMessage(android.os.Message) -> onMessage
    void c(cn.sharesdk.framework.statistics.b.c) -> c
    void a() -> a
    boolean b() -> b
    void c() -> c
cn.sharesdk.framework.utils.Escaper -> cn.sharesdk.framework.utils.Escaper:
    java.lang.String escape(java.lang.String) -> escape
    java.lang.Appendable escape(java.lang.Appendable) -> escape
cn.sharesdk.framework.utils.a -> cn.sharesdk.framework.utils.a:
    cn.sharesdk.framework.utils.a$b a -> a
    cn.sharesdk.framework.utils.b b -> b
    void a(java.lang.String,java.lang.String,java.lang.String) -> a
    cn.sharesdk.framework.utils.a$b a() -> a
    java.util.ArrayList a(java.lang.String,java.util.ArrayList) -> a
    java.util.ArrayList a(java.lang.String,java.util.ArrayList,cn.sharesdk.framework.utils.a$a) -> a
    java.util.ArrayList b(java.lang.String,java.util.ArrayList) -> b
    java.util.ArrayList b(java.lang.String,java.util.ArrayList,cn.sharesdk.framework.utils.a$a) -> b
    java.util.ArrayList c(java.lang.String,java.util.ArrayList,cn.sharesdk.framework.utils.a$a) -> c
    void a(java.lang.String,java.lang.String) -> a
    java.util.ArrayList a(java.lang.String,java.lang.String,java.util.ArrayList,cn.sharesdk.framework.utils.a$a) -> a
    java.lang.String a(java.lang.String) -> a
    java.util.ArrayList a(long,java.util.ArrayList,java.lang.String) -> a
    java.lang.String b(java.util.ArrayList) -> b
    java.util.ArrayList a(long,java.lang.String) -> a
    java.util.ArrayList a(java.util.ArrayList) -> a
cn.sharesdk.framework.utils.a$1 -> cn.sharesdk.framework.utils.a$1:
    int[] a -> a
cn.sharesdk.framework.utils.a$a -> cn.sharesdk.framework.utils.a$a:
    cn.sharesdk.framework.utils.a$a a -> a
    cn.sharesdk.framework.utils.a$a b -> b
    cn.sharesdk.framework.utils.a$a[] c -> c
    cn.sharesdk.framework.utils.a$a[] values() -> values
    cn.sharesdk.framework.utils.a$a valueOf(java.lang.String) -> valueOf
cn.sharesdk.framework.utils.a$b -> cn.sharesdk.framework.utils.a$b:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
cn.sharesdk.framework.utils.b -> cn.sharesdk.framework.utils.b:
    char[] a -> a
    char[] b -> b
    boolean c -> c
    boolean[] d -> d
    boolean[] a(java.lang.String) -> a
    int a(java.lang.CharSequence,int,int) -> a
    java.lang.String escape(java.lang.String) -> escape
    char[] a(int) -> a
cn.sharesdk.framework.utils.c -> cn.sharesdk.framework.utils.c:
    java.lang.Object a(java.lang.Object) -> a
cn.sharesdk.framework.utils.d -> cn.sharesdk.framework.utils.d:
    java.lang.String getSDKTag() -> getSDKTag
    com.mob.tools.log.NLog a(android.content.Context,int,java.lang.String) -> a
    com.mob.tools.log.NLog a() -> a
cn.sharesdk.framework.utils.e -> cn.sharesdk.framework.utils.e:
    int a -> a
    java.lang.String b -> b
    cn.sharesdk.framework.utils.d c -> c
    int getSDKVersion() -> getSDKVersion
    java.lang.String getSDKTag() -> getSDKTag
    java.lang.String getAppkey() -> getAppkey
cn.sharesdk.framework.utils.f -> cn.sharesdk.framework.utils.f:
    void a(android.content.Context) -> a
    int b(android.content.Context) -> b
cn.sharesdk.framework.utils.g -> cn.sharesdk.framework.utils.g:
    java.lang.ThreadLocal a -> a
    char[] a(int) -> a
    int a(java.lang.CharSequence,int,int) -> a
    java.lang.String escape(java.lang.String) -> escape
    java.lang.String a(java.lang.String,int) -> a
    java.lang.Appendable escape(java.lang.Appendable) -> escape
    int b(java.lang.CharSequence,int,int) -> b
    char[] a(char[],int,int) -> a
cn.sharesdk.framework.utils.h -> cn.sharesdk.framework.utils.h:
    int a -> a
    char[] b -> b
    java.lang.Appendable c -> c
    cn.sharesdk.framework.utils.g d -> d
    java.lang.Appendable append(java.lang.CharSequence) -> append
    java.lang.Appendable append(java.lang.CharSequence,int,int) -> append
    java.lang.Appendable append(char) -> append
    void a(char[],int) -> a
cn.sharesdk.framework.utils.i -> cn.sharesdk.framework.utils.i:
    char[] a() -> a
    java.lang.Object initialValue() -> initialValue
cn.sharesdk.framework.utils.j -> cn.sharesdk.framework.utils.j:
    java.util.HashMap a(java.lang.String) -> a
cn.sharesdk.framework.utils.j$a -> cn.sharesdk.framework.utils.j$a:
    java.util.HashMap a -> a
    java.util.HashMap b -> b
    java.util.HashMap a() -> a
    void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes) -> startElement
    void endElement(java.lang.String,java.lang.String,java.lang.String) -> endElement
    void characters(char[],int,int) -> characters
cn.sharesdk.onekeyshare.CustomerLogo -> cn.sharesdk.onekeyshare.CustomerLogo:
    java.lang.String label -> label
    android.graphics.Bitmap enableLogo -> enableLogo
    android.graphics.Bitmap disableLogo -> disableLogo
    android.view.View$OnClickListener listener -> listener
cn.sharesdk.onekeyshare.EditPageFakeActivity -> cn.sharesdk.onekeyshare.EditPageFakeActivity:
    java.util.List platforms -> platforms
    java.util.HashMap shareParamMap -> shareParamMap
    boolean dialogMode -> dialogMode
    android.view.View backgroundView -> backgroundView
    java.util.ArrayList toFriendList -> toFriendList
    java.util.ArrayList shareImageList -> shareImageList
    void setShareData(java.util.HashMap) -> setShareData
    void setDialogMode() -> setDialogMode
    void setBackgroundView(android.view.View) -> setBackgroundView
    void setPlatforms(java.util.List) -> setPlatforms
    java.lang.String getLogoName(java.lang.String) -> getLogoName
    boolean isShowAtUserLayout(java.lang.String) -> isShowAtUserLayout
    java.lang.String getAtUserButtonText(java.lang.String) -> getAtUserButtonText
    java.lang.String getJoinSelectedUser(java.util.HashMap) -> getJoinSelectedUser
    boolean haveImage() -> haveImage
    boolean initImageList(cn.sharesdk.onekeyshare.EditPageFakeActivity$ImageListResultsCallback) -> initImageList
    void removeImage(cn.sharesdk.onekeyshare.EditPageFakeActivity$ImageInfo) -> removeImage
    void setResultAndFinish() -> setResultAndFinish
    boolean onFinish() -> onFinish
    java.util.ArrayList access$0(cn.sharesdk.onekeyshare.EditPageFakeActivity) -> access$0
    android.app.Activity access$1(cn.sharesdk.onekeyshare.EditPageFakeActivity) -> access$1
cn.sharesdk.onekeyshare.EditPageFakeActivity$1 -> cn.sharesdk.onekeyshare.EditPageFakeActivity$1:
    cn.sharesdk.onekeyshare.EditPageFakeActivity this$0 -> this$0
    cn.sharesdk.onekeyshare.EditPageFakeActivity$ImageListResultsCallback doInBackground(java.lang.Object[]) -> doInBackground
    void onPostExecute(cn.sharesdk.onekeyshare.EditPageFakeActivity$ImageListResultsCallback) -> onPostExecute
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
cn.sharesdk.onekeyshare.EditPageFakeActivity$ImageInfo -> cn.sharesdk.onekeyshare.EditPageFakeActivity$ImageInfo:
    java.lang.String paramName -> paramName
    java.lang.String srcValue -> srcValue
    android.graphics.Bitmap bitmap -> bitmap
cn.sharesdk.onekeyshare.EditPageFakeActivity$ImageListResultsCallback -> cn.sharesdk.onekeyshare.EditPageFakeActivity$ImageListResultsCallback:
    void onFinish(java.util.ArrayList) -> onFinish
cn.sharesdk.onekeyshare.FollowerListFakeActivity -> cn.sharesdk.onekeyshare.FollowerListFakeActivity:
    cn.sharesdk.framework.Platform platform -> platform
    void setPlatform(cn.sharesdk.framework.Platform) -> setPlatform
    cn.sharesdk.framework.Platform getPlatform() -> getPlatform
    boolean isRadioMode(java.lang.String) -> isRadioMode
    void setResultForChecked(java.util.ArrayList) -> setResultForChecked
    cn.sharesdk.onekeyshare.FollowerListFakeActivity$FollowersResult parseFollowers(java.lang.String,java.util.HashMap,java.util.HashMap) -> parseFollowers
cn.sharesdk.onekeyshare.FollowerListFakeActivity$FollowersResult -> cn.sharesdk.onekeyshare.FollowerListFakeActivity$FollowersResult:
    java.util.ArrayList list -> list
    boolean hasNextPage -> hasNextPage
cn.sharesdk.onekeyshare.FollowerListFakeActivity$Following -> cn.sharesdk.onekeyshare.FollowerListFakeActivity$Following:
    boolean checked -> checked
    java.lang.String screenName -> screenName
    java.lang.String description -> description
    java.lang.String uid -> uid
    java.lang.String icon -> icon
    java.lang.String atName -> atName
cn.sharesdk.onekeyshare.OnekeyShare -> cn.sharesdk.onekeyshare.OnekeyShare:
    int MSG_TOAST -> MSG_TOAST
    int MSG_ACTION_CCALLBACK -> MSG_ACTION_CCALLBACK
    int MSG_CANCEL_NOTIFY -> MSG_CANCEL_NOTIFY
    java.util.HashMap shareParamsMap -> shareParamsMap
    java.util.ArrayList customers -> customers
    boolean silent -> silent
    cn.sharesdk.framework.PlatformActionListener callback -> callback
    cn.sharesdk.onekeyshare.ShareContentCustomizeCallback customizeCallback -> customizeCallback
    boolean dialogMode -> dialogMode
    boolean disableSSO -> disableSSO
    java.util.HashMap hiddenPlatforms -> hiddenPlatforms
    android.view.View bgView -> bgView
    cn.sharesdk.onekeyshare.OnekeyShareTheme theme -> theme
    android.content.Context context -> context
    cn.sharesdk.onekeyshare.PlatformListFakeActivity$OnShareButtonClickListener onShareButtonClickListener -> onShareButtonClickListener
    void show(android.content.Context) -> show
    void setTheme(cn.sharesdk.onekeyshare.OnekeyShareTheme) -> setTheme
    void setAddress(java.lang.String) -> setAddress
    void setTitle(java.lang.String) -> setTitle
    void setTitleUrl(java.lang.String) -> setTitleUrl
    void setText(java.lang.String) -> setText
    java.lang.String getText() -> getText
    void setImagePath(java.lang.String) -> setImagePath
    void setImageUrl(java.lang.String) -> setImageUrl
    void setUrl(java.lang.String) -> setUrl
    void setFilePath(java.lang.String) -> setFilePath
    void setComment(java.lang.String) -> setComment
    void setSite(java.lang.String) -> setSite
    void setSiteUrl(java.lang.String) -> setSiteUrl
    void setVenueName(java.lang.String) -> setVenueName
    void setVenueDescription(java.lang.String) -> setVenueDescription
    void setLatitude(float) -> setLatitude
    void setLongitude(float) -> setLongitude
    void setSilent(boolean) -> setSilent
    void setPlatform(java.lang.String) -> setPlatform
    void setInstallUrl(java.lang.String) -> setInstallUrl
    void setExecuteUrl(java.lang.String) -> setExecuteUrl
    void setMusicUrl(java.lang.String) -> setMusicUrl
    void setCallback(cn.sharesdk.framework.PlatformActionListener) -> setCallback
    cn.sharesdk.framework.PlatformActionListener getCallback() -> getCallback
    void setShareContentCustomizeCallback(cn.sharesdk.onekeyshare.ShareContentCustomizeCallback) -> setShareContentCustomizeCallback
    cn.sharesdk.onekeyshare.ShareContentCustomizeCallback getShareContentCustomizeCallback() -> getShareContentCustomizeCallback
    void setCustomerLogo(android.graphics.Bitmap,android.graphics.Bitmap,java.lang.String,android.view.View$OnClickListener) -> setCustomerLogo
    void disableSSOWhenAuthorize() -> disableSSOWhenAuthorize
    void setDialogMode() -> setDialogMode
    void addHiddenPlatform(java.lang.String) -> addHiddenPlatform
    void setViewToShare(android.view.View) -> setViewToShare
    void setImageArray(java.lang.String[]) -> setImageArray
    void setEditPageBackground(android.view.View) -> setEditPageBackground
    void setOnShareButtonClickListener(cn.sharesdk.onekeyshare.PlatformListFakeActivity$OnShareButtonClickListener) -> setOnShareButtonClickListener
    void share(java.util.HashMap) -> share
    void onComplete(cn.sharesdk.framework.Platform,int,java.util.HashMap) -> onComplete
    void onError(cn.sharesdk.framework.Platform,int,java.lang.Throwable) -> onError
    void onCancel(cn.sharesdk.framework.Platform,int) -> onCancel
    boolean handleMessage(android.os.Message) -> handleMessage
    void showNotification(java.lang.String) -> showNotification
    void setShareFromQQAuthSupport(boolean) -> setShareFromQQAuthSupport
cn.sharesdk.onekeyshare.OnekeyShare$1 -> cn.sharesdk.onekeyshare.OnekeyShare$1:
    cn.sharesdk.onekeyshare.OnekeyShare this$0 -> this$0
    void doShare(java.util.HashMap) -> doShare
cn.sharesdk.onekeyshare.OnekeyShareTheme -> cn.sharesdk.onekeyshare.OnekeyShareTheme:
    cn.sharesdk.onekeyshare.OnekeyShareTheme CLASSIC -> CLASSIC
    cn.sharesdk.onekeyshare.OnekeyShareTheme SKYBLUE -> SKYBLUE
    cn.sharesdk.onekeyshare.OnekeyShareTheme[] ENUM$VALUES -> ENUM$VALUES
    cn.sharesdk.onekeyshare.OnekeyShareTheme[] values() -> values
    cn.sharesdk.onekeyshare.OnekeyShareTheme valueOf(java.lang.String) -> valueOf
cn.sharesdk.onekeyshare.PicViewer -> cn.sharesdk.onekeyshare.PicViewer:
    android.widget.ImageView ivViewer -> ivViewer
    android.graphics.Bitmap pic -> pic
    android.graphics.Matrix matrix -> matrix
    android.graphics.Matrix savedMatrix -> savedMatrix
    android.util.DisplayMetrics dm -> dm
    float minScaleR -> minScaleR
    float MAX_SCALE -> MAX_SCALE
    int NONE -> NONE
    int DRAG -> DRAG
    int ZOOM -> ZOOM
    int mode -> mode
    android.graphics.PointF prev -> prev
    android.graphics.PointF mid -> mid
    float dist -> dist
    void setImageBitmap(android.graphics.Bitmap) -> setImageBitmap
    void onCreate() -> onCreate
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
    void CheckView() -> CheckView
    void minZoom() -> minZoom
    void center() -> center
    void center(boolean,boolean) -> center
    float spacing(android.view.MotionEvent) -> spacing
    void midPoint(android.graphics.PointF,android.view.MotionEvent) -> midPoint
cn.sharesdk.onekeyshare.PlatformListFakeActivity -> cn.sharesdk.onekeyshare.PlatformListFakeActivity:
    java.util.HashMap shareParamsMap -> shareParamsMap
    boolean silent -> silent
    java.util.ArrayList customerLogos -> customerLogos
    java.util.HashMap hiddenPlatforms -> hiddenPlatforms
    boolean canceled -> canceled
    android.view.View backgroundView -> backgroundView
    cn.sharesdk.onekeyshare.PlatformListFakeActivity$OnShareButtonClickListener onShareButtonClickListener -> onShareButtonClickListener
    boolean dialogMode -> dialogMode
    cn.sharesdk.onekeyshare.ThemeShareCallback themeShareCallback -> themeShareCallback
    void onCreate() -> onCreate
    boolean onKeyEvent(int,android.view.KeyEvent) -> onKeyEvent
    void setCanceled(boolean) -> setCanceled
    boolean onFinish() -> onFinish
    void show(android.content.Context,android.content.Intent) -> show
    java.util.HashMap getShareParamsMap() -> getShareParamsMap
    void setShareParamsMap(java.util.HashMap) -> setShareParamsMap
    boolean isSilent() -> isSilent
    void setSilent(boolean) -> setSilent
    java.util.ArrayList getCustomerLogos() -> getCustomerLogos
    void setCustomerLogos(java.util.ArrayList) -> setCustomerLogos
    java.util.HashMap getHiddenPlatforms() -> getHiddenPlatforms
    void setHiddenPlatforms(java.util.HashMap) -> setHiddenPlatforms
    android.view.View getBackgroundView() -> getBackgroundView
    void setBackgroundView(android.view.View) -> setBackgroundView
    cn.sharesdk.onekeyshare.PlatformListFakeActivity$OnShareButtonClickListener getOnShareButtonClickListener() -> getOnShareButtonClickListener
    void setOnShareButtonClickListener(cn.sharesdk.onekeyshare.PlatformListFakeActivity$OnShareButtonClickListener) -> setOnShareButtonClickListener
    boolean isDialogMode() -> isDialogMode
    void setDialogMode(boolean) -> setDialogMode
    cn.sharesdk.onekeyshare.ThemeShareCallback getThemeShareCallback() -> getThemeShareCallback
    void setThemeShareCallback(cn.sharesdk.onekeyshare.ThemeShareCallback) -> setThemeShareCallback
    void onShareButtonClick(android.view.View,java.util.List) -> onShareButtonClick
    void showEditPage(java.util.List) -> showEditPage
    void showEditPage(android.content.Context,cn.sharesdk.framework.Platform) -> showEditPage
    void showEditPage(android.content.Context,java.util.List) -> showEditPage
cn.sharesdk.onekeyshare.PlatformListFakeActivity$1 -> cn.sharesdk.onekeyshare.PlatformListFakeActivity$1:
    cn.sharesdk.onekeyshare.PlatformListFakeActivity this$0 -> this$0
    void onResult(java.util.HashMap) -> onResult
cn.sharesdk.onekeyshare.PlatformListFakeActivity$OnShareButtonClickListener -> cn.sharesdk.onekeyshare.PlatformListFakeActivity$OnShareButtonClickListener:
    void onClick(android.view.View,java.util.List) -> onClick
cn.sharesdk.onekeyshare.ReflectableShareContentCustomizeCallback -> cn.sharesdk.onekeyshare.ReflectableShareContentCustomizeCallback:
    int onShareWhat -> onShareWhat
    android.os.Handler$Callback onShareCallback -> onShareCallback
    void setOnShareCallback(int,android.os.Handler$Callback) -> setOnShareCallback
    void onShare(cn.sharesdk.framework.Platform,cn.sharesdk.framework.Platform$ShareParams) -> onShare
cn.sharesdk.onekeyshare.Shake2Share -> cn.sharesdk.onekeyshare.Shake2Share:
    int UPDATE_INTERVAL -> UPDATE_INTERVAL
    int SHAKE_THRESHOLD -> SHAKE_THRESHOLD
    cn.sharesdk.onekeyshare.Shake2Share$OnShakeListener listener -> listener
    android.hardware.SensorManager mSensorManager -> mSensorManager
    long mLastUpdateTime -> mLastUpdateTime
    float mLastX -> mLastX
    float mLastY -> mLastY
    float mLastZ -> mLastZ
    boolean shaken -> shaken
    void setOnShakeListener(cn.sharesdk.onekeyshare.Shake2Share$OnShakeListener) -> setOnShakeListener
    void setActivity(android.app.Activity) -> setActivity
    void onCreate() -> onCreate
    void startSensor() -> startSensor
    void onDestroy() -> onDestroy
    void stopSensor() -> stopSensor
    void onSensorChanged(android.hardware.SensorEvent) -> onSensorChanged
    void onAccuracyChanged(android.hardware.Sensor,int) -> onAccuracyChanged
cn.sharesdk.onekeyshare.Shake2Share$OnShakeListener -> cn.sharesdk.onekeyshare.Shake2Share$OnShakeListener:
    void onShake() -> onShake
cn.sharesdk.onekeyshare.ShareContentCustomizeCallback -> cn.sharesdk.onekeyshare.ShareContentCustomizeCallback:
    void onShare(cn.sharesdk.framework.Platform,cn.sharesdk.framework.Platform$ShareParams) -> onShare
cn.sharesdk.onekeyshare.ShareCore -> cn.sharesdk.onekeyshare.ShareCore:
    cn.sharesdk.onekeyshare.ShareContentCustomizeCallback customizeCallback -> customizeCallback
    void setShareContentCustomizeCallback(cn.sharesdk.onekeyshare.ShareContentCustomizeCallback) -> setShareContentCustomizeCallback
    boolean share(cn.sharesdk.framework.Platform,java.util.HashMap) -> share
    boolean isUseClientToShare(java.lang.String) -> isUseClientToShare
    boolean canAuthorize(android.content.Context,java.lang.String) -> canAuthorize
    boolean canGetUserInfo(android.content.Context,java.lang.String) -> canGetUserInfo
    boolean isDirectShare(cn.sharesdk.framework.Platform) -> isDirectShare
cn.sharesdk.onekeyshare.ThemeShareCallback -> cn.sharesdk.onekeyshare.ThemeShareCallback:
    void doShare(java.util.HashMap) -> doShare
cn.sharesdk.onekeyshare.theme.classic.EditPage -> cn.sharesdk.onekeyshare.theme.classic.EditPage:
    int MAX_TEXT_COUNT -> MAX_TEXT_COUNT
    int DIM_COLOR -> DIM_COLOR
    android.widget.RelativeLayout rlPage -> rlPage
    cn.sharesdk.framework.TitleLayout llTitle -> llTitle
    android.widget.LinearLayout llBody -> llBody
    android.widget.RelativeLayout rlThumb -> rlThumb
    android.widget.EditText etContent -> etContent
    android.widget.TextView tvCounter -> tvCounter
    android.widget.ImageView ivPin -> ivPin
    cn.sharesdk.onekeyshare.EditPageFakeActivity$ImageInfo imgInfo -> imgInfo
    android.widget.ImageView ivImage -> ivImage
    android.widget.ProgressBar progressBar -> progressBar
    android.graphics.Bitmap image -> image
    android.widget.LinearLayout llPlat -> llPlat
    android.view.View[] views -> views
    android.graphics.drawable.Drawable background -> background
    cn.sharesdk.framework.Platform[] platformList -> platformList
    void setActivity(android.app.Activity) -> setActivity
    void onCreate() -> onCreate
    android.widget.RelativeLayout getPageView() -> getPageView
    cn.sharesdk.framework.TitleLayout getPageTitle() -> getPageTitle
    android.widget.LinearLayout getPageBody() -> getPageBody
    android.widget.LinearLayout getMainBody() -> getMainBody
    android.widget.RelativeLayout getThumbView() -> getThumbView
    void showThumb() -> showThumb
    android.widget.LinearLayout getBodyBottom() -> getBodyBottom
    android.widget.LinearLayout getAtLine(java.lang.String) -> getAtLine
    android.view.View getSep() -> getSep
    android.widget.LinearLayout getPlatformList() -> getPlatformList
    android.widget.ImageView getImagePin() -> getImagePin
    void genBackground() -> genBackground
    java.lang.String getName(java.lang.String) -> getName
    void onClick(android.view.View) -> onClick
    void afterPlatformListGot() -> afterPlatformListGot
    android.graphics.Bitmap getPlatLogo(cn.sharesdk.framework.Platform) -> getPlatLogo
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    void afterTextChanged(android.text.Editable) -> afterTextChanged
    void onResult(java.util.HashMap) -> onResult
    void hideSoftInput() -> hideSoftInput
    boolean onFinish() -> onFinish
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void access$0(cn.sharesdk.onekeyshare.theme.classic.EditPage,cn.sharesdk.framework.Platform[]) -> access$0
    cn.sharesdk.framework.Platform[] access$1(cn.sharesdk.onekeyshare.theme.classic.EditPage) -> access$1
    android.graphics.Bitmap access$2(cn.sharesdk.onekeyshare.theme.classic.EditPage) -> access$2
    android.app.Activity access$3(cn.sharesdk.onekeyshare.theme.classic.EditPage) -> access$3
    android.widget.RelativeLayout access$4(cn.sharesdk.onekeyshare.theme.classic.EditPage) -> access$4
    android.widget.ImageView access$5(cn.sharesdk.onekeyshare.theme.classic.EditPage) -> access$5
    cn.sharesdk.onekeyshare.EditPageFakeActivity$ImageInfo access$6(cn.sharesdk.onekeyshare.theme.classic.EditPage) -> access$6
    void access$7(cn.sharesdk.onekeyshare.theme.classic.EditPage,cn.sharesdk.onekeyshare.EditPageFakeActivity$ImageInfo) -> access$7
    void access$8(cn.sharesdk.onekeyshare.theme.classic.EditPage,cn.sharesdk.onekeyshare.EditPageFakeActivity$ImageInfo) -> access$8
    void access$9(cn.sharesdk.onekeyshare.theme.classic.EditPage,android.graphics.Bitmap) -> access$9
    android.widget.ProgressBar access$10(cn.sharesdk.onekeyshare.theme.classic.EditPage) -> access$10
    android.widget.ImageView access$11(cn.sharesdk.onekeyshare.theme.classic.EditPage) -> access$11
    java.util.List access$12(cn.sharesdk.onekeyshare.theme.classic.EditPage) -> access$12
    android.widget.LinearLayout access$13(cn.sharesdk.onekeyshare.theme.classic.EditPage) -> access$13
    void access$14(cn.sharesdk.onekeyshare.theme.classic.EditPage) -> access$14
    android.widget.RelativeLayout access$15(cn.sharesdk.onekeyshare.theme.classic.EditPage) -> access$15
    android.graphics.drawable.Drawable access$16(cn.sharesdk.onekeyshare.theme.classic.EditPage) -> access$16
cn.sharesdk.onekeyshare.theme.classic.EditPage$1 -> cn.sharesdk.onekeyshare.theme.classic.EditPage$1:
    cn.sharesdk.onekeyshare.theme.classic.EditPage this$0 -> this$0
    void run() -> run
    cn.sharesdk.onekeyshare.theme.classic.EditPage access$0(cn.sharesdk.onekeyshare.theme.classic.EditPage$1) -> access$0
cn.sharesdk.onekeyshare.theme.classic.EditPage$1$1 -> cn.sharesdk.onekeyshare.theme.classic.EditPage$1$1:
    cn.sharesdk.onekeyshare.theme.classic.EditPage$1 this$1 -> this$1
    boolean handleMessage(android.os.Message) -> handleMessage
cn.sharesdk.onekeyshare.theme.classic.EditPage$2 -> cn.sharesdk.onekeyshare.theme.classic.EditPage$2:
    cn.sharesdk.onekeyshare.theme.classic.EditPage this$0 -> this$0
    void onClick(android.view.View) -> onClick
cn.sharesdk.onekeyshare.theme.classic.EditPage$3 -> cn.sharesdk.onekeyshare.theme.classic.EditPage$3:
    cn.sharesdk.onekeyshare.theme.classic.EditPage this$0 -> this$0
    void onClick(android.view.View) -> onClick
cn.sharesdk.onekeyshare.theme.classic.EditPage$4 -> cn.sharesdk.onekeyshare.theme.classic.EditPage$4:
    cn.sharesdk.onekeyshare.theme.classic.EditPage this$0 -> this$0
    void onFinish(java.util.ArrayList) -> onFinish
cn.sharesdk.onekeyshare.theme.classic.EditPage$5 -> cn.sharesdk.onekeyshare.theme.classic.EditPage$5:
    cn.sharesdk.onekeyshare.theme.classic.EditPage this$0 -> this$0
    void onClick(android.view.View) -> onClick
cn.sharesdk.onekeyshare.theme.classic.EditPage$6 -> cn.sharesdk.onekeyshare.theme.classic.EditPage$6:
    cn.sharesdk.onekeyshare.theme.classic.EditPage this$0 -> this$0
    int val$postSel -> val$postSel
    int val$dp_24 -> val$dp_24
    int val$dp_9 -> val$dp_9
    boolean handleMessage(android.os.Message) -> handleMessage
cn.sharesdk.onekeyshare.theme.classic.EditPage$7 -> cn.sharesdk.onekeyshare.theme.classic.EditPage$7:
    cn.sharesdk.onekeyshare.theme.classic.EditPage this$0 -> this$0
    void run() -> run
cn.sharesdk.onekeyshare.theme.classic.EditPage$8 -> cn.sharesdk.onekeyshare.theme.classic.EditPage$8:
    cn.sharesdk.onekeyshare.theme.classic.EditPage this$0 -> this$0
    void run() -> run
cn.sharesdk.onekeyshare.theme.classic.FollowListPage -> cn.sharesdk.onekeyshare.theme.classic.FollowListPage:
    cn.sharesdk.framework.TitleLayout llTitle -> llTitle
    cn.sharesdk.onekeyshare.theme.classic.FollowListPage$FollowAdapter adapter -> adapter
    int lastPosition -> lastPosition
    void onCreate() -> onCreate
    void onClick(android.view.View) -> onClick
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
cn.sharesdk.onekeyshare.theme.classic.FollowListPage$FollowAdapter -> cn.sharesdk.onekeyshare.theme.classic.FollowListPage$FollowAdapter:
    int FOLLOW_LIST_EMPTY -> FOLLOW_LIST_EMPTY
    int curPage -> curPage
    java.util.ArrayList follows -> follows
    java.util.HashMap map -> map
    boolean hasNext -> hasNext
    cn.sharesdk.framework.Platform platform -> platform
    cn.sharesdk.onekeyshare.theme.classic.FollowListPage$PRTHeader llHeader -> llHeader
    android.graphics.Bitmap bmChd -> bmChd
    android.graphics.Bitmap bmUnch -> bmUnch
    void setPlatform(cn.sharesdk.framework.Platform) -> setPlatform
    void next() -> next
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    cn.sharesdk.onekeyshare.FollowerListFakeActivity$Following getItem(int) -> getItem
    long getItemId(int) -> getItemId
    int getCount() -> getCount
    android.view.View getHeaderView() -> getHeaderView
    void onPullDown(int) -> onPullDown
    void onRequest() -> onRequest
    void onCancel(cn.sharesdk.framework.Platform,int) -> onCancel
    void onComplete(cn.sharesdk.framework.Platform,int,java.util.HashMap) -> onComplete
    void onError(cn.sharesdk.framework.Platform,int,java.lang.Throwable) -> onError
    boolean handleMessage(android.os.Message) -> handleMessage
    void onReversed() -> onReversed
    java.lang.Object getItem(int) -> getItem
cn.sharesdk.onekeyshare.theme.classic.FollowListPage$FollowListItem -> cn.sharesdk.onekeyshare.theme.classic.FollowListPage$FollowListItem:
    com.mob.tools.gui.AsyncImageView aivIcon -> aivIcon
    android.widget.TextView tvName -> tvName
    android.widget.TextView tvSign -> tvSign
    android.widget.ImageView ivCheck -> ivCheck
cn.sharesdk.onekeyshare.theme.classic.FollowListPage$PRTHeader -> cn.sharesdk.onekeyshare.theme.classic.FollowListPage$PRTHeader:
    android.widget.TextView tvHeader -> tvHeader
    cn.sharesdk.onekeyshare.theme.classic.FollowListPage$RotateImageView ivArrow -> ivArrow
    android.widget.ProgressBar pbRefreshing -> pbRefreshing
    void onPullDown(int) -> onPullDown
    void onRequest() -> onRequest
    void reverse() -> reverse
cn.sharesdk.onekeyshare.theme.classic.FollowListPage$RotateImageView -> cn.sharesdk.onekeyshare.theme.classic.FollowListPage$RotateImageView:
    int rotation -> rotation
    void setRotation(int) -> setRotation
    void onDraw(android.graphics.Canvas) -> onDraw
cn.sharesdk.onekeyshare.theme.classic.PlatformGridView -> cn.sharesdk.onekeyshare.theme.classic.PlatformGridView:
    int MIN_CLICK_INTERVAL -> MIN_CLICK_INTERVAL
    int MSG_PLATFORM_LIST_GOT -> MSG_PLATFORM_LIST_GOT
    int LINE_PER_PAGE -> LINE_PER_PAGE
    int COLUMN_PER_LINE -> COLUMN_PER_LINE
    int PAGE_SIZE -> PAGE_SIZE
    com.mob.tools.gui.ViewPagerClassic pager -> pager
    android.widget.ImageView[] points -> points
    android.graphics.Bitmap grayPoint -> grayPoint
    android.graphics.Bitmap bluePoint -> bluePoint
    boolean silent -> silent
    cn.sharesdk.framework.Platform[] platformList -> platformList
    java.util.HashMap reqData -> reqData
    cn.sharesdk.onekeyshare.theme.classic.PlatformListPage parent -> parent
    java.util.ArrayList customers -> customers
    java.util.HashMap hiddenPlatforms -> hiddenPlatforms
    android.view.View bgView -> bgView
    long lastClickTime -> lastClickTime
    void init(android.content.Context) -> init
    void calPageSize() -> calPageSize
    boolean handleMessage(android.os.Message) -> handleMessage
    void afterPlatformListGot() -> afterPlatformListGot
    void onConfigurationChanged() -> onConfigurationChanged
    void setData(java.util.HashMap,boolean) -> setData
    void setHiddenPlatforms(java.util.HashMap) -> setHiddenPlatforms
    void setCustomerLogos(java.util.ArrayList) -> setCustomerLogos
    void setEditPageBackground(android.view.View) -> setEditPageBackground
    void setParent(cn.sharesdk.onekeyshare.theme.classic.PlatformListPage) -> setParent
    void onClick(android.view.View) -> onClick
    void disableOverScrollMode(android.view.View) -> disableOverScrollMode
    cn.sharesdk.framework.Platform[] access$0(cn.sharesdk.onekeyshare.theme.classic.PlatformGridView) -> access$0
    java.util.HashMap access$1(cn.sharesdk.onekeyshare.theme.classic.PlatformGridView) -> access$1
    java.util.ArrayList access$2(cn.sharesdk.onekeyshare.theme.classic.PlatformGridView) -> access$2
    int access$3(cn.sharesdk.onekeyshare.theme.classic.PlatformGridView) -> access$3
    int access$4(cn.sharesdk.onekeyshare.theme.classic.PlatformGridView) -> access$4
    android.widget.ImageView[] access$5(cn.sharesdk.onekeyshare.theme.classic.PlatformGridView) -> access$5
    android.graphics.Bitmap access$6(cn.sharesdk.onekeyshare.theme.classic.PlatformGridView) -> access$6
    android.graphics.Bitmap access$7(cn.sharesdk.onekeyshare.theme.classic.PlatformGridView) -> access$7
    void access$8(cn.sharesdk.onekeyshare.theme.classic.PlatformGridView,cn.sharesdk.framework.Platform[]) -> access$8
cn.sharesdk.onekeyshare.theme.classic.PlatformGridView$1 -> cn.sharesdk.onekeyshare.theme.classic.PlatformGridView$1:
    cn.sharesdk.onekeyshare.theme.classic.PlatformGridView this$0 -> this$0
    void run() -> run
cn.sharesdk.onekeyshare.theme.classic.PlatformGridView$GridView -> cn.sharesdk.onekeyshare.theme.classic.PlatformGridView$GridView:
    java.lang.Object[] beans -> beans
    android.view.View$OnClickListener callback -> callback
    int lines -> lines
    cn.sharesdk.onekeyshare.theme.classic.PlatformGridView$PlatformAdapter platformAdapter -> platformAdapter
    void setData(int,java.lang.Object[]) -> setData
    void init() -> init
    android.widget.LinearLayout getView(int,android.view.View$OnClickListener,android.content.Context) -> getView
    android.graphics.Bitmap getIcon(cn.sharesdk.framework.Platform) -> getIcon
    java.lang.String getName(cn.sharesdk.framework.Platform) -> getName
cn.sharesdk.onekeyshare.theme.classic.PlatformGridView$PlatformAdapter -> cn.sharesdk.onekeyshare.theme.classic.PlatformGridView$PlatformAdapter:
    cn.sharesdk.onekeyshare.theme.classic.PlatformGridView$GridView[] girds -> girds
    java.util.List logos -> logos
    android.view.View$OnClickListener callback -> callback
    int lines -> lines
    cn.sharesdk.onekeyshare.theme.classic.PlatformGridView platformGridView -> platformGridView
    int getCount() -> getCount
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    void onScreenChange(int,int) -> onScreenChange
    cn.sharesdk.onekeyshare.theme.classic.PlatformGridView access$0(cn.sharesdk.onekeyshare.theme.classic.PlatformGridView$PlatformAdapter) -> access$0
    android.view.View$OnClickListener access$1(cn.sharesdk.onekeyshare.theme.classic.PlatformGridView$PlatformAdapter) -> access$1
cn.sharesdk.onekeyshare.theme.classic.PlatformListPage -> cn.sharesdk.onekeyshare.theme.classic.PlatformListPage:
    android.widget.FrameLayout flPage -> flPage
    cn.sharesdk.onekeyshare.theme.classic.PlatformGridView grid -> grid
    android.widget.Button btnCancel -> btnCancel
    android.view.animation.Animation animShow -> animShow
    android.view.animation.Animation animHide -> animHide
    boolean finishing -> finishing
    android.widget.LinearLayout llPage -> llPage
    void onCreate() -> onCreate
    void initPageView() -> initPageView
    void initAnim() -> initAnim
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    boolean onFinish() -> onFinish
    void onClick(android.view.View) -> onClick
    void onPlatformIconClick(android.view.View,java.util.ArrayList) -> onPlatformIconClick
    android.widget.FrameLayout access$0(cn.sharesdk.onekeyshare.theme.classic.PlatformListPage) -> access$0
cn.sharesdk.onekeyshare.theme.classic.PlatformListPage$1 -> cn.sharesdk.onekeyshare.theme.classic.PlatformListPage$1:
    cn.sharesdk.onekeyshare.theme.classic.PlatformListPage this$0 -> this$0
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
cn.sharesdk.onekeyshare.theme.classic.PlatformListPage$2 -> cn.sharesdk.onekeyshare.theme.classic.PlatformListPage$2:
    cn.sharesdk.onekeyshare.theme.classic.PlatformListPage this$0 -> this$0
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
cn.sharesdk.onekeyshare.theme.skyblue.EditPage -> cn.sharesdk.onekeyshare.theme.skyblue.EditPage:
    int MAX_TEXT_COUNT -> MAX_TEXT_COUNT
    android.widget.TextView textCounterTextView -> textCounterTextView
    android.widget.EditText titleEditText -> titleEditText
    android.widget.EditText textEditText -> textEditText
    void onCreate() -> onCreate
    void initView() -> initView
    void initTitleView() -> initTitleView
    void initBodyView() -> initBodyView
    void initAtUserView() -> initAtUserView
    void initImageListView() -> initImageListView
    android.view.View makeImageItemView(cn.sharesdk.onekeyshare.EditPageFakeActivity$ImageInfo) -> makeImageItemView
    void onClick(android.view.View) -> onClick
    void onShareButtonClick(android.view.View) -> onShareButtonClick
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    void afterTextChanged(android.text.Editable) -> afterTextChanged
    void onResult(java.util.HashMap) -> onResult
    boolean onFinish() -> onFinish
    android.app.Activity access$0(cn.sharesdk.onekeyshare.theme.skyblue.EditPage) -> access$0
    android.view.View access$1(cn.sharesdk.onekeyshare.theme.skyblue.EditPage,cn.sharesdk.onekeyshare.EditPageFakeActivity$ImageInfo) -> access$1
    void access$2(cn.sharesdk.onekeyshare.theme.skyblue.EditPage,cn.sharesdk.onekeyshare.EditPageFakeActivity$ImageInfo) -> access$2
cn.sharesdk.onekeyshare.theme.skyblue.EditPage$1 -> cn.sharesdk.onekeyshare.theme.skyblue.EditPage$1:
    cn.sharesdk.onekeyshare.theme.skyblue.EditPage this$0 -> this$0
    void onClick(android.view.View) -> onClick
cn.sharesdk.onekeyshare.theme.skyblue.EditPage$2 -> cn.sharesdk.onekeyshare.theme.skyblue.EditPage$2:
    cn.sharesdk.onekeyshare.theme.skyblue.EditPage this$0 -> this$0
    void onFinish(java.util.ArrayList) -> onFinish
cn.sharesdk.onekeyshare.theme.skyblue.EditPage$3 -> cn.sharesdk.onekeyshare.theme.skyblue.EditPage$3:
    cn.sharesdk.onekeyshare.theme.skyblue.EditPage this$0 -> this$0
    cn.sharesdk.onekeyshare.EditPageFakeActivity$ImageInfo val$imageInfo -> val$imageInfo
    void onClick(android.view.View) -> onClick
cn.sharesdk.onekeyshare.theme.skyblue.EditPage$4 -> cn.sharesdk.onekeyshare.theme.skyblue.EditPage$4:
    cn.sharesdk.onekeyshare.theme.skyblue.EditPage this$0 -> this$0
    android.view.View val$view -> val$view
    void onClick(android.view.View) -> onClick
cn.sharesdk.onekeyshare.theme.skyblue.FollowListPage -> cn.sharesdk.onekeyshare.theme.skyblue.FollowListPage:
    cn.sharesdk.framework.TitleLayout llTitle -> llTitle
    cn.sharesdk.onekeyshare.theme.skyblue.FollowListPage$FollowAdapter adapter -> adapter
    int lastPosition -> lastPosition
    void onCreate() -> onCreate
    void onClick(android.view.View) -> onClick
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
cn.sharesdk.onekeyshare.theme.skyblue.FollowListPage$FollowAdapter -> cn.sharesdk.onekeyshare.theme.skyblue.FollowListPage$FollowAdapter:
    int FOLLOW_LIST_EMPTY -> FOLLOW_LIST_EMPTY
    int curPage -> curPage
    java.util.ArrayList follows -> follows
    java.util.HashMap map -> map
    boolean hasNext -> hasNext
    cn.sharesdk.framework.Platform platform -> platform
    cn.sharesdk.onekeyshare.theme.skyblue.FollowListPage$PRTHeader llHeader -> llHeader
    android.graphics.Bitmap bmChd -> bmChd
    android.graphics.Bitmap bmUnch -> bmUnch
    void setPlatform(cn.sharesdk.framework.Platform) -> setPlatform
    void next() -> next
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    cn.sharesdk.onekeyshare.FollowerListFakeActivity$Following getItem(int) -> getItem
    long getItemId(int) -> getItemId
    int getCount() -> getCount
    android.view.View getHeaderView() -> getHeaderView
    void onPullDown(int) -> onPullDown
    void onRequest() -> onRequest
    void onCancel(cn.sharesdk.framework.Platform,int) -> onCancel
    void onComplete(cn.sharesdk.framework.Platform,int,java.util.HashMap) -> onComplete
    void onError(cn.sharesdk.framework.Platform,int,java.lang.Throwable) -> onError
    boolean handleMessage(android.os.Message) -> handleMessage
    void onReversed() -> onReversed
    java.lang.Object getItem(int) -> getItem
cn.sharesdk.onekeyshare.theme.skyblue.FollowListPage$FollowListItem -> cn.sharesdk.onekeyshare.theme.skyblue.FollowListPage$FollowListItem:
    com.mob.tools.gui.AsyncImageView aivIcon -> aivIcon
    android.widget.TextView tvName -> tvName
    android.widget.TextView tvSign -> tvSign
    android.widget.ImageView ivCheck -> ivCheck
cn.sharesdk.onekeyshare.theme.skyblue.FollowListPage$PRTHeader -> cn.sharesdk.onekeyshare.theme.skyblue.FollowListPage$PRTHeader:
    android.widget.TextView tvHeader -> tvHeader
    cn.sharesdk.onekeyshare.theme.skyblue.FollowListPage$RotateImageView ivArrow -> ivArrow
    android.widget.ProgressBar pbRefreshing -> pbRefreshing
    void onPullDown(int) -> onPullDown
    void onRequest() -> onRequest
    void reverse() -> reverse
cn.sharesdk.onekeyshare.theme.skyblue.FollowListPage$RotateImageView -> cn.sharesdk.onekeyshare.theme.skyblue.FollowListPage$RotateImageView:
    int rotation -> rotation
    void setRotation(int) -> setRotation
    void onDraw(android.graphics.Canvas) -> onDraw
cn.sharesdk.onekeyshare.theme.skyblue.PlatformGridViewAdapter -> cn.sharesdk.onekeyshare.theme.skyblue.PlatformGridViewAdapter:
    android.content.Context context -> context
    java.util.List logos -> logos
    java.util.List checkedPositionList -> checkedPositionList
    int directOnlyPosition -> directOnlyPosition
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    void onClick(android.view.View) -> onClick
    void setData(cn.sharesdk.framework.Platform[],java.util.HashMap) -> setData
    void setCustomerLogos(java.util.ArrayList) -> setCustomerLogos
    java.util.List getCheckedItems() -> getCheckedItems
    android.graphics.Bitmap getIcon(cn.sharesdk.framework.Platform,java.lang.String) -> getIcon
    java.lang.String getName(cn.sharesdk.framework.Platform) -> getName
cn.sharesdk.onekeyshare.theme.skyblue.PlatformGridViewAdapter$ViewHolder -> cn.sharesdk.onekeyshare.theme.skyblue.PlatformGridViewAdapter$ViewHolder:
    java.lang.Integer position -> position
    android.widget.ImageView logoImageView -> logoImageView
    android.widget.ImageView checkedImageView -> checkedImageView
    android.widget.TextView nameTextView -> nameTextView
cn.sharesdk.onekeyshare.theme.skyblue.PlatformListPage -> cn.sharesdk.onekeyshare.theme.skyblue.PlatformListPage:
    cn.sharesdk.onekeyshare.theme.skyblue.PlatformGridViewAdapter gridViewAdapter -> gridViewAdapter
    void onCreate() -> onCreate
    void initView() -> initView
    void onClick(android.view.View) -> onClick
    void onShareButtonClick(android.view.View) -> onShareButtonClick
    cn.sharesdk.onekeyshare.theme.skyblue.PlatformGridViewAdapter access$0(cn.sharesdk.onekeyshare.theme.skyblue.PlatformListPage) -> access$0
    java.util.HashMap access$1(cn.sharesdk.onekeyshare.theme.skyblue.PlatformListPage) -> access$1
cn.sharesdk.onekeyshare.theme.skyblue.PlatformListPage$1 -> cn.sharesdk.onekeyshare.theme.skyblue.PlatformListPage$1:
    cn.sharesdk.onekeyshare.theme.skyblue.PlatformListPage this$0 -> this$0
    cn.sharesdk.framework.Platform[] doInBackground(java.lang.Void[]) -> doInBackground
    void onPostExecute(cn.sharesdk.framework.Platform[]) -> onPostExecute
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
cn.sharesdk.twitter.Twitter -> cn.sharesdk.twitter.Twitter:
    java.lang.String NAME -> NAME
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    void initDevInfo(java.lang.String) -> initDevInfo
    int getPlatformId() -> getPlatformId
    java.lang.String getName() -> getName
    int getVersion() -> getVersion
    void setNetworkDevinfo() -> setNetworkDevinfo
    void doShare(cn.sharesdk.framework.Platform$ShareParams) -> doShare
    void doAuthorize(java.lang.String[]) -> doAuthorize
    boolean checkAuthorize(int,java.lang.Object) -> checkAuthorize
    void follow(java.lang.String) -> follow
    void timeline(int,int,java.lang.String) -> timeline
    void userInfor(java.lang.String) -> userInfor
    void getFriendList(int,int,java.lang.String) -> getFriendList
    void doCustomerProtocol(java.lang.String,java.lang.String,int,java.util.HashMap,java.util.HashMap) -> doCustomerProtocol
    cn.sharesdk.framework.statistics.b.f$a filterShareContent(cn.sharesdk.framework.Platform$ShareParams,java.util.HashMap) -> filterShareContent
    java.util.HashMap getFollowers(int,int,java.lang.String) -> getFollowers
    java.util.HashMap getFollowings(int,int,java.lang.String) -> getFollowings
    java.util.HashMap getBilaterals(int,int,java.lang.String) -> getBilaterals
    java.util.HashMap filterFriendshipInfo(int,java.util.HashMap) -> filterFriendshipInfo
    boolean hasShareCallback() -> hasShareCallback
    cn.sharesdk.framework.PlatformDb a(cn.sharesdk.twitter.Twitter) -> a
    cn.sharesdk.framework.PlatformDb b(cn.sharesdk.twitter.Twitter) -> b
    cn.sharesdk.framework.PlatformDb c(cn.sharesdk.twitter.Twitter) -> c
    cn.sharesdk.framework.PlatformDb d(cn.sharesdk.twitter.Twitter) -> d
    void a(cn.sharesdk.twitter.Twitter,int,java.lang.Object) -> a
    cn.sharesdk.framework.PlatformActionListener e(cn.sharesdk.twitter.Twitter) -> e
    cn.sharesdk.framework.PlatformActionListener f(cn.sharesdk.twitter.Twitter) -> f
    cn.sharesdk.framework.PlatformActionListener g(cn.sharesdk.twitter.Twitter) -> g
    cn.sharesdk.framework.PlatformActionListener h(cn.sharesdk.twitter.Twitter) -> h
cn.sharesdk.twitter.Twitter$ShareParams -> cn.sharesdk.twitter.Twitter$ShareParams:
cn.sharesdk.twitter.a -> cn.sharesdk.twitter.a:
    cn.sharesdk.twitter.e a -> a
    cn.sharesdk.twitter.Twitter b -> b
    void onComplete(android.os.Bundle) -> onComplete
    void onError(java.lang.Throwable) -> onError
    void onCancel() -> onCancel
cn.sharesdk.twitter.b -> cn.sharesdk.twitter.b:
    boolean d -> d
    boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String) -> shouldOverrideUrlLoading
    void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap) -> onPageStarted
    void a(java.lang.String) -> a
cn.sharesdk.twitter.c -> cn.sharesdk.twitter.c:
    java.lang.String a -> a
    cn.sharesdk.twitter.b b -> b
    void run() -> run
cn.sharesdk.twitter.d -> cn.sharesdk.twitter.d:
    java.lang.String a -> a
    cn.sharesdk.twitter.b b -> b
    void run() -> run
cn.sharesdk.twitter.e -> cn.sharesdk.twitter.e:
    cn.sharesdk.twitter.e b -> b
    cn.sharesdk.framework.utils.a c -> c
    cn.sharesdk.framework.a.a d -> d
    cn.sharesdk.twitter.e a(cn.sharesdk.framework.Platform) -> a
    void a(java.lang.String,java.lang.String,java.lang.String) -> a
    void a(java.lang.String,java.lang.String) -> a
    java.lang.String getRedirectUri() -> getRedirectUri
    java.lang.String getAuthorizeUrl() -> getAuthorizeUrl
    cn.sharesdk.framework.authorize.b getAuthorizeWebviewClient(cn.sharesdk.framework.authorize.g) -> getAuthorizeWebviewClient
    void a(cn.sharesdk.framework.authorize.AuthorizeListener) -> a
    java.lang.String a(java.lang.String) -> a
    java.util.HashMap b(java.lang.String) -> b
    java.util.HashMap b(java.lang.String,java.lang.String) -> b
    java.util.HashMap c(java.lang.String,java.lang.String) -> c
    java.util.HashMap c(java.lang.String) -> c
    java.util.HashMap d(java.lang.String,java.lang.String) -> d
    java.util.HashMap a(java.lang.String,java.lang.String[]) -> a
    java.util.HashMap e(java.lang.String,java.lang.String) -> e
    java.util.HashMap a(java.lang.String,java.lang.String,java.util.HashMap,java.util.HashMap) -> a
cn.smssdk.DefaultOnSendMessageHandler -> cn.smssdk.DefaultOnSendMessageHandler:
    boolean onSendMessage(java.lang.String,java.lang.String) -> onSendMessage
cn.smssdk.EventHandler -> cn.smssdk.EventHandler:
    void onRegister() -> onRegister
    void beforeEvent(int,java.lang.Object) -> beforeEvent
    void afterEvent(int,int,java.lang.Object) -> afterEvent
    void onUnregister() -> onUnregister
cn.smssdk.OnSendMessageHandler -> cn.smssdk.OnSendMessageHandler:
    boolean onSendMessage(java.lang.String,java.lang.String) -> onSendMessage
cn.smssdk.R -> cn.smssdk.R:
cn.smssdk.R$array -> cn.smssdk.R$array:
    int smssdk_country_group_a -> smssdk_country_group_a
    int smssdk_country_group_b -> smssdk_country_group_b
    int smssdk_country_group_c -> smssdk_country_group_c
    int smssdk_country_group_d -> smssdk_country_group_d
    int smssdk_country_group_e -> smssdk_country_group_e
    int smssdk_country_group_f -> smssdk_country_group_f
    int smssdk_country_group_g -> smssdk_country_group_g
    int smssdk_country_group_h -> smssdk_country_group_h
    int smssdk_country_group_i -> smssdk_country_group_i
    int smssdk_country_group_j -> smssdk_country_group_j
    int smssdk_country_group_k -> smssdk_country_group_k
    int smssdk_country_group_l -> smssdk_country_group_l
    int smssdk_country_group_m -> smssdk_country_group_m
    int smssdk_country_group_n -> smssdk_country_group_n
    int smssdk_country_group_o -> smssdk_country_group_o
    int smssdk_country_group_p -> smssdk_country_group_p
    int smssdk_country_group_q -> smssdk_country_group_q
    int smssdk_country_group_r -> smssdk_country_group_r
    int smssdk_country_group_s -> smssdk_country_group_s
    int smssdk_country_group_t -> smssdk_country_group_t
    int smssdk_country_group_u -> smssdk_country_group_u
    int smssdk_country_group_v -> smssdk_country_group_v
    int smssdk_country_group_w -> smssdk_country_group_w
    int smssdk_country_group_x -> smssdk_country_group_x
    int smssdk_country_group_y -> smssdk_country_group_y
    int smssdk_country_group_z -> smssdk_country_group_z
cn.smssdk.R$color -> cn.smssdk.R$color:
    int smssdk_black -> smssdk_black
    int smssdk_gray -> smssdk_gray
    int smssdk_gray_press -> smssdk_gray_press
    int smssdk_lv_item_divider -> smssdk_lv_item_divider
    int smssdk_lv_item_selector -> smssdk_lv_item_selector
    int smssdk_lv_title_color -> smssdk_lv_title_color
    int smssdk_lv_tv_color -> smssdk_lv_tv_color
    int smssdk_transparent -> smssdk_transparent
    int smssdk_white -> smssdk_white
cn.smssdk.R$drawable -> cn.smssdk.R$drawable:
    int smssdk_back_arrow -> smssdk_back_arrow
    int smssdk_back_arrow2 -> smssdk_back_arrow2
    int smssdk_btn_disenable -> smssdk_btn_disenable
    int smssdk_btn_enable -> smssdk_btn_enable
    int smssdk_cl_divider -> smssdk_cl_divider
    int smssdk_clear_search -> smssdk_clear_search
    int smssdk_corners_bg -> smssdk_corners_bg
    int smssdk_corners_bg_nor -> smssdk_corners_bg_nor
    int smssdk_corners_bg_pre -> smssdk_corners_bg_pre
    int smssdk_country_bg_selector -> smssdk_country_bg_selector
    int smssdk_country_group_scroll_down -> smssdk_country_group_scroll_down
    int smssdk_country_group_scroll_up -> smssdk_country_group_scroll_up
    int smssdk_cp_default_avatar -> smssdk_cp_default_avatar
    int smssdk_default_avatar -> smssdk_default_avatar
    int smssdk_dialog_back -> smssdk_dialog_back
    int smssdk_dialog_bg -> smssdk_dialog_bg
    int smssdk_dialog_btn_back -> smssdk_dialog_btn_back
    int smssdk_dialog_btn_nor -> smssdk_dialog_btn_nor
    int smssdk_dialog_btn_pre -> smssdk_dialog_btn_pre
    int smssdk_edittext_bg_selector -> smssdk_edittext_bg_selector
    int smssdk_input_bg_focus -> smssdk_input_bg_focus
    int smssdk_input_bg_normal -> smssdk_input_bg_normal
    int smssdk_input_bg_special_focus -> smssdk_input_bg_special_focus
    int smssdk_input_bg_special_normal -> smssdk_input_bg_special_normal
    int smssdk_search_icon -> smssdk_search_icon
    int smssdk_sharesdk_icon -> smssdk_sharesdk_icon
cn.smssdk.R$id -> cn.smssdk.R$id:
    int btn_add -> btn_add
    int btn_dialog_cancel -> btn_dialog_cancel
    int btn_dialog_ok -> btn_dialog_ok
    int btn_invite -> btn_invite
    int btn_next -> btn_next
    int btn_sounds -> btn_sounds
    int btn_submit -> btn_submit
    int clContact -> clContact
    int clCountry -> clCountry
    int et_put_identify -> et_put_identify
    int et_write_phone -> et_write_phone
    int ivSearch -> ivSearch
    int iv_clear -> iv_clear
    int iv_contact -> iv_contact
    int iv_contact_icon -> iv_contact_icon
    int llSearch -> llSearch
    int llTitle -> llTitle
    int ll_back -> ll_back
    int rl_country -> rl_country
    int rl_lv_item_bg -> rl_lv_item_bg
    int tv_contact -> tv_contact
    int tv_contact_name -> tv_contact_name
    int tv_contact_phones -> tv_contact_phones
    int tv_country -> tv_country
    int tv_country_num -> tv_country_num
    int tv_dialog_hint -> tv_dialog_hint
    int tv_dialog_title -> tv_dialog_title
    int tv_identify_notify -> tv_identify_notify
    int tv_invite_hint -> tv_invite_hint
    int tv_name -> tv_name
    int tv_phone -> tv_phone
    int tv_title -> tv_title
    int tv_unreceive_identify -> tv_unreceive_identify
cn.smssdk.R$layout -> cn.smssdk.R$layout:
    int smssdk_back_verify_dialog -> smssdk_back_verify_dialog
    int smssdk_contact_detail_page -> smssdk_contact_detail_page
    int smssdk_contact_list_page -> smssdk_contact_list_page
    int smssdk_contacts_listview_item -> smssdk_contacts_listview_item
    int smssdk_country_list_page -> smssdk_country_list_page
    int smssdk_input_identify_num_page -> smssdk_input_identify_num_page
    int smssdk_listview_title_layout -> smssdk_listview_title_layout
    int smssdk_progress_dialog -> smssdk_progress_dialog
    int smssdk_regist_page -> smssdk_regist_page
    int smssdk_search_title_layout -> smssdk_search_title_layout
    int smssdk_send_msg_dialog -> smssdk_send_msg_dialog
    int smssdk_title_layout -> smssdk_title_layout
cn.smssdk.R$raw -> cn.smssdk.R$raw:
    int smssdk_pydb -> smssdk_pydb
cn.smssdk.R$string -> cn.smssdk.R$string:
    int smssdk_add_contact -> smssdk_add_contact
    int smssdk_back -> smssdk_back
    int smssdk_cancel -> smssdk_cancel
    int smssdk_choice_invite_phones -> smssdk_choice_invite_phones
    int smssdk_choose_country -> smssdk_choose_country
    int smssdk_close_identify_page_dialog -> smssdk_close_identify_page_dialog
    int smssdk_contacts_detail -> smssdk_contacts_detail
    int smssdk_contacts_in_app -> smssdk_contacts_in_app
    int smssdk_contacts_out_app -> smssdk_contacts_out_app
    int smssdk_contacts_phones -> smssdk_contacts_phones
    int smssdk_country -> smssdk_country
    int smssdk_country_not_support_currently -> smssdk_country_not_support_currently
    int smssdk_error_desc_511 -> smssdk_error_desc_511
    int smssdk_error_desc_512 -> smssdk_error_desc_512
    int smssdk_error_desc_513 -> smssdk_error_desc_513
    int smssdk_error_desc_514 -> smssdk_error_desc_514
    int smssdk_error_desc_515 -> smssdk_error_desc_515
    int smssdk_error_desc_516 -> smssdk_error_desc_516
    int smssdk_error_desc_517 -> smssdk_error_desc_517
    int smssdk_error_desc_518 -> smssdk_error_desc_518
    int smssdk_error_desc_519 -> smssdk_error_desc_519
    int smssdk_error_desc_520 -> smssdk_error_desc_520
    int smssdk_error_desc_521 -> smssdk_error_desc_521
    int smssdk_error_desc_522 -> smssdk_error_desc_522
    int smssdk_error_desc_523 -> smssdk_error_desc_523
    int smssdk_error_desc_524 -> smssdk_error_desc_524
    int smssdk_error_desc_525 -> smssdk_error_desc_525
    int smssdk_error_desc_526 -> smssdk_error_desc_526
    int smssdk_error_desc_server_busy -> smssdk_error_desc_server_busy
    int smssdk_error_detail_511 -> smssdk_error_detail_511
    int smssdk_error_detail_512 -> smssdk_error_detail_512
    int smssdk_error_detail_513 -> smssdk_error_detail_513
    int smssdk_error_detail_514 -> smssdk_error_detail_514
    int smssdk_error_detail_515 -> smssdk_error_detail_515
    int smssdk_error_detail_516 -> smssdk_error_detail_516
    int smssdk_error_detail_517 -> smssdk_error_detail_517
    int smssdk_error_detail_518 -> smssdk_error_detail_518
    int smssdk_error_detail_519 -> smssdk_error_detail_519
    int smssdk_error_detail_520 -> smssdk_error_detail_520
    int smssdk_error_detail_521 -> smssdk_error_detail_521
    int smssdk_error_detail_522 -> smssdk_error_detail_522
    int smssdk_error_detail_523 -> smssdk_error_detail_523
    int smssdk_error_detail_524 -> smssdk_error_detail_524
    int smssdk_error_detail_525 -> smssdk_error_detail_525
    int smssdk_error_detail_526 -> smssdk_error_detail_526
    int smssdk_get_phone_verifycode_today_frequentlly -> smssdk_get_phone_verifycode_today_frequentlly
    int smssdk_get_verifycode_frequentlly -> smssdk_get_verifycode_frequentlly
    int smssdk_identify_code -> smssdk_identify_code
    int smssdk_invite -> smssdk_invite
    int smssdk_invite_content -> smssdk_invite_content
    int smssdk_make_sure_country_mobile -> smssdk_make_sure_country_mobile
    int smssdk_make_sure_mobile_detail -> smssdk_make_sure_mobile_detail
    int smssdk_make_sure_mobile_num -> smssdk_make_sure_mobile_num
    int smssdk_make_sure_send_sounds -> smssdk_make_sure_send_sounds
    int smssdk_network_error -> smssdk_network_error
    int smssdk_next -> smssdk_next
    int smssdk_not_invite -> smssdk_not_invite
    int smssdk_ok -> smssdk_ok
    int smssdk_receive_msg -> smssdk_receive_msg
    int smssdk_regist -> smssdk_regist
    int smssdk_resend_identify_code -> smssdk_resend_identify_code
    int smssdk_search -> smssdk_search
    int smssdk_search_contact -> smssdk_search_contact
    int smssdk_send_invitation -> smssdk_send_invitation
    int smssdk_send_mobile_detail -> smssdk_send_mobile_detail
    int smssdk_send_sounds_identify_code -> smssdk_send_sounds_identify_code
    int smssdk_send_sounds_success -> smssdk_send_sounds_success
    int smssdk_submit -> smssdk_submit
    int smssdk_unreceive_identify_code -> smssdk_unreceive_identify_code
    int smssdk_user_info_submited -> smssdk_user_info_submited
    int smssdk_virificaition_code_sent -> smssdk_virificaition_code_sent
    int smssdk_virificaition_code_wrong -> smssdk_virificaition_code_wrong
    int smssdk_wait -> smssdk_wait
    int smssdk_write_identify_code -> smssdk_write_identify_code
    int smssdk_write_mobile_phone -> smssdk_write_mobile_phone
    int smssdk_write_right_mobile_phone -> smssdk_write_right_mobile_phone
    int smssdk_your_ccount_is_verified -> smssdk_your_ccount_is_verified
cn.smssdk.R$style -> cn.smssdk.R$style:
    int AppTheme -> AppTheme
    int CommonDialog -> CommonDialog
cn.smssdk.ReflectableEnventHandler -> cn.smssdk.ReflectableEnventHandler:
    int a -> a
    android.os.Handler$Callback b -> b
    int c -> c
    android.os.Handler$Callback d -> d
    int e -> e
    android.os.Handler$Callback f -> f
    int g -> g
    android.os.Handler$Callback h -> h
    void setOnRegisterCallback(int,android.os.Handler$Callback) -> setOnRegisterCallback
    void onRegister() -> onRegister
    void setBeforeEventCallback(int,android.os.Handler$Callback) -> setBeforeEventCallback
    void beforeEvent(int,java.lang.Object) -> beforeEvent
    void setAfterEventCallback(int,android.os.Handler$Callback) -> setAfterEventCallback
    void afterEvent(int,int,java.lang.Object) -> afterEvent
    void setOnUnregisterCallback(int,android.os.Handler$Callback) -> setOnUnregisterCallback
    void onUnregister() -> onUnregister
cn.smssdk.SMSSDK -> cn.smssdk.SMSSDK:
    int RESULT_COMPLETE -> RESULT_COMPLETE
    int RESULT_ERROR -> RESULT_ERROR
    int EVENT_GET_SUPPORTED_COUNTRIES -> EVENT_GET_SUPPORTED_COUNTRIES
    int EVENT_GET_VERIFICATION_CODE -> EVENT_GET_VERIFICATION_CODE
    int EVENT_SUBMIT_VERIFICATION_CODE -> EVENT_SUBMIT_VERIFICATION_CODE
    int EVENT_GET_CONTACTS -> EVENT_GET_CONTACTS
    int EVENT_SUBMIT_USER_INFO -> EVENT_SUBMIT_USER_INFO
    int EVENT_GET_FRIENDS_IN_APP -> EVENT_GET_FRIENDS_IN_APP
    int EVENT_GET_NEW_FRIENDS_COUNT -> EVENT_GET_NEW_FRIENDS_COUNT
    int EVENT_GET_VOICE_VERIFICATION_CODE -> EVENT_GET_VOICE_VERIFICATION_CODE
    cn.smssdk.a a -> a
    void initSDK(android.content.Context,java.lang.String,java.lang.String) -> initSDK
    void registerEventHandler(cn.smssdk.EventHandler) -> registerEventHandler
    void unregisterEventHandler(cn.smssdk.EventHandler) -> unregisterEventHandler
    void unregisterAllEventHandler() -> unregisterAllEventHandler
    void a() -> a
    void getSupportedCountries() -> getSupportedCountries
    void getVerificationCode(java.lang.String,java.lang.String) -> getVerificationCode
    void getVerificationCode(java.lang.String,java.lang.String,cn.smssdk.OnSendMessageHandler) -> getVerificationCode
    void submitVerificationCode(java.lang.String,java.lang.String,java.lang.String) -> submitVerificationCode
    void getContacts(boolean) -> getContacts
    void submitUserInfo(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> submitUserInfo
    void getFriendsInApp() -> getFriendsInApp
    void getNewFriendsCount() -> getNewFriendsCount
    java.util.HashMap getGroupedCountryList() -> getGroupedCountryList
    java.lang.String[] getCountry(java.lang.String) -> getCountry
    java.lang.String[] getCountryByMCC(java.lang.String) -> getCountryByMCC
    void readVerificationCode(android.telephony.SmsMessage,cn.smssdk.SMSSDK$VerifyCodeReadListener) -> readVerificationCode
    void getVoiceVerifyCode(java.lang.String,java.lang.String) -> getVoiceVerifyCode
cn.smssdk.SMSSDK$VerifyCodeReadListener -> cn.smssdk.SMSSDK$VerifyCodeReadListener:
    void onReadVerifyCode(java.lang.String) -> onReadVerifyCode
cn.smssdk.UserInterruptException -> cn.smssdk.UserInterruptException:
    long serialVersionUID -> serialVersionUID
cn.smssdk.a -> cn.smssdk.a:
    android.content.Context a -> a
    java.util.HashSet b -> b
    cn.smssdk.utils.Protocols c -> c
    cn.smssdk.contact.a d -> d
    cn.smssdk.a.a e -> e
    cn.smssdk.b.a f -> f
    java.util.HashMap g -> g
    java.lang.String h -> h
    void a() -> a
    void a(cn.smssdk.EventHandler) -> a
    void b(cn.smssdk.EventHandler) -> b
    void b() -> b
    void a(int,java.lang.Object) -> a
    void b(int,java.lang.Object) -> b
    void a(int,int,java.lang.Object) -> a
    void a(java.lang.Object) -> a
    void b(java.lang.Object) -> b
    void c(java.lang.Object) -> c
    void d() -> d
    void d(java.lang.Object) -> d
    void e() -> e
    void f() -> f
    void onContactChange(boolean) -> onContactChange
    java.util.HashMap c() -> c
    java.lang.String[] a(java.lang.String) -> a
    java.lang.String[] b(java.lang.String) -> b
    void a(android.telephony.SmsMessage,cn.smssdk.SMSSDK$VerifyCodeReadListener) -> a
    void e(java.lang.Object) -> e
    void a(android.content.Context,java.lang.String,java.lang.String) -> a
    java.util.HashSet a(cn.smssdk.a) -> a
    void a(cn.smssdk.a,int,java.lang.Object) -> a
    void a(cn.smssdk.a,int,int,java.lang.Object) -> a
cn.smssdk.a.a -> cn.smssdk.a.a:
    cn.smssdk.a.a a -> a
    cn.smssdk.utils.Protocols b -> b
    cn.smssdk.utils.f c -> c
    cn.smssdk.a.b d -> d
    cn.smssdk.contact.a e -> e
    cn.smssdk.a.a a(android.content.Context) -> a
    void a(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
    int a() -> a
    boolean c() -> c
    java.util.ArrayList a(java.util.ArrayList) -> a
    java.util.ArrayList b() -> b
    void a(int,android.os.Handler$Callback) -> a
    java.lang.String[] d() -> d
cn.smssdk.a.b -> cn.smssdk.a.b:
    android.os.Handler a -> a
    cn.smssdk.contact.a b -> b
    cn.smssdk.utils.f c -> c
    cn.smssdk.utils.Protocols d -> d
    cn.smssdk.a.a e -> e
    int f -> f
    android.os.Handler$Callback g -> g
    void a(int,android.os.Handler$Callback) -> a
    boolean handleMessage(android.os.Message) -> handleMessage
    int a() -> a
    android.os.Handler$Callback a(cn.smssdk.a.b) -> a
    int b(cn.smssdk.a.b) -> b
cn.smssdk.a.c -> cn.smssdk.a.c:
    cn.smssdk.a.b a -> a
    void run() -> run
cn.smssdk.b -> cn.smssdk.b:
    int a -> a
    java.lang.Object b -> b
    cn.smssdk.a c -> c
    void run() -> run
cn.smssdk.b.a -> cn.smssdk.b.a:
    cn.smssdk.utils.f a -> a
    java.util.HashMap b -> b
    cn.smssdk.b.a c -> c
    cn.smssdk.SMSSDK$VerifyCodeReadListener d -> d
    java.lang.String e -> e
    cn.smssdk.b.a a(android.content.Context) -> a
    void a(java.lang.String,java.lang.String) -> a
    void a(cn.smssdk.SMSSDK$VerifyCodeReadListener) -> a
    boolean a(android.telephony.SmsMessage) -> a
    boolean b(android.telephony.SmsMessage) -> b
    void a() -> a
    java.lang.String a(java.lang.String) -> a
    int b(java.lang.String) -> b
cn.smssdk.c -> cn.smssdk.c:
    cn.smssdk.a a -> a
    boolean handleMessage(android.os.Message) -> handleMessage
cn.smssdk.contact.OnContactChangeListener -> cn.smssdk.contact.OnContactChangeListener:
    void onContactChange(boolean) -> onContactChange
cn.smssdk.contact.a -> cn.smssdk.contact.a:
    cn.smssdk.contact.a a -> a
    android.database.ContentObserver b -> b
    android.content.ContentResolver c -> c
    cn.smssdk.contact.c d -> d
    long e -> e
    java.util.ArrayList f -> f
    cn.smssdk.contact.OnContactChangeListener g -> g
    cn.smssdk.contact.d h -> h
    cn.smssdk.contact.a a(android.content.Context) -> a
    void d() -> d
    void a() -> a
    void b() -> b
    java.util.ArrayList e() -> e
    java.util.ArrayList a(boolean) -> a
    java.lang.String[] c() -> c
    void a(cn.smssdk.contact.OnContactChangeListener) -> a
    cn.smssdk.contact.d a(cn.smssdk.contact.a) -> a
    cn.smssdk.contact.OnContactChangeListener b(cn.smssdk.contact.a) -> b
cn.smssdk.contact.a.a -> cn.smssdk.contact.a.a:
    java.lang.String a -> a
    cn.smssdk.contact.a.h b -> b
    cn.smssdk.contact.a.i c -> c
    cn.smssdk.contact.a.e d -> d
    cn.smssdk.contact.a.k e -> e
    java.util.ArrayList f -> f
    cn.smssdk.contact.a.m g -> g
    cn.smssdk.contact.a.j h -> h
    java.util.ArrayList i -> i
    java.util.ArrayList j -> j
    java.util.ArrayList k -> k
    java.util.ArrayList l -> l
    java.util.ArrayList m -> m
    java.util.ArrayList n -> n
    java.util.ArrayList o -> o
    cn.smssdk.contact.a.f p -> p
    void a(cn.smssdk.contact.c) -> a
    cn.smssdk.contact.a.h a() -> a
    cn.smssdk.contact.a.i b() -> b
    cn.smssdk.contact.a.e c() -> c
    cn.smssdk.contact.a.k d() -> d
    cn.smssdk.contact.a.m e() -> e
    cn.smssdk.contact.a.j f() -> f
    java.util.ArrayList g() -> g
    java.util.ArrayList h() -> h
    java.util.ArrayList i() -> i
    java.util.ArrayList j() -> j
    java.util.ArrayList k() -> k
    java.util.ArrayList l() -> l
    java.util.ArrayList m() -> m
    java.lang.String toString() -> toString
    java.util.HashMap n() -> n
cn.smssdk.contact.a.b -> cn.smssdk.contact.a.b:
    java.util.HashMap a -> a
    java.util.HashMap b -> b
    cn.smssdk.contact.a.b a(java.util.HashMap) -> a
    void b(java.util.HashMap) -> b
    byte[] a(java.lang.String) -> a
    java.lang.String b(java.lang.String) -> b
    int a(java.lang.String,int) -> a
    java.lang.String toString() -> toString
    java.util.HashMap a() -> a
cn.smssdk.contact.a.c -> cn.smssdk.contact.a.c:
    java.lang.String b() -> b
    int c() -> c
    java.lang.String d() -> d
    int a(int) -> a
cn.smssdk.contact.a.d -> cn.smssdk.contact.a.d:
    java.lang.String b() -> b
    int c() -> c
    java.lang.String d() -> d
    int a(int) -> a
cn.smssdk.contact.a.e -> cn.smssdk.contact.a.e:
    java.lang.String b() -> b
cn.smssdk.contact.a.f -> cn.smssdk.contact.a.f:
cn.smssdk.contact.a.g -> cn.smssdk.contact.a.g:
    java.lang.String b() -> b
    int c() -> c
    java.lang.String d() -> d
    int a(int) -> a
cn.smssdk.contact.a.h -> cn.smssdk.contact.a.h:
    java.lang.String b() -> b
    java.lang.String c() -> c
    java.lang.String d() -> d
    java.lang.String e() -> e
    java.lang.String f() -> f
    java.lang.String g() -> g
    java.lang.String h() -> h
    java.lang.String i() -> i
cn.smssdk.contact.a.i -> cn.smssdk.contact.a.i:
    java.lang.String b() -> b
cn.smssdk.contact.a.j -> cn.smssdk.contact.a.j:
    java.lang.String b() -> b
cn.smssdk.contact.a.k -> cn.smssdk.contact.a.k:
    java.lang.String b() -> b
    java.lang.String c() -> c
cn.smssdk.contact.a.l -> cn.smssdk.contact.a.l:
    java.lang.String b() -> b
    int c() -> c
    java.lang.String d() -> d
    int a(int) -> a
cn.smssdk.contact.a.m -> cn.smssdk.contact.a.m:
    java.lang.String b() -> b
cn.smssdk.contact.a.n -> cn.smssdk.contact.a.n:
    java.lang.String b() -> b
    int c() -> c
    java.lang.String d() -> d
    int a(int) -> a
cn.smssdk.contact.a.o -> cn.smssdk.contact.a.o:
    java.lang.String b() -> b
    int c() -> c
    java.lang.String d() -> d
    int a(int) -> a
cn.smssdk.contact.a.p -> cn.smssdk.contact.a.p:
cn.smssdk.contact.a.q -> cn.smssdk.contact.a.q:
    java.lang.String b() -> b
    int c() -> c
    java.lang.String d() -> d
    int a(int) -> a
cn.smssdk.contact.b -> cn.smssdk.contact.b:
    cn.smssdk.contact.a a -> a
    void onChange(boolean) -> onChange
cn.smssdk.contact.c -> cn.smssdk.contact.c:
    android.content.ContentResolver a -> a
    boolean b -> b
    java.util.ArrayList a(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String) -> a
cn.smssdk.contact.d -> cn.smssdk.contact.d:
    android.os.Handler a -> a
    cn.smssdk.contact.a b -> b
    cn.smssdk.utils.f c -> c
    cn.smssdk.utils.Protocols d -> d
    java.lang.String e -> e
    void a() -> a
    boolean handleMessage(android.os.Message) -> handleMessage
    java.lang.String a(java.lang.Object) -> a
    boolean b() -> b
    void c() -> c
    cn.smssdk.contact.a a(cn.smssdk.contact.d) -> a
    java.lang.String a(cn.smssdk.contact.d,java.lang.Object) -> a
    cn.smssdk.utils.f b(cn.smssdk.contact.d) -> b
    cn.smssdk.utils.Protocols c(cn.smssdk.contact.d) -> c
    void d(cn.smssdk.contact.d) -> d
cn.smssdk.contact.e -> cn.smssdk.contact.e:
    cn.smssdk.contact.d a -> a
    void run() -> run
cn.smssdk.gui.CommonDialog -> cn.smssdk.gui.CommonDialog:
    android.app.Dialog ProgressDialog(android.content.Context) -> ProgressDialog
cn.smssdk.gui.ContactDetailPage -> cn.smssdk.gui.ContactDetailPage:
    java.lang.String phoneName -> phoneName
    java.util.ArrayList phoneList -> phoneList
    void onCreate() -> onCreate
    void onResume() -> onResume
    void onPause() -> onPause
    void setContact(java.util.HashMap) -> setContact
    void onClick(android.view.View) -> onClick
    void sendMsg(java.lang.String) -> sendMsg
    void showDialog() -> showDialog
    java.util.ArrayList access$0(cn.smssdk.gui.ContactDetailPage) -> access$0
    void access$1(cn.smssdk.gui.ContactDetailPage,java.lang.String) -> access$1
cn.smssdk.gui.ContactDetailPage$1 -> cn.smssdk.gui.ContactDetailPage$1:
    cn.smssdk.gui.ContactDetailPage this$0 -> this$0
    void onClick(android.content.DialogInterface,int) -> onClick
cn.smssdk.gui.ContactDetailPage$2 -> cn.smssdk.gui.ContactDetailPage$2:
    cn.smssdk.gui.ContactDetailPage this$0 -> this$0
    void onClick(android.content.DialogInterface,int) -> onClick
cn.smssdk.gui.ContactEntry -> cn.smssdk.gui.ContactEntry:
    java.lang.String key -> key
    java.util.HashMap value -> value
    java.lang.String getKey() -> getKey
    java.util.HashMap getValue() -> getValue
    java.util.HashMap setValue(java.util.HashMap) -> setValue
    java.lang.String toString() -> toString
    java.lang.Object getValue() -> getValue
    java.lang.Object getKey() -> getKey
    java.lang.Object setValue(java.lang.Object) -> setValue
cn.smssdk.gui.ContactItemMaker -> cn.smssdk.gui.ContactItemMaker:
    android.view.View getView(java.util.HashMap,android.view.View,android.view.ViewGroup) -> getView
cn.smssdk.gui.ContactsAdapter -> cn.smssdk.gui.ContactsAdapter:
    java.util.ArrayList titles -> titles
    java.util.ArrayList contacts -> contacts
    java.util.ArrayList friendsInApp -> friendsInApp
    java.util.ArrayList contactsOutApp -> contactsOutApp
    cn.smssdk.gui.ContactItemMaker itemMaker -> itemMaker
    cn.smssdk.gui.SearchEngine sEngine -> sEngine
    void initSearchEngine() -> initSearchEngine
    void search(java.lang.String) -> search
    void reSortFia(java.util.HashMap,boolean,java.util.ArrayList) -> reSortFia
    void reSortFoa(java.util.HashMap,boolean,java.util.ArrayList) -> reSortFoa
    void setContactItemMaker(cn.smssdk.gui.ContactItemMaker) -> setContactItemMaker
    int getGroupCount() -> getGroupCount
    int getCount(int) -> getCount
    java.lang.String getGroupTitle(int) -> getGroupTitle
    java.util.HashMap getItem(int,int) -> getItem
    android.widget.TextView getTitleView(int,android.widget.TextView,android.view.ViewGroup) -> getTitleView
    android.view.View getView(int,int,android.view.View,android.view.ViewGroup) -> getView
    java.lang.Object getItem(int,int) -> getItem
cn.smssdk.gui.ContactsListView -> cn.smssdk.gui.ContactsListView:
    android.widget.ListView lvBody -> lvBody
    cn.smssdk.gui.ContactsListView$InnerAdapter innerAdapter -> innerAdapter
    cn.smssdk.gui.ContactsListView$GroupAdapter adapter -> adapter
    android.widget.TextView tvTitle -> tvTitle
    int curFirstItem -> curFirstItem
    int titleHeight -> titleHeight
    android.widget.AbsListView$OnScrollListener osListener -> osListener
    void init(android.content.Context) -> init
    void setAdapter(cn.smssdk.gui.ContactsListView$GroupAdapter) -> setAdapter
    cn.smssdk.gui.ContactsListView$GroupAdapter getAdapter() -> getAdapter
    void notifyDataSetChanged() -> notifyDataSetChanged
    void setTitle() -> setTitle
    void setSelection(int) -> setSelection
    void setSelection(int,int) -> setSelection
    void onScroll() -> onScroll
    void setOnScrollListener(android.widget.AbsListView$OnScrollListener) -> setOnScrollListener
    void access$0(cn.smssdk.gui.ContactsListView) -> access$0
    android.widget.AbsListView$OnScrollListener access$1(cn.smssdk.gui.ContactsListView) -> access$1
    void access$2(cn.smssdk.gui.ContactsListView,int) -> access$2
    android.widget.TextView access$3(cn.smssdk.gui.ContactsListView) -> access$3
    void access$4(cn.smssdk.gui.ContactsListView) -> access$4
cn.smssdk.gui.ContactsListView$1 -> cn.smssdk.gui.ContactsListView$1:
    cn.smssdk.gui.ContactsListView this$0 -> this$0
    void onScrollStateChanged(android.widget.AbsListView,int) -> onScrollStateChanged
    void onScroll(android.widget.AbsListView,int,int,int) -> onScroll
cn.smssdk.gui.ContactsListView$GroupAdapter -> cn.smssdk.gui.ContactsListView$GroupAdapter:
    cn.smssdk.gui.ContactsListView view -> view
    int getGroupCount() -> getGroupCount
    int getCount(int) -> getCount
    java.lang.String getGroupTitle(int) -> getGroupTitle
    java.lang.Object getItem(int,int) -> getItem
    android.widget.TextView getTitleView(int,android.widget.TextView,android.view.ViewGroup) -> getTitleView
    android.view.View getView(int,int,android.view.View,android.view.ViewGroup) -> getView
    void notifyDataSetChanged() -> notifyDataSetChanged
cn.smssdk.gui.ContactsListView$InnerAdapter -> cn.smssdk.gui.ContactsListView$InnerAdapter:
    cn.smssdk.gui.ContactsListView$GroupAdapter adapter -> adapter
    java.util.ArrayList listData -> listData
    java.util.ArrayList titleIndex -> titleIndex
    java.util.ArrayList lastItemIndex -> lastItemIndex
    void init() -> init
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    int getItemGroup(int) -> getItemGroup
    boolean isTitle(int) -> isTitle
    int getViewTypeCount() -> getViewTypeCount
    int getItemViewType(int) -> getItemViewType
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    void notifyDataSetChanged() -> notifyDataSetChanged
    boolean isLastItem(int) -> isLastItem
    java.util.ArrayList access$0(cn.smssdk.gui.ContactsListView$InnerAdapter) -> access$0
cn.smssdk.gui.ContactsPage -> cn.smssdk.gui.ContactsPage:
    android.widget.EditText etSearch -> etSearch
    cn.smssdk.gui.ContactsListView listView -> listView
    cn.smssdk.gui.ContactsAdapter adapter -> adapter
    cn.smssdk.gui.ContactItemMaker itemMaker -> itemMaker
    android.app.Dialog pd -> pd
    cn.smssdk.EventHandler handler -> handler
    java.util.ArrayList friendsInApp -> friendsInApp
    java.util.ArrayList contactsInMobile -> contactsInMobile
    void onCreate() -> onCreate
    void afterPrepare() -> afterPrepare
    void onResume() -> onResume
    void onPause() -> onPause
    void show(android.content.Context) -> show
    void show(android.content.Context,cn.smssdk.gui.ContactItemMaker) -> show
    void initView() -> initView
    void initData() -> initData
    boolean onKeyEvent(int,android.view.KeyEvent) -> onKeyEvent
    void onDestroy() -> onDestroy
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void afterTextChanged(android.text.Editable) -> afterTextChanged
    void onClick(android.view.View) -> onClick
    void refreshContactList() -> refreshContactList
    void access$0(cn.smssdk.gui.ContactsPage) -> access$0
    void access$1(cn.smssdk.gui.ContactsPage,java.util.ArrayList) -> access$1
    void access$2(cn.smssdk.gui.ContactsPage,java.util.ArrayList) -> access$2
    android.app.Activity access$3(cn.smssdk.gui.ContactsPage) -> access$3
    void access$4(cn.smssdk.gui.ContactsPage) -> access$4
    void access$5(cn.smssdk.gui.ContactsPage) -> access$5
    void access$6(cn.smssdk.gui.ContactsPage) -> access$6
    android.app.Dialog access$7(cn.smssdk.gui.ContactsPage) -> access$7
    cn.smssdk.gui.ContactsListView access$8(cn.smssdk.gui.ContactsPage) -> access$8
    java.util.ArrayList access$9(cn.smssdk.gui.ContactsPage) -> access$9
    java.util.ArrayList access$10(cn.smssdk.gui.ContactsPage) -> access$10
    void access$11(cn.smssdk.gui.ContactsPage,cn.smssdk.gui.ContactsAdapter) -> access$11
    cn.smssdk.gui.ContactsAdapter access$12(cn.smssdk.gui.ContactsPage) -> access$12
    cn.smssdk.gui.ContactItemMaker access$13(cn.smssdk.gui.ContactsPage) -> access$13
cn.smssdk.gui.ContactsPage$1 -> cn.smssdk.gui.ContactsPage$1:
    cn.smssdk.gui.ContactsPage this$0 -> this$0
    void run() -> run
cn.smssdk.gui.ContactsPage$2 -> cn.smssdk.gui.ContactsPage$2:
    cn.smssdk.gui.ContactsPage this$0 -> this$0
    void run() -> run
cn.smssdk.gui.ContactsPage$3 -> cn.smssdk.gui.ContactsPage$3:
    cn.smssdk.gui.ContactsPage this$0 -> this$0
    void afterEvent(int,int,java.lang.Object) -> afterEvent
    cn.smssdk.gui.ContactsPage access$0(cn.smssdk.gui.ContactsPage$3) -> access$0
cn.smssdk.gui.ContactsPage$3$1 -> cn.smssdk.gui.ContactsPage$3$1:
    cn.smssdk.gui.ContactsPage$3 this$1 -> this$1
    void run() -> run
cn.smssdk.gui.ContactsPage$4 -> cn.smssdk.gui.ContactsPage$4:
    cn.smssdk.gui.ContactsPage this$0 -> this$0
    void run() -> run
cn.smssdk.gui.CountryAdapter -> cn.smssdk.gui.CountryAdapter:
    java.util.HashMap rawData -> rawData
    java.util.ArrayList titles -> titles
    java.util.ArrayList countries -> countries
    cn.smssdk.gui.SearchEngine sEngine -> sEngine
    void initSearchEngine() -> initSearchEngine
    void search(java.lang.String) -> search
    int getGroupCount() -> getGroupCount
    int getCount(int) -> getCount
    java.lang.String getGroupTitle(int) -> getGroupTitle
    java.lang.String[] getItem(int,int) -> getItem
    android.view.View getTitleView(int,android.view.View,android.view.ViewGroup) -> getTitleView
    void onGroupChange(android.view.View,java.lang.String) -> onGroupChange
    android.view.View getView(int,int,android.view.View,android.view.ViewGroup) -> getView
    java.lang.Object getItem(int,int) -> getItem
cn.smssdk.gui.CountryListView -> cn.smssdk.gui.CountryListView:
    cn.smssdk.gui.GroupListView lvContries -> lvContries
    android.widget.TextView tvScroll -> tvScroll
    android.widget.LinearLayout llScroll -> llScroll
    cn.smssdk.gui.CountryAdapter adapter -> adapter
    void init(android.content.Context) -> init
    void initScroll(android.content.Context) -> initScroll
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
    void onScroll(android.view.ViewGroup,float,float) -> onScroll
    void onSearch(java.lang.String) -> onSearch
    void setOnItemClickListener(cn.smssdk.gui.GroupListView$OnItemClickListener) -> setOnItemClickListener
    java.lang.String[] getCountry(int,int) -> getCountry
cn.smssdk.gui.CountryPage -> cn.smssdk.gui.CountryPage:
    java.lang.String id -> id
    java.util.HashMap countryRules -> countryRules
    cn.smssdk.EventHandler handler -> handler
    cn.smssdk.gui.CountryListView listView -> listView
    android.widget.EditText etSearch -> etSearch
    android.app.Dialog pd -> pd
    void setCountryId(java.lang.String) -> setCountryId
    void setCountryRuls(java.util.HashMap) -> setCountryRuls
    void onCreate() -> onCreate
    void afterPrepare() -> afterPrepare
    void onResume() -> onResume
    void onPause() -> onPause
    void initPage() -> initPage
    void onCountryListGot(java.util.ArrayList) -> onCountryListGot
    void onItemClick(cn.smssdk.gui.GroupListView,android.view.View,int,int) -> onItemClick
    void onClick(android.view.View) -> onClick
    boolean onKeyEvent(int,android.view.KeyEvent) -> onKeyEvent
    boolean onFinish() -> onFinish
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    void afterTextChanged(android.text.Editable) -> afterTextChanged
    void access$0(cn.smssdk.gui.CountryPage) -> access$0
    android.app.Activity access$1(cn.smssdk.gui.CountryPage) -> access$1
    java.util.HashMap access$2(cn.smssdk.gui.CountryPage) -> access$2
    android.app.Dialog access$3(cn.smssdk.gui.CountryPage) -> access$3
    void access$4(cn.smssdk.gui.CountryPage,java.util.ArrayList) -> access$4
    void access$5(cn.smssdk.gui.CountryPage,cn.smssdk.EventHandler) -> access$5
    cn.smssdk.EventHandler access$6(cn.smssdk.gui.CountryPage) -> access$6
    void access$7(cn.smssdk.gui.CountryPage) -> access$7
cn.smssdk.gui.CountryPage$1 -> cn.smssdk.gui.CountryPage$1:
    cn.smssdk.gui.CountryPage this$0 -> this$0
    void run() -> run
cn.smssdk.gui.CountryPage$2 -> cn.smssdk.gui.CountryPage$2:
    cn.smssdk.gui.CountryPage this$0 -> this$0
    void run() -> run
    cn.smssdk.gui.CountryPage access$0(cn.smssdk.gui.CountryPage$2) -> access$0
cn.smssdk.gui.CountryPage$2$1 -> cn.smssdk.gui.CountryPage$2$1:
    cn.smssdk.gui.CountryPage$2 this$1 -> this$1
    void afterEvent(int,int,java.lang.Object) -> afterEvent
    cn.smssdk.gui.CountryPage$2 access$0(cn.smssdk.gui.CountryPage$2$1) -> access$0
cn.smssdk.gui.CountryPage$2$1$1 -> cn.smssdk.gui.CountryPage$2$1$1:
    cn.smssdk.gui.CountryPage$2$1 this$2 -> this$2
    int val$result -> val$result
    java.lang.Object val$data -> val$data
    void run() -> run
cn.smssdk.gui.DefaultContactViewItem -> cn.smssdk.gui.DefaultContactViewItem:
    android.view.View getView(java.util.HashMap,android.view.View,android.view.ViewGroup) -> getView
cn.smssdk.gui.DefaultContactViewItem$1 -> cn.smssdk.gui.DefaultContactViewItem$1:
    cn.smssdk.gui.DefaultContactViewItem this$0 -> this$0
    java.util.HashMap val$user -> val$user
    android.view.ViewGroup val$parent -> val$parent
    void onClick(android.view.View) -> onClick
cn.smssdk.gui.DefaultContactViewItem$ViewHolder -> cn.smssdk.gui.DefaultContactViewItem$ViewHolder:
    android.view.View bg -> bg
    com.mob.tools.gui.AsyncImageView ivContact -> ivContact
    android.widget.TextView tvName -> tvName
    android.widget.TextView tvContact -> tvContact
    android.widget.Button btnAdd -> btnAdd
    cn.smssdk.gui.DefaultContactViewItem this$0 -> this$0
cn.smssdk.gui.DefaultOnSendMessageListener -> cn.smssdk.gui.DefaultOnSendMessageListener:
    boolean onSendMessage(java.lang.String,java.lang.String) -> onSendMessage
cn.smssdk.gui.GroupListView -> cn.smssdk.gui.GroupListView:
    android.widget.ListView lvBody -> lvBody
    cn.smssdk.gui.GroupListView$InnerAdapter innerAdapter -> innerAdapter
    cn.smssdk.gui.GroupListView$GroupAdapter adapter -> adapter
    android.view.View tvTitle -> tvTitle
    int curFirstItem -> curFirstItem
    int titleHeight -> titleHeight
    android.widget.AbsListView$OnScrollListener osListener -> osListener
    cn.smssdk.gui.GroupListView$OnItemClickListener oicListener -> oicListener
    void init(android.content.Context) -> init
    void setDividerHeight(int) -> setDividerHeight
    void setDivider(android.graphics.drawable.Drawable) -> setDivider
    void setAdapter(cn.smssdk.gui.GroupListView$GroupAdapter) -> setAdapter
    cn.smssdk.gui.GroupListView$GroupAdapter getAdapter() -> getAdapter
    void notifyDataSetChanged() -> notifyDataSetChanged
    void setTitle() -> setTitle
    void setSelection(int) -> setSelection
    void setSelection(int,int) -> setSelection
    void onScroll() -> onScroll
    void setOnScrollListener(android.widget.AbsListView$OnScrollListener) -> setOnScrollListener
    void setOnItemClickListener(cn.smssdk.gui.GroupListView$OnItemClickListener) -> setOnItemClickListener
    void access$0(cn.smssdk.gui.GroupListView) -> access$0
    android.widget.AbsListView$OnScrollListener access$1(cn.smssdk.gui.GroupListView) -> access$1
    void access$2(cn.smssdk.gui.GroupListView,int) -> access$2
    android.view.View access$3(cn.smssdk.gui.GroupListView) -> access$3
    void access$4(cn.smssdk.gui.GroupListView) -> access$4
    cn.smssdk.gui.GroupListView$OnItemClickListener access$5(cn.smssdk.gui.GroupListView) -> access$5
    cn.smssdk.gui.GroupListView$InnerAdapter access$6(cn.smssdk.gui.GroupListView) -> access$6
cn.smssdk.gui.GroupListView$1 -> cn.smssdk.gui.GroupListView$1:
    cn.smssdk.gui.GroupListView this$0 -> this$0
    void onScrollStateChanged(android.widget.AbsListView,int) -> onScrollStateChanged
    void onScroll(android.widget.AbsListView,int,int,int) -> onScroll
cn.smssdk.gui.GroupListView$2 -> cn.smssdk.gui.GroupListView$2:
    cn.smssdk.gui.GroupListView this$0 -> this$0
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
cn.smssdk.gui.GroupListView$GroupAdapter -> cn.smssdk.gui.GroupListView$GroupAdapter:
    cn.smssdk.gui.GroupListView view -> view
    int getGroupCount() -> getGroupCount
    int getCount(int) -> getCount
    java.lang.String getGroupTitle(int) -> getGroupTitle
    java.lang.Object getItem(int,int) -> getItem
    android.view.View getTitleView(int,android.view.View,android.view.ViewGroup) -> getTitleView
    android.view.View getView(int,int,android.view.View,android.view.ViewGroup) -> getView
    void notifyDataSetChanged() -> notifyDataSetChanged
    void onGroupChange(android.view.View,java.lang.String) -> onGroupChange
cn.smssdk.gui.GroupListView$InnerAdapter -> cn.smssdk.gui.GroupListView$InnerAdapter:
    cn.smssdk.gui.GroupListView$GroupAdapter adapter -> adapter
    java.util.ArrayList listData -> listData
    java.util.ArrayList titleIndex -> titleIndex
    java.util.ArrayList lastItemIndex -> lastItemIndex
    void init() -> init
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    int getItemGroup(int) -> getItemGroup
    boolean isTitle(int) -> isTitle
    int getViewTypeCount() -> getViewTypeCount
    int getItemViewType(int) -> getItemViewType
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    void notifyDataSetChanged() -> notifyDataSetChanged
    boolean isLastItem(int) -> isLastItem
    java.util.ArrayList access$0(cn.smssdk.gui.GroupListView$InnerAdapter) -> access$0
cn.smssdk.gui.GroupListView$OnItemClickListener -> cn.smssdk.gui.GroupListView$OnItemClickListener:
    void onItemClick(cn.smssdk.gui.GroupListView,android.view.View,int,int) -> onItemClick
cn.smssdk.gui.IdentifyNumPage -> cn.smssdk.gui.IdentifyNumPage:
    int RETRY_INTERVAL -> RETRY_INTERVAL
    java.lang.String phone -> phone
    java.lang.String code -> code
    java.lang.String formatedPhone -> formatedPhone
    int time -> time
    cn.smssdk.EventHandler handler -> handler
    android.app.Dialog pd -> pd
    android.widget.EditText etIdentifyNum -> etIdentifyNum
    android.widget.TextView tvTitle -> tvTitle
    android.widget.TextView tvPhone -> tvPhone
    android.widget.TextView tvIdentifyNotify -> tvIdentifyNotify
    android.widget.TextView tvUnreceiveIdentify -> tvUnreceiveIdentify
    android.widget.ImageView ivClear -> ivClear
    android.widget.Button btnSubmit -> btnSubmit
    android.widget.Button btnSounds -> btnSounds
    android.content.BroadcastReceiver smsReceiver -> smsReceiver
    int SHOWDIALOGTYPE -> SHOWDIALOGTYPE
    void setPhone(java.lang.String,java.lang.String,java.lang.String) -> setPhone
    void onCreate() -> onCreate
    void onResume() -> onResume
    void onPause() -> onPause
    boolean onFinish() -> onFinish
    void countDown() -> countDown
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void afterTextChanged(android.text.Editable) -> afterTextChanged
    void onClick(android.view.View) -> onClick
    void showDialog(int) -> showDialog
    void afterSubmit(int,java.lang.Object) -> afterSubmit
    void afterGet(int,java.lang.Object) -> afterGet
    void afterGetVoice(int,java.lang.Object) -> afterGetVoice
    void showNotifyDialog() -> showNotifyDialog
    boolean onKeyEvent(int,android.view.KeyEvent) -> onKeyEvent
    void access$0(cn.smssdk.gui.IdentifyNumPage,int,java.lang.Object) -> access$0
    void access$1(cn.smssdk.gui.IdentifyNumPage,int,java.lang.Object) -> access$1
    void access$2(cn.smssdk.gui.IdentifyNumPage,int,java.lang.Object) -> access$2
    android.widget.EditText access$3(cn.smssdk.gui.IdentifyNumPage) -> access$3
    int access$4(cn.smssdk.gui.IdentifyNumPage) -> access$4
    void access$5(cn.smssdk.gui.IdentifyNumPage,int) -> access$5
    android.app.Activity access$6(cn.smssdk.gui.IdentifyNumPage) -> access$6
    android.widget.TextView access$7(cn.smssdk.gui.IdentifyNumPage) -> access$7
    android.widget.Button access$8(cn.smssdk.gui.IdentifyNumPage) -> access$8
    void access$9(cn.smssdk.gui.IdentifyNumPage) -> access$9
    android.app.Dialog access$10(cn.smssdk.gui.IdentifyNumPage) -> access$10
    void access$11(cn.smssdk.gui.IdentifyNumPage,android.app.Dialog) -> access$11
    java.lang.String access$12(cn.smssdk.gui.IdentifyNumPage) -> access$12
    java.lang.String access$13(cn.smssdk.gui.IdentifyNumPage) -> access$13
    void access$14(cn.smssdk.gui.IdentifyNumPage) -> access$14
cn.smssdk.gui.IdentifyNumPage$1 -> cn.smssdk.gui.IdentifyNumPage$1:
    cn.smssdk.gui.IdentifyNumPage this$0 -> this$0
    void afterEvent(int,int,java.lang.Object) -> afterEvent
cn.smssdk.gui.IdentifyNumPage$10 -> cn.smssdk.gui.IdentifyNumPage$10:
    cn.smssdk.gui.IdentifyNumPage this$0 -> this$0
    int val$result -> val$result
    java.lang.Object val$data -> val$data
    void run() -> run
cn.smssdk.gui.IdentifyNumPage$11 -> cn.smssdk.gui.IdentifyNumPage$11:
    cn.smssdk.gui.IdentifyNumPage this$0 -> this$0
    int val$result -> val$result
    java.lang.Object val$data -> val$data
    void run() -> run
cn.smssdk.gui.IdentifyNumPage$12 -> cn.smssdk.gui.IdentifyNumPage$12:
    cn.smssdk.gui.IdentifyNumPage this$0 -> this$0
    android.app.Dialog val$dialog -> val$dialog
    void onClick(android.view.View) -> onClick
cn.smssdk.gui.IdentifyNumPage$13 -> cn.smssdk.gui.IdentifyNumPage$13:
    cn.smssdk.gui.IdentifyNumPage this$0 -> this$0
    android.app.Dialog val$dialog -> val$dialog
    void onClick(android.view.View) -> onClick
cn.smssdk.gui.IdentifyNumPage$14 -> cn.smssdk.gui.IdentifyNumPage$14:
    cn.smssdk.gui.IdentifyNumPage this$0 -> this$0
    void run() -> run
cn.smssdk.gui.IdentifyNumPage$2 -> cn.smssdk.gui.IdentifyNumPage$2:
    cn.smssdk.gui.IdentifyNumPage this$0 -> this$0
    void onReadVerifyCode(java.lang.String) -> onReadVerifyCode
    cn.smssdk.gui.IdentifyNumPage access$0(cn.smssdk.gui.IdentifyNumPage$2) -> access$0
cn.smssdk.gui.IdentifyNumPage$2$1 -> cn.smssdk.gui.IdentifyNumPage$2$1:
    cn.smssdk.gui.IdentifyNumPage$2 this$1 -> this$1
    java.lang.String val$verifyCode -> val$verifyCode
    void run() -> run
cn.smssdk.gui.IdentifyNumPage$3 -> cn.smssdk.gui.IdentifyNumPage$3:
    cn.smssdk.gui.IdentifyNumPage this$0 -> this$0
    void run() -> run
cn.smssdk.gui.IdentifyNumPage$4 -> cn.smssdk.gui.IdentifyNumPage$4:
    cn.smssdk.gui.IdentifyNumPage this$0 -> this$0
    void run() -> run
cn.smssdk.gui.IdentifyNumPage$5 -> cn.smssdk.gui.IdentifyNumPage$5:
    cn.smssdk.gui.IdentifyNumPage this$0 -> this$0
    android.app.Dialog val$dialog -> val$dialog
    void onClick(android.view.View) -> onClick
cn.smssdk.gui.IdentifyNumPage$6 -> cn.smssdk.gui.IdentifyNumPage$6:
    cn.smssdk.gui.IdentifyNumPage this$0 -> this$0
    void onCancel(android.content.DialogInterface) -> onCancel
cn.smssdk.gui.IdentifyNumPage$7 -> cn.smssdk.gui.IdentifyNumPage$7:
    cn.smssdk.gui.IdentifyNumPage this$0 -> this$0
    android.app.Dialog val$dialog -> val$dialog
    void onClick(android.view.View) -> onClick
cn.smssdk.gui.IdentifyNumPage$8 -> cn.smssdk.gui.IdentifyNumPage$8:
    cn.smssdk.gui.IdentifyNumPage this$0 -> this$0
    android.app.Dialog val$dialog -> val$dialog
    void onClick(android.view.View) -> onClick
cn.smssdk.gui.IdentifyNumPage$9 -> cn.smssdk.gui.IdentifyNumPage$9:
    cn.smssdk.gui.IdentifyNumPage this$0 -> this$0
    int val$result -> val$result
    java.lang.Object val$data -> val$data
    void run() -> run
cn.smssdk.gui.RegisterPage -> cn.smssdk.gui.RegisterPage:
    java.lang.String DEFAULT_COUNTRY_ID -> DEFAULT_COUNTRY_ID
    cn.smssdk.EventHandler callback -> callback
    android.widget.TextView tvCountry -> tvCountry
    android.widget.EditText etPhoneNum -> etPhoneNum
    android.widget.TextView tvCountryNum -> tvCountryNum
    android.widget.ImageView ivClear -> ivClear
    android.widget.Button btnNext -> btnNext
    java.lang.String currentId -> currentId
    java.lang.String currentCode -> currentCode
    cn.smssdk.EventHandler handler -> handler
    java.util.HashMap countryRules -> countryRules
    android.app.Dialog pd -> pd
    cn.smssdk.OnSendMessageHandler osmHandler -> osmHandler
    void setRegisterCallback(cn.smssdk.EventHandler) -> setRegisterCallback
    void setOnSendMessageHandler(cn.smssdk.OnSendMessageHandler) -> setOnSendMessageHandler
    void show(android.content.Context) -> show
    void onCreate() -> onCreate
    java.lang.String[] getCurrentCountry() -> getCurrentCountry
    java.lang.String getMCC() -> getMCC
    void onResume() -> onResume
    void onPause() -> onPause
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    void afterTextChanged(android.text.Editable) -> afterTextChanged
    void onClick(android.view.View) -> onClick
    void onResult(java.util.HashMap) -> onResult
    void onCountryListGot(java.util.ArrayList) -> onCountryListGot
    java.lang.String splitPhoneNum(java.lang.String) -> splitPhoneNum
    void checkPhoneNum(java.lang.String,java.lang.String) -> checkPhoneNum
    void showDialog(java.lang.String,java.lang.String) -> showDialog
    void afterVerificationCodeRequested() -> afterVerificationCodeRequested
    android.app.Dialog access$0(cn.smssdk.gui.RegisterPage) -> access$0
    void access$1(cn.smssdk.gui.RegisterPage,java.util.ArrayList) -> access$1
    void access$2(cn.smssdk.gui.RegisterPage) -> access$2
    android.app.Activity access$3(cn.smssdk.gui.RegisterPage) -> access$3
    void access$4(cn.smssdk.gui.RegisterPage,android.app.Dialog) -> access$4
    cn.smssdk.OnSendMessageHandler access$5(cn.smssdk.gui.RegisterPage) -> access$5
cn.smssdk.gui.RegisterPage$1 -> cn.smssdk.gui.RegisterPage$1:
    cn.smssdk.gui.RegisterPage this$0 -> this$0
    void afterEvent(int,int,java.lang.Object) -> afterEvent
    cn.smssdk.gui.RegisterPage access$0(cn.smssdk.gui.RegisterPage$1) -> access$0
cn.smssdk.gui.RegisterPage$1$1 -> cn.smssdk.gui.RegisterPage$1$1:
    cn.smssdk.gui.RegisterPage$1 this$1 -> this$1
    int val$result -> val$result
    int val$event -> val$event
    java.lang.Object val$data -> val$data
    void run() -> run
cn.smssdk.gui.RegisterPage$2 -> cn.smssdk.gui.RegisterPage$2:
    cn.smssdk.gui.RegisterPage this$0 -> this$0
    android.app.Dialog val$dialog -> val$dialog
    java.lang.String val$phone -> val$phone
    java.lang.String val$code -> val$code
    void onClick(android.view.View) -> onClick
cn.smssdk.gui.RegisterPage$3 -> cn.smssdk.gui.RegisterPage$3:
    cn.smssdk.gui.RegisterPage this$0 -> this$0
    android.app.Dialog val$dialog -> val$dialog
    void onClick(android.view.View) -> onClick
cn.smssdk.gui.SMSReceiver -> cn.smssdk.gui.SMSReceiver:
    java.lang.String ACTION_SMS_RECEIVER -> ACTION_SMS_RECEIVER
    cn.smssdk.SMSSDK$VerifyCodeReadListener listener -> listener
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
cn.smssdk.gui.SearchEngine -> cn.smssdk.gui.SearchEngine:
    java.lang.String DB_FILE -> DB_FILE
    java.util.HashMap hanzi2Pinyin -> hanzi2Pinyin
    boolean caseSensitive -> caseSensitive
    java.util.ArrayList index -> index
    void prepare(android.content.Context,java.lang.Runnable) -> prepare
    void setCaseSensitive(boolean) -> setCaseSensitive
    void setIndex(java.util.ArrayList) -> setIndex
    java.util.ArrayList match(java.lang.String) -> match
    java.util.HashMap access$0() -> access$0
    void access$1(java.util.HashMap) -> access$1
cn.smssdk.gui.SearchEngine$1 -> cn.smssdk.gui.SearchEngine$1:
    android.content.Context val$context -> val$context
    java.lang.Runnable val$afterPrepare -> val$afterPrepare
    void run() -> run
cn.smssdk.gui.SearchEngine$SearchIndex -> cn.smssdk.gui.SearchEngine$SearchIndex:
    java.lang.String text -> text
    java.util.ArrayList pinyin -> pinyin
    java.util.ArrayList firstLatters -> firstLatters
    void createPinyinList(java.util.HashMap) -> createPinyinList
    void toPinyinArray(java.lang.String,java.lang.String,java.util.HashSet,java.util.HashSet,java.util.ArrayList) -> toPinyinArray
    java.lang.String getText() -> getText
    boolean match(java.lang.String,boolean) -> match
    java.lang.String toString() -> toString
    boolean access$0(cn.smssdk.gui.SearchEngine$SearchIndex,java.lang.String,boolean) -> access$0
cn.smssdk.statistics.NewAppReceiver -> cn.smssdk.statistics.NewAppReceiver:
    java.lang.String[] a -> a
    cn.smssdk.statistics.NewAppReceiver b -> b
    android.content.Context c -> c
    android.content.IntentFilter[] d -> d
    android.os.Handler e -> e
    void a(android.content.Context) -> a
    void a() -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
    boolean a(java.lang.String) -> a
    boolean handleMessage(android.os.Message) -> handleMessage
cn.smssdk.statistics.NewAppReceiver$a -> cn.smssdk.statistics.NewAppReceiver$a:
    com.mob.tools.utils.LocalDB a -> a
    java.util.ArrayList a() -> a
    void a(java.util.ArrayList) -> a
    long b() -> b
    void a(long) -> a
cn.smssdk.statistics.NewAppReceiver$b -> cn.smssdk.statistics.NewAppReceiver$b:
    android.content.Context a -> a
    cn.smssdk.statistics.NewAppReceiver$a b -> b
    void a(android.content.Context) -> a
    void run() -> run
    java.util.HashMap a(java.util.ArrayList) -> a
    java.util.ArrayList a(java.util.HashMap) -> a
cn.smssdk.statistics.a -> cn.smssdk.statistics.a:
    java.lang.String a -> a
    cn.smssdk.statistics.a b -> b
    android.content.Context c -> c
    com.mob.tools.utils.DeviceHelper d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    boolean g -> g
    long h -> h
    boolean i -> i
    cn.smssdk.utils.b j -> j
    cn.smssdk.utils.Protocols k -> k
    cn.smssdk.statistics.a a(android.content.Context) -> a
    void a(java.lang.String) -> a
    void b(java.lang.String) -> b
    void onStart(android.os.Message) -> onStart
    void onStop(android.os.Message) -> onStop
    void a(cn.smssdk.statistics.a.a) -> a
    void b(cn.smssdk.statistics.a.a) -> b
    void onMessage(android.os.Message) -> onMessage
    void c(cn.smssdk.statistics.a.a) -> c
    android.content.ContentValues a(java.lang.String,long,byte[]) -> a
    void a() -> a
    boolean b() -> b
    void c() -> c
    void a(java.lang.String,long,java.util.HashMap,cn.smssdk.statistics.a.a) -> a
cn.smssdk.statistics.a.a -> cn.smssdk.statistics.a.a:
    long a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    int e -> e
    java.lang.String f -> f
    int g -> g
    java.lang.String h -> h
    java.lang.String i -> i
    java.lang.String j -> j
    java.lang.String a() -> a
    int b() -> b
    int c() -> c
    long d() -> d
    long e() -> e
    void a(long) -> a
    void f() -> f
    boolean a(android.content.Context) -> a
    void b(android.content.Context) -> b
    java.lang.String toString() -> toString
cn.smssdk.statistics.a.b -> cn.smssdk.statistics.a.b:
    android.content.Context a -> a
    android.content.SharedPreferences b -> b
    cn.smssdk.statistics.a.b c -> c
    cn.smssdk.statistics.a.b a(android.content.Context) -> a
    void a(java.lang.String,java.lang.Long) -> a
    long a(java.lang.String) -> a
    void a(java.lang.String,int) -> a
    int b(java.lang.String) -> b
    java.lang.Long a() -> a
cn.smssdk.statistics.a.c -> cn.smssdk.statistics.a.c:
    int l -> l
    long m -> m
    long k -> k
    java.lang.String a() -> a
    int b() -> b
    int c() -> c
    boolean a(android.content.Context) -> a
    void b(android.content.Context) -> b
    long e() -> e
    long d() -> d
    void f() -> f
    void a(long) -> a
    java.lang.String toString() -> toString
cn.smssdk.statistics.a.d -> cn.smssdk.statistics.a.d:
    int k -> k
    long l -> l
    java.lang.String a() -> a
    int b() -> b
    int c() -> c
    boolean a(android.content.Context) -> a
    void b(android.content.Context) -> b
    long e() -> e
    long d() -> d
    void f() -> f
    void a(long) -> a
    java.lang.String toString() -> toString
cn.smssdk.utils.Protocols -> cn.smssdk.utils.Protocols:
    cn.smssdk.utils.Protocols a -> a
    android.content.Context context -> context
    com.mob.tools.utils.Hashon b -> b
    com.mob.tools.network.NetworkHelper c -> c
    cn.smssdk.utils.f d -> d
    com.mob.tools.utils.DeviceHelper e -> e
    java.lang.String appkey -> appkey
    java.lang.String appSecrect -> appSecrect
    java.lang.String f -> f
    cn.smssdk.utils.Protocols a(android.content.Context) -> a
    void a(java.lang.String,java.lang.String) -> a
    java.lang.String c() -> c
    java.lang.String getDUID() -> getDUID
    java.util.HashMap a() -> a
    java.lang.String getTokenUrl() -> getTokenUrl
    java.lang.String d() -> d
    java.lang.String nativeGetToken() -> nativeGetToken
    java.lang.String e() -> e
    java.lang.String f() -> f
    void b(java.lang.String,java.lang.String) -> b
    void a(java.util.ArrayList,java.lang.String) -> a
    byte[] a(java.util.HashMap,java.lang.String) -> a
    java.lang.String g() -> g
    java.util.HashMap a(java.util.ArrayList) -> a
    java.lang.String h() -> h
    java.lang.String i() -> i
    void b(java.util.ArrayList) -> b
    java.lang.String j() -> j
    void c(java.lang.String,java.lang.String) -> c
    java.lang.String k() -> k
    java.util.HashMap a(java.lang.String,java.lang.String,java.lang.String) -> a
    java.lang.String l() -> l
    java.util.ArrayList b() -> b
    java.lang.String m() -> m
    void a(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
    java.lang.String n() -> n
    java.util.ArrayList a(java.lang.String[]) -> a
    java.util.HashMap a(java.lang.String,java.util.HashMap,java.lang.String,java.lang.String,byte[],int) -> a
    java.util.HashMap a(java.lang.String,java.util.HashMap,java.lang.String,java.lang.String,boolean) -> a
    java.util.HashMap a(java.lang.String,java.util.HashMap,java.lang.String,java.lang.String,int,boolean) -> a
    java.util.HashMap httpPost(java.lang.String,java.util.HashMap,java.lang.String,java.lang.String,int,byte[]) -> httpPost
    byte[] a(java.util.HashMap,java.lang.String,boolean) -> a
    java.lang.String a(byte[],java.lang.String) -> a
    java.util.ArrayList b(byte[],java.lang.String) -> b
    java.lang.String getVersionCode() -> getVersionCode
    java.util.HashMap a(java.lang.String,java.util.HashMap,java.lang.String,java.lang.String,java.util.HashMap,int,byte[]) -> a
    void b(java.lang.String,java.lang.String,java.lang.String) -> b
    java.lang.String getErrorDiscription(int) -> getErrorDiscription
    java.lang.String getErrorDetail(int) -> getErrorDetail
cn.smssdk.utils.RawNetworkCallbackImpl -> cn.smssdk.utils.RawNetworkCallbackImpl:
    java.util.HashMap a -> a
    void onResponse(java.io.InputStream) -> onResponse
cn.smssdk.utils.SMSLog -> cn.smssdk.utils.SMSLog:
    java.lang.String getSDKTag() -> getSDKTag
    com.mob.tools.log.NLog prepare(android.content.Context,int,java.lang.String) -> prepare
    com.mob.tools.log.NLog getInstance() -> getInstance
cn.smssdk.utils.a -> cn.smssdk.utils.a:
    void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
    void onOpen(android.database.sqlite.SQLiteDatabase) -> onOpen
    void close() -> close
cn.smssdk.utils.b -> cn.smssdk.utils.b:
    android.content.Context a -> a
    cn.smssdk.utils.a b -> b
    cn.smssdk.utils.b c -> c
    cn.smssdk.utils.b a(android.content.Context) -> a
    android.database.Cursor a(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String) -> a
    long a(java.lang.String,android.content.ContentValues) -> a
    int a(java.lang.String,java.lang.String,java.lang.String[]) -> a
    int a(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[]) -> a
cn.smssdk.utils.c -> cn.smssdk.utils.c:
    java.util.HashMap a -> a
    void onResponse(org.apache.http.HttpResponse) -> onResponse
cn.smssdk.utils.d -> cn.smssdk.utils.d:
    cn.smssdk.utils.d a -> a
    cn.smssdk.utils.d a(android.content.Context) -> a
    java.lang.String a(java.lang.String) -> a
cn.smssdk.utils.e -> cn.smssdk.utils.e:
    int a -> a
    java.lang.String b -> b
    cn.smssdk.utils.SMSLog c -> c
    int a() -> a
    java.lang.String b() -> b
    java.lang.String c() -> c
cn.smssdk.utils.f -> cn.smssdk.utils.f:
    cn.smssdk.utils.f a -> a
    com.mob.tools.utils.SharePrefrenceHelper b -> b
    com.mob.tools.utils.SharePrefrenceHelper c -> c
    cn.smssdk.utils.f a(android.content.Context) -> a
    java.lang.String a() -> a
    void a(java.lang.String) -> a
    java.lang.String b() -> b
    void b(java.lang.String) -> b
    void c() -> c
    java.lang.String d() -> d
    void c(java.lang.String) -> c
    void a(java.util.ArrayList) -> a
    java.util.ArrayList e() -> e
    void b(java.util.ArrayList) -> b
    java.util.ArrayList f() -> f
    void c(java.util.ArrayList) -> c
    long g() -> g
    void h() -> h
    void a(java.lang.String[]) -> a
    java.lang.String[] i() -> i
    java.lang.String j() -> j
    void d(java.lang.String) -> d
    java.lang.String k() -> k
    void e(java.lang.String) -> e
    java.lang.String l() -> l
    void f(java.lang.String) -> f
    void g(java.lang.String) -> g
    java.lang.String m() -> m
com.google.android.gms.R -> com.google.android.gms.R:
com.google.android.gms.R$attr -> com.google.android.gms.R$attr:
    int cameraBearing -> cameraBearing
    int cameraTargetLat -> cameraTargetLat
    int cameraTargetLng -> cameraTargetLng
    int cameraTilt -> cameraTilt
    int cameraZoom -> cameraZoom
    int mapType -> mapType
    int uiCompass -> uiCompass
    int uiRotateGestures -> uiRotateGestures
    int uiScrollGestures -> uiScrollGestures
    int uiTiltGestures -> uiTiltGestures
    int uiZoomControls -> uiZoomControls
    int uiZoomGestures -> uiZoomGestures
    int useViewLifecycle -> useViewLifecycle
    int zOrderOnTop -> zOrderOnTop
com.google.android.gms.R$id -> com.google.android.gms.R$id:
    int hybrid -> hybrid
    int none -> none
    int normal -> normal
    int satellite -> satellite
    int terrain -> terrain
com.google.android.gms.R$string -> com.google.android.gms.R$string:
    int auth_client_availability_notification_title -> auth_client_availability_notification_title
    int auth_client_play_services_err_notification_msg -> auth_client_play_services_err_notification_msg
    int auth_client_requested_by_msg -> auth_client_requested_by_msg
    int common_google_play_services_enable_button -> common_google_play_services_enable_button
    int common_google_play_services_enable_text -> common_google_play_services_enable_text
    int common_google_play_services_enable_title -> common_google_play_services_enable_title
    int common_google_play_services_install_button -> common_google_play_services_install_button
    int common_google_play_services_install_text_phone -> common_google_play_services_install_text_phone
    int common_google_play_services_install_text_tablet -> common_google_play_services_install_text_tablet
    int common_google_play_services_install_title -> common_google_play_services_install_title
    int common_google_play_services_unknown_issue -> common_google_play_services_unknown_issue
    int common_google_play_services_unsupported_text -> common_google_play_services_unsupported_text
    int common_google_play_services_unsupported_title -> common_google_play_services_unsupported_title
    int common_google_play_services_update_button -> common_google_play_services_update_button
    int common_google_play_services_update_text -> common_google_play_services_update_text
    int common_google_play_services_update_title -> common_google_play_services_update_title
    int common_signin_button_text_long -> common_signin_button_text_long
com.google.android.gms.R$styleable -> com.google.android.gms.R$styleable:
    int[] MapAttrs -> MapAttrs
    int MapAttrs_cameraBearing -> MapAttrs_cameraBearing
    int MapAttrs_cameraTargetLat -> MapAttrs_cameraTargetLat
    int MapAttrs_cameraTargetLng -> MapAttrs_cameraTargetLng
    int MapAttrs_cameraTilt -> MapAttrs_cameraTilt
    int MapAttrs_cameraZoom -> MapAttrs_cameraZoom
    int MapAttrs_mapType -> MapAttrs_mapType
    int MapAttrs_uiCompass -> MapAttrs_uiCompass
    int MapAttrs_uiRotateGestures -> MapAttrs_uiRotateGestures
    int MapAttrs_uiScrollGestures -> MapAttrs_uiScrollGestures
    int MapAttrs_uiTiltGestures -> MapAttrs_uiTiltGestures
    int MapAttrs_uiZoomControls -> MapAttrs_uiZoomControls
    int MapAttrs_uiZoomGestures -> MapAttrs_uiZoomGestures
    int MapAttrs_useViewLifecycle -> MapAttrs_useViewLifecycle
    int MapAttrs_zOrderOnTop -> MapAttrs_zOrderOnTop
com.google.android.gms.auth.GoogleAuthException -> com.google.android.gms.auth.GoogleAuthException:
com.google.android.gms.auth.GoogleAuthUtil -> com.google.android.gms.auth.GoogleAuthUtil:
    java.lang.String GOOGLE_ACCOUNT_TYPE -> GOOGLE_ACCOUNT_TYPE
    java.lang.String KEY_HANDLE_NOTIFICATION -> KEY_HANDLE_NOTIFICATION
    java.lang.String KEY_REQUEST_VISIBLE_ACTIVITIES -> KEY_REQUEST_VISIBLE_ACTIVITIES
    android.content.ComponentName cM -> cM
    android.content.Intent cN -> cN
    java.lang.String getToken(android.content.Context,java.lang.String,java.lang.String) -> getToken
    java.lang.String getToken(android.content.Context,java.lang.String,java.lang.String,android.os.Bundle) -> getToken
    java.lang.String getTokenWithNotification(android.content.Context,java.lang.String,java.lang.String,android.os.Bundle) -> getTokenWithNotification
    java.lang.String getTokenWithNotification(android.content.Context,java.lang.String,java.lang.String,android.os.Bundle,android.content.Intent) -> getTokenWithNotification
    java.lang.String getTokenWithNotification(android.content.Context,java.lang.String,java.lang.String,android.os.Bundle,java.lang.String,android.os.Bundle) -> getTokenWithNotification
    void invalidateToken(android.content.Context,java.lang.String) -> invalidateToken
    void a(android.content.Intent) -> a
    java.lang.String a(android.content.Context,java.lang.String,java.lang.String,android.os.Bundle) -> a
    void g(android.content.Context) -> g
    void h(android.content.Context) -> h
    boolean o(java.lang.String) -> o
    boolean p(java.lang.String) -> p
com.google.android.gms.auth.GooglePlayServicesAvailabilityException -> com.google.android.gms.auth.GooglePlayServicesAvailabilityException:
    int m -> m
    int getConnectionStatusCode() -> getConnectionStatusCode
com.google.android.gms.auth.UserRecoverableAuthException -> com.google.android.gms.auth.UserRecoverableAuthException:
    android.content.Intent cH -> cH
    android.content.Intent getIntent() -> getIntent
com.google.android.gms.auth.UserRecoverableNotifiedException -> com.google.android.gms.auth.UserRecoverableNotifiedException:
com.google.android.gms.common.AccountPicker -> com.google.android.gms.common.AccountPicker:
    android.content.Intent newChooseAccountIntent(android.accounts.Account,java.util.ArrayList,java.lang.String[],boolean,java.lang.String,java.lang.String,java.lang.String[],android.os.Bundle) -> newChooseAccountIntent
com.google.android.gms.common.ConnectionResult -> com.google.android.gms.common.ConnectionResult:
    int SUCCESS -> SUCCESS
    int SERVICE_MISSING -> SERVICE_MISSING
    int SERVICE_VERSION_UPDATE_REQUIRED -> SERVICE_VERSION_UPDATE_REQUIRED
    int SERVICE_DISABLED -> SERVICE_DISABLED
    int SIGN_IN_REQUIRED -> SIGN_IN_REQUIRED
    int INVALID_ACCOUNT -> INVALID_ACCOUNT
    int RESOLUTION_REQUIRED -> RESOLUTION_REQUIRED
    int NETWORK_ERROR -> NETWORK_ERROR
    int INTERNAL_ERROR -> INTERNAL_ERROR
    int SERVICE_INVALID -> SERVICE_INVALID
    int DEVELOPER_ERROR -> DEVELOPER_ERROR
    int LICENSE_CHECK_FAILED -> LICENSE_CHECK_FAILED
    com.google.android.gms.common.ConnectionResult bf -> bf
    android.app.PendingIntent bg -> bg
    int bh -> bh
    void startResolutionForResult(android.app.Activity,int) -> startResolutionForResult
    boolean hasResolution() -> hasResolution
    boolean isSuccess() -> isSuccess
    int getErrorCode() -> getErrorCode
    android.app.PendingIntent getResolution() -> getResolution
    java.lang.String z() -> z
    java.lang.String toString() -> toString
com.google.android.gms.common.GooglePlayServicesClient -> com.google.android.gms.common.GooglePlayServicesClient:
    void connect() -> connect
    void disconnect() -> disconnect
    boolean isConnected() -> isConnected
    void registerConnectionCallbacks(com.google.android.gms.common.GooglePlayServicesClient$ConnectionCallbacks) -> registerConnectionCallbacks
    boolean isConnectionCallbacksRegistered(com.google.android.gms.common.GooglePlayServicesClient$ConnectionCallbacks) -> isConnectionCallbacksRegistered
    void unregisterConnectionCallbacks(com.google.android.gms.common.GooglePlayServicesClient$ConnectionCallbacks) -> unregisterConnectionCallbacks
    void registerConnectionFailedListener(com.google.android.gms.common.GooglePlayServicesClient$OnConnectionFailedListener) -> registerConnectionFailedListener
    boolean isConnectionFailedListenerRegistered(com.google.android.gms.common.GooglePlayServicesClient$OnConnectionFailedListener) -> isConnectionFailedListenerRegistered
    void unregisterConnectionFailedListener(com.google.android.gms.common.GooglePlayServicesClient$OnConnectionFailedListener) -> unregisterConnectionFailedListener
com.google.android.gms.common.GooglePlayServicesClient$ConnectionCallbacks -> com.google.android.gms.common.GooglePlayServicesClient$ConnectionCallbacks:
    void onConnected() -> onConnected
    void onDisconnected() -> onDisconnected
com.google.android.gms.common.GooglePlayServicesClient$OnConnectionFailedListener -> com.google.android.gms.common.GooglePlayServicesClient$OnConnectionFailedListener:
    void onConnectionFailed(com.google.android.gms.common.ConnectionResult) -> onConnectionFailed
com.google.android.gms.common.GooglePlayServicesNotAvailableException -> com.google.android.gms.common.GooglePlayServicesNotAvailableException:
    int errorCode -> errorCode
com.google.android.gms.common.GooglePlayServicesUtil -> com.google.android.gms.common.GooglePlayServicesUtil:
    java.lang.String TAG -> TAG
    int GOOGLE_PLAY_SERVICES_VERSION_CODE -> GOOGLE_PLAY_SERVICES_VERSION_CODE
    java.lang.String GOOGLE_PLAY_SERVICES_PACKAGE -> GOOGLE_PLAY_SERVICES_PACKAGE
    java.lang.String GOOGLE_PLAY_STORE_PACKAGE -> GOOGLE_PLAY_STORE_PACKAGE
    byte[][] aJ -> aJ
    byte[][] aK -> aK
    byte[][] aL -> aL
    byte[][] aM -> aM
    byte[][] aN -> aN
    boolean aO -> aO
    boolean aP -> aP
    boolean aQ -> aQ
    java.lang.String getErrorString(int) -> getErrorString
    int isGooglePlayServicesAvailable(android.content.Context) -> isGooglePlayServicesAvailable
    byte[] a(android.content.pm.PackageInfo,byte[][]) -> a
    android.content.Intent b(android.content.Context,int,int) -> b
    boolean e(int) -> e
    int f(int) -> f
    boolean q() -> q
    boolean f(android.content.Context) -> f
    java.lang.String c(android.content.Context,int,int) -> c
    java.lang.String a(android.content.Context,int) -> a
    android.app.Dialog getErrorDialog(int,android.app.Activity,int) -> getErrorDialog
    android.app.PendingIntent getErrorPendingIntent(int,android.content.Context,int) -> getErrorPendingIntent
    android.app.Dialog getErrorDialog(int,android.app.Activity,int,android.content.DialogInterface$OnCancelListener) -> getErrorDialog
    android.app.Dialog a(int,android.app.Activity,int,android.content.DialogInterface$OnCancelListener,int) -> a
    boolean isUserRecoverableError(int) -> isUserRecoverableError
    java.lang.String getOpenSourceSoftwareLicenseInfo(android.content.Context) -> getOpenSourceSoftwareLicenseInfo
    boolean a(android.content.res.Resources) -> a
    boolean b(android.content.res.Resources) -> b
    android.content.res.Resources getRemoteResource(android.content.Context) -> getRemoteResource
    android.content.Context getRemoteContext(android.content.Context) -> getRemoteContext
    byte[][] a(byte[][][]) -> a
com.google.android.gms.common.Scopes -> com.google.android.gms.common.Scopes:
    java.lang.String PLUS_PROFILE -> PLUS_PROFILE
    java.lang.String PLUS_LOGIN -> PLUS_LOGIN
com.google.android.gms.common.SignInButton -> com.google.android.gms.common.SignInButton:
    int SIZE_STANDARD -> SIZE_STANDARD
    int SIZE_WIDE -> SIZE_WIDE
    int SIZE_ICON_ONLY -> SIZE_ICON_ONLY
    int COLOR_DARK -> COLOR_DARK
    int COLOR_LIGHT -> COLOR_LIGHT
    int de -> de
    int cW -> cW
    android.view.View df -> df
    android.view.View$OnClickListener dg -> dg
    void setSize(int) -> setSize
    void setColorScheme(int) -> setColorScheme
    void setStyle(int,int) -> setStyle
    void i(android.content.Context) -> i
    android.widget.Button j(android.content.Context) -> j
    void setOnClickListener(android.view.View$OnClickListener) -> setOnClickListener
    void setEnabled(boolean) -> setEnabled
    void onClick(android.view.View) -> onClick
com.google.android.gms.common.data.DataBuffer -> com.google.android.gms.common.data.DataBuffer:
    com.google.android.gms.common.data.DataHolder mDataHolder -> mDataHolder
    int getCount() -> getCount
    java.lang.Object get(int) -> get
    void close() -> close
    int describeContents() -> describeContents
    java.util.Iterator iterator() -> iterator
com.google.android.gms.common.data.DataBufferIterator -> com.google.android.gms.common.data.DataBufferIterator:
    com.google.android.gms.common.data.DataBuffer bj -> bj
    int bk -> bk
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    void remove() -> remove
com.google.android.gms.common.data.DataBufferRef -> com.google.android.gms.common.data.DataBufferRef:
    com.google.android.gms.common.data.DataHolder mDataHolder -> mDataHolder
    int mDataRow -> mDataRow
    int dT -> dT
    long getLong(java.lang.String) -> getLong
    int getInteger(java.lang.String) -> getInteger
    boolean getBoolean(java.lang.String) -> getBoolean
    java.lang.String getString(java.lang.String) -> getString
    byte[] getByteArray(java.lang.String) -> getByteArray
    android.net.Uri parseUri(java.lang.String) -> parseUri
    void copyToBuffer(java.lang.String,android.database.CharArrayBuffer) -> copyToBuffer
    boolean hasNull(java.lang.String) -> hasNull
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
com.google.android.gms.common.data.DataBufferUtils -> com.google.android.gms.common.data.DataBufferUtils:
    java.util.ArrayList freezeAndClose(com.google.android.gms.common.data.DataBuffer) -> freezeAndClose
com.google.android.gms.common.data.DataHolder -> com.google.android.gms.common.data.DataHolder:
    com.google.android.gms.common.data.DataHolderCreator CREATOR -> CREATOR
    int aj -> aj
    java.lang.String[] bA -> bA
    android.os.Bundle dM -> dM
    android.database.CursorWindow[] dN -> dN
    int bh -> bh
    android.os.Bundle dO -> dO
    int[] dP -> dP
    int dQ -> dQ
    boolean mClosed -> mClosed
    com.google.android.gms.common.data.DataHolder$Builder dR -> dR
    void validateContents() -> validateContents
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    int getStatusCode() -> getStatusCode
    android.os.Bundle aS() -> aS
    android.database.CursorWindow[] a(android.database.AbstractWindowedCursor) -> a
    android.database.CursorWindow[] c(com.google.android.gms.common.data.DataHolder$Builder) -> c
    void g(java.lang.String,int) -> g
    long getLong(java.lang.String,int,int) -> getLong
    int getInteger(java.lang.String,int,int) -> getInteger
    java.lang.String getString(java.lang.String,int,int) -> getString
    boolean getBoolean(java.lang.String,int,int) -> getBoolean
    byte[] getByteArray(java.lang.String,int,int) -> getByteArray
    android.net.Uri parseUri(java.lang.String,int,int) -> parseUri
    void copyToBuffer(java.lang.String,int,int,android.database.CharArrayBuffer) -> copyToBuffer
    boolean hasNull(java.lang.String,int,int) -> hasNull
    int getCount() -> getCount
    int s(int) -> s
    boolean isClosed() -> isClosed
    void close() -> close
    com.google.android.gms.common.data.DataHolder$Builder builder(java.lang.String[]) -> builder
    com.google.android.gms.common.data.DataHolder$Builder builder(java.lang.String[],java.lang.String) -> builder
    com.google.android.gms.common.data.DataHolder empty(int) -> empty
    com.google.android.gms.common.data.DataHolder empty(int,android.os.Bundle) -> empty
com.google.android.gms.common.data.DataHolder$Builder -> com.google.android.gms.common.data.DataHolder$Builder:
    java.lang.String[] bA -> bA
    java.util.ArrayList bB -> bB
    java.lang.String bC -> bC
    java.util.HashMap bD -> bD
    boolean bE -> bE
    java.lang.String bF -> bF
    com.google.android.gms.common.data.DataHolder$Builder withRow(java.util.HashMap) -> withRow
    void a(java.util.HashMap) -> a
    com.google.android.gms.common.data.DataHolder$Builder withRow(android.content.ContentValues) -> withRow
    com.google.android.gms.common.data.DataHolder$Builder sort(java.lang.String) -> sort
    void G() -> G
    int getCount() -> getCount
    com.google.android.gms.common.data.DataHolder build(int) -> build
    com.google.android.gms.common.data.DataHolder build(int,android.os.Bundle) -> build
    java.lang.String[] a(com.google.android.gms.common.data.DataHolder$Builder) -> a
    java.util.ArrayList b(com.google.android.gms.common.data.DataHolder$Builder) -> b
com.google.android.gms.common.data.DataHolder$a -> com.google.android.gms.common.data.DataHolder$a:
    java.lang.String fd -> fd
    int a(java.util.HashMap,java.util.HashMap) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
com.google.android.gms.common.data.DataHolderCreator -> com.google.android.gms.common.data.DataHolderCreator:
    int CONTENT_DESCRIPTION -> CONTENT_DESCRIPTION
    com.google.android.gms.common.data.DataHolder createFromParcel(android.os.Parcel) -> createFromParcel
    com.google.android.gms.common.data.DataHolder[] newArray(int) -> newArray
    void a(com.google.android.gms.common.data.DataHolder,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.common.data.EntityBuffer -> com.google.android.gms.common.data.EntityBuffer:
com.google.android.gms.common.data.Freezable -> com.google.android.gms.common.data.Freezable:
    java.lang.Object freeze() -> freeze
com.google.android.gms.common.images.ImageManager -> com.google.android.gms.common.images.ImageManager:
    java.lang.String TAG -> TAG
    com.google.android.gms.common.images.ImageManager cl -> cl
    android.content.Context mContext -> mContext
    com.google.android.gms.internal.j a -> a
    java.util.Map cm -> cm
    java.util.Map cn -> cn
    com.google.android.gms.common.images.ImageManager create(android.content.Context) -> create
    void loadImage(android.widget.ImageView,android.net.Uri) -> loadImage
    void loadImage(android.widget.ImageView,int) -> loadImage
    void loadImage(android.widget.ImageView,android.net.Uri,int) -> loadImage
    void loadImage(com.google.android.gms.common.images.ImageManager$OnImageLoadedListener,android.net.Uri) -> loadImage
    void loadImage(com.google.android.gms.common.images.ImageManager$OnImageLoadedListener,android.net.Uri,int) -> loadImage
    void a(com.google.android.gms.common.images.ImageManager$ListenerHolder,android.net.Uri) -> a
    java.lang.String ad() -> ad
    android.content.Context a(com.google.android.gms.common.images.ImageManager) -> a
    com.google.android.gms.internal.j b(com.google.android.gms.common.images.ImageManager) -> b
    java.util.Map c(com.google.android.gms.common.images.ImageManager) -> c
    java.util.Map d(com.google.android.gms.common.images.ImageManager) -> d
com.google.android.gms.common.images.ImageManager$1 -> com.google.android.gms.common.images.ImageManager$1:
com.google.android.gms.common.images.ImageManager$ImageReceiver -> com.google.android.gms.common.images.ImageManager$ImageReceiver:
    android.net.Uri mUri -> mUri
    java.util.ArrayList bZ -> bZ
    com.google.android.gms.common.images.ImageManager bd -> bd
    void addOnImageLoadedListenerHolder(com.google.android.gms.common.images.ImageManager$ListenerHolder) -> addOnImageLoadedListenerHolder
    void removeOnImageLoadedListenerHolder(com.google.android.gms.common.images.ImageManager$ListenerHolder) -> removeOnImageLoadedListenerHolder
    android.net.Uri getUri() -> getUri
    void onReceiveResult(int,android.os.Bundle) -> onReceiveResult
com.google.android.gms.common.images.ImageManager$ListenerHolder -> com.google.android.gms.common.images.ImageManager$ListenerHolder:
    int mHashCode -> mHashCode
    int mDefaultResId -> mDefaultResId
    com.google.android.gms.common.images.ImageManager bd -> bd
    void handleCachedDrawable(android.net.Uri,android.graphics.drawable.Drawable) -> handleCachedDrawable
    boolean shouldLoadImage(android.net.Uri) -> shouldLoadImage
    void onImageLoaded(android.net.Uri,android.graphics.drawable.Drawable) -> onImageLoaded
    int hashCode() -> hashCode
com.google.android.gms.common.images.ImageManager$OnImageLoadedListener -> com.google.android.gms.common.images.ImageManager$OnImageLoadedListener:
    void onImageLoaded(android.net.Uri,android.graphics.drawable.Drawable) -> onImageLoaded
com.google.android.gms.common.images.ImageManager$a -> com.google.android.gms.common.images.ImageManager$a:
    com.google.android.gms.internal.j a -> a
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onLowMemory() -> onLowMemory
    void onTrimMemory(int) -> onTrimMemory
com.google.android.gms.common.images.ImageManager$b -> com.google.android.gms.common.images.ImageManager$b:
    java.lang.ref.WeakReference bc -> bc
    com.google.android.gms.common.images.ImageManager bd -> bd
    void handleCachedDrawable(android.net.Uri,android.graphics.drawable.Drawable) -> handleCachedDrawable
    boolean shouldLoadImage(android.net.Uri) -> shouldLoadImage
    void onImageLoaded(android.net.Uri,android.graphics.drawable.Drawable) -> onImageLoaded
    boolean equals(java.lang.Object) -> equals
com.google.android.gms.common.images.ImageManager$c -> com.google.android.gms.common.images.ImageManager$c:
    java.lang.ref.WeakReference cK -> cK
    com.google.android.gms.common.images.ImageManager bd -> bd
    void handleCachedDrawable(android.net.Uri,android.graphics.drawable.Drawable) -> handleCachedDrawable
    boolean shouldLoadImage(android.net.Uri) -> shouldLoadImage
    void onImageLoaded(android.net.Uri,android.graphics.drawable.Drawable) -> onImageLoaded
    boolean equals(java.lang.Object) -> equals
com.google.android.gms.dynamic.LifecycleDelegate -> com.google.android.gms.dynamic.LifecycleDelegate:
    void onInflate(android.app.Activity,android.os.Bundle,android.os.Bundle) -> onInflate
    void onCreate(android.os.Bundle) -> onCreate
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onResume() -> onResume
    void onPause() -> onPause
    void onDestroyView() -> onDestroyView
    void onDestroy() -> onDestroy
    void onLowMemory() -> onLowMemory
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
com.google.android.gms.internal.a -> com.google.android.gms.internal.a:
    void onCameraChange(com.google.android.gms.maps.model.CameraPosition) -> onCameraChange
com.google.android.gms.internal.a$a -> com.google.android.gms.internal.a$a:
    com.google.android.gms.internal.a a(android.os.IBinder) -> a
    android.os.IBinder asBinder() -> asBinder
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.google.android.gms.internal.a$a$a -> com.google.android.gms.internal.a$a$a:
    android.os.IBinder b -> b
    android.os.IBinder asBinder() -> asBinder
    void onCameraChange(com.google.android.gms.maps.model.CameraPosition) -> onCameraChange
com.google.android.gms.internal.aa -> com.google.android.gms.internal.aa:
    android.content.Context mContext -> mContext
    android.os.Handler mHandler -> mHandler
    android.os.IInterface aR -> aR
    java.util.ArrayList aS -> aS
    java.util.ArrayList aT -> aT
    boolean aU -> aU
    java.util.ArrayList aV -> aV
    boolean aW -> aW
    java.util.ArrayList aX -> aX
    android.content.ServiceConnection aY -> aY
    java.lang.String[] aZ -> aZ
    boolean ba -> ba
    java.lang.String[] bb -> bb
    void b(java.lang.String[]) -> b
    java.lang.String r() -> r
    java.lang.String s() -> s
    android.os.IInterface k(android.os.IBinder) -> k
    void connect() -> connect
    boolean isConnected() -> isConnected
    void disconnect() -> disconnect
    android.content.Context getContext() -> getContext
    java.lang.String[] t() -> t
    void l(android.os.IBinder) -> l
    void a(com.google.android.gms.internal.n,com.google.android.gms.internal.aa$a) -> a
    void u() -> u
    void v() -> v
    void a(com.google.android.gms.common.ConnectionResult) -> a
    void registerConnectionCallbacks(com.google.android.gms.common.GooglePlayServicesClient$ConnectionCallbacks) -> registerConnectionCallbacks
    boolean isConnectionCallbacksRegistered(com.google.android.gms.common.GooglePlayServicesClient$ConnectionCallbacks) -> isConnectionCallbacksRegistered
    void unregisterConnectionCallbacks(com.google.android.gms.common.GooglePlayServicesClient$ConnectionCallbacks) -> unregisterConnectionCallbacks
    void registerConnectionFailedListener(com.google.android.gms.common.GooglePlayServicesClient$OnConnectionFailedListener) -> registerConnectionFailedListener
    boolean isConnectionFailedListenerRegistered(com.google.android.gms.common.GooglePlayServicesClient$OnConnectionFailedListener) -> isConnectionFailedListenerRegistered
    void unregisterConnectionFailedListener(com.google.android.gms.common.GooglePlayServicesClient$OnConnectionFailedListener) -> unregisterConnectionFailedListener
    void w() -> w
    android.os.IInterface x() -> x
    void a(com.google.android.gms.internal.aa$c) -> a
    android.os.IInterface a(com.google.android.gms.internal.aa,android.os.IInterface) -> a
    java.util.ArrayList a(com.google.android.gms.internal.aa) -> a
    java.util.ArrayList b(com.google.android.gms.internal.aa) -> b
    android.os.IInterface c(com.google.android.gms.internal.aa) -> c
    android.content.ServiceConnection d(com.google.android.gms.internal.aa) -> d
    android.content.Context e(com.google.android.gms.internal.aa) -> e
    android.content.ServiceConnection a(com.google.android.gms.internal.aa,android.content.ServiceConnection) -> a
com.google.android.gms.internal.aa$a -> com.google.android.gms.internal.aa$a:
    com.google.android.gms.internal.aa W -> W
    void a(int,android.os.IBinder,android.os.Bundle) -> a
com.google.android.gms.internal.aa$b -> com.google.android.gms.internal.aa$b:
    int statusCode -> statusCode
    android.os.Bundle bl -> bl
    android.os.IBinder bm -> bm
    com.google.android.gms.internal.aa W -> W
    void a(java.lang.Boolean) -> a
    void b(java.lang.Object) -> b
com.google.android.gms.internal.aa$c -> com.google.android.gms.internal.aa$c:
    java.lang.Object mListener -> mListener
    com.google.android.gms.internal.aa W -> W
    void b(java.lang.Object) -> b
    void I() -> I
    void J() -> J
com.google.android.gms.internal.aa$d -> com.google.android.gms.internal.aa$d:
    com.google.android.gms.common.data.DataHolder mDataHolder -> mDataHolder
    com.google.android.gms.internal.aa W -> W
    void J() -> J
    void I() -> I
com.google.android.gms.internal.aa$e -> com.google.android.gms.internal.aa$e:
    com.google.android.gms.internal.aa W -> W
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
com.google.android.gms.internal.aa$f -> com.google.android.gms.internal.aa$f:
    com.google.android.gms.internal.aa W -> W
    void handleMessage(android.os.Message) -> handleMessage
com.google.android.gms.internal.ab -> com.google.android.gms.internal.ab:
    void h(com.google.android.gms.internal.z) -> h
com.google.android.gms.internal.ab$a -> com.google.android.gms.internal.ab$a:
    com.google.android.gms.internal.ab s(android.os.IBinder) -> s
    android.os.IBinder asBinder() -> asBinder
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.google.android.gms.internal.ab$a$a -> com.google.android.gms.internal.ab$a$a:
    android.os.IBinder b -> b
    android.os.IBinder asBinder() -> asBinder
    void h(com.google.android.gms.internal.z) -> h
com.google.android.gms.internal.ac -> com.google.android.gms.internal.ac:
com.google.android.gms.internal.ad -> com.google.android.gms.internal.ad:
    com.google.android.gms.internal.af$c b(android.os.Parcel) -> b
    com.google.android.gms.internal.af$c[] c(int) -> c
    void a(com.google.android.gms.internal.af$c,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.internal.ae -> com.google.android.gms.internal.ae:
    void remove() -> remove
    java.lang.String getId() -> getId
    void setCenter(com.google.android.gms.maps.model.LatLng) -> setCenter
    com.google.android.gms.maps.model.LatLng getCenter() -> getCenter
    void setRadius(double) -> setRadius
    double getRadius() -> getRadius
    void setStrokeWidth(float) -> setStrokeWidth
    float getStrokeWidth() -> getStrokeWidth
    void setStrokeColor(int) -> setStrokeColor
    int getStrokeColor() -> getStrokeColor
    void setFillColor(int) -> setFillColor
    int getFillColor() -> getFillColor
    void setZIndex(float) -> setZIndex
    float getZIndex() -> getZIndex
    void setVisible(boolean) -> setVisible
    boolean isVisible() -> isVisible
    boolean a(com.google.android.gms.internal.ae) -> a
    int hashCodeRemote() -> hashCodeRemote
com.google.android.gms.internal.ae$a -> com.google.android.gms.internal.ae$a:
    com.google.android.gms.internal.ae n(android.os.IBinder) -> n
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.google.android.gms.internal.ae$a$a -> com.google.android.gms.internal.ae$a$a:
    android.os.IBinder b -> b
    android.os.IBinder asBinder() -> asBinder
    void remove() -> remove
    java.lang.String getId() -> getId
    void setCenter(com.google.android.gms.maps.model.LatLng) -> setCenter
    com.google.android.gms.maps.model.LatLng getCenter() -> getCenter
    void setRadius(double) -> setRadius
    double getRadius() -> getRadius
    void setStrokeWidth(float) -> setStrokeWidth
    float getStrokeWidth() -> getStrokeWidth
    void setStrokeColor(int) -> setStrokeColor
    int getStrokeColor() -> getStrokeColor
    void setFillColor(int) -> setFillColor
    int getFillColor() -> getFillColor
    void setZIndex(float) -> setZIndex
    float getZIndex() -> getZIndex
    void setVisible(boolean) -> setVisible
    boolean isVisible() -> isVisible
    boolean a(com.google.android.gms.internal.ae) -> a
    int hashCodeRemote() -> hashCodeRemote
com.google.android.gms.internal.af -> com.google.android.gms.internal.af:
    com.google.android.gms.internal.bg CREATOR -> CREATOR
    java.util.HashMap ah -> ah
    java.util.Set ai -> ai
    int aj -> aj
    java.lang.String fj -> fj
    com.google.android.gms.internal.af$a fk -> fk
    java.lang.String fl -> fl
    java.lang.String fm -> fm
    int fn -> fn
    com.google.android.gms.internal.af$e fo -> fo
    java.lang.String fp -> fp
    java.lang.String fq -> fq
    java.util.List fr -> fr
    java.lang.String fs -> fs
    int ft -> ft
    boolean fu -> fu
    java.lang.String cO -> cO
    com.google.android.gms.internal.af$f fv -> fv
    boolean fw -> fw
    java.lang.String fx -> fx
    com.google.android.gms.internal.af$c fy -> fy
    java.lang.String fz -> fz
    int fA -> fA
    java.util.List fB -> fB
    java.util.List fC -> fC
    int fD -> fD
    int fE -> fE
    java.lang.String fF -> fF
    java.lang.String cU -> cU
    java.util.List fG -> fG
    boolean fH -> fH
    java.util.HashMap h() -> h
    java.util.Set i() -> i
    int j() -> j
    java.lang.String getAboutMe() -> getAboutMe
    boolean hasAboutMe() -> hasAboutMe
    com.google.android.gms.plus.model.people.Person$AgeRange getAgeRange() -> getAgeRange
    com.google.android.gms.internal.af$a bq() -> bq
    boolean hasAgeRange() -> hasAgeRange
    java.lang.String getBirthday() -> getBirthday
    boolean hasBirthday() -> hasBirthday
    java.lang.String getBraggingRights() -> getBraggingRights
    boolean hasBraggingRights() -> hasBraggingRights
    int getCircledByCount() -> getCircledByCount
    boolean hasCircledByCount() -> hasCircledByCount
    com.google.android.gms.plus.model.people.Person$Cover getCover() -> getCover
    com.google.android.gms.internal.af$e br() -> br
    boolean hasCover() -> hasCover
    java.lang.String getCurrentLocation() -> getCurrentLocation
    boolean hasCurrentLocation() -> hasCurrentLocation
    java.lang.String getDisplayName() -> getDisplayName
    boolean hasDisplayName() -> hasDisplayName
    java.util.List getEmails() -> getEmails
    java.util.List bs() -> bs
    boolean hasEmails() -> hasEmails
    java.lang.String bt() -> bt
    int getGender() -> getGender
    boolean hasGender() -> hasGender
    boolean isHasApp() -> isHasApp
    boolean hasHasApp() -> hasHasApp
    java.lang.String getId() -> getId
    boolean hasId() -> hasId
    com.google.android.gms.plus.model.people.Person$Image getImage() -> getImage
    com.google.android.gms.internal.af$f bu() -> bu
    boolean hasImage() -> hasImage
    boolean isPlusUser() -> isPlusUser
    boolean hasIsPlusUser() -> hasIsPlusUser
    java.lang.String getLanguage() -> getLanguage
    boolean hasLanguage() -> hasLanguage
    com.google.android.gms.plus.model.people.Person$Name getName() -> getName
    com.google.android.gms.internal.af$c bv() -> bv
    boolean hasName() -> hasName
    java.lang.String getNickname() -> getNickname
    boolean hasNickname() -> hasNickname
    int getObjectType() -> getObjectType
    boolean hasObjectType() -> hasObjectType
    java.util.List getOrganizations() -> getOrganizations
    java.util.List bw() -> bw
    boolean hasOrganizations() -> hasOrganizations
    java.util.List getPlacesLived() -> getPlacesLived
    java.util.List bx() -> bx
    boolean hasPlacesLived() -> hasPlacesLived
    int getPlusOneCount() -> getPlusOneCount
    boolean hasPlusOneCount() -> hasPlusOneCount
    int getRelationshipStatus() -> getRelationshipStatus
    boolean hasRelationshipStatus() -> hasRelationshipStatus
    java.lang.String getTagline() -> getTagline
    boolean hasTagline() -> hasTagline
    java.lang.String getUrl() -> getUrl
    boolean hasUrl() -> hasUrl
    java.util.List getUrls() -> getUrls
    java.util.List by() -> by
    boolean hasUrls() -> hasUrls
    boolean isVerified() -> isVerified
    boolean hasVerified() -> hasVerified
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.Object f(java.lang.String) -> f
    boolean g(java.lang.String) -> g
    boolean a(com.google.android.gms.internal.ax$a) -> a
    java.lang.Object b(com.google.android.gms.internal.ax$a) -> b
    com.google.android.gms.internal.af c(byte[]) -> c
    com.google.android.gms.internal.af bz() -> bz
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.Object freeze() -> freeze
com.google.android.gms.internal.af$a -> com.google.android.gms.internal.af$a:
    com.google.android.gms.internal.bh CREATOR -> CREATOR
    java.util.HashMap ah -> ah
    java.util.Set ai -> ai
    int aj -> aj
    int ak -> ak
    int al -> al
    java.util.HashMap h() -> h
    java.util.Set i() -> i
    int j() -> j
    int getMax() -> getMax
    boolean hasMax() -> hasMax
    int getMin() -> getMin
    boolean hasMin() -> hasMin
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.Object f(java.lang.String) -> f
    boolean g(java.lang.String) -> g
    boolean a(com.google.android.gms.internal.ax$a) -> a
    java.lang.Object b(com.google.android.gms.internal.ax$a) -> b
    com.google.android.gms.internal.af$a k() -> k
    java.lang.Object freeze() -> freeze
com.google.android.gms.internal.af$b -> com.google.android.gms.internal.af$b:
    com.google.android.gms.internal.bb CREATOR -> CREATOR
    java.util.HashMap ah -> ah
    java.util.Set ai -> ai
    int aj -> aj
    boolean be -> be
    java.lang.String mValue -> mValue
    java.util.HashMap h() -> h
    java.util.Set i() -> i
    int j() -> j
    boolean isPrimary() -> isPrimary
    boolean hasPrimary() -> hasPrimary
    java.lang.String getValue() -> getValue
    boolean hasValue() -> hasValue
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.Object f(java.lang.String) -> f
    boolean g(java.lang.String) -> g
    boolean a(com.google.android.gms.internal.ax$a) -> a
    java.lang.Object b(com.google.android.gms.internal.ax$a) -> b
    com.google.android.gms.internal.af$b y() -> y
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.Object freeze() -> freeze
com.google.android.gms.internal.af$c -> com.google.android.gms.internal.af$c:
    com.google.android.gms.internal.ad CREATOR -> CREATOR
    java.util.HashMap ah -> ah
    java.util.Set ai -> ai
    int aj -> aj
    java.lang.String bp -> bp
    java.lang.String bq -> bq
    java.lang.String br -> br
    java.lang.String bs -> bs
    java.lang.String bt -> bt
    java.lang.String bu -> bu
    java.util.HashMap h() -> h
    java.util.Set i() -> i
    int j() -> j
    java.lang.String getFamilyName() -> getFamilyName
    boolean hasFamilyName() -> hasFamilyName
    java.lang.String getFormatted() -> getFormatted
    boolean hasFormatted() -> hasFormatted
    java.lang.String getGivenName() -> getGivenName
    boolean hasGivenName() -> hasGivenName
    java.lang.String getHonorificPrefix() -> getHonorificPrefix
    boolean hasHonorificPrefix() -> hasHonorificPrefix
    java.lang.String getHonorificSuffix() -> getHonorificSuffix
    boolean hasHonorificSuffix() -> hasHonorificSuffix
    java.lang.String getMiddleName() -> getMiddleName
    boolean hasMiddleName() -> hasMiddleName
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.Object f(java.lang.String) -> f
    boolean g(java.lang.String) -> g
    boolean a(com.google.android.gms.internal.ax$a) -> a
    java.lang.Object b(com.google.android.gms.internal.ax$a) -> b
    com.google.android.gms.internal.af$c A() -> A
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.Object freeze() -> freeze
com.google.android.gms.internal.af$d -> com.google.android.gms.internal.af$d:
    int i(java.lang.String) -> i
com.google.android.gms.internal.af$e -> com.google.android.gms.internal.af$e:
    com.google.android.gms.internal.cg CREATOR -> CREATOR
    java.util.HashMap ah -> ah
    java.util.Set ai -> ai
    int aj -> aj
    com.google.android.gms.internal.af$e$a dZ -> dZ
    com.google.android.gms.internal.af$e$b ea -> ea
    int eb -> eb
    java.util.HashMap h() -> h
    java.util.Set i() -> i
    int j() -> j
    com.google.android.gms.plus.model.people.Person$Cover$CoverInfo getCoverInfo() -> getCoverInfo
    com.google.android.gms.internal.af$e$a aV() -> aV
    boolean hasCoverInfo() -> hasCoverInfo
    com.google.android.gms.plus.model.people.Person$Cover$CoverPhoto getCoverPhoto() -> getCoverPhoto
    com.google.android.gms.internal.af$e$b aW() -> aW
    boolean hasCoverPhoto() -> hasCoverPhoto
    int getLayout() -> getLayout
    boolean hasLayout() -> hasLayout
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.Object f(java.lang.String) -> f
    boolean g(java.lang.String) -> g
    boolean a(com.google.android.gms.internal.ax$a) -> a
    java.lang.Object b(com.google.android.gms.internal.ax$a) -> b
    com.google.android.gms.internal.af$e aX() -> aX
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.Object freeze() -> freeze
com.google.android.gms.internal.af$e$a -> com.google.android.gms.internal.af$e$a:
    com.google.android.gms.internal.cn CREATOR -> CREATOR
    java.util.HashMap ah -> ah
    java.util.Set ai -> ai
    int aj -> aj
    int bN -> bN
    int bO -> bO
    java.util.HashMap h() -> h
    java.util.Set i() -> i
    int j() -> j
    int getLeftImageOffset() -> getLeftImageOffset
    boolean hasLeftImageOffset() -> hasLeftImageOffset
    int getTopImageOffset() -> getTopImageOffset
    boolean hasTopImageOffset() -> hasTopImageOffset
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.Object f(java.lang.String) -> f
    boolean g(java.lang.String) -> g
    boolean a(com.google.android.gms.internal.ax$a) -> a
    java.lang.Object b(com.google.android.gms.internal.ax$a) -> b
    com.google.android.gms.internal.af$e$a K() -> K
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.Object freeze() -> freeze
com.google.android.gms.internal.af$e$b -> com.google.android.gms.internal.af$e$b:
    com.google.android.gms.internal.ba CREATOR -> CREATOR
    java.util.HashMap ah -> ah
    java.util.Set ai -> ai
    int aj -> aj
    int dl -> dl
    java.lang.String cU -> cU
    int dm -> dm
    java.util.HashMap h() -> h
    java.util.Set i() -> i
    int j() -> j
    int getHeight() -> getHeight
    boolean hasHeight() -> hasHeight
    java.lang.String getUrl() -> getUrl
    boolean hasUrl() -> hasUrl
    int getWidth() -> getWidth
    boolean hasWidth() -> hasWidth
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.Object f(java.lang.String) -> f
    boolean g(java.lang.String) -> g
    boolean a(com.google.android.gms.internal.ax$a) -> a
    java.lang.Object b(com.google.android.gms.internal.ax$a) -> b
    com.google.android.gms.internal.af$e$b aA() -> aA
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.Object freeze() -> freeze
com.google.android.gms.internal.af$f -> com.google.android.gms.internal.af$f:
    com.google.android.gms.internal.cb CREATOR -> CREATOR
    java.util.HashMap ah -> ah
    java.util.Set ai -> ai
    int aj -> aj
    java.lang.String cU -> cU
    java.util.HashMap h() -> h
    java.util.Set i() -> i
    int j() -> j
    java.lang.String getUrl() -> getUrl
    boolean hasUrl() -> hasUrl
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.Object f(java.lang.String) -> f
    boolean g(java.lang.String) -> g
    boolean a(com.google.android.gms.internal.ax$a) -> a
    java.lang.Object b(com.google.android.gms.internal.ax$a) -> b
    com.google.android.gms.internal.af$f av() -> av
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.Object freeze() -> freeze
com.google.android.gms.internal.af$g -> com.google.android.gms.internal.af$g:
    com.google.android.gms.internal.bq CREATOR -> CREATOR
    java.util.HashMap ah -> ah
    java.util.Set ai -> ai
    int aj -> aj
    java.lang.String cZ -> cZ
    java.lang.String da -> da
    java.lang.String db -> db
    java.lang.String dc -> dc
    java.lang.String mName -> mName
    boolean be -> be
    java.lang.String cQ -> cQ
    java.lang.String an -> an
    int dd -> dd
    java.util.HashMap h() -> h
    java.util.Set i() -> i
    int j() -> j
    java.lang.String getDepartment() -> getDepartment
    boolean hasDepartment() -> hasDepartment
    java.lang.String getDescription() -> getDescription
    boolean hasDescription() -> hasDescription
    java.lang.String getEndDate() -> getEndDate
    boolean hasEndDate() -> hasEndDate
    java.lang.String getLocation() -> getLocation
    boolean hasLocation() -> hasLocation
    java.lang.String getName() -> getName
    boolean hasName() -> hasName
    boolean isPrimary() -> isPrimary
    boolean hasPrimary() -> hasPrimary
    java.lang.String getStartDate() -> getStartDate
    boolean hasStartDate() -> hasStartDate
    java.lang.String getTitle() -> getTitle
    boolean hasTitle() -> hasTitle
    int getType() -> getType
    boolean hasType() -> hasType
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.Object f(java.lang.String) -> f
    boolean g(java.lang.String) -> g
    boolean a(com.google.android.gms.internal.ax$a) -> a
    java.lang.Object b(com.google.android.gms.internal.ax$a) -> b
    com.google.android.gms.internal.af$g az() -> az
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.Object freeze() -> freeze
com.google.android.gms.internal.af$h -> com.google.android.gms.internal.af$h:
    com.google.android.gms.internal.cc CREATOR -> CREATOR
    java.util.HashMap ah -> ah
    java.util.Set ai -> ai
    int aj -> aj
    boolean be -> be
    int dd -> dd
    java.lang.String mValue -> mValue
    java.util.HashMap h() -> h
    java.util.Set i() -> i
    int j() -> j
    boolean isPrimary() -> isPrimary
    boolean hasPrimary() -> hasPrimary
    int getType() -> getType
    boolean hasType() -> hasType
    java.lang.String getValue() -> getValue
    boolean hasValue() -> hasValue
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.Object f(java.lang.String) -> f
    boolean g(java.lang.String) -> g
    boolean a(com.google.android.gms.internal.ax$a) -> a
    java.lang.Object b(com.google.android.gms.internal.ax$a) -> b
    com.google.android.gms.internal.af$h aT() -> aT
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.Object freeze() -> freeze
com.google.android.gms.internal.af$i -> com.google.android.gms.internal.af$i:
    com.google.android.gms.internal.bl CREATOR -> CREATOR
    java.util.HashMap ah -> ah
    java.util.Set ai -> ai
    int aj -> aj
    boolean be -> be
    int dd -> dd
    java.lang.String mValue -> mValue
    java.util.HashMap h() -> h
    java.util.Set i() -> i
    int j() -> j
    boolean isPrimary() -> isPrimary
    boolean hasPrimary() -> hasPrimary
    int getType() -> getType
    boolean hasType() -> hasType
    java.lang.String getValue() -> getValue
    boolean hasValue() -> hasValue
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.Object f(java.lang.String) -> f
    boolean g(java.lang.String) -> g
    boolean a(com.google.android.gms.internal.ax$a) -> a
    java.lang.Object b(com.google.android.gms.internal.ax$a) -> b
    com.google.android.gms.internal.af$i aU() -> aU
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.Object freeze() -> freeze
com.google.android.gms.internal.ag -> com.google.android.gms.internal.ag:
    int dv -> dv
    boolean dw -> dw
    int dx -> dx
    android.widget.LinearLayout dy -> dy
    android.widget.FrameLayout dz -> dz
    android.widget.CompoundButton dA -> dA
    android.widget.ProgressBar dB -> dB
    com.google.android.gms.internal.l dC -> dC
    com.google.android.gms.internal.bf[] dD -> dD
    int dd -> dd
    int dE -> dE
    int de -> de
    android.net.Uri[] dF -> dF
    java.lang.String[] dG -> dG
    java.lang.String[] dH -> dH
    java.lang.String cU -> cU
    com.google.android.gms.plus.PlusClient cD -> cD
    com.google.android.gms.internal.ck dI -> dI
    android.content.res.Resources dJ -> dJ
    android.view.LayoutInflater dK -> dK
    com.google.android.gms.internal.ag$a dL -> dL
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    int a(android.content.Context,android.util.AttributeSet) -> a
    int b(android.content.Context,android.util.AttributeSet) -> b
    android.content.Context k(android.content.Context) -> k
    void initialize(com.google.android.gms.plus.PlusClient,java.lang.String,int) -> initialize
    void onConnected() -> onConnected
    void onConnectionFailed(com.google.android.gms.common.ConnectionResult) -> onConnectionFailed
    void onDisconnected() -> onDisconnected
    void setOnPlusOneClickListener(com.google.android.gms.plus.PlusOneButton$OnPlusOneClickListener) -> setOnPlusOneClickListener
    void setOnClickListener(android.view.View$OnClickListener) -> setOnClickListener
    boolean performClick() -> performClick
    void a(android.net.Uri[]) -> a
    void c(java.lang.String[]) -> c
    void d(java.lang.String[]) -> d
    void setAnnotation(int) -> setAnnotation
    void a(android.view.View) -> a
    void aE() -> aE
    void setSize(int) -> setSize
    void setType(int) -> setType
    void a(int,int) -> a
    void aF() -> aF
    android.widget.FrameLayout l(android.content.Context) -> l
    android.widget.ProgressBar m(android.content.Context) -> m
    com.google.android.gms.internal.l n(android.content.Context) -> n
    com.google.android.gms.internal.bf o(android.content.Context) -> o
    int b(int,int) -> b
    android.widget.LinearLayout$LayoutParams aG() -> aG
    void aH() -> aH
    void aI() -> aI
    void aJ() -> aJ
    void aK() -> aK
    void ao() -> ao
    void aL() -> aL
    void aM() -> aM
    void aN() -> aN
    void a(android.graphics.Point) -> a
    void b(android.graphics.Point) -> b
    android.graphics.drawable.Drawable aO() -> aO
    java.lang.String aP() -> aP
    android.net.Uri aQ() -> aQ
    java.lang.String aR() -> aR
com.google.android.gms.internal.ag$a -> com.google.android.gms.internal.ag$a:
    com.google.android.gms.internal.ag au -> au
    void a(com.google.android.gms.common.ConnectionResult,com.google.android.gms.internal.ck) -> a
com.google.android.gms.internal.ag$b -> com.google.android.gms.internal.ag$b:
    com.google.android.gms.plus.PlusOneButton$OnPlusOneClickListener eX -> eX
    com.google.android.gms.internal.ag au -> au
    void onClick(android.view.View) -> onClick
    void onPlusOneClick(android.content.Intent) -> onPlusOneClick
com.google.android.gms.internal.ag$c -> com.google.android.gms.internal.ag$c:
    com.google.android.gms.internal.ag au -> au
    void toggle() -> toggle
com.google.android.gms.internal.ah -> com.google.android.gms.internal.ah:
    void a(android.os.Parcel,int,int) -> a
    int a(android.os.Parcel,int) -> a
    void b(android.os.Parcel,int) -> b
    int c(android.os.Parcel) -> c
    void c(android.os.Parcel,int) -> c
    void a(android.os.Parcel,int,boolean) -> a
    void a(android.os.Parcel,int,byte) -> a
    void b(android.os.Parcel,int,int) -> b
    void a(android.os.Parcel,int,float) -> a
    void a(android.os.Parcel,int,double) -> a
    void a(android.os.Parcel,int,java.lang.String,boolean) -> a
    void a(android.os.Parcel,int,android.os.IBinder,boolean) -> a
    void a(android.os.Parcel,int,android.os.Parcelable,int,boolean) -> a
    void a(android.os.Parcel,int,android.os.Bundle,boolean) -> a
    void a(android.os.Parcel,int,byte[],boolean) -> a
    void a(android.os.Parcel,int,java.lang.String[],boolean) -> a
    void a(android.os.Parcel,int,java.util.List,boolean) -> a
    void a(android.os.Parcel,int,android.os.Parcelable[],int,boolean) -> a
    void b(android.os.Parcel,int,java.util.List,boolean) -> b
    void a(android.os.Parcel,android.os.Parcelable,int) -> a
    void a(android.os.Parcel,int,android.os.Parcel,boolean) -> a
    void c(android.os.Parcel,int,java.util.List,boolean) -> c
com.google.android.gms.internal.ai -> com.google.android.gms.internal.ai:
    java.lang.String fI -> fI
    java.lang.String fJ -> fJ
    java.lang.String Z -> Z
    com.google.android.gms.plus.model.people.Person fK -> fK
    java.lang.String[] fL -> fL
    java.lang.String[] ae -> ae
    java.lang.String getAccountName() -> getAccountName
    void a(com.google.android.gms.plus.PlusClient$b,java.lang.String) -> a
    void writeMoment(com.google.android.gms.plus.model.moments.Moment) -> writeMoment
    void loadMoments(com.google.android.gms.plus.PlusClient$OnMomentsLoadedListener,int,java.lang.String,android.net.Uri,java.lang.String,java.lang.String) -> loadMoments
    void removeMoment(java.lang.String) -> removeMoment
    void loadPeople(com.google.android.gms.plus.PlusClient$OnPeopleLoadedListener,int,int,int,java.lang.String) -> loadPeople
    void loadPerson(com.google.android.gms.plus.PlusClient$OnPersonLoadedListener,java.lang.String) -> loadPerson
    com.google.android.gms.plus.model.people.Person getCurrentPerson() -> getCurrentPerson
    void clearDefaultAccount() -> clearDefaultAccount
    void revokeAccessAndDisconnect(com.google.android.gms.plus.PlusClient$OnAccessRevokedListener) -> revokeAccessAndDisconnect
    void a(com.google.android.gms.plus.PlusClient$a,android.net.Uri,int) -> a
    com.google.android.gms.internal.bc H(android.os.IBinder) -> H
    java.lang.String s() -> s
    java.lang.String r() -> r
    void a(com.google.android.gms.internal.n,com.google.android.gms.internal.aa$a) -> a
    android.os.IInterface k(android.os.IBinder) -> k
    com.google.android.gms.plus.model.people.Person a(com.google.android.gms.internal.ai,com.google.android.gms.plus.model.people.Person) -> a
com.google.android.gms.internal.ai$a -> com.google.android.gms.internal.ai$a:
    com.google.android.gms.plus.PlusClient$b av -> av
    com.google.android.gms.internal.ai aw -> aw
    void a(int,android.os.Bundle,android.os.Bundle) -> a
com.google.android.gms.internal.ai$b -> com.google.android.gms.internal.ai$b:
    com.google.android.gms.common.ConnectionResult ax -> ax
    com.google.android.gms.internal.ai aw -> aw
    void a(com.google.android.gms.plus.PlusClient$OnAccessRevokedListener) -> a
    void b(java.lang.Object) -> b
com.google.android.gms.internal.ai$c -> com.google.android.gms.internal.ai$c:
    com.google.android.gms.common.ConnectionResult ax -> ax
    java.lang.String aE -> aE
    java.lang.String aF -> aF
    com.google.android.gms.internal.ai aw -> aw
    void a(com.google.android.gms.plus.PlusClient$OnMomentsLoadedListener) -> a
    void b(java.lang.Object) -> b
com.google.android.gms.internal.ai$d -> com.google.android.gms.internal.ai$d:
    com.google.android.gms.internal.aa$a cg -> cg
    com.google.android.gms.internal.ai aw -> aw
    void a(int,android.os.IBinder,android.os.Bundle) -> a
com.google.android.gms.internal.ai$e -> com.google.android.gms.internal.ai$e:
    com.google.android.gms.plus.PlusClient$OnPeopleLoadedListener ch -> ch
    com.google.android.gms.internal.ai aw -> aw
    void a(com.google.android.gms.common.data.DataHolder,java.lang.String) -> a
com.google.android.gms.internal.ai$f -> com.google.android.gms.internal.ai$f:
    com.google.android.gms.plus.PlusClient$a ci -> ci
    com.google.android.gms.internal.ai aw -> aw
    void a(int,android.os.Bundle,android.os.ParcelFileDescriptor) -> a
com.google.android.gms.internal.ai$g -> com.google.android.gms.internal.ai$g:
    com.google.android.gms.common.ConnectionResult ax -> ax
    android.os.ParcelFileDescriptor cL -> cL
    com.google.android.gms.internal.ai aw -> aw
    void a(com.google.android.gms.plus.PlusClient$a) -> a
    void J() -> J
    void b(java.lang.Object) -> b
com.google.android.gms.internal.ai$h -> com.google.android.gms.internal.ai$h:
    com.google.android.gms.plus.PlusClient$OnAccessRevokedListener dh -> dh
    com.google.android.gms.internal.ai aw -> aw
    void a(int,android.os.Bundle) -> a
com.google.android.gms.internal.ai$i -> com.google.android.gms.internal.ai$i:
    com.google.android.gms.common.ConnectionResult ax -> ax
    com.google.android.gms.plus.model.people.Person dn -> dn
    com.google.android.gms.internal.ai aw -> aw
    void a(com.google.android.gms.plus.PlusClient$OnPersonLoadedListener) -> a
    void b(java.lang.Object) -> b
com.google.android.gms.internal.ai$j -> com.google.android.gms.internal.ai$j:
    com.google.android.gms.plus.PlusClient$OnMomentsLoadedListener dS -> dS
    com.google.android.gms.internal.ai aw -> aw
    void a(com.google.android.gms.common.data.DataHolder,java.lang.String,java.lang.String) -> a
com.google.android.gms.internal.ai$k -> com.google.android.gms.internal.ai$k:
    com.google.android.gms.common.ConnectionResult bn -> bn
    com.google.android.gms.internal.ck dU -> dU
    com.google.android.gms.internal.ai aw -> aw
    void a(com.google.android.gms.plus.PlusClient$b) -> a
    void b(java.lang.Object) -> b
com.google.android.gms.internal.ai$l -> com.google.android.gms.internal.ai$l:
    com.google.android.gms.common.ConnectionResult ax -> ax
    java.lang.String aE -> aE
    com.google.android.gms.internal.ai aw -> aw
    void a(com.google.android.gms.plus.PlusClient$OnPeopleLoadedListener) -> a
    void b(java.lang.Object) -> b
com.google.android.gms.internal.ai$m -> com.google.android.gms.internal.ai$m:
    com.google.android.gms.plus.PlusClient$OnPersonLoadedListener ge -> ge
    com.google.android.gms.internal.ai aw -> aw
    void a(int,android.os.Bundle,com.google.android.gms.internal.bt) -> a
com.google.android.gms.internal.aj -> com.google.android.gms.internal.aj:
    void a(com.google.android.gms.panorama.PanoramaClient$OnPanoramaInfoLoadedListener,android.net.Uri,boolean) -> a
    void a(com.google.android.gms.internal.aj$a,android.net.Uri,android.os.Bundle,boolean) -> a
    com.google.android.gms.internal.bu D(android.os.IBinder) -> D
    java.lang.String s() -> s
    java.lang.String r() -> r
    void a(com.google.android.gms.internal.n,com.google.android.gms.internal.aa$a) -> a
    android.os.IInterface k(android.os.IBinder) -> k
com.google.android.gms.internal.aj$a -> com.google.android.gms.internal.aj$a:
    com.google.android.gms.panorama.PanoramaClient$a ay -> ay
    com.google.android.gms.panorama.PanoramaClient$OnPanoramaInfoLoadedListener az -> az
    android.net.Uri aA -> aA
    com.google.android.gms.internal.aj aB -> aB
    void a(int,android.os.Bundle,int,android.content.Intent) -> a
com.google.android.gms.internal.aj$b -> com.google.android.gms.internal.aj$b:
    com.google.android.gms.common.ConnectionResult bn -> bn
    int type -> type
    android.content.Intent bo -> bo
    com.google.android.gms.internal.aj aB -> aB
    void a(com.google.android.gms.panorama.PanoramaClient$a) -> a
    void b(java.lang.Object) -> b
com.google.android.gms.internal.aj$c -> com.google.android.gms.internal.aj$c:
    com.google.android.gms.common.ConnectionResult bn -> bn
    android.content.Intent bo -> bo
    com.google.android.gms.internal.aj aB -> aB
    void a(com.google.android.gms.panorama.PanoramaClient$OnPanoramaInfoLoadedListener) -> a
    void b(java.lang.Object) -> b
com.google.android.gms.internal.ak -> com.google.android.gms.internal.ak:
    com.google.android.gms.internal.am d(android.os.Parcel) -> d
    com.google.android.gms.internal.am[] d(int) -> d
    void a(com.google.android.gms.internal.am,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.internal.al -> com.google.android.gms.internal.al:
    void c(com.google.android.gms.internal.z) -> c
    void e(com.google.android.gms.internal.z) -> e
    void d(com.google.android.gms.internal.z) -> d
com.google.android.gms.internal.al$a -> com.google.android.gms.internal.al$a:
    com.google.android.gms.internal.al j(android.os.IBinder) -> j
    android.os.IBinder asBinder() -> asBinder
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.google.android.gms.internal.al$a$a -> com.google.android.gms.internal.al$a$a:
    android.os.IBinder b -> b
    android.os.IBinder asBinder() -> asBinder
    void c(com.google.android.gms.internal.z) -> c
    void e(com.google.android.gms.internal.z) -> e
    void d(com.google.android.gms.internal.z) -> d
com.google.android.gms.internal.am -> com.google.android.gms.internal.am:
    com.google.android.gms.internal.ak CREATOR -> CREATOR
    int aj -> aj
    java.util.HashMap aG -> aG
    java.util.HashMap aH -> aH
    java.util.ArrayList aI -> aI
    void a(java.util.ArrayList) -> a
    int j() -> j
    java.util.ArrayList n() -> n
    com.google.android.gms.internal.am a(java.lang.String,int) -> a
    int o() -> o
    int p() -> p
    java.lang.String a(java.lang.Integer) -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.Object c(java.lang.Object) -> c
com.google.android.gms.internal.am$a -> com.google.android.gms.internal.am$a:
    com.google.android.gms.internal.bv CREATOR -> CREATOR
    int versionCode -> versionCode
    java.lang.String do -> do
    int dp -> dp
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.internal.an -> com.google.android.gms.internal.an:
    com.google.android.gms.internal.as$b e(android.os.Parcel) -> e
    com.google.android.gms.internal.as$b[] g(int) -> g
    void a(com.google.android.gms.internal.as$b,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.internal.ao -> com.google.android.gms.internal.ao:
    void a(int,android.os.Bundle,android.os.Bundle) -> a
    void a(int,android.os.Bundle,android.os.ParcelFileDescriptor) -> a
    void h(java.lang.String) -> h
    void a(com.google.android.gms.common.data.DataHolder,java.lang.String) -> a
    void a(int,android.os.Bundle,com.google.android.gms.internal.bt) -> a
    void a(com.google.android.gms.common.data.DataHolder,java.lang.String,java.lang.String) -> a
    void a(int,android.os.Bundle) -> a
    void b(com.google.android.gms.common.data.DataHolder,java.lang.String) -> b
    void b(int,android.os.Bundle,android.os.Bundle) -> b
com.google.android.gms.internal.ap -> com.google.android.gms.internal.ap:
    java.lang.Object bi -> bi
    com.google.android.gms.internal.f d(java.lang.Object) -> d
    java.lang.Object b(com.google.android.gms.internal.f) -> b
com.google.android.gms.internal.aq -> com.google.android.gms.internal.aq:
com.google.android.gms.internal.ar -> com.google.android.gms.internal.ar:
    void c(com.google.android.gms.internal.f) -> c
    com.google.android.gms.maps.internal.IMapFragmentDelegate d(com.google.android.gms.internal.f) -> d
    com.google.android.gms.maps.internal.IMapViewDelegate a(com.google.android.gms.internal.f,com.google.android.gms.maps.GoogleMapOptions) -> a
    com.google.android.gms.maps.internal.ICameraUpdateFactoryDelegate L() -> L
    com.google.android.gms.internal.h M() -> M
com.google.android.gms.internal.ar$a -> com.google.android.gms.internal.ar$a:
    com.google.android.gms.internal.ar o(android.os.IBinder) -> o
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.google.android.gms.internal.ar$a$a -> com.google.android.gms.internal.ar$a$a:
    android.os.IBinder b -> b
    android.os.IBinder asBinder() -> asBinder
    void c(com.google.android.gms.internal.f) -> c
    com.google.android.gms.maps.internal.IMapFragmentDelegate d(com.google.android.gms.internal.f) -> d
    com.google.android.gms.maps.internal.IMapViewDelegate a(com.google.android.gms.internal.f,com.google.android.gms.maps.GoogleMapOptions) -> a
    com.google.android.gms.maps.internal.ICameraUpdateFactoryDelegate L() -> L
    com.google.android.gms.internal.h M() -> M
com.google.android.gms.internal.as -> com.google.android.gms.internal.as:
    com.google.android.gms.internal.bz CREATOR -> CREATOR
    int aj -> aj
    java.util.HashMap ca -> ca
    java.util.ArrayList cb -> cb
    java.lang.String cc -> cc
    void X() -> X
    java.util.HashMap b(java.util.ArrayList) -> b
    void Y() -> Y
    int j() -> j
    java.util.ArrayList Z() -> Z
    void a(java.lang.Class,java.util.HashMap) -> a
    java.util.HashMap j(java.lang.String) -> j
    boolean b(java.lang.Class) -> b
    java.lang.String aa() -> aa
    int describeContents() -> describeContents
    java.lang.String toString() -> toString
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.internal.as$a -> com.google.android.gms.internal.as$a:
    com.google.android.gms.internal.cl CREATOR -> CREATOR
    int versionCode -> versionCode
    java.lang.String by -> by
    com.google.android.gms.internal.ax$a bz -> bz
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.internal.as$b -> com.google.android.gms.internal.as$b:
    com.google.android.gms.internal.an CREATOR -> CREATOR
    int versionCode -> versionCode
    java.lang.String className -> className
    java.util.ArrayList bG -> bG
    java.util.ArrayList b(java.util.HashMap) -> b
    java.util.HashMap H() -> H
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.internal.at -> com.google.android.gms.internal.at:
    java.lang.String getDisplayName() -> getDisplayName
    boolean hasDisplayName() -> hasDisplayName
    java.lang.String getId() -> getId
    boolean hasId() -> hasId
    com.google.android.gms.plus.model.people.Person$Image getImage() -> getImage
    boolean hasImage() -> hasImage
    int getObjectType() -> getObjectType
    boolean hasObjectType() -> hasObjectType
    java.lang.String getUrl() -> getUrl
    boolean hasUrl() -> hasUrl
    java.lang.String getAboutMe() -> getAboutMe
    boolean hasAboutMe() -> hasAboutMe
    com.google.android.gms.plus.model.people.Person$AgeRange getAgeRange() -> getAgeRange
    boolean hasAgeRange() -> hasAgeRange
    java.lang.String getBirthday() -> getBirthday
    boolean hasBirthday() -> hasBirthday
    java.lang.String getBraggingRights() -> getBraggingRights
    boolean hasBraggingRights() -> hasBraggingRights
    int getCircledByCount() -> getCircledByCount
    boolean hasCircledByCount() -> hasCircledByCount
    com.google.android.gms.plus.model.people.Person$Cover getCover() -> getCover
    boolean hasCover() -> hasCover
    java.lang.String getCurrentLocation() -> getCurrentLocation
    boolean hasCurrentLocation() -> hasCurrentLocation
    java.util.ArrayList B() -> B
    boolean hasEmails() -> hasEmails
    int getGender() -> getGender
    boolean hasGender() -> hasGender
    boolean isHasApp() -> isHasApp
    boolean hasHasApp() -> hasHasApp
    com.google.android.gms.plus.model.people.Person$Name getName() -> getName
    boolean hasName() -> hasName
    java.lang.String getNickname() -> getNickname
    boolean hasNickname() -> hasNickname
    boolean isPlusUser() -> isPlusUser
    boolean hasIsPlusUser() -> hasIsPlusUser
    java.lang.String getLanguage() -> getLanguage
    boolean hasLanguage() -> hasLanguage
    java.util.ArrayList C() -> C
    boolean hasOrganizations() -> hasOrganizations
    java.util.ArrayList D() -> D
    boolean hasPlacesLived() -> hasPlacesLived
    int getPlusOneCount() -> getPlusOneCount
    boolean hasPlusOneCount() -> hasPlusOneCount
    int getRelationshipStatus() -> getRelationshipStatus
    boolean hasRelationshipStatus() -> hasRelationshipStatus
    java.lang.String getTagline() -> getTagline
    boolean hasTagline() -> hasTagline
    java.util.ArrayList E() -> E
    boolean hasUrls() -> hasUrls
    boolean isVerified() -> isVerified
    boolean hasVerified() -> hasVerified
    com.google.android.gms.plus.model.people.Person F() -> F
    java.util.List getUrls() -> getUrls
    java.util.List getPlacesLived() -> getPlacesLived
    java.util.List getOrganizations() -> getOrganizations
    java.util.List getEmails() -> getEmails
    java.lang.Object freeze() -> freeze
com.google.android.gms.internal.au -> com.google.android.gms.internal.au:
    void remove() -> remove
    java.lang.String getId() -> getId
    void setPosition(com.google.android.gms.maps.model.LatLng) -> setPosition
    com.google.android.gms.maps.model.LatLng getPosition() -> getPosition
    void setDimensions(float) -> setDimensions
    void a(float,float) -> a
    float getWidth() -> getWidth
    float getHeight() -> getHeight
    void setPositionFromBounds(com.google.android.gms.maps.model.LatLngBounds) -> setPositionFromBounds
    com.google.android.gms.maps.model.LatLngBounds getBounds() -> getBounds
    void setBearing(float) -> setBearing
    float getBearing() -> getBearing
    void setZIndex(float) -> setZIndex
    float getZIndex() -> getZIndex
    void setVisible(boolean) -> setVisible
    boolean isVisible() -> isVisible
    void setTransparency(float) -> setTransparency
    float getTransparency() -> getTransparency
    boolean a(com.google.android.gms.internal.au) -> a
    int hashCodeRemote() -> hashCodeRemote
com.google.android.gms.internal.au$a -> com.google.android.gms.internal.au$a:
    com.google.android.gms.internal.au p(android.os.IBinder) -> p
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.google.android.gms.internal.au$a$a -> com.google.android.gms.internal.au$a$a:
    android.os.IBinder b -> b
    android.os.IBinder asBinder() -> asBinder
    void remove() -> remove
    java.lang.String getId() -> getId
    void setPosition(com.google.android.gms.maps.model.LatLng) -> setPosition
    com.google.android.gms.maps.model.LatLng getPosition() -> getPosition
    void setDimensions(float) -> setDimensions
    void a(float,float) -> a
    float getWidth() -> getWidth
    float getHeight() -> getHeight
    void setPositionFromBounds(com.google.android.gms.maps.model.LatLngBounds) -> setPositionFromBounds
    com.google.android.gms.maps.model.LatLngBounds getBounds() -> getBounds
    void setBearing(float) -> setBearing
    float getBearing() -> getBearing
    void setZIndex(float) -> setZIndex
    float getZIndex() -> getZIndex
    void setVisible(boolean) -> setVisible
    boolean isVisible() -> isVisible
    void setTransparency(float) -> setTransparency
    float getTransparency() -> getTransparency
    boolean a(com.google.android.gms.internal.au) -> a
    int hashCodeRemote() -> hashCodeRemote
com.google.android.gms.internal.av -> com.google.android.gms.internal.av:
    com.google.android.gms.maps.model.Tile getTile(int,int,int) -> getTile
com.google.android.gms.internal.av$a -> com.google.android.gms.internal.av$a:
    com.google.android.gms.internal.av L(android.os.IBinder) -> L
    android.os.IBinder asBinder() -> asBinder
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.google.android.gms.internal.av$a$a -> com.google.android.gms.internal.av$a$a:
    android.os.IBinder b -> b
    android.os.IBinder asBinder() -> asBinder
    com.google.android.gms.maps.model.Tile getTile(int,int,int) -> getTile
com.google.android.gms.internal.aw -> com.google.android.gms.internal.aw:
    void b(com.google.android.gms.dynamic.LifecycleDelegate) -> b
com.google.android.gms.internal.ax -> com.google.android.gms.internal.ax:
    java.util.HashMap h() -> h
    java.lang.Object f(java.lang.String) -> f
    boolean a(com.google.android.gms.internal.ax$a) -> a
    boolean g(java.lang.String) -> g
    boolean q(java.lang.String) -> q
    boolean r(java.lang.String) -> r
    java.lang.Object a(com.google.android.gms.internal.ax$a,java.lang.Object) -> a
    java.util.HashMap aw() -> aw
    java.util.HashMap ax() -> ax
    java.lang.String toString() -> toString
    java.lang.Object b(com.google.android.gms.internal.ax$a) -> b
    void a(java.lang.StringBuilder,com.google.android.gms.internal.ax$a,java.lang.Object) -> a
    void a(java.lang.StringBuilder,com.google.android.gms.internal.ax$a,java.util.ArrayList) -> a
    java.lang.String s(java.lang.String) -> s
com.google.android.gms.internal.ax$a -> com.google.android.gms.internal.ax$a:
    int aj -> aj
    int bP -> bP
    boolean bQ -> bQ
    int bR -> bR
    boolean bS -> bS
    java.lang.String bT -> bT
    int bU -> bU
    java.lang.Class bV -> bV
    java.lang.String bW -> bW
    com.google.android.gms.internal.as bX -> bX
    com.google.android.gms.internal.ax$b bY -> bY
    com.google.android.gms.internal.v CREATOR -> CREATOR
    com.google.android.gms.internal.ax$a N() -> N
    int j() -> j
    int o() -> o
    boolean O() -> O
    int p() -> p
    boolean P() -> P
    java.lang.String Q() -> Q
    int R() -> R
    java.lang.Class S() -> S
    java.lang.String T() -> T
    boolean U() -> U
    void a(com.google.android.gms.internal.as) -> a
    com.google.android.gms.internal.be V() -> V
    java.util.HashMap W() -> W
    java.lang.Object c(java.lang.Object) -> c
    com.google.android.gms.internal.ax$a b(java.lang.String,int) -> b
    com.google.android.gms.internal.ax$a c(java.lang.String,int) -> c
    com.google.android.gms.internal.ax$a d(java.lang.String,int) -> d
    com.google.android.gms.internal.ax$a e(java.lang.String,int) -> e
    com.google.android.gms.internal.ax$a f(java.lang.String,int) -> f
    com.google.android.gms.internal.ax$a a(java.lang.String,int,java.lang.Class) -> a
    com.google.android.gms.internal.ax$a b(java.lang.String,int,java.lang.Class) -> b
    com.google.android.gms.internal.ax$a a(java.lang.String,int,com.google.android.gms.internal.ax$b,boolean) -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
    com.google.android.gms.internal.ax$b c(com.google.android.gms.internal.ax$a) -> c
com.google.android.gms.internal.ax$b -> com.google.android.gms.internal.ax$b:
    int o() -> o
    int p() -> p
    java.lang.Object c(java.lang.Object) -> c
com.google.android.gms.internal.ay -> com.google.android.gms.internal.ay:
    com.google.android.gms.internal.bn f(android.os.Parcel) -> f
    com.google.android.gms.internal.bn[] h(int) -> h
    void a(com.google.android.gms.internal.bn,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.internal.az -> com.google.android.gms.internal.az:
    void a(int,android.os.IBinder,android.os.Bundle) -> a
com.google.android.gms.internal.az$a -> com.google.android.gms.internal.az$a:
    com.google.android.gms.internal.az r(android.os.IBinder) -> r
    android.os.IBinder asBinder() -> asBinder
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.google.android.gms.internal.az$a$a -> com.google.android.gms.internal.az$a$a:
    android.os.IBinder b -> b
    android.os.IBinder asBinder() -> asBinder
    void a(int,android.os.IBinder,android.os.Bundle) -> a
com.google.android.gms.internal.b -> com.google.android.gms.internal.b:
    void remove() -> remove
    java.lang.String getId() -> getId
    void setPoints(java.util.List) -> setPoints
    java.util.List getPoints() -> getPoints
    void setHoles(java.util.List) -> setHoles
    java.util.List getHoles() -> getHoles
    void setStrokeWidth(float) -> setStrokeWidth
    float getStrokeWidth() -> getStrokeWidth
    void setStrokeColor(int) -> setStrokeColor
    int getStrokeColor() -> getStrokeColor
    void setFillColor(int) -> setFillColor
    int getFillColor() -> getFillColor
    void setZIndex(float) -> setZIndex
    float getZIndex() -> getZIndex
    void setVisible(boolean) -> setVisible
    boolean isVisible() -> isVisible
    void setGeodesic(boolean) -> setGeodesic
    boolean isGeodesic() -> isGeodesic
    boolean a(com.google.android.gms.internal.b) -> a
    int hashCodeRemote() -> hashCodeRemote
com.google.android.gms.internal.b$a -> com.google.android.gms.internal.b$a:
    com.google.android.gms.internal.b b(android.os.IBinder) -> b
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.google.android.gms.internal.b$a$a -> com.google.android.gms.internal.b$a$a:
    android.os.IBinder b -> b
    android.os.IBinder asBinder() -> asBinder
    void remove() -> remove
    java.lang.String getId() -> getId
    void setPoints(java.util.List) -> setPoints
    java.util.List getPoints() -> getPoints
    void setHoles(java.util.List) -> setHoles
    java.util.List getHoles() -> getHoles
    void setStrokeWidth(float) -> setStrokeWidth
    float getStrokeWidth() -> getStrokeWidth
    void setStrokeColor(int) -> setStrokeColor
    int getStrokeColor() -> getStrokeColor
    void setFillColor(int) -> setFillColor
    int getFillColor() -> getFillColor
    void setZIndex(float) -> setZIndex
    float getZIndex() -> getZIndex
    void setVisible(boolean) -> setVisible
    boolean isVisible() -> isVisible
    void setGeodesic(boolean) -> setGeodesic
    boolean isGeodesic() -> isGeodesic
    boolean a(com.google.android.gms.internal.b) -> a
    int hashCodeRemote() -> hashCodeRemote
com.google.android.gms.internal.ba -> com.google.android.gms.internal.ba:
    com.google.android.gms.internal.af$e$b g(android.os.Parcel) -> g
    com.google.android.gms.internal.af$e$b[] i(int) -> i
    void a(com.google.android.gms.internal.af$e$b,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.internal.bb -> com.google.android.gms.internal.bb:
    com.google.android.gms.internal.af$b h(android.os.Parcel) -> h
    com.google.android.gms.internal.af$b[] k(int) -> k
    void a(com.google.android.gms.internal.af$b,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.internal.bc -> com.google.android.gms.internal.bc:
    void a(com.google.android.gms.internal.y,java.lang.String) -> a
    void a(com.google.android.gms.internal.y,java.lang.String,java.lang.String) -> a
    void b(com.google.android.gms.internal.y,java.lang.String) -> b
    void a(com.google.android.gms.internal.bt) -> a
    java.lang.String getAccountName() -> getAccountName
    void clearDefaultAccount() -> clearDefaultAccount
    void c(com.google.android.gms.internal.y,java.lang.String) -> c
    void a(com.google.android.gms.internal.y) -> a
    void a(com.google.android.gms.internal.y,android.net.Uri,android.os.Bundle) -> a
    void d(com.google.android.gms.internal.y,java.lang.String) -> d
    void a(java.lang.String,java.lang.String) -> a
    void a(com.google.android.gms.internal.y,java.lang.String,java.lang.String,int,java.lang.String) -> a
    void b(com.google.android.gms.internal.y) -> b
    void a(com.google.android.gms.internal.y,int,java.lang.String,android.net.Uri,java.lang.String,java.lang.String) -> a
    void a(com.google.android.gms.internal.y,int,int,int,java.lang.String) -> a
    void removeMoment(java.lang.String) -> removeMoment
    void e(com.google.android.gms.internal.y,java.lang.String) -> e
    void c(com.google.android.gms.internal.y) -> c
    void a(com.google.android.gms.internal.y,int,java.lang.String) -> a
    void a(com.google.android.gms.internal.y,java.lang.String,boolean) -> a
com.google.android.gms.internal.bc$a -> com.google.android.gms.internal.bc$a:
    com.google.android.gms.internal.bc y(android.os.IBinder) -> y
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.google.android.gms.internal.bc$a$a -> com.google.android.gms.internal.bc$a$a:
    android.os.IBinder b -> b
    android.os.IBinder asBinder() -> asBinder
    void a(com.google.android.gms.internal.y,java.lang.String) -> a
    void a(com.google.android.gms.internal.y,java.lang.String,java.lang.String) -> a
    void b(com.google.android.gms.internal.y,java.lang.String) -> b
    void a(com.google.android.gms.internal.bt) -> a
    java.lang.String getAccountName() -> getAccountName
    void clearDefaultAccount() -> clearDefaultAccount
    void c(com.google.android.gms.internal.y,java.lang.String) -> c
    void a(com.google.android.gms.internal.y) -> a
    void a(com.google.android.gms.internal.y,android.net.Uri,android.os.Bundle) -> a
    void d(com.google.android.gms.internal.y,java.lang.String) -> d
    void a(java.lang.String,java.lang.String) -> a
    void a(com.google.android.gms.internal.y,java.lang.String,java.lang.String,int,java.lang.String) -> a
    void b(com.google.android.gms.internal.y) -> b
    void a(com.google.android.gms.internal.y,int,java.lang.String,android.net.Uri,java.lang.String,java.lang.String) -> a
    void a(com.google.android.gms.internal.y,int,int,int,java.lang.String) -> a
    void removeMoment(java.lang.String) -> removeMoment
    void e(com.google.android.gms.internal.y,java.lang.String) -> e
    void c(com.google.android.gms.internal.y) -> c
    void a(com.google.android.gms.internal.y,int,java.lang.String) -> a
    void a(com.google.android.gms.internal.y,java.lang.String,boolean) -> a
com.google.android.gms.internal.bd -> com.google.android.gms.internal.bd:
    com.google.android.gms.common.data.DataHolder$Builder withRow(java.util.HashMap) -> withRow
    com.google.android.gms.common.data.DataHolder$Builder withRow(android.content.ContentValues) -> withRow
com.google.android.gms.internal.be -> com.google.android.gms.internal.be:
    com.google.android.gms.internal.bo CREATOR -> CREATOR
    int aj -> aj
    com.google.android.gms.internal.am cy -> cy
    int j() -> j
    com.google.android.gms.internal.am am() -> am
    com.google.android.gms.internal.be a(com.google.android.gms.internal.ax$b) -> a
    com.google.android.gms.internal.ax$b an() -> an
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.internal.bf -> com.google.android.gms.internal.bf:
    java.lang.String TAG -> TAG
    int cz -> cz
    android.net.Uri mUri -> mUri
    boolean cA -> cA
    boolean cB -> cB
    android.graphics.Bitmap cC -> cC
    com.google.android.gms.plus.PlusClient cD -> cD
    void a(com.google.android.gms.common.ConnectionResult,android.os.ParcelFileDescriptor) -> a
    android.graphics.Bitmap a(android.graphics.Bitmap,int) -> a
    void a(com.google.android.gms.plus.PlusClient) -> a
    void a(android.net.Uri,int) -> a
    void onConnected() -> onConnected
    void onDisconnected() -> onDisconnected
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void ao() -> ao
    android.graphics.Bitmap b(android.graphics.Bitmap,int) -> b
    java.lang.String ap() -> ap
    android.graphics.Bitmap a(com.google.android.gms.internal.bf,android.graphics.Bitmap) -> a
    boolean a(com.google.android.gms.internal.bf) -> a
    android.graphics.Bitmap b(com.google.android.gms.internal.bf) -> b
com.google.android.gms.internal.bf$a -> com.google.android.gms.internal.bf$a:
    int cz -> cz
    com.google.android.gms.internal.bf fZ -> fZ
    android.graphics.Bitmap a(android.os.ParcelFileDescriptor[]) -> a
    void b(android.graphics.Bitmap) -> b
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.google.android.gms.internal.bg -> com.google.android.gms.internal.bg:
    com.google.android.gms.internal.af i(android.os.Parcel) -> i
    com.google.android.gms.internal.af[] l(int) -> l
    void a(com.google.android.gms.internal.af,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.internal.bh -> com.google.android.gms.internal.bh:
    com.google.android.gms.internal.af$a j(android.os.Parcel) -> j
    com.google.android.gms.internal.af$a[] m(int) -> m
    void a(com.google.android.gms.internal.af$a,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.internal.bi -> com.google.android.gms.internal.bi:
    com.google.android.gms.internal.ca k(android.os.Parcel) -> k
    com.google.android.gms.internal.ca[] n(int) -> n
    void a(com.google.android.gms.internal.ca,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.internal.bj -> com.google.android.gms.internal.bj:
    android.app.Activity h -> h
    android.content.Intent cH -> cH
    int cI -> cI
    void onClick(android.content.DialogInterface,int) -> onClick
com.google.android.gms.internal.bk -> com.google.android.gms.internal.bk:
    void onFinish() -> onFinish
    void onCancel() -> onCancel
com.google.android.gms.internal.bk$a -> com.google.android.gms.internal.bk$a:
    com.google.android.gms.internal.bk z(android.os.IBinder) -> z
    android.os.IBinder asBinder() -> asBinder
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.google.android.gms.internal.bk$a$a -> com.google.android.gms.internal.bk$a$a:
    android.os.IBinder b -> b
    android.os.IBinder asBinder() -> asBinder
    void onFinish() -> onFinish
    void onCancel() -> onCancel
com.google.android.gms.internal.bl -> com.google.android.gms.internal.bl:
    com.google.android.gms.internal.af$i l(android.os.Parcel) -> l
    com.google.android.gms.internal.af$i[] o(int) -> o
    void a(com.google.android.gms.internal.af$i,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.internal.bm -> com.google.android.gms.internal.bm:
    void remove() -> remove
    void clearTileCache() -> clearTileCache
    java.lang.String getId() -> getId
    void setZIndex(float) -> setZIndex
    float getZIndex() -> getZIndex
    void setVisible(boolean) -> setVisible
    boolean isVisible() -> isVisible
    boolean a(com.google.android.gms.internal.bm) -> a
    int hashCodeRemote() -> hashCodeRemote
com.google.android.gms.internal.bm$a -> com.google.android.gms.internal.bm$a:
    com.google.android.gms.internal.bm w(android.os.IBinder) -> w
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.google.android.gms.internal.bm$a$a -> com.google.android.gms.internal.bm$a$a:
    android.os.IBinder b -> b
    android.os.IBinder asBinder() -> asBinder
    void remove() -> remove
    void clearTileCache() -> clearTileCache
    java.lang.String getId() -> getId
    void setZIndex(float) -> setZIndex
    float getZIndex() -> getZIndex
    void setVisible(boolean) -> setVisible
    boolean isVisible() -> isVisible
    boolean a(com.google.android.gms.internal.bm) -> a
    int hashCodeRemote() -> hashCodeRemote
com.google.android.gms.internal.bn -> com.google.android.gms.internal.bn:
    com.google.android.gms.internal.ay CREATOR -> CREATOR
    java.util.HashMap ah -> ah
    java.util.Set ai -> ai
    int aj -> aj
    java.lang.String cO -> cO
    com.google.android.gms.internal.ca cP -> cP
    java.lang.String cQ -> cQ
    com.google.android.gms.internal.ca cR -> cR
    java.lang.String cS -> cS
    java.util.HashMap h() -> h
    java.util.Set i() -> i
    int j() -> j
    java.lang.String getId() -> getId
    boolean hasId() -> hasId
    com.google.android.gms.plus.model.moments.ItemScope getResult() -> getResult
    com.google.android.gms.internal.ca ar() -> ar
    boolean hasResult() -> hasResult
    java.lang.String getStartDate() -> getStartDate
    boolean hasStartDate() -> hasStartDate
    com.google.android.gms.plus.model.moments.ItemScope getTarget() -> getTarget
    com.google.android.gms.internal.ca as() -> as
    boolean hasTarget() -> hasTarget
    java.lang.String getType() -> getType
    boolean hasType() -> hasType
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.Object f(java.lang.String) -> f
    boolean g(java.lang.String) -> g
    boolean a(com.google.android.gms.internal.ax$a) -> a
    java.lang.Object b(com.google.android.gms.internal.ax$a) -> b
    com.google.android.gms.internal.bn at() -> at
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.Object freeze() -> freeze
com.google.android.gms.internal.bo -> com.google.android.gms.internal.bo:
    com.google.android.gms.internal.be m(android.os.Parcel) -> m
    com.google.android.gms.internal.be[] p(int) -> p
    void a(com.google.android.gms.internal.be,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.internal.bp -> com.google.android.gms.internal.bp:
    boolean f(com.google.android.gms.internal.z) -> f
com.google.android.gms.internal.bp$a -> com.google.android.gms.internal.bp$a:
    com.google.android.gms.internal.bp B(android.os.IBinder) -> B
    android.os.IBinder asBinder() -> asBinder
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.google.android.gms.internal.bp$a$a -> com.google.android.gms.internal.bp$a$a:
    android.os.IBinder b -> b
    android.os.IBinder asBinder() -> asBinder
    boolean f(com.google.android.gms.internal.z) -> f
com.google.android.gms.internal.bq -> com.google.android.gms.internal.bq:
    com.google.android.gms.internal.af$g n(android.os.Parcel) -> n
    com.google.android.gms.internal.af$g[] q(int) -> q
    void a(com.google.android.gms.internal.af$g,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.internal.br -> com.google.android.gms.internal.br:
    boolean c(java.lang.Object,java.lang.Object) -> c
    int hashCode(java.lang.Object[]) -> hashCode
    com.google.android.gms.internal.br$a f(java.lang.Object) -> f
com.google.android.gms.internal.br$1 -> com.google.android.gms.internal.br$1:
com.google.android.gms.internal.br$a -> com.google.android.gms.internal.br$a:
    java.util.List fg -> fg
    java.lang.Object fh -> fh
    com.google.android.gms.internal.br$a a(java.lang.String,java.lang.Object) -> a
    java.lang.String toString() -> toString
com.google.android.gms.internal.bs -> com.google.android.gms.internal.bs:
    com.google.android.gms.internal.ac aB() -> aB
    java.lang.Object freeze() -> freeze
com.google.android.gms.internal.bt -> com.google.android.gms.internal.bt:
    java.lang.String TAG -> TAG
    int aj -> aj
    android.os.Parcel dr -> dr
    int ds -> ds
    com.google.android.gms.internal.as bX -> bX
    java.lang.String mClassName -> mClassName
    int dt -> dt
    int du -> du
    com.google.android.gms.internal.ce CREATOR -> CREATOR
    com.google.android.gms.internal.bt a(com.google.android.gms.internal.ax) -> a
    com.google.android.gms.internal.as b(com.google.android.gms.internal.ax) -> b
    void a(com.google.android.gms.internal.as,com.google.android.gms.internal.ax) -> a
    com.google.android.gms.internal.aq a(android.os.Parcelable$Creator) -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    int j() -> j
    android.os.Parcel aC() -> aC
    com.google.android.gms.internal.as aD() -> aD
    java.util.HashMap h() -> h
    java.lang.Object f(java.lang.String) -> f
    boolean g(java.lang.String) -> g
    java.lang.String toString() -> toString
    void a(java.lang.StringBuilder,java.util.HashMap,android.os.Parcel) -> a
    java.util.HashMap c(java.util.HashMap) -> c
    void a(java.lang.StringBuilder,java.lang.String,com.google.android.gms.internal.ax$a,android.os.Parcel,int) -> a
    void a(java.lang.StringBuilder,com.google.android.gms.internal.ax$a,android.os.Parcel,int) -> a
    void b(java.lang.StringBuilder,com.google.android.gms.internal.ax$a,android.os.Parcel,int) -> b
    void b(java.lang.StringBuilder,com.google.android.gms.internal.ax$a,java.lang.Object) -> b
    void b(java.lang.StringBuilder,com.google.android.gms.internal.ax$a,java.util.ArrayList) -> b
    void a(java.lang.StringBuilder,int,java.lang.Object) -> a
    java.util.HashMap a(android.os.Bundle) -> a
com.google.android.gms.internal.bu -> com.google.android.gms.internal.bu:
    void a(com.google.android.gms.internal.d,android.net.Uri,android.os.Bundle,boolean) -> a
com.google.android.gms.internal.bu$a -> com.google.android.gms.internal.bu$a:
    com.google.android.gms.internal.bu M(android.os.IBinder) -> M
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.google.android.gms.internal.bu$a$a -> com.google.android.gms.internal.bu$a$a:
    android.os.IBinder b -> b
    android.os.IBinder asBinder() -> asBinder
    void a(com.google.android.gms.internal.d,android.net.Uri,android.os.Bundle,boolean) -> a
com.google.android.gms.internal.bv -> com.google.android.gms.internal.bv:
    com.google.android.gms.internal.am$a o(android.os.Parcel) -> o
    com.google.android.gms.internal.am$a[] t(int) -> t
    void a(com.google.android.gms.internal.am$a,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.internal.bw -> com.google.android.gms.internal.bw:
    java.lang.String a(java.lang.String,java.lang.String,android.content.Context,android.util.AttributeSet,boolean,boolean,java.lang.String) -> a
com.google.android.gms.internal.bx -> com.google.android.gms.internal.bx:
    boolean a(java.lang.Object[],java.lang.Object) -> a
    void a(java.lang.StringBuilder,java.lang.Object[]) -> a
    void a(java.lang.StringBuilder,int[]) -> a
    void a(java.lang.StringBuilder,long[]) -> a
    void a(java.lang.StringBuilder,float[]) -> a
    void a(java.lang.StringBuilder,double[]) -> a
    void a(java.lang.StringBuilder,boolean[]) -> a
    void a(java.lang.StringBuilder,java.lang.String[]) -> a
com.google.android.gms.internal.by -> com.google.android.gms.internal.by:
    boolean ec -> ec
    java.util.concurrent.BlockingQueue ed -> ed
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
    android.os.IBinder aY() -> aY
com.google.android.gms.internal.bz -> com.google.android.gms.internal.bz:
    com.google.android.gms.internal.as p(android.os.Parcel) -> p
    com.google.android.gms.internal.as[] u(int) -> u
    void a(com.google.android.gms.internal.as,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.internal.c -> com.google.android.gms.internal.c:
    void a(java.lang.Object) -> a
com.google.android.gms.internal.ca -> com.google.android.gms.internal.ca:
    com.google.android.gms.internal.bi CREATOR -> CREATOR
    java.util.HashMap ah -> ah
    java.util.Set ai -> ai
    int aj -> aj
    com.google.android.gms.internal.ca ee -> ee
    java.util.List ef -> ef
    com.google.android.gms.internal.ca eg -> eg
    java.lang.String eh -> eh
    java.lang.String ei -> ei
    java.lang.String ej -> ej
    java.util.List ek -> ek
    int el -> el
    java.util.List em -> em
    com.google.android.gms.internal.ca en -> en
    java.util.List eo -> eo
    java.lang.String ep -> ep
    java.lang.String eq -> eq
    com.google.android.gms.internal.ca er -> er
    java.lang.String es -> es
    java.lang.String et -> et
    java.lang.String eu -> eu
    java.util.List ev -> ev
    java.lang.String ew -> ew
    java.lang.String ex -> ex
    java.lang.String ey -> ey
    java.lang.String da -> da
    java.lang.String ez -> ez
    java.lang.String eA -> eA
    java.lang.String db -> db
    java.lang.String bp -> bp
    java.lang.String eB -> eB
    com.google.android.gms.internal.ca eC -> eC
    java.lang.String br -> br
    java.lang.String eD -> eD
    java.lang.String cO -> cO
    java.lang.String eE -> eE
    com.google.android.gms.internal.ca eF -> eF
    double eG -> eG
    com.google.android.gms.internal.ca eH -> eH
    double eI -> eI
    java.lang.String mName -> mName
    com.google.android.gms.internal.ca eJ -> eJ
    java.util.List eK -> eK
    java.lang.String eL -> eL
    java.lang.String eM -> eM
    java.lang.String eN -> eN
    java.lang.String eO -> eO
    com.google.android.gms.internal.ca eP -> eP
    java.lang.String cQ -> cQ
    java.lang.String eQ -> eQ
    java.lang.String eR -> eR
    com.google.android.gms.internal.ca eS -> eS
    java.lang.String eT -> eT
    java.lang.String eU -> eU
    java.lang.String cS -> cS
    java.lang.String cU -> cU
    java.lang.String eV -> eV
    java.lang.String eW -> eW
    java.util.HashMap h() -> h
    java.util.Set i() -> i
    int j() -> j
    com.google.android.gms.plus.model.moments.ItemScope getAbout() -> getAbout
    com.google.android.gms.internal.ca aZ() -> aZ
    boolean hasAbout() -> hasAbout
    java.util.List getAdditionalName() -> getAdditionalName
    boolean hasAdditionalName() -> hasAdditionalName
    com.google.android.gms.plus.model.moments.ItemScope getAddress() -> getAddress
    com.google.android.gms.internal.ca ba() -> ba
    boolean hasAddress() -> hasAddress
    java.lang.String getAddressCountry() -> getAddressCountry
    boolean hasAddressCountry() -> hasAddressCountry
    java.lang.String getAddressLocality() -> getAddressLocality
    boolean hasAddressLocality() -> hasAddressLocality
    java.lang.String getAddressRegion() -> getAddressRegion
    boolean hasAddressRegion() -> hasAddressRegion
    java.util.List getAssociated_media() -> getAssociated_media
    java.util.List bb() -> bb
    boolean hasAssociated_media() -> hasAssociated_media
    int getAttendeeCount() -> getAttendeeCount
    boolean hasAttendeeCount() -> hasAttendeeCount
    java.util.List getAttendees() -> getAttendees
    java.util.List bc() -> bc
    boolean hasAttendees() -> hasAttendees
    com.google.android.gms.plus.model.moments.ItemScope getAudio() -> getAudio
    com.google.android.gms.internal.ca bd() -> bd
    boolean hasAudio() -> hasAudio
    java.util.List getAuthor() -> getAuthor
    java.util.List be() -> be
    boolean hasAuthor() -> hasAuthor
    java.lang.String getBestRating() -> getBestRating
    boolean hasBestRating() -> hasBestRating
    java.lang.String getBirthDate() -> getBirthDate
    boolean hasBirthDate() -> hasBirthDate
    com.google.android.gms.plus.model.moments.ItemScope getByArtist() -> getByArtist
    com.google.android.gms.internal.ca bf() -> bf
    boolean hasByArtist() -> hasByArtist
    java.lang.String getCaption() -> getCaption
    boolean hasCaption() -> hasCaption
    java.lang.String getContentSize() -> getContentSize
    boolean hasContentSize() -> hasContentSize
    java.lang.String getContentUrl() -> getContentUrl
    boolean hasContentUrl() -> hasContentUrl
    java.util.List getContributor() -> getContributor
    java.util.List bg() -> bg
    boolean hasContributor() -> hasContributor
    java.lang.String getDateCreated() -> getDateCreated
    boolean hasDateCreated() -> hasDateCreated
    java.lang.String getDateModified() -> getDateModified
    boolean hasDateModified() -> hasDateModified
    java.lang.String getDatePublished() -> getDatePublished
    boolean hasDatePublished() -> hasDatePublished
    java.lang.String getDescription() -> getDescription
    boolean hasDescription() -> hasDescription
    java.lang.String getDuration() -> getDuration
    boolean hasDuration() -> hasDuration
    java.lang.String getEmbedUrl() -> getEmbedUrl
    boolean hasEmbedUrl() -> hasEmbedUrl
    java.lang.String getEndDate() -> getEndDate
    boolean hasEndDate() -> hasEndDate
    java.lang.String getFamilyName() -> getFamilyName
    boolean hasFamilyName() -> hasFamilyName
    java.lang.String getGender() -> getGender
    boolean hasGender() -> hasGender
    com.google.android.gms.plus.model.moments.ItemScope getGeo() -> getGeo
    com.google.android.gms.internal.ca bh() -> bh
    boolean hasGeo() -> hasGeo
    java.lang.String getGivenName() -> getGivenName
    boolean hasGivenName() -> hasGivenName
    java.lang.String getHeight() -> getHeight
    boolean hasHeight() -> hasHeight
    java.lang.String getId() -> getId
    boolean hasId() -> hasId
    java.lang.String getImage() -> getImage
    boolean hasImage() -> hasImage
    com.google.android.gms.plus.model.moments.ItemScope getInAlbum() -> getInAlbum
    com.google.android.gms.internal.ca bi() -> bi
    boolean hasInAlbum() -> hasInAlbum
    double getLatitude() -> getLatitude
    boolean hasLatitude() -> hasLatitude
    com.google.android.gms.plus.model.moments.ItemScope getLocation() -> getLocation
    com.google.android.gms.internal.ca bj() -> bj
    boolean hasLocation() -> hasLocation
    double getLongitude() -> getLongitude
    boolean hasLongitude() -> hasLongitude
    java.lang.String getName() -> getName
    boolean hasName() -> hasName
    com.google.android.gms.plus.model.moments.ItemScope getPartOfTVSeries() -> getPartOfTVSeries
    com.google.android.gms.internal.ca bk() -> bk
    boolean hasPartOfTVSeries() -> hasPartOfTVSeries
    java.util.List getPerformers() -> getPerformers
    java.util.List bl() -> bl
    boolean hasPerformers() -> hasPerformers
    java.lang.String getPlayerType() -> getPlayerType
    boolean hasPlayerType() -> hasPlayerType
    java.lang.String getPostOfficeBoxNumber() -> getPostOfficeBoxNumber
    boolean hasPostOfficeBoxNumber() -> hasPostOfficeBoxNumber
    java.lang.String getPostalCode() -> getPostalCode
    boolean hasPostalCode() -> hasPostalCode
    java.lang.String getRatingValue() -> getRatingValue
    boolean hasRatingValue() -> hasRatingValue
    com.google.android.gms.plus.model.moments.ItemScope getReviewRating() -> getReviewRating
    com.google.android.gms.internal.ca bm() -> bm
    boolean hasReviewRating() -> hasReviewRating
    java.lang.String getStartDate() -> getStartDate
    boolean hasStartDate() -> hasStartDate
    java.lang.String getStreetAddress() -> getStreetAddress
    boolean hasStreetAddress() -> hasStreetAddress
    java.lang.String getText() -> getText
    boolean hasText() -> hasText
    com.google.android.gms.plus.model.moments.ItemScope getThumbnail() -> getThumbnail
    com.google.android.gms.internal.ca bn() -> bn
    boolean hasThumbnail() -> hasThumbnail
    java.lang.String getThumbnailUrl() -> getThumbnailUrl
    boolean hasThumbnailUrl() -> hasThumbnailUrl
    java.lang.String getTickerSymbol() -> getTickerSymbol
    boolean hasTickerSymbol() -> hasTickerSymbol
    java.lang.String getType() -> getType
    boolean hasType() -> hasType
    java.lang.String getUrl() -> getUrl
    boolean hasUrl() -> hasUrl
    java.lang.String getWidth() -> getWidth
    boolean hasWidth() -> hasWidth
    java.lang.String getWorstRating() -> getWorstRating
    boolean hasWorstRating() -> hasWorstRating
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.Object f(java.lang.String) -> f
    boolean g(java.lang.String) -> g
    boolean a(com.google.android.gms.internal.ax$a) -> a
    java.lang.Object b(com.google.android.gms.internal.ax$a) -> b
    com.google.android.gms.internal.ca bo() -> bo
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.Object freeze() -> freeze
com.google.android.gms.internal.cb -> com.google.android.gms.internal.cb:
    com.google.android.gms.internal.af$f q(android.os.Parcel) -> q
    com.google.android.gms.internal.af$f[] v(int) -> v
    void a(com.google.android.gms.internal.af$f,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.internal.cc -> com.google.android.gms.internal.cc:
    com.google.android.gms.internal.af$h r(android.os.Parcel) -> r
    com.google.android.gms.internal.af$h[] w(int) -> w
    void a(com.google.android.gms.internal.af$h,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.internal.cd -> com.google.android.gms.internal.cd:
    void e(com.google.android.gms.internal.f) -> e
com.google.android.gms.internal.cd$a -> com.google.android.gms.internal.cd$a:
    com.google.android.gms.internal.cd K(android.os.IBinder) -> K
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.google.android.gms.internal.cd$a$a -> com.google.android.gms.internal.cd$a$a:
    android.os.IBinder b -> b
    android.os.IBinder asBinder() -> asBinder
    void e(com.google.android.gms.internal.f) -> e
com.google.android.gms.internal.ce -> com.google.android.gms.internal.ce:
    com.google.android.gms.internal.bt s(android.os.Parcel) -> s
    com.google.android.gms.internal.bt[] y(int) -> y
    void a(com.google.android.gms.internal.bt,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.internal.cf -> com.google.android.gms.internal.cf:
    void a(java.lang.StringBuilder,java.util.HashMap) -> a
com.google.android.gms.internal.cg -> com.google.android.gms.internal.cg:
    com.google.android.gms.internal.af$e t(android.os.Parcel) -> t
    com.google.android.gms.internal.af$e[] z(int) -> z
    void a(com.google.android.gms.internal.af$e,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.internal.ch -> com.google.android.gms.internal.ch:
    java.lang.String a(byte[]) -> a
    java.lang.String b(byte[]) -> b
com.google.android.gms.internal.ci -> com.google.android.gms.internal.ci:
    com.google.android.gms.internal.bn fP -> fP
    com.google.android.gms.internal.bn bA() -> bA
    java.lang.String getId() -> getId
    boolean hasId() -> hasId
    com.google.android.gms.plus.model.moments.ItemScope getResult() -> getResult
    boolean hasResult() -> hasResult
    java.lang.String getStartDate() -> getStartDate
    boolean hasStartDate() -> hasStartDate
    com.google.android.gms.plus.model.moments.ItemScope getTarget() -> getTarget
    boolean hasTarget() -> hasTarget
    java.lang.String getType() -> getType
    boolean hasType() -> hasType
    com.google.android.gms.internal.bn at() -> at
    java.lang.Object freeze() -> freeze
com.google.android.gms.internal.cj -> com.google.android.gms.internal.cj:
    java.lang.Object e(java.lang.Object) -> e
    java.lang.Object b(java.lang.Object,java.lang.Object) -> b
    void a(boolean) -> a
    void a(boolean,java.lang.Object) -> a
    void b(boolean,java.lang.Object) -> b
    void a(boolean,java.lang.String,java.lang.Object[]) -> a
com.google.android.gms.internal.ck -> com.google.android.gms.internal.ck:
    android.os.Bundle fX -> fX
    boolean bD() -> bD
    java.lang.String bE() -> bE
    java.lang.String[] bF() -> bF
    android.net.Uri[] bG() -> bG
    android.content.Intent getIntent() -> getIntent
com.google.android.gms.internal.cl -> com.google.android.gms.internal.cl:
    com.google.android.gms.internal.as$a u(android.os.Parcel) -> u
    com.google.android.gms.internal.as$a[] A(int) -> A
    void a(com.google.android.gms.internal.as$a,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.internal.cm -> com.google.android.gms.internal.cm:
    java.lang.Boolean a(byte) -> a
    byte b(java.lang.Boolean) -> b
com.google.android.gms.internal.cn -> com.google.android.gms.internal.cn:
    com.google.android.gms.internal.af$e$a v(android.os.Parcel) -> v
    com.google.android.gms.internal.af$e$a[] B(int) -> B
    void a(com.google.android.gms.internal.af$e$a,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.internal.co -> com.google.android.gms.internal.co:
    int w(android.os.Parcel) -> w
    int C(int) -> C
    int d(android.os.Parcel,int) -> d
    void e(android.os.Parcel,int) -> e
    void c(android.os.Parcel,int,int) -> c
    int x(android.os.Parcel) -> x
    boolean f(android.os.Parcel,int) -> f
    byte g(android.os.Parcel,int) -> g
    int h(android.os.Parcel,int) -> h
    long i(android.os.Parcel,int) -> i
    java.math.BigInteger j(android.os.Parcel,int) -> j
    float k(android.os.Parcel,int) -> k
    double l(android.os.Parcel,int) -> l
    java.math.BigDecimal m(android.os.Parcel,int) -> m
    java.lang.String n(android.os.Parcel,int) -> n
    android.os.IBinder o(android.os.Parcel,int) -> o
    android.os.Parcelable a(android.os.Parcel,int,android.os.Parcelable$Creator) -> a
    android.os.Bundle p(android.os.Parcel,int) -> p
    byte[] q(android.os.Parcel,int) -> q
    boolean[] r(android.os.Parcel,int) -> r
    int[] s(android.os.Parcel,int) -> s
    long[] t(android.os.Parcel,int) -> t
    java.math.BigInteger[] u(android.os.Parcel,int) -> u
    float[] v(android.os.Parcel,int) -> v
    double[] w(android.os.Parcel,int) -> w
    java.math.BigDecimal[] x(android.os.Parcel,int) -> x
    java.lang.String[] y(android.os.Parcel,int) -> y
    java.util.ArrayList z(android.os.Parcel,int) -> z
    java.lang.Object[] b(android.os.Parcel,int,android.os.Parcelable$Creator) -> b
    java.util.ArrayList c(android.os.Parcel,int,android.os.Parcelable$Creator) -> c
    android.os.Parcel A(android.os.Parcel,int) -> A
    android.os.Parcel[] B(android.os.Parcel,int) -> B
    void a(android.os.Parcel,int,java.util.List,java.lang.ClassLoader) -> a
com.google.android.gms.internal.co$a -> com.google.android.gms.internal.co$a:
com.google.android.gms.internal.d -> com.google.android.gms.internal.d:
    void a(int,android.os.Bundle,int,android.content.Intent) -> a
com.google.android.gms.internal.d$a -> com.google.android.gms.internal.d$a:
    com.google.android.gms.internal.d J(android.os.IBinder) -> J
    android.os.IBinder asBinder() -> asBinder
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.google.android.gms.internal.d$a$a -> com.google.android.gms.internal.d$a$a:
    android.os.IBinder b -> b
    android.os.IBinder asBinder() -> asBinder
    void a(int,android.os.Bundle,int,android.content.Intent) -> a
com.google.android.gms.internal.e -> com.google.android.gms.internal.e:
    java.lang.String TAG -> TAG
    com.google.android.gms.dynamic.LifecycleDelegate eZ -> eZ
    android.os.Bundle fa -> fa
    java.util.LinkedList fb -> fb
    com.google.android.gms.internal.aw fc -> fc
    com.google.android.gms.dynamic.LifecycleDelegate bp() -> bp
    void x(int) -> x
    void a(android.os.Bundle,com.google.android.gms.internal.e$a) -> a
    void a(com.google.android.gms.internal.aw) -> a
    void onInflate(android.app.Activity,android.os.Bundle,android.os.Bundle) -> onInflate
    void onCreate(android.os.Bundle) -> onCreate
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void a(android.widget.FrameLayout) -> a
    void onResume() -> onResume
    void onPause() -> onPause
    void onDestroyView() -> onDestroyView
    void onDestroy() -> onDestroy
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onLowMemory() -> onLowMemory
    com.google.android.gms.dynamic.LifecycleDelegate a(com.google.android.gms.internal.e,com.google.android.gms.dynamic.LifecycleDelegate) -> a
    java.util.LinkedList a(com.google.android.gms.internal.e) -> a
    com.google.android.gms.dynamic.LifecycleDelegate b(com.google.android.gms.internal.e) -> b
    android.os.Bundle a(com.google.android.gms.internal.e,android.os.Bundle) -> a
com.google.android.gms.internal.e$1 -> com.google.android.gms.internal.e$1:
    com.google.android.gms.internal.e c -> c
    int getState() -> getState
    void a(com.google.android.gms.dynamic.LifecycleDelegate) -> a
com.google.android.gms.internal.e$2 -> com.google.android.gms.internal.e$2:
    android.content.Context d -> d
    int e -> e
    com.google.android.gms.internal.e c -> c
    void onClick(android.view.View) -> onClick
com.google.android.gms.internal.e$3 -> com.google.android.gms.internal.e$3:
    android.os.Bundle i -> i
    com.google.android.gms.internal.e c -> c
    int getState() -> getState
    void a(com.google.android.gms.dynamic.LifecycleDelegate) -> a
com.google.android.gms.internal.e$4 -> com.google.android.gms.internal.e$4:
    android.widget.FrameLayout j -> j
    android.view.LayoutInflater k -> k
    android.view.ViewGroup l -> l
    android.os.Bundle i -> i
    com.google.android.gms.internal.e c -> c
    int getState() -> getState
    void a(com.google.android.gms.dynamic.LifecycleDelegate) -> a
com.google.android.gms.internal.e$5 -> com.google.android.gms.internal.e$5:
    android.app.Activity n -> n
    android.os.Bundle o -> o
    android.os.Bundle i -> i
    com.google.android.gms.internal.e c -> c
    int getState() -> getState
    void a(com.google.android.gms.dynamic.LifecycleDelegate) -> a
com.google.android.gms.internal.e$a -> com.google.android.gms.internal.e$a:
    int getState() -> getState
    void a(com.google.android.gms.dynamic.LifecycleDelegate) -> a
com.google.android.gms.internal.f -> com.google.android.gms.internal.f:
com.google.android.gms.internal.f$a -> com.google.android.gms.internal.f$a:
    com.google.android.gms.internal.f G(android.os.IBinder) -> G
    android.os.IBinder asBinder() -> asBinder
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.google.android.gms.internal.f$a$a -> com.google.android.gms.internal.f$a$a:
    android.os.IBinder b -> b
    android.os.IBinder asBinder() -> asBinder
com.google.android.gms.internal.g -> com.google.android.gms.internal.g:
    void a(android.os.Bundle,java.lang.String,android.os.Parcelable) -> a
com.google.android.gms.internal.h -> com.google.android.gms.internal.h:
    com.google.android.gms.internal.f j(int) -> j
    com.google.android.gms.internal.f k(java.lang.String) -> k
    com.google.android.gms.internal.f l(java.lang.String) -> l
    com.google.android.gms.internal.f ac() -> ac
    com.google.android.gms.internal.f a(float) -> a
    com.google.android.gms.internal.f a(android.graphics.Bitmap) -> a
    com.google.android.gms.internal.f m(java.lang.String) -> m
com.google.android.gms.internal.h$a -> com.google.android.gms.internal.h$a:
    com.google.android.gms.internal.h c(android.os.IBinder) -> c
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.google.android.gms.internal.h$a$a -> com.google.android.gms.internal.h$a$a:
    android.os.IBinder b -> b
    android.os.IBinder asBinder() -> asBinder
    com.google.android.gms.internal.f j(int) -> j
    com.google.android.gms.internal.f k(java.lang.String) -> k
    com.google.android.gms.internal.f l(java.lang.String) -> l
    com.google.android.gms.internal.f ac() -> ac
    com.google.android.gms.internal.f a(float) -> a
    com.google.android.gms.internal.f a(android.graphics.Bitmap) -> a
    com.google.android.gms.internal.f m(java.lang.String) -> m
com.google.android.gms.internal.i -> com.google.android.gms.internal.i:
    com.google.android.gms.internal.e c -> c
    void b(com.google.android.gms.dynamic.LifecycleDelegate) -> b
com.google.android.gms.internal.j -> com.google.android.gms.internal.j:
    java.util.LinkedHashMap t -> t
    int size -> size
    int u -> u
    int v -> v
    int w -> w
    int x -> x
    int y -> y
    int z -> z
    java.lang.Object get(java.lang.Object) -> get
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    void trimToSize(int) -> trimToSize
    void entryRemoved(boolean,java.lang.Object,java.lang.Object,java.lang.Object) -> entryRemoved
    java.lang.Object create(java.lang.Object) -> create
    int a(java.lang.Object,java.lang.Object) -> a
    int sizeOf(java.lang.Object,java.lang.Object) -> sizeOf
    void evictAll() -> evictAll
    int size() -> size
    java.lang.String toString() -> toString
com.google.android.gms.internal.k -> com.google.android.gms.internal.k:
    void onMapLongClick(com.google.android.gms.maps.model.LatLng) -> onMapLongClick
com.google.android.gms.internal.k$a -> com.google.android.gms.internal.k$a:
    com.google.android.gms.internal.k C(android.os.IBinder) -> C
    android.os.IBinder asBinder() -> asBinder
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.google.android.gms.internal.k$a$a -> com.google.android.gms.internal.k$a$a:
    android.os.IBinder b -> b
    android.os.IBinder asBinder() -> asBinder
    void onMapLongClick(com.google.android.gms.maps.model.LatLng) -> onMapLongClick
com.google.android.gms.internal.l -> com.google.android.gms.internal.l:
    java.lang.String[] A -> A
    android.widget.ImageView B -> B
    android.widget.TextView C -> C
    void a(android.net.Uri) -> a
    void setTextSize(int,float) -> setTextSize
    void setSingleLine() -> setSingleLine
    void setGravity(int) -> setGravity
    void setTextColor(int) -> setTextColor
    void a(java.lang.String[]) -> a
    void onMeasure(int,int) -> onMeasure
com.google.android.gms.internal.m -> com.google.android.gms.internal.m:
    com.google.android.gms.internal.f a(com.google.android.gms.internal.z) -> a
    com.google.android.gms.internal.f b(com.google.android.gms.internal.z) -> b
com.google.android.gms.internal.m$a -> com.google.android.gms.internal.m$a:
    com.google.android.gms.internal.m h(android.os.IBinder) -> h
    android.os.IBinder asBinder() -> asBinder
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.google.android.gms.internal.m$a$a -> com.google.android.gms.internal.m$a$a:
    android.os.IBinder b -> b
    android.os.IBinder asBinder() -> asBinder
    com.google.android.gms.internal.f a(com.google.android.gms.internal.z) -> a
    com.google.android.gms.internal.f b(com.google.android.gms.internal.z) -> b
com.google.android.gms.internal.n -> com.google.android.gms.internal.n:
    void a(com.google.android.gms.internal.az,int,java.lang.String,java.lang.String,java.lang.String[],java.lang.String,android.os.Bundle) -> a
    void a(com.google.android.gms.internal.az,int,java.lang.String,android.os.Bundle) -> a
    void a(com.google.android.gms.internal.az,int,java.lang.String) -> a
    void a(com.google.android.gms.internal.az,int) -> a
com.google.android.gms.internal.n$a -> com.google.android.gms.internal.n$a:
    com.google.android.gms.internal.n d(android.os.IBinder) -> d
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.google.android.gms.internal.n$a$a -> com.google.android.gms.internal.n$a$a:
    android.os.IBinder b -> b
    android.os.IBinder asBinder() -> asBinder
    void a(com.google.android.gms.internal.az,int,java.lang.String,java.lang.String,java.lang.String[],java.lang.String,android.os.Bundle) -> a
    void a(com.google.android.gms.internal.az,int,java.lang.String,android.os.Bundle) -> a
    void a(com.google.android.gms.internal.az,int,java.lang.String) -> a
    void a(com.google.android.gms.internal.az,int) -> a
com.google.android.gms.internal.o -> com.google.android.gms.internal.o:
    android.content.Context D -> D
    com.google.android.gms.internal.ar E -> E
    com.google.android.gms.internal.ar a(android.content.Context) -> a
    void b(android.content.Context) -> b
    void c(android.content.Context) -> c
    boolean b() -> b
    void d(android.content.Context) -> d
    java.lang.Class c() -> c
    android.content.Context getRemoteContext(android.content.Context) -> getRemoteContext
    java.lang.Object a(java.lang.ClassLoader,java.lang.String) -> a
    java.lang.Object a(java.lang.Class) -> a
com.google.android.gms.internal.p -> com.google.android.gms.internal.p:
    void a(com.google.android.gms.internal.f) -> a
com.google.android.gms.internal.p$a -> com.google.android.gms.internal.p$a:
    com.google.android.gms.internal.p A(android.os.IBinder) -> A
    android.os.IBinder asBinder() -> asBinder
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.google.android.gms.internal.p$a$a -> com.google.android.gms.internal.p$a$a:
    android.os.IBinder b -> b
    android.os.IBinder asBinder() -> asBinder
    void a(com.google.android.gms.internal.f) -> a
com.google.android.gms.internal.q -> com.google.android.gms.internal.q:
    android.net.Uri K -> K
    android.net.Uri a(java.lang.String) -> a
com.google.android.gms.internal.r -> com.google.android.gms.internal.r:
    com.google.android.gms.internal.f a(com.google.android.gms.internal.f,int,int) -> a
com.google.android.gms.internal.r$a -> com.google.android.gms.internal.r$a:
    com.google.android.gms.internal.r e(android.os.IBinder) -> e
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.google.android.gms.internal.r$a$a -> com.google.android.gms.internal.r$a$a:
    android.os.IBinder b -> b
    android.os.IBinder asBinder() -> asBinder
    com.google.android.gms.internal.f a(com.google.android.gms.internal.f,int,int) -> a
com.google.android.gms.internal.s -> com.google.android.gms.internal.s:
    android.content.Context D -> D
    com.google.android.gms.internal.r M -> M
    com.google.android.gms.internal.r e(android.content.Context) -> e
    android.view.View a(android.content.Context,int,int) -> a
com.google.android.gms.internal.s$a -> com.google.android.gms.internal.s$a:
com.google.android.gms.internal.t -> com.google.android.gms.internal.t:
    void onMapClick(com.google.android.gms.maps.model.LatLng) -> onMapClick
com.google.android.gms.internal.t$a -> com.google.android.gms.internal.t$a:
    com.google.android.gms.internal.t x(android.os.IBinder) -> x
    android.os.IBinder asBinder() -> asBinder
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.google.android.gms.internal.t$a$a -> com.google.android.gms.internal.t$a$a:
    android.os.IBinder b -> b
    android.os.IBinder asBinder() -> asBinder
    void onMapClick(com.google.android.gms.maps.model.LatLng) -> onMapClick
com.google.android.gms.internal.u -> com.google.android.gms.internal.u:
    boolean e() -> e
    boolean f() -> f
    boolean g() -> g
    boolean a(int) -> a
com.google.android.gms.internal.v -> com.google.android.gms.internal.v:
    com.google.android.gms.internal.ax$a a(android.os.Parcel) -> a
    com.google.android.gms.internal.ax$a[] b(int) -> b
    void a(com.google.android.gms.internal.ax$a,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.internal.w -> com.google.android.gms.internal.w:
    android.net.Uri N -> N
    android.net.Uri O -> O
    android.content.Intent b(java.lang.String) -> b
    android.net.Uri c(java.lang.String) -> c
    android.content.Intent d(java.lang.String) -> d
    android.content.Intent e(java.lang.String) -> e
com.google.android.gms.internal.x -> com.google.android.gms.internal.x:
    android.os.Bundle a(java.lang.String,java.lang.String,android.os.Bundle) -> a
com.google.android.gms.internal.x$a -> com.google.android.gms.internal.x$a:
    com.google.android.gms.internal.x f(android.os.IBinder) -> f
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.google.android.gms.internal.x$a$a -> com.google.android.gms.internal.x$a$a:
    android.os.IBinder b -> b
    android.os.IBinder asBinder() -> asBinder
    android.os.Bundle a(java.lang.String,java.lang.String,android.os.Bundle) -> a
com.google.android.gms.internal.y -> com.google.android.gms.internal.y:
    void a(int,android.os.Bundle,android.os.Bundle) -> a
    void a(int,android.os.Bundle,android.os.ParcelFileDescriptor) -> a
    void h(java.lang.String) -> h
    void a(com.google.android.gms.common.data.DataHolder,java.lang.String) -> a
    void a(int,android.os.Bundle,com.google.android.gms.internal.bt) -> a
    void a(com.google.android.gms.common.data.DataHolder,java.lang.String,java.lang.String) -> a
    void a(int,android.os.Bundle) -> a
    void b(com.google.android.gms.common.data.DataHolder,java.lang.String) -> b
    void b(int,android.os.Bundle,android.os.Bundle) -> b
com.google.android.gms.internal.y$a -> com.google.android.gms.internal.y$a:
    com.google.android.gms.internal.y g(android.os.IBinder) -> g
    android.os.IBinder asBinder() -> asBinder
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.google.android.gms.internal.y$a$a -> com.google.android.gms.internal.y$a$a:
    android.os.IBinder b -> b
    android.os.IBinder asBinder() -> asBinder
    void a(int,android.os.Bundle,android.os.Bundle) -> a
    void a(int,android.os.Bundle,android.os.ParcelFileDescriptor) -> a
    void h(java.lang.String) -> h
    void a(com.google.android.gms.common.data.DataHolder,java.lang.String) -> a
    void a(int,android.os.Bundle,com.google.android.gms.internal.bt) -> a
    void a(com.google.android.gms.common.data.DataHolder,java.lang.String,java.lang.String) -> a
    void a(int,android.os.Bundle) -> a
    void b(com.google.android.gms.common.data.DataHolder,java.lang.String) -> b
    void b(int,android.os.Bundle,android.os.Bundle) -> b
com.google.android.gms.internal.z -> com.google.android.gms.internal.z:
    void remove() -> remove
    java.lang.String getId() -> getId
    void setPosition(com.google.android.gms.maps.model.LatLng) -> setPosition
    com.google.android.gms.maps.model.LatLng getPosition() -> getPosition
    void setTitle(java.lang.String) -> setTitle
    java.lang.String getTitle() -> getTitle
    void setSnippet(java.lang.String) -> setSnippet
    java.lang.String getSnippet() -> getSnippet
    void setDraggable(boolean) -> setDraggable
    boolean isDraggable() -> isDraggable
    void showInfoWindow() -> showInfoWindow
    void hideInfoWindow() -> hideInfoWindow
    boolean isInfoWindowShown() -> isInfoWindowShown
    void setVisible(boolean) -> setVisible
    boolean isVisible() -> isVisible
    boolean g(com.google.android.gms.internal.z) -> g
    int hashCodeRemote() -> hashCodeRemote
com.google.android.gms.internal.z$a -> com.google.android.gms.internal.z$a:
    com.google.android.gms.internal.z t(android.os.IBinder) -> t
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.google.android.gms.internal.z$a$a -> com.google.android.gms.internal.z$a$a:
    android.os.IBinder b -> b
    android.os.IBinder asBinder() -> asBinder
    void remove() -> remove
    java.lang.String getId() -> getId
    void setPosition(com.google.android.gms.maps.model.LatLng) -> setPosition
    com.google.android.gms.maps.model.LatLng getPosition() -> getPosition
    void setTitle(java.lang.String) -> setTitle
    java.lang.String getTitle() -> getTitle
    void setSnippet(java.lang.String) -> setSnippet
    java.lang.String getSnippet() -> getSnippet
    void setDraggable(boolean) -> setDraggable
    boolean isDraggable() -> isDraggable
    void showInfoWindow() -> showInfoWindow
    void hideInfoWindow() -> hideInfoWindow
    boolean isInfoWindowShown() -> isInfoWindowShown
    void setVisible(boolean) -> setVisible
    boolean isVisible() -> isVisible
    boolean g(com.google.android.gms.internal.z) -> g
    int hashCodeRemote() -> hashCodeRemote
com.google.android.gms.maps.CameraUpdate -> com.google.android.gms.maps.CameraUpdate:
    com.google.android.gms.internal.f cT -> cT
    com.google.android.gms.internal.f au() -> au
com.google.android.gms.maps.CameraUpdateFactory -> com.google.android.gms.maps.CameraUpdateFactory:
    com.google.android.gms.maps.internal.ICameraUpdateFactoryDelegate cY -> cY
    com.google.android.gms.maps.internal.ICameraUpdateFactoryDelegate ay() -> ay
    void a(com.google.android.gms.maps.internal.ICameraUpdateFactoryDelegate) -> a
    com.google.android.gms.maps.CameraUpdate zoomIn() -> zoomIn
    com.google.android.gms.maps.CameraUpdate zoomOut() -> zoomOut
    com.google.android.gms.maps.CameraUpdate scrollBy(float,float) -> scrollBy
    com.google.android.gms.maps.CameraUpdate zoomTo(float) -> zoomTo
    com.google.android.gms.maps.CameraUpdate zoomBy(float) -> zoomBy
    com.google.android.gms.maps.CameraUpdate zoomBy(float,android.graphics.Point) -> zoomBy
    com.google.android.gms.maps.CameraUpdate newCameraPosition(com.google.android.gms.maps.model.CameraPosition) -> newCameraPosition
    com.google.android.gms.maps.CameraUpdate newLatLng(com.google.android.gms.maps.model.LatLng) -> newLatLng
    com.google.android.gms.maps.CameraUpdate newLatLngZoom(com.google.android.gms.maps.model.LatLng,float) -> newLatLngZoom
    com.google.android.gms.maps.CameraUpdate newLatLngBounds(com.google.android.gms.maps.model.LatLngBounds,int) -> newLatLngBounds
    com.google.android.gms.maps.CameraUpdate newLatLngBounds(com.google.android.gms.maps.model.LatLngBounds,int,int,int) -> newLatLngBounds
com.google.android.gms.maps.GoogleMap -> com.google.android.gms.maps.GoogleMap:
    int MAP_TYPE_NONE -> MAP_TYPE_NONE
    int MAP_TYPE_NORMAL -> MAP_TYPE_NORMAL
    int MAP_TYPE_SATELLITE -> MAP_TYPE_SATELLITE
    int MAP_TYPE_TERRAIN -> MAP_TYPE_TERRAIN
    int MAP_TYPE_HYBRID -> MAP_TYPE_HYBRID
    com.google.android.gms.maps.internal.IGoogleMapDelegate fQ -> fQ
    com.google.android.gms.maps.UiSettings fR -> fR
    com.google.android.gms.maps.internal.IGoogleMapDelegate bB() -> bB
    com.google.android.gms.maps.model.CameraPosition getCameraPosition() -> getCameraPosition
    float getMaxZoomLevel() -> getMaxZoomLevel
    float getMinZoomLevel() -> getMinZoomLevel
    void moveCamera(com.google.android.gms.maps.CameraUpdate) -> moveCamera
    void animateCamera(com.google.android.gms.maps.CameraUpdate) -> animateCamera
    void animateCamera(com.google.android.gms.maps.CameraUpdate,com.google.android.gms.maps.GoogleMap$CancelableCallback) -> animateCamera
    void animateCamera(com.google.android.gms.maps.CameraUpdate,int,com.google.android.gms.maps.GoogleMap$CancelableCallback) -> animateCamera
    void stopAnimation() -> stopAnimation
    com.google.android.gms.maps.model.Polyline addPolyline(com.google.android.gms.maps.model.PolylineOptions) -> addPolyline
    com.google.android.gms.maps.model.Polygon addPolygon(com.google.android.gms.maps.model.PolygonOptions) -> addPolygon
    com.google.android.gms.maps.model.Circle addCircle(com.google.android.gms.maps.model.CircleOptions) -> addCircle
    com.google.android.gms.maps.model.Marker addMarker(com.google.android.gms.maps.model.MarkerOptions) -> addMarker
    com.google.android.gms.maps.model.GroundOverlay addGroundOverlay(com.google.android.gms.maps.model.GroundOverlayOptions) -> addGroundOverlay
    com.google.android.gms.maps.model.TileOverlay addTileOverlay(com.google.android.gms.maps.model.TileOverlayOptions) -> addTileOverlay
    void clear() -> clear
    int getMapType() -> getMapType
    void setMapType(int) -> setMapType
    boolean isTrafficEnabled() -> isTrafficEnabled
    void setTrafficEnabled(boolean) -> setTrafficEnabled
    boolean isIndoorEnabled() -> isIndoorEnabled
    boolean setIndoorEnabled(boolean) -> setIndoorEnabled
    boolean isMyLocationEnabled() -> isMyLocationEnabled
    void setMyLocationEnabled(boolean) -> setMyLocationEnabled
    android.location.Location getMyLocation() -> getMyLocation
    void setLocationSource(com.google.android.gms.maps.LocationSource) -> setLocationSource
    com.google.android.gms.maps.UiSettings getUiSettings() -> getUiSettings
    com.google.android.gms.maps.Projection getProjection() -> getProjection
    void setOnCameraChangeListener(com.google.android.gms.maps.GoogleMap$OnCameraChangeListener) -> setOnCameraChangeListener
    void setOnMapClickListener(com.google.android.gms.maps.GoogleMap$OnMapClickListener) -> setOnMapClickListener
    void setOnMapLongClickListener(com.google.android.gms.maps.GoogleMap$OnMapLongClickListener) -> setOnMapLongClickListener
    void setOnMarkerClickListener(com.google.android.gms.maps.GoogleMap$OnMarkerClickListener) -> setOnMarkerClickListener
    void setOnMarkerDragListener(com.google.android.gms.maps.GoogleMap$OnMarkerDragListener) -> setOnMarkerDragListener
    void setOnInfoWindowClickListener(com.google.android.gms.maps.GoogleMap$OnInfoWindowClickListener) -> setOnInfoWindowClickListener
    void setInfoWindowAdapter(com.google.android.gms.maps.GoogleMap$InfoWindowAdapter) -> setInfoWindowAdapter
    void setOnMyLocationChangeListener(com.google.android.gms.maps.GoogleMap$OnMyLocationChangeListener) -> setOnMyLocationChangeListener
com.google.android.gms.maps.GoogleMap$1 -> com.google.android.gms.maps.GoogleMap$1:
    com.google.android.gms.maps.GoogleMap$OnCameraChangeListener P -> P
    com.google.android.gms.maps.GoogleMap Q -> Q
    void onCameraChange(com.google.android.gms.maps.model.CameraPosition) -> onCameraChange
com.google.android.gms.maps.GoogleMap$2 -> com.google.android.gms.maps.GoogleMap$2:
    com.google.android.gms.maps.LocationSource R -> R
    com.google.android.gms.maps.GoogleMap Q -> Q
    void activate(com.google.android.gms.internal.cd) -> activate
    void deactivate() -> deactivate
com.google.android.gms.maps.GoogleMap$2$1 -> com.google.android.gms.maps.GoogleMap$2$1:
    com.google.android.gms.internal.cd cj -> cj
    com.google.android.gms.maps.GoogleMap$2 ck -> ck
    void onLocationChanged(android.location.Location) -> onLocationChanged
com.google.android.gms.maps.GoogleMap$3 -> com.google.android.gms.maps.GoogleMap$3:
    com.google.android.gms.maps.GoogleMap$OnMarkerDragListener T -> T
    com.google.android.gms.maps.GoogleMap Q -> Q
    void c(com.google.android.gms.internal.z) -> c
    void d(com.google.android.gms.internal.z) -> d
    void e(com.google.android.gms.internal.z) -> e
com.google.android.gms.maps.GoogleMap$4 -> com.google.android.gms.maps.GoogleMap$4:
    com.google.android.gms.maps.GoogleMap$OnMarkerClickListener U -> U
    com.google.android.gms.maps.GoogleMap Q -> Q
    boolean f(com.google.android.gms.internal.z) -> f
com.google.android.gms.maps.GoogleMap$5 -> com.google.android.gms.maps.GoogleMap$5:
    com.google.android.gms.maps.GoogleMap$OnMapLongClickListener V -> V
    com.google.android.gms.maps.GoogleMap Q -> Q
    void onMapLongClick(com.google.android.gms.maps.model.LatLng) -> onMapLongClick
com.google.android.gms.maps.GoogleMap$6 -> com.google.android.gms.maps.GoogleMap$6:
    com.google.android.gms.maps.GoogleMap$OnMapClickListener X -> X
    com.google.android.gms.maps.GoogleMap Q -> Q
    void onMapClick(com.google.android.gms.maps.model.LatLng) -> onMapClick
com.google.android.gms.maps.GoogleMap$7 -> com.google.android.gms.maps.GoogleMap$7:
    com.google.android.gms.maps.GoogleMap$OnMyLocationChangeListener Y -> Y
    com.google.android.gms.maps.GoogleMap Q -> Q
    void a(com.google.android.gms.internal.f) -> a
com.google.android.gms.maps.GoogleMap$8 -> com.google.android.gms.maps.GoogleMap$8:
    com.google.android.gms.maps.GoogleMap$InfoWindowAdapter af -> af
    com.google.android.gms.maps.GoogleMap Q -> Q
    com.google.android.gms.internal.f a(com.google.android.gms.internal.z) -> a
    com.google.android.gms.internal.f b(com.google.android.gms.internal.z) -> b
com.google.android.gms.maps.GoogleMap$9 -> com.google.android.gms.maps.GoogleMap$9:
    com.google.android.gms.maps.GoogleMap$OnInfoWindowClickListener ag -> ag
    com.google.android.gms.maps.GoogleMap Q -> Q
    void h(com.google.android.gms.internal.z) -> h
com.google.android.gms.maps.GoogleMap$CancelableCallback -> com.google.android.gms.maps.GoogleMap$CancelableCallback:
    void onFinish() -> onFinish
    void onCancel() -> onCancel
com.google.android.gms.maps.GoogleMap$InfoWindowAdapter -> com.google.android.gms.maps.GoogleMap$InfoWindowAdapter:
    android.view.View getInfoWindow(com.google.android.gms.maps.model.Marker) -> getInfoWindow
    android.view.View getInfoContents(com.google.android.gms.maps.model.Marker) -> getInfoContents
com.google.android.gms.maps.GoogleMap$OnCameraChangeListener -> com.google.android.gms.maps.GoogleMap$OnCameraChangeListener:
    void onCameraChange(com.google.android.gms.maps.model.CameraPosition) -> onCameraChange
com.google.android.gms.maps.GoogleMap$OnInfoWindowClickListener -> com.google.android.gms.maps.GoogleMap$OnInfoWindowClickListener:
    void onInfoWindowClick(com.google.android.gms.maps.model.Marker) -> onInfoWindowClick
com.google.android.gms.maps.GoogleMap$OnMapClickListener -> com.google.android.gms.maps.GoogleMap$OnMapClickListener:
    void onMapClick(com.google.android.gms.maps.model.LatLng) -> onMapClick
com.google.android.gms.maps.GoogleMap$OnMapLongClickListener -> com.google.android.gms.maps.GoogleMap$OnMapLongClickListener:
    void onMapLongClick(com.google.android.gms.maps.model.LatLng) -> onMapLongClick
com.google.android.gms.maps.GoogleMap$OnMarkerClickListener -> com.google.android.gms.maps.GoogleMap$OnMarkerClickListener:
    boolean onMarkerClick(com.google.android.gms.maps.model.Marker) -> onMarkerClick
com.google.android.gms.maps.GoogleMap$OnMarkerDragListener -> com.google.android.gms.maps.GoogleMap$OnMarkerDragListener:
    void onMarkerDragStart(com.google.android.gms.maps.model.Marker) -> onMarkerDragStart
    void onMarkerDrag(com.google.android.gms.maps.model.Marker) -> onMarkerDrag
    void onMarkerDragEnd(com.google.android.gms.maps.model.Marker) -> onMarkerDragEnd
com.google.android.gms.maps.GoogleMap$OnMyLocationChangeListener -> com.google.android.gms.maps.GoogleMap$OnMyLocationChangeListener:
    void onMyLocationChange(android.location.Location) -> onMyLocationChange
com.google.android.gms.maps.GoogleMap$a -> com.google.android.gms.maps.GoogleMap$a:
    com.google.android.gms.maps.GoogleMap$CancelableCallback fi -> fi
    void onFinish() -> onFinish
    void onCancel() -> onCancel
com.google.android.gms.maps.GoogleMapOptions -> com.google.android.gms.maps.GoogleMapOptions:
    com.google.android.gms.maps.GoogleMapOptionsCreator CREATOR -> CREATOR
    int aj -> aj
    java.lang.Boolean co -> co
    java.lang.Boolean cp -> cp
    int cq -> cq
    com.google.android.gms.maps.model.CameraPosition cr -> cr
    java.lang.Boolean cs -> cs
    java.lang.Boolean ct -> ct
    java.lang.Boolean cu -> cu
    java.lang.Boolean cv -> cv
    java.lang.Boolean cw -> cw
    java.lang.Boolean cx -> cx
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    int j() -> j
    byte ae() -> ae
    byte af() -> af
    byte ag() -> ag
    byte ah() -> ah
    byte ai() -> ai
    byte aj() -> aj
    byte ak() -> ak
    byte al() -> al
    com.google.android.gms.maps.GoogleMapOptions zOrderOnTop(boolean) -> zOrderOnTop
    com.google.android.gms.maps.GoogleMapOptions useViewLifecycleInFragment(boolean) -> useViewLifecycleInFragment
    com.google.android.gms.maps.GoogleMapOptions mapType(int) -> mapType
    com.google.android.gms.maps.GoogleMapOptions camera(com.google.android.gms.maps.model.CameraPosition) -> camera
    com.google.android.gms.maps.GoogleMapOptions zoomControlsEnabled(boolean) -> zoomControlsEnabled
    com.google.android.gms.maps.GoogleMapOptions compassEnabled(boolean) -> compassEnabled
    com.google.android.gms.maps.GoogleMapOptions scrollGesturesEnabled(boolean) -> scrollGesturesEnabled
    com.google.android.gms.maps.GoogleMapOptions zoomGesturesEnabled(boolean) -> zoomGesturesEnabled
    com.google.android.gms.maps.GoogleMapOptions tiltGesturesEnabled(boolean) -> tiltGesturesEnabled
    com.google.android.gms.maps.GoogleMapOptions rotateGesturesEnabled(boolean) -> rotateGesturesEnabled
    java.lang.Boolean getZOrderOnTop() -> getZOrderOnTop
    java.lang.Boolean getUseViewLifecycleInFragment() -> getUseViewLifecycleInFragment
    int getMapType() -> getMapType
    com.google.android.gms.maps.model.CameraPosition getCamera() -> getCamera
    java.lang.Boolean getZoomControlsEnabled() -> getZoomControlsEnabled
    java.lang.Boolean getCompassEnabled() -> getCompassEnabled
    java.lang.Boolean getScrollGesturesEnabled() -> getScrollGesturesEnabled
    java.lang.Boolean getZoomGesturesEnabled() -> getZoomGesturesEnabled
    java.lang.Boolean getTiltGesturesEnabled() -> getTiltGesturesEnabled
    java.lang.Boolean getRotateGesturesEnabled() -> getRotateGesturesEnabled
    com.google.android.gms.maps.GoogleMapOptions createFromAttributes(android.content.Context,android.util.AttributeSet) -> createFromAttributes
com.google.android.gms.maps.GoogleMapOptionsCreator -> com.google.android.gms.maps.GoogleMapOptionsCreator:
    int CONTENT_DESCRIPTION -> CONTENT_DESCRIPTION
    com.google.android.gms.maps.GoogleMapOptions createFromParcel(android.os.Parcel) -> createFromParcel
    com.google.android.gms.maps.GoogleMapOptions[] newArray(int) -> newArray
    void a(com.google.android.gms.maps.GoogleMapOptions,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.maps.LocationSource -> com.google.android.gms.maps.LocationSource:
    void activate(com.google.android.gms.maps.LocationSource$OnLocationChangedListener) -> activate
    void deactivate() -> deactivate
com.google.android.gms.maps.LocationSource$OnLocationChangedListener -> com.google.android.gms.maps.LocationSource$OnLocationChangedListener:
    void onLocationChanged(android.location.Location) -> onLocationChanged
com.google.android.gms.maps.MapFragment -> com.google.android.gms.maps.MapFragment:
    com.google.android.gms.maps.MapFragment$a ga -> ga
    com.google.android.gms.maps.GoogleMap bw -> bw
    com.google.android.gms.maps.MapFragment newInstance() -> newInstance
    com.google.android.gms.maps.MapFragment newInstance(com.google.android.gms.maps.GoogleMapOptions) -> newInstance
    com.google.android.gms.maps.internal.IMapFragmentDelegate m() -> m
    com.google.android.gms.maps.GoogleMap getMap() -> getMap
    void onAttach(android.app.Activity) -> onAttach
    void onInflate(android.app.Activity,android.util.AttributeSet,android.os.Bundle) -> onInflate
    void onCreate(android.os.Bundle) -> onCreate
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onResume() -> onResume
    void onPause() -> onPause
    void onDestroyView() -> onDestroyView
    void onDestroy() -> onDestroy
    void onLowMemory() -> onLowMemory
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void setArguments(android.os.Bundle) -> setArguments
com.google.android.gms.maps.MapFragment$a -> com.google.android.gms.maps.MapFragment$a:
    android.app.Fragment f -> f
    com.google.android.gms.internal.aw g -> g
    android.app.Activity h -> h
    void a(com.google.android.gms.internal.aw) -> a
    void a() -> a
    void setActivity(android.app.Activity) -> setActivity
    void a(com.google.android.gms.maps.MapFragment$a,android.app.Activity) -> a
com.google.android.gms.maps.MapFragment$b -> com.google.android.gms.maps.MapFragment$b:
    android.app.Fragment f -> f
    com.google.android.gms.maps.internal.IMapFragmentDelegate aD -> aD
    void onInflate(android.app.Activity,android.os.Bundle,android.os.Bundle) -> onInflate
    void onCreate(android.os.Bundle) -> onCreate
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onResume() -> onResume
    void onPause() -> onPause
    void onDestroyView() -> onDestroyView
    void onDestroy() -> onDestroy
    void onLowMemory() -> onLowMemory
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    com.google.android.gms.maps.internal.IMapFragmentDelegate m() -> m
com.google.android.gms.maps.MapView -> com.google.android.gms.maps.MapView:
    com.google.android.gms.maps.MapView$a cJ -> cJ
    com.google.android.gms.maps.GoogleMap bw -> bw
    com.google.android.gms.maps.GoogleMap getMap() -> getMap
    void onCreate(android.os.Bundle) -> onCreate
    void onResume() -> onResume
    void onPause() -> onPause
    void onDestroy() -> onDestroy
    void onLowMemory() -> onLowMemory
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
com.google.android.gms.maps.MapView$a -> com.google.android.gms.maps.MapView$a:
    android.view.ViewGroup fN -> fN
    android.content.Context mContext -> mContext
    com.google.android.gms.internal.aw g -> g
    com.google.android.gms.maps.GoogleMapOptions fO -> fO
    void a(com.google.android.gms.internal.aw) -> a
    void a() -> a
com.google.android.gms.maps.MapView$b -> com.google.android.gms.maps.MapView$b:
    android.view.ViewGroup gb -> gb
    com.google.android.gms.maps.internal.IMapViewDelegate gc -> gc
    android.view.View gd -> gd
    void onInflate(android.app.Activity,android.os.Bundle,android.os.Bundle) -> onInflate
    void onCreate(android.os.Bundle) -> onCreate
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onResume() -> onResume
    void onPause() -> onPause
    void onDestroyView() -> onDestroyView
    void onDestroy() -> onDestroy
    void onLowMemory() -> onLowMemory
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    com.google.android.gms.maps.internal.IMapViewDelegate bH() -> bH
com.google.android.gms.maps.MapsInitializer -> com.google.android.gms.maps.MapsInitializer:
    void initialize(android.content.Context) -> initialize
com.google.android.gms.maps.Projection -> com.google.android.gms.maps.Projection:
    com.google.android.gms.maps.internal.IProjectionDelegate L -> L
    com.google.android.gms.maps.model.LatLng fromScreenLocation(android.graphics.Point) -> fromScreenLocation
    android.graphics.Point toScreenLocation(com.google.android.gms.maps.model.LatLng) -> toScreenLocation
    com.google.android.gms.maps.model.VisibleRegion getVisibleRegion() -> getVisibleRegion
com.google.android.gms.maps.SupportMapFragment -> com.google.android.gms.maps.SupportMapFragment:
    com.google.android.gms.maps.SupportMapFragment$b bv -> bv
    com.google.android.gms.maps.GoogleMap bw -> bw
    com.google.android.gms.maps.SupportMapFragment newInstance() -> newInstance
    com.google.android.gms.maps.SupportMapFragment newInstance(com.google.android.gms.maps.GoogleMapOptions) -> newInstance
    com.google.android.gms.maps.internal.IMapFragmentDelegate m() -> m
    com.google.android.gms.maps.GoogleMap getMap() -> getMap
    void onAttach(android.app.Activity) -> onAttach
    void onInflate(android.app.Activity,android.util.AttributeSet,android.os.Bundle) -> onInflate
    void onCreate(android.os.Bundle) -> onCreate
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onResume() -> onResume
    void onPause() -> onPause
    void onDestroyView() -> onDestroyView
    void onDestroy() -> onDestroy
    void onLowMemory() -> onLowMemory
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void setArguments(android.os.Bundle) -> setArguments
com.google.android.gms.maps.SupportMapFragment$a -> com.google.android.gms.maps.SupportMapFragment$a:
    android.support.v4.app.Fragment aC -> aC
    com.google.android.gms.maps.internal.IMapFragmentDelegate aD -> aD
    void onInflate(android.app.Activity,android.os.Bundle,android.os.Bundle) -> onInflate
    void onCreate(android.os.Bundle) -> onCreate
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onResume() -> onResume
    void onPause() -> onPause
    void onDestroyView() -> onDestroyView
    void onDestroy() -> onDestroy
    void onLowMemory() -> onLowMemory
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    com.google.android.gms.maps.internal.IMapFragmentDelegate m() -> m
com.google.android.gms.maps.SupportMapFragment$b -> com.google.android.gms.maps.SupportMapFragment$b:
    android.support.v4.app.Fragment aC -> aC
    com.google.android.gms.internal.aw g -> g
    android.app.Activity h -> h
    void a(com.google.android.gms.internal.aw) -> a
    void a() -> a
    void setActivity(android.app.Activity) -> setActivity
    void a(com.google.android.gms.maps.SupportMapFragment$b,android.app.Activity) -> a
com.google.android.gms.maps.UiSettings -> com.google.android.gms.maps.UiSettings:
    com.google.android.gms.maps.internal.IUiSettingsDelegate bx -> bx
    void setZoomControlsEnabled(boolean) -> setZoomControlsEnabled
    void setCompassEnabled(boolean) -> setCompassEnabled
    void setMyLocationButtonEnabled(boolean) -> setMyLocationButtonEnabled
    void setScrollGesturesEnabled(boolean) -> setScrollGesturesEnabled
    void setZoomGesturesEnabled(boolean) -> setZoomGesturesEnabled
    void setTiltGesturesEnabled(boolean) -> setTiltGesturesEnabled
    void setRotateGesturesEnabled(boolean) -> setRotateGesturesEnabled
    void setAllGesturesEnabled(boolean) -> setAllGesturesEnabled
    boolean isZoomControlsEnabled() -> isZoomControlsEnabled
    boolean isCompassEnabled() -> isCompassEnabled
    boolean isMyLocationButtonEnabled() -> isMyLocationButtonEnabled
    boolean isScrollGesturesEnabled() -> isScrollGesturesEnabled
    boolean isZoomGesturesEnabled() -> isZoomGesturesEnabled
    boolean isTiltGesturesEnabled() -> isTiltGesturesEnabled
    boolean isRotateGesturesEnabled() -> isRotateGesturesEnabled
com.google.android.gms.maps.internal.ICameraUpdateFactoryDelegate -> com.google.android.gms.maps.internal.ICameraUpdateFactoryDelegate:
    com.google.android.gms.internal.f zoomIn() -> zoomIn
    com.google.android.gms.internal.f zoomOut() -> zoomOut
    com.google.android.gms.internal.f scrollBy(float,float) -> scrollBy
    com.google.android.gms.internal.f zoomTo(float) -> zoomTo
    com.google.android.gms.internal.f zoomBy(float) -> zoomBy
    com.google.android.gms.internal.f zoomByWithFocus(float,int,int) -> zoomByWithFocus
    com.google.android.gms.internal.f newCameraPosition(com.google.android.gms.maps.model.CameraPosition) -> newCameraPosition
    com.google.android.gms.internal.f newLatLng(com.google.android.gms.maps.model.LatLng) -> newLatLng
    com.google.android.gms.internal.f newLatLngZoom(com.google.android.gms.maps.model.LatLng,float) -> newLatLngZoom
    com.google.android.gms.internal.f newLatLngBounds(com.google.android.gms.maps.model.LatLngBounds,int) -> newLatLngBounds
    com.google.android.gms.internal.f newLatLngBoundsWithSize(com.google.android.gms.maps.model.LatLngBounds,int,int,int) -> newLatLngBoundsWithSize
com.google.android.gms.maps.internal.ICameraUpdateFactoryDelegate$a -> com.google.android.gms.maps.internal.ICameraUpdateFactoryDelegate$a:
    com.google.android.gms.maps.internal.ICameraUpdateFactoryDelegate m(android.os.IBinder) -> m
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.google.android.gms.maps.internal.ICameraUpdateFactoryDelegate$a$a -> com.google.android.gms.maps.internal.ICameraUpdateFactoryDelegate$a$a:
    android.os.IBinder b -> b
    android.os.IBinder asBinder() -> asBinder
    com.google.android.gms.internal.f zoomIn() -> zoomIn
    com.google.android.gms.internal.f zoomOut() -> zoomOut
    com.google.android.gms.internal.f scrollBy(float,float) -> scrollBy
    com.google.android.gms.internal.f zoomTo(float) -> zoomTo
    com.google.android.gms.internal.f zoomBy(float) -> zoomBy
    com.google.android.gms.internal.f zoomByWithFocus(float,int,int) -> zoomByWithFocus
    com.google.android.gms.internal.f newCameraPosition(com.google.android.gms.maps.model.CameraPosition) -> newCameraPosition
    com.google.android.gms.internal.f newLatLng(com.google.android.gms.maps.model.LatLng) -> newLatLng
    com.google.android.gms.internal.f newLatLngZoom(com.google.android.gms.maps.model.LatLng,float) -> newLatLngZoom
    com.google.android.gms.internal.f newLatLngBounds(com.google.android.gms.maps.model.LatLngBounds,int) -> newLatLngBounds
    com.google.android.gms.internal.f newLatLngBoundsWithSize(com.google.android.gms.maps.model.LatLngBounds,int,int,int) -> newLatLngBoundsWithSize
com.google.android.gms.maps.internal.IGoogleMapDelegate -> com.google.android.gms.maps.internal.IGoogleMapDelegate:
    com.google.android.gms.maps.model.CameraPosition getCameraPosition() -> getCameraPosition
    float getMaxZoomLevel() -> getMaxZoomLevel
    float getMinZoomLevel() -> getMinZoomLevel
    void moveCamera(com.google.android.gms.internal.f) -> moveCamera
    void animateCamera(com.google.android.gms.internal.f) -> animateCamera
    void animateCameraWithCallback(com.google.android.gms.internal.f,com.google.android.gms.internal.bk) -> animateCameraWithCallback
    void animateCameraWithDurationAndCallback(com.google.android.gms.internal.f,int,com.google.android.gms.internal.bk) -> animateCameraWithDurationAndCallback
    void stopAnimation() -> stopAnimation
    com.google.android.gms.maps.model.internal.IPolylineDelegate addPolyline(com.google.android.gms.maps.model.PolylineOptions) -> addPolyline
    com.google.android.gms.internal.b addPolygon(com.google.android.gms.maps.model.PolygonOptions) -> addPolygon
    com.google.android.gms.internal.z addMarker(com.google.android.gms.maps.model.MarkerOptions) -> addMarker
    com.google.android.gms.internal.au addGroundOverlay(com.google.android.gms.maps.model.GroundOverlayOptions) -> addGroundOverlay
    com.google.android.gms.internal.bm addTileOverlay(com.google.android.gms.maps.model.TileOverlayOptions) -> addTileOverlay
    void clear() -> clear
    int getMapType() -> getMapType
    void setMapType(int) -> setMapType
    boolean isTrafficEnabled() -> isTrafficEnabled
    void setTrafficEnabled(boolean) -> setTrafficEnabled
    boolean isIndoorEnabled() -> isIndoorEnabled
    boolean setIndoorEnabled(boolean) -> setIndoorEnabled
    boolean isMyLocationEnabled() -> isMyLocationEnabled
    void setMyLocationEnabled(boolean) -> setMyLocationEnabled
    android.location.Location getMyLocation() -> getMyLocation
    void setLocationSource(com.google.android.gms.maps.internal.ILocationSourceDelegate) -> setLocationSource
    com.google.android.gms.maps.internal.IUiSettingsDelegate getUiSettings() -> getUiSettings
    com.google.android.gms.maps.internal.IProjectionDelegate getProjection() -> getProjection
    void setOnCameraChangeListener(com.google.android.gms.internal.a) -> setOnCameraChangeListener
    void setOnMapClickListener(com.google.android.gms.internal.t) -> setOnMapClickListener
    void setOnMapLongClickListener(com.google.android.gms.internal.k) -> setOnMapLongClickListener
    void setOnMarkerClickListener(com.google.android.gms.internal.bp) -> setOnMarkerClickListener
    void setOnMarkerDragListener(com.google.android.gms.internal.al) -> setOnMarkerDragListener
    void setOnInfoWindowClickListener(com.google.android.gms.internal.ab) -> setOnInfoWindowClickListener
    void setInfoWindowAdapter(com.google.android.gms.internal.m) -> setInfoWindowAdapter
    com.google.android.gms.internal.f getTestingHelper() -> getTestingHelper
    com.google.android.gms.internal.ae addCircle(com.google.android.gms.maps.model.CircleOptions) -> addCircle
    void setOnMyLocationChangeListener(com.google.android.gms.internal.p) -> setOnMyLocationChangeListener
com.google.android.gms.maps.internal.IGoogleMapDelegate$a -> com.google.android.gms.maps.internal.IGoogleMapDelegate$a:
    com.google.android.gms.maps.internal.IGoogleMapDelegate u(android.os.IBinder) -> u
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.google.android.gms.maps.internal.IGoogleMapDelegate$a$a -> com.google.android.gms.maps.internal.IGoogleMapDelegate$a$a:
    android.os.IBinder b -> b
    android.os.IBinder asBinder() -> asBinder
    com.google.android.gms.maps.model.CameraPosition getCameraPosition() -> getCameraPosition
    float getMaxZoomLevel() -> getMaxZoomLevel
    float getMinZoomLevel() -> getMinZoomLevel
    void moveCamera(com.google.android.gms.internal.f) -> moveCamera
    void animateCamera(com.google.android.gms.internal.f) -> animateCamera
    void animateCameraWithCallback(com.google.android.gms.internal.f,com.google.android.gms.internal.bk) -> animateCameraWithCallback
    void animateCameraWithDurationAndCallback(com.google.android.gms.internal.f,int,com.google.android.gms.internal.bk) -> animateCameraWithDurationAndCallback
    void stopAnimation() -> stopAnimation
    com.google.android.gms.maps.model.internal.IPolylineDelegate addPolyline(com.google.android.gms.maps.model.PolylineOptions) -> addPolyline
    com.google.android.gms.internal.b addPolygon(com.google.android.gms.maps.model.PolygonOptions) -> addPolygon
    com.google.android.gms.internal.z addMarker(com.google.android.gms.maps.model.MarkerOptions) -> addMarker
    com.google.android.gms.internal.au addGroundOverlay(com.google.android.gms.maps.model.GroundOverlayOptions) -> addGroundOverlay
    com.google.android.gms.internal.bm addTileOverlay(com.google.android.gms.maps.model.TileOverlayOptions) -> addTileOverlay
    void clear() -> clear
    int getMapType() -> getMapType
    void setMapType(int) -> setMapType
    boolean isTrafficEnabled() -> isTrafficEnabled
    void setTrafficEnabled(boolean) -> setTrafficEnabled
    boolean isIndoorEnabled() -> isIndoorEnabled
    boolean setIndoorEnabled(boolean) -> setIndoorEnabled
    boolean isMyLocationEnabled() -> isMyLocationEnabled
    void setMyLocationEnabled(boolean) -> setMyLocationEnabled
    android.location.Location getMyLocation() -> getMyLocation
    void setLocationSource(com.google.android.gms.maps.internal.ILocationSourceDelegate) -> setLocationSource
    com.google.android.gms.maps.internal.IUiSettingsDelegate getUiSettings() -> getUiSettings
    com.google.android.gms.maps.internal.IProjectionDelegate getProjection() -> getProjection
    void setOnCameraChangeListener(com.google.android.gms.internal.a) -> setOnCameraChangeListener
    void setOnMapClickListener(com.google.android.gms.internal.t) -> setOnMapClickListener
    void setOnMapLongClickListener(com.google.android.gms.internal.k) -> setOnMapLongClickListener
    void setOnMarkerClickListener(com.google.android.gms.internal.bp) -> setOnMarkerClickListener
    void setOnMarkerDragListener(com.google.android.gms.internal.al) -> setOnMarkerDragListener
    void setOnInfoWindowClickListener(com.google.android.gms.internal.ab) -> setOnInfoWindowClickListener
    void setInfoWindowAdapter(com.google.android.gms.internal.m) -> setInfoWindowAdapter
    com.google.android.gms.internal.f getTestingHelper() -> getTestingHelper
    com.google.android.gms.internal.ae addCircle(com.google.android.gms.maps.model.CircleOptions) -> addCircle
    void setOnMyLocationChangeListener(com.google.android.gms.internal.p) -> setOnMyLocationChangeListener
com.google.android.gms.maps.internal.ILocationSourceDelegate -> com.google.android.gms.maps.internal.ILocationSourceDelegate:
    void activate(com.google.android.gms.internal.cd) -> activate
    void deactivate() -> deactivate
com.google.android.gms.maps.internal.ILocationSourceDelegate$a -> com.google.android.gms.maps.internal.ILocationSourceDelegate$a:
    com.google.android.gms.maps.internal.ILocationSourceDelegate v(android.os.IBinder) -> v
    android.os.IBinder asBinder() -> asBinder
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.google.android.gms.maps.internal.ILocationSourceDelegate$a$a -> com.google.android.gms.maps.internal.ILocationSourceDelegate$a$a:
    android.os.IBinder b -> b
    android.os.IBinder asBinder() -> asBinder
    void activate(com.google.android.gms.internal.cd) -> activate
    void deactivate() -> deactivate
com.google.android.gms.maps.internal.IMapFragmentDelegate -> com.google.android.gms.maps.internal.IMapFragmentDelegate:
    com.google.android.gms.maps.internal.IGoogleMapDelegate getMap() -> getMap
    void onInflate(com.google.android.gms.internal.f,com.google.android.gms.maps.GoogleMapOptions,android.os.Bundle) -> onInflate
    void onCreate(android.os.Bundle) -> onCreate
    com.google.android.gms.internal.f onCreateView(com.google.android.gms.internal.f,com.google.android.gms.internal.f,android.os.Bundle) -> onCreateView
    void onResume() -> onResume
    void onPause() -> onPause
    void onDestroyView() -> onDestroyView
    void onDestroy() -> onDestroy
    void onLowMemory() -> onLowMemory
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    boolean isReady() -> isReady
com.google.android.gms.maps.internal.IMapFragmentDelegate$a -> com.google.android.gms.maps.internal.IMapFragmentDelegate$a:
    com.google.android.gms.maps.internal.IMapFragmentDelegate i(android.os.IBinder) -> i
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.google.android.gms.maps.internal.IMapFragmentDelegate$a$a -> com.google.android.gms.maps.internal.IMapFragmentDelegate$a$a:
    android.os.IBinder b -> b
    android.os.IBinder asBinder() -> asBinder
    com.google.android.gms.maps.internal.IGoogleMapDelegate getMap() -> getMap
    void onInflate(com.google.android.gms.internal.f,com.google.android.gms.maps.GoogleMapOptions,android.os.Bundle) -> onInflate
    void onCreate(android.os.Bundle) -> onCreate
    com.google.android.gms.internal.f onCreateView(com.google.android.gms.internal.f,com.google.android.gms.internal.f,android.os.Bundle) -> onCreateView
    void onResume() -> onResume
    void onPause() -> onPause
    void onDestroyView() -> onDestroyView
    void onDestroy() -> onDestroy
    void onLowMemory() -> onLowMemory
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    boolean isReady() -> isReady
com.google.android.gms.maps.internal.IMapViewDelegate -> com.google.android.gms.maps.internal.IMapViewDelegate:
    com.google.android.gms.maps.internal.IGoogleMapDelegate getMap() -> getMap
    void onCreate(android.os.Bundle) -> onCreate
    void onResume() -> onResume
    void onPause() -> onPause
    void onDestroy() -> onDestroy
    void onLowMemory() -> onLowMemory
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    com.google.android.gms.internal.f getView() -> getView
com.google.android.gms.maps.internal.IMapViewDelegate$a -> com.google.android.gms.maps.internal.IMapViewDelegate$a:
    com.google.android.gms.maps.internal.IMapViewDelegate F(android.os.IBinder) -> F
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.google.android.gms.maps.internal.IMapViewDelegate$a$a -> com.google.android.gms.maps.internal.IMapViewDelegate$a$a:
    android.os.IBinder b -> b
    android.os.IBinder asBinder() -> asBinder
    com.google.android.gms.maps.internal.IGoogleMapDelegate getMap() -> getMap
    void onCreate(android.os.Bundle) -> onCreate
    void onResume() -> onResume
    void onPause() -> onPause
    void onDestroy() -> onDestroy
    void onLowMemory() -> onLowMemory
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    com.google.android.gms.internal.f getView() -> getView
com.google.android.gms.maps.internal.IProjectionDelegate -> com.google.android.gms.maps.internal.IProjectionDelegate:
    com.google.android.gms.maps.model.LatLng fromScreenLocation(com.google.android.gms.internal.f) -> fromScreenLocation
    com.google.android.gms.internal.f toScreenLocation(com.google.android.gms.maps.model.LatLng) -> toScreenLocation
    com.google.android.gms.maps.model.VisibleRegion getVisibleRegion() -> getVisibleRegion
com.google.android.gms.maps.internal.IProjectionDelegate$a -> com.google.android.gms.maps.internal.IProjectionDelegate$a:
    com.google.android.gms.maps.internal.IProjectionDelegate I(android.os.IBinder) -> I
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.google.android.gms.maps.internal.IProjectionDelegate$a$a -> com.google.android.gms.maps.internal.IProjectionDelegate$a$a:
    android.os.IBinder b -> b
    android.os.IBinder asBinder() -> asBinder
    com.google.android.gms.maps.model.LatLng fromScreenLocation(com.google.android.gms.internal.f) -> fromScreenLocation
    com.google.android.gms.internal.f toScreenLocation(com.google.android.gms.maps.model.LatLng) -> toScreenLocation
    com.google.android.gms.maps.model.VisibleRegion getVisibleRegion() -> getVisibleRegion
com.google.android.gms.maps.internal.IUiSettingsDelegate -> com.google.android.gms.maps.internal.IUiSettingsDelegate:
    void setZoomControlsEnabled(boolean) -> setZoomControlsEnabled
    void setCompassEnabled(boolean) -> setCompassEnabled
    void setMyLocationButtonEnabled(boolean) -> setMyLocationButtonEnabled
    void setScrollGesturesEnabled(boolean) -> setScrollGesturesEnabled
    void setZoomGesturesEnabled(boolean) -> setZoomGesturesEnabled
    void setTiltGesturesEnabled(boolean) -> setTiltGesturesEnabled
    void setRotateGesturesEnabled(boolean) -> setRotateGesturesEnabled
    void setAllGesturesEnabled(boolean) -> setAllGesturesEnabled
    boolean isZoomControlsEnabled() -> isZoomControlsEnabled
    boolean isCompassEnabled() -> isCompassEnabled
    boolean isMyLocationButtonEnabled() -> isMyLocationButtonEnabled
    boolean isScrollGesturesEnabled() -> isScrollGesturesEnabled
    boolean isZoomGesturesEnabled() -> isZoomGesturesEnabled
    boolean isTiltGesturesEnabled() -> isTiltGesturesEnabled
    boolean isRotateGesturesEnabled() -> isRotateGesturesEnabled
com.google.android.gms.maps.internal.IUiSettingsDelegate$a -> com.google.android.gms.maps.internal.IUiSettingsDelegate$a:
    com.google.android.gms.maps.internal.IUiSettingsDelegate E(android.os.IBinder) -> E
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.google.android.gms.maps.internal.IUiSettingsDelegate$a$a -> com.google.android.gms.maps.internal.IUiSettingsDelegate$a$a:
    android.os.IBinder b -> b
    android.os.IBinder asBinder() -> asBinder
    void setZoomControlsEnabled(boolean) -> setZoomControlsEnabled
    void setCompassEnabled(boolean) -> setCompassEnabled
    void setMyLocationButtonEnabled(boolean) -> setMyLocationButtonEnabled
    void setScrollGesturesEnabled(boolean) -> setScrollGesturesEnabled
    void setZoomGesturesEnabled(boolean) -> setZoomGesturesEnabled
    void setTiltGesturesEnabled(boolean) -> setTiltGesturesEnabled
    void setRotateGesturesEnabled(boolean) -> setRotateGesturesEnabled
    void setAllGesturesEnabled(boolean) -> setAllGesturesEnabled
    boolean isZoomControlsEnabled() -> isZoomControlsEnabled
    boolean isCompassEnabled() -> isCompassEnabled
    boolean isMyLocationButtonEnabled() -> isMyLocationButtonEnabled
    boolean isScrollGesturesEnabled() -> isScrollGesturesEnabled
    boolean isZoomGesturesEnabled() -> isZoomGesturesEnabled
    boolean isTiltGesturesEnabled() -> isTiltGesturesEnabled
    boolean isRotateGesturesEnabled() -> isRotateGesturesEnabled
com.google.android.gms.maps.model.BitmapDescriptor -> com.google.android.gms.maps.model.BitmapDescriptor:
    com.google.android.gms.internal.f cT -> cT
    com.google.android.gms.internal.f au() -> au
com.google.android.gms.maps.model.BitmapDescriptorFactory -> com.google.android.gms.maps.model.BitmapDescriptorFactory:
    float HUE_RED -> HUE_RED
    float HUE_ORANGE -> HUE_ORANGE
    float HUE_YELLOW -> HUE_YELLOW
    float HUE_GREEN -> HUE_GREEN
    float HUE_CYAN -> HUE_CYAN
    float HUE_AZURE -> HUE_AZURE
    float HUE_BLUE -> HUE_BLUE
    float HUE_VIOLET -> HUE_VIOLET
    float HUE_MAGENTA -> HUE_MAGENTA
    float HUE_ROSE -> HUE_ROSE
    com.google.android.gms.internal.h J -> J
    com.google.android.gms.internal.h d() -> d
    void a(com.google.android.gms.internal.h) -> a
    com.google.android.gms.maps.model.BitmapDescriptor fromResource(int) -> fromResource
    com.google.android.gms.maps.model.BitmapDescriptor fromAsset(java.lang.String) -> fromAsset
    com.google.android.gms.maps.model.BitmapDescriptor fromFile(java.lang.String) -> fromFile
    com.google.android.gms.maps.model.BitmapDescriptor fromPath(java.lang.String) -> fromPath
    com.google.android.gms.maps.model.BitmapDescriptor defaultMarker() -> defaultMarker
    com.google.android.gms.maps.model.BitmapDescriptor defaultMarker(float) -> defaultMarker
    com.google.android.gms.maps.model.BitmapDescriptor fromBitmap(android.graphics.Bitmap) -> fromBitmap
com.google.android.gms.maps.model.CameraPosition -> com.google.android.gms.maps.model.CameraPosition:
    com.google.android.gms.maps.model.CameraPositionCreator CREATOR -> CREATOR
    int aj -> aj
    com.google.android.gms.maps.model.LatLng target -> target
    float zoom -> zoom
    float tilt -> tilt
    float bearing -> bearing
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    int describeContents() -> describeContents
    int hashCode() -> hashCode
    int j() -> j
    com.google.android.gms.maps.model.CameraPosition fromLatLngZoom(com.google.android.gms.maps.model.LatLng,float) -> fromLatLngZoom
    com.google.android.gms.maps.model.CameraPosition$Builder builder() -> builder
    com.google.android.gms.maps.model.CameraPosition$Builder builder(com.google.android.gms.maps.model.CameraPosition) -> builder
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
    com.google.android.gms.maps.model.CameraPosition createFromAttributes(android.content.Context,android.util.AttributeSet) -> createFromAttributes
com.google.android.gms.maps.model.CameraPosition$Builder -> com.google.android.gms.maps.model.CameraPosition$Builder:
    com.google.android.gms.maps.model.LatLng p -> p
    float q -> q
    float r -> r
    float s -> s
    com.google.android.gms.maps.model.CameraPosition$Builder target(com.google.android.gms.maps.model.LatLng) -> target
    com.google.android.gms.maps.model.CameraPosition$Builder zoom(float) -> zoom
    com.google.android.gms.maps.model.CameraPosition$Builder tilt(float) -> tilt
    com.google.android.gms.maps.model.CameraPosition$Builder bearing(float) -> bearing
    com.google.android.gms.maps.model.CameraPosition build() -> build
com.google.android.gms.maps.model.CameraPositionCreator -> com.google.android.gms.maps.model.CameraPositionCreator:
    int CONTENT_DESCRIPTION -> CONTENT_DESCRIPTION
    com.google.android.gms.maps.model.CameraPosition createFromParcel(android.os.Parcel) -> createFromParcel
    com.google.android.gms.maps.model.CameraPosition[] newArray(int) -> newArray
    void a(com.google.android.gms.maps.model.CameraPosition,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.maps.model.Circle -> com.google.android.gms.maps.model.Circle:
    com.google.android.gms.internal.ae eY -> eY
    void remove() -> remove
    java.lang.String getId() -> getId
    void setCenter(com.google.android.gms.maps.model.LatLng) -> setCenter
    com.google.android.gms.maps.model.LatLng getCenter() -> getCenter
    void setRadius(double) -> setRadius
    double getRadius() -> getRadius
    void setStrokeWidth(float) -> setStrokeWidth
    float getStrokeWidth() -> getStrokeWidth
    void setStrokeColor(int) -> setStrokeColor
    int getStrokeColor() -> getStrokeColor
    void setFillColor(int) -> setFillColor
    int getFillColor() -> getFillColor
    void setZIndex(float) -> setZIndex
    float getZIndex() -> getZIndex
    void setVisible(boolean) -> setVisible
    boolean isVisible() -> isVisible
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
com.google.android.gms.maps.model.CircleOptions -> com.google.android.gms.maps.model.CircleOptions:
    com.google.android.gms.maps.model.CircleOptionsCreator CREATOR -> CREATOR
    int aj -> aj
    com.google.android.gms.maps.model.LatLng bH -> bH
    double bI -> bI
    float bJ -> bJ
    int bK -> bK
    int bL -> bL
    float bM -> bM
    boolean at -> at
    int j() -> j
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    int describeContents() -> describeContents
    com.google.android.gms.maps.model.CircleOptions center(com.google.android.gms.maps.model.LatLng) -> center
    com.google.android.gms.maps.model.CircleOptions radius(double) -> radius
    com.google.android.gms.maps.model.CircleOptions strokeWidth(float) -> strokeWidth
    com.google.android.gms.maps.model.CircleOptions strokeColor(int) -> strokeColor
    com.google.android.gms.maps.model.CircleOptions fillColor(int) -> fillColor
    com.google.android.gms.maps.model.CircleOptions zIndex(float) -> zIndex
    com.google.android.gms.maps.model.CircleOptions visible(boolean) -> visible
    com.google.android.gms.maps.model.LatLng getCenter() -> getCenter
    double getRadius() -> getRadius
    float getStrokeWidth() -> getStrokeWidth
    int getStrokeColor() -> getStrokeColor
    int getFillColor() -> getFillColor
    float getZIndex() -> getZIndex
    boolean isVisible() -> isVisible
com.google.android.gms.maps.model.CircleOptionsCreator -> com.google.android.gms.maps.model.CircleOptionsCreator:
    int CONTENT_DESCRIPTION -> CONTENT_DESCRIPTION
    com.google.android.gms.maps.model.CircleOptions createFromParcel(android.os.Parcel) -> createFromParcel
    com.google.android.gms.maps.model.CircleOptions[] newArray(int) -> newArray
    void a(com.google.android.gms.maps.model.CircleOptions,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.maps.model.GroundOverlay -> com.google.android.gms.maps.model.GroundOverlay:
    com.google.android.gms.internal.au dV -> dV
    void remove() -> remove
    java.lang.String getId() -> getId
    void setPosition(com.google.android.gms.maps.model.LatLng) -> setPosition
    com.google.android.gms.maps.model.LatLng getPosition() -> getPosition
    void setDimensions(float) -> setDimensions
    void setDimensions(float,float) -> setDimensions
    float getWidth() -> getWidth
    float getHeight() -> getHeight
    void setPositionFromBounds(com.google.android.gms.maps.model.LatLngBounds) -> setPositionFromBounds
    com.google.android.gms.maps.model.LatLngBounds getBounds() -> getBounds
    void setBearing(float) -> setBearing
    float getBearing() -> getBearing
    void setZIndex(float) -> setZIndex
    float getZIndex() -> getZIndex
    void setVisible(boolean) -> setVisible
    boolean isVisible() -> isVisible
    void setTransparency(float) -> setTransparency
    float getTransparency() -> getTransparency
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
com.google.android.gms.maps.model.GroundOverlayOptions -> com.google.android.gms.maps.model.GroundOverlayOptions:
    com.google.android.gms.maps.model.GroundOverlayOptionsCreator CREATOR -> CREATOR
    float NO_DIMENSION -> NO_DIMENSION
    int aj -> aj
    com.google.android.gms.maps.model.BitmapDescriptor fS -> fS
    com.google.android.gms.maps.model.LatLng fT -> fT
    float cV -> cV
    float fU -> fU
    com.google.android.gms.maps.model.LatLngBounds fV -> fV
    float s -> s
    float bM -> bM
    boolean at -> at
    float fW -> fW
    float aq -> aq
    float ar -> ar
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    int describeContents() -> describeContents
    android.os.IBinder bC() -> bC
    com.google.android.gms.maps.model.GroundOverlayOptions image(com.google.android.gms.maps.model.BitmapDescriptor) -> image
    com.google.android.gms.maps.model.GroundOverlayOptions anchor(float,float) -> anchor
    com.google.android.gms.maps.model.GroundOverlayOptions position(com.google.android.gms.maps.model.LatLng,float) -> position
    com.google.android.gms.maps.model.GroundOverlayOptions position(com.google.android.gms.maps.model.LatLng,float,float) -> position
    com.google.android.gms.maps.model.GroundOverlayOptions a(com.google.android.gms.maps.model.LatLng,float,float) -> a
    com.google.android.gms.maps.model.GroundOverlayOptions positionFromBounds(com.google.android.gms.maps.model.LatLngBounds) -> positionFromBounds
    com.google.android.gms.maps.model.GroundOverlayOptions bearing(float) -> bearing
    com.google.android.gms.maps.model.GroundOverlayOptions zIndex(float) -> zIndex
    com.google.android.gms.maps.model.GroundOverlayOptions visible(boolean) -> visible
    com.google.android.gms.maps.model.GroundOverlayOptions transparency(float) -> transparency
    int j() -> j
    com.google.android.gms.maps.model.BitmapDescriptor getImage() -> getImage
    com.google.android.gms.maps.model.LatLng getLocation() -> getLocation
    float getWidth() -> getWidth
    float getHeight() -> getHeight
    com.google.android.gms.maps.model.LatLngBounds getBounds() -> getBounds
    float getBearing() -> getBearing
    float getZIndex() -> getZIndex
    float getTransparency() -> getTransparency
    float getAnchorU() -> getAnchorU
    float getAnchorV() -> getAnchorV
    boolean isVisible() -> isVisible
com.google.android.gms.maps.model.GroundOverlayOptionsCreator -> com.google.android.gms.maps.model.GroundOverlayOptionsCreator:
    int CONTENT_DESCRIPTION -> CONTENT_DESCRIPTION
    com.google.android.gms.maps.model.GroundOverlayOptions createFromParcel(android.os.Parcel) -> createFromParcel
    com.google.android.gms.maps.model.GroundOverlayOptions[] newArray(int) -> newArray
    void a(com.google.android.gms.maps.model.GroundOverlayOptions,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.maps.model.LatLng -> com.google.android.gms.maps.model.LatLng:
    com.google.android.gms.maps.model.LatLngCreator CREATOR -> CREATOR
    int aj -> aj
    double latitude -> latitude
    double longitude -> longitude
    int j() -> j
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    int describeContents() -> describeContents
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
com.google.android.gms.maps.model.LatLngBounds -> com.google.android.gms.maps.model.LatLngBounds:
    com.google.android.gms.maps.model.LatLngBoundsCreator CREATOR -> CREATOR
    int aj -> aj
    com.google.android.gms.maps.model.LatLng southwest -> southwest
    com.google.android.gms.maps.model.LatLng northeast -> northeast
    int j() -> j
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    int describeContents() -> describeContents
    com.google.android.gms.maps.model.LatLngBounds$Builder builder() -> builder
    boolean contains(com.google.android.gms.maps.model.LatLng) -> contains
    com.google.android.gms.maps.model.LatLngBounds including(com.google.android.gms.maps.model.LatLng) -> including
    double a(double,double) -> a
    double b(double,double) -> b
    boolean b(double) -> b
    boolean a(double) -> a
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
    double c(double,double) -> c
    double d(double,double) -> d
com.google.android.gms.maps.model.LatLngBounds$Builder -> com.google.android.gms.maps.model.LatLngBounds$Builder:
    double F -> F
    double G -> G
    double H -> H
    double I -> I
    com.google.android.gms.maps.model.LatLngBounds$Builder include(com.google.android.gms.maps.model.LatLng) -> include
    boolean a(double) -> a
    com.google.android.gms.maps.model.LatLngBounds build() -> build
com.google.android.gms.maps.model.LatLngBoundsCreator -> com.google.android.gms.maps.model.LatLngBoundsCreator:
    int CONTENT_DESCRIPTION -> CONTENT_DESCRIPTION
    com.google.android.gms.maps.model.LatLngBounds createFromParcel(android.os.Parcel) -> createFromParcel
    com.google.android.gms.maps.model.LatLngBounds[] newArray(int) -> newArray
    void a(com.google.android.gms.maps.model.LatLngBounds,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.maps.model.LatLngCreator -> com.google.android.gms.maps.model.LatLngCreator:
    int CONTENT_DESCRIPTION -> CONTENT_DESCRIPTION
    com.google.android.gms.maps.model.LatLng createFromParcel(android.os.Parcel) -> createFromParcel
    com.google.android.gms.maps.model.LatLng[] newArray(int) -> newArray
    void a(com.google.android.gms.maps.model.LatLng,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.maps.model.Marker -> com.google.android.gms.maps.model.Marker:
    com.google.android.gms.internal.z cX -> cX
    void remove() -> remove
    java.lang.String getId() -> getId
    void setPosition(com.google.android.gms.maps.model.LatLng) -> setPosition
    com.google.android.gms.maps.model.LatLng getPosition() -> getPosition
    void setTitle(java.lang.String) -> setTitle
    java.lang.String getTitle() -> getTitle
    void setSnippet(java.lang.String) -> setSnippet
    java.lang.String getSnippet() -> getSnippet
    void setDraggable(boolean) -> setDraggable
    boolean isDraggable() -> isDraggable
    void showInfoWindow() -> showInfoWindow
    void hideInfoWindow() -> hideInfoWindow
    boolean isInfoWindowShown() -> isInfoWindowShown
    void setVisible(boolean) -> setVisible
    boolean isVisible() -> isVisible
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
com.google.android.gms.maps.model.MarkerOptions -> com.google.android.gms.maps.model.MarkerOptions:
    com.google.android.gms.maps.model.MarkerOptionsCreator CREATOR -> CREATOR
    int aj -> aj
    com.google.android.gms.maps.model.LatLng am -> am
    java.lang.String an -> an
    java.lang.String ao -> ao
    com.google.android.gms.maps.model.BitmapDescriptor ap -> ap
    float aq -> aq
    float ar -> ar
    boolean as -> as
    boolean at -> at
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    int describeContents() -> describeContents
    int j() -> j
    android.os.IBinder l() -> l
    com.google.android.gms.maps.model.MarkerOptions position(com.google.android.gms.maps.model.LatLng) -> position
    com.google.android.gms.maps.model.MarkerOptions icon(com.google.android.gms.maps.model.BitmapDescriptor) -> icon
    com.google.android.gms.maps.model.MarkerOptions anchor(float,float) -> anchor
    com.google.android.gms.maps.model.MarkerOptions title(java.lang.String) -> title
    com.google.android.gms.maps.model.MarkerOptions snippet(java.lang.String) -> snippet
    com.google.android.gms.maps.model.MarkerOptions draggable(boolean) -> draggable
    com.google.android.gms.maps.model.MarkerOptions visible(boolean) -> visible
    com.google.android.gms.maps.model.LatLng getPosition() -> getPosition
    java.lang.String getTitle() -> getTitle
    java.lang.String getSnippet() -> getSnippet
    com.google.android.gms.maps.model.BitmapDescriptor getIcon() -> getIcon
    float getAnchorU() -> getAnchorU
    float getAnchorV() -> getAnchorV
    boolean isDraggable() -> isDraggable
    boolean isVisible() -> isVisible
com.google.android.gms.maps.model.MarkerOptionsCreator -> com.google.android.gms.maps.model.MarkerOptionsCreator:
    int CONTENT_DESCRIPTION -> CONTENT_DESCRIPTION
    com.google.android.gms.maps.model.MarkerOptions createFromParcel(android.os.Parcel) -> createFromParcel
    com.google.android.gms.maps.model.MarkerOptions[] newArray(int) -> newArray
    void a(com.google.android.gms.maps.model.MarkerOptions,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.maps.model.Polygon -> com.google.android.gms.maps.model.Polygon:
    com.google.android.gms.internal.b S -> S
    void remove() -> remove
    java.lang.String getId() -> getId
    void setPoints(java.util.List) -> setPoints
    java.util.List getPoints() -> getPoints
    void setHoles(java.util.List) -> setHoles
    java.util.List getHoles() -> getHoles
    void setStrokeWidth(float) -> setStrokeWidth
    float getStrokeWidth() -> getStrokeWidth
    void setStrokeColor(int) -> setStrokeColor
    int getStrokeColor() -> getStrokeColor
    void setFillColor(int) -> setFillColor
    int getFillColor() -> getFillColor
    void setZIndex(float) -> setZIndex
    float getZIndex() -> getZIndex
    void setVisible(boolean) -> setVisible
    boolean isVisible() -> isVisible
    void setGeodesic(boolean) -> setGeodesic
    boolean isGeodesic() -> isGeodesic
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
com.google.android.gms.maps.model.PolygonOptions -> com.google.android.gms.maps.model.PolygonOptions:
    com.google.android.gms.maps.model.PolygonOptionsCreator CREATOR -> CREATOR
    int aj -> aj
    java.util.List cd -> cd
    java.util.List ce -> ce
    float bJ -> bJ
    int bK -> bK
    int bL -> bL
    float bM -> bM
    boolean at -> at
    boolean cf -> cf
    int j() -> j
    java.util.List ab() -> ab
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    int describeContents() -> describeContents
    com.google.android.gms.maps.model.PolygonOptions add(com.google.android.gms.maps.model.LatLng) -> add
    com.google.android.gms.maps.model.PolygonOptions add(com.google.android.gms.maps.model.LatLng[]) -> add
    com.google.android.gms.maps.model.PolygonOptions addAll(java.lang.Iterable) -> addAll
    com.google.android.gms.maps.model.PolygonOptions addHole(java.lang.Iterable) -> addHole
    com.google.android.gms.maps.model.PolygonOptions strokeWidth(float) -> strokeWidth
    com.google.android.gms.maps.model.PolygonOptions strokeColor(int) -> strokeColor
    com.google.android.gms.maps.model.PolygonOptions fillColor(int) -> fillColor
    com.google.android.gms.maps.model.PolygonOptions zIndex(float) -> zIndex
    com.google.android.gms.maps.model.PolygonOptions visible(boolean) -> visible
    com.google.android.gms.maps.model.PolygonOptions geodesic(boolean) -> geodesic
    java.util.List getPoints() -> getPoints
    java.util.List getHoles() -> getHoles
    float getStrokeWidth() -> getStrokeWidth
    int getStrokeColor() -> getStrokeColor
    int getFillColor() -> getFillColor
    float getZIndex() -> getZIndex
    boolean isVisible() -> isVisible
    boolean isGeodesic() -> isGeodesic
com.google.android.gms.maps.model.PolygonOptionsCreator -> com.google.android.gms.maps.model.PolygonOptionsCreator:
    int CONTENT_DESCRIPTION -> CONTENT_DESCRIPTION
    com.google.android.gms.maps.model.PolygonOptions createFromParcel(android.os.Parcel) -> createFromParcel
    com.google.android.gms.maps.model.PolygonOptions[] newArray(int) -> newArray
    void a(com.google.android.gms.maps.model.PolygonOptions,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.maps.model.Polyline -> com.google.android.gms.maps.model.Polyline:
    com.google.android.gms.maps.model.internal.IPolylineDelegate ff -> ff
    void remove() -> remove
    java.lang.String getId() -> getId
    void setPoints(java.util.List) -> setPoints
    java.util.List getPoints() -> getPoints
    void setWidth(float) -> setWidth
    float getWidth() -> getWidth
    void setColor(int) -> setColor
    int getColor() -> getColor
    void setZIndex(float) -> setZIndex
    float getZIndex() -> getZIndex
    void setVisible(boolean) -> setVisible
    boolean isVisible() -> isVisible
    void setGeodesic(boolean) -> setGeodesic
    boolean isGeodesic() -> isGeodesic
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
com.google.android.gms.maps.model.PolylineOptions -> com.google.android.gms.maps.model.PolylineOptions:
    com.google.android.gms.maps.model.PolylineOptionsCreator CREATOR -> CREATOR
    int aj -> aj
    java.util.List cd -> cd
    float cV -> cV
    int cW -> cW
    float bM -> bM
    boolean at -> at
    boolean cf -> cf
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    int describeContents() -> describeContents
    int j() -> j
    com.google.android.gms.maps.model.PolylineOptions add(com.google.android.gms.maps.model.LatLng) -> add
    com.google.android.gms.maps.model.PolylineOptions add(com.google.android.gms.maps.model.LatLng[]) -> add
    com.google.android.gms.maps.model.PolylineOptions addAll(java.lang.Iterable) -> addAll
    com.google.android.gms.maps.model.PolylineOptions width(float) -> width
    com.google.android.gms.maps.model.PolylineOptions color(int) -> color
    com.google.android.gms.maps.model.PolylineOptions zIndex(float) -> zIndex
    com.google.android.gms.maps.model.PolylineOptions visible(boolean) -> visible
    com.google.android.gms.maps.model.PolylineOptions geodesic(boolean) -> geodesic
    java.util.List getPoints() -> getPoints
    float getWidth() -> getWidth
    int getColor() -> getColor
    float getZIndex() -> getZIndex
    boolean isVisible() -> isVisible
    boolean isGeodesic() -> isGeodesic
com.google.android.gms.maps.model.PolylineOptionsCreator -> com.google.android.gms.maps.model.PolylineOptionsCreator:
    int CONTENT_DESCRIPTION -> CONTENT_DESCRIPTION
    com.google.android.gms.maps.model.PolylineOptions createFromParcel(android.os.Parcel) -> createFromParcel
    com.google.android.gms.maps.model.PolylineOptions[] newArray(int) -> newArray
    void a(com.google.android.gms.maps.model.PolylineOptions,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.maps.model.RuntimeRemoteException -> com.google.android.gms.maps.model.RuntimeRemoteException:
com.google.android.gms.maps.model.Tile -> com.google.android.gms.maps.model.Tile:
    com.google.android.gms.maps.model.TileCreator CREATOR -> CREATOR
    int aj -> aj
    int width -> width
    int height -> height
    byte[] dq -> dq
    int j() -> j
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    int describeContents() -> describeContents
com.google.android.gms.maps.model.TileCreator -> com.google.android.gms.maps.model.TileCreator:
    int CONTENT_DESCRIPTION -> CONTENT_DESCRIPTION
    com.google.android.gms.maps.model.Tile createFromParcel(android.os.Parcel) -> createFromParcel
    com.google.android.gms.maps.model.Tile[] newArray(int) -> newArray
    void a(com.google.android.gms.maps.model.Tile,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.maps.model.TileOverlay -> com.google.android.gms.maps.model.TileOverlay:
    com.google.android.gms.internal.bm fM -> fM
    void remove() -> remove
    void clearTileCache() -> clearTileCache
    java.lang.String getId() -> getId
    void setZIndex(float) -> setZIndex
    float getZIndex() -> getZIndex
    void setVisible(boolean) -> setVisible
    boolean isVisible() -> isVisible
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
com.google.android.gms.maps.model.TileOverlayOptions -> com.google.android.gms.maps.model.TileOverlayOptions:
    com.google.android.gms.maps.model.TileOverlayOptionsCreator CREATOR -> CREATOR
    int aj -> aj
    com.google.android.gms.internal.av cE -> cE
    com.google.android.gms.maps.model.TileProvider cF -> cF
    boolean at -> at
    float bM -> bM
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    int describeContents() -> describeContents
    int j() -> j
    android.os.IBinder aq() -> aq
    com.google.android.gms.maps.model.TileOverlayOptions tileProvider(com.google.android.gms.maps.model.TileProvider) -> tileProvider
    com.google.android.gms.maps.model.TileOverlayOptions zIndex(float) -> zIndex
    com.google.android.gms.maps.model.TileOverlayOptions visible(boolean) -> visible
    com.google.android.gms.maps.model.TileProvider getTileProvider() -> getTileProvider
    float getZIndex() -> getZIndex
    boolean isVisible() -> isVisible
    com.google.android.gms.internal.av a(com.google.android.gms.maps.model.TileOverlayOptions) -> a
com.google.android.gms.maps.model.TileOverlayOptions$1 -> com.google.android.gms.maps.model.TileOverlayOptions$1:
    com.google.android.gms.internal.av di -> di
    com.google.android.gms.maps.model.TileOverlayOptions dj -> dj
    com.google.android.gms.maps.model.Tile getTile(int,int,int) -> getTile
com.google.android.gms.maps.model.TileOverlayOptions$2 -> com.google.android.gms.maps.model.TileOverlayOptions$2:
    com.google.android.gms.maps.model.TileProvider dk -> dk
    com.google.android.gms.maps.model.TileOverlayOptions dj -> dj
    com.google.android.gms.maps.model.Tile getTile(int,int,int) -> getTile
com.google.android.gms.maps.model.TileOverlayOptionsCreator -> com.google.android.gms.maps.model.TileOverlayOptionsCreator:
    int CONTENT_DESCRIPTION -> CONTENT_DESCRIPTION
    com.google.android.gms.maps.model.TileOverlayOptions createFromParcel(android.os.Parcel) -> createFromParcel
    com.google.android.gms.maps.model.TileOverlayOptions[] newArray(int) -> newArray
    void a(com.google.android.gms.maps.model.TileOverlayOptions,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.maps.model.TileProvider -> com.google.android.gms.maps.model.TileProvider:
    com.google.android.gms.maps.model.Tile NO_TILE -> NO_TILE
    com.google.android.gms.maps.model.Tile getTile(int,int,int) -> getTile
com.google.android.gms.maps.model.UrlTileProvider -> com.google.android.gms.maps.model.UrlTileProvider:
    int dm -> dm
    int dl -> dl
    java.net.URL getTileUrl(int,int,int) -> getTileUrl
    com.google.android.gms.maps.model.Tile getTile(int,int,int) -> getTile
    byte[] a(java.io.InputStream) -> a
    long a(java.io.InputStream,java.io.OutputStream) -> a
com.google.android.gms.maps.model.VisibleRegion -> com.google.android.gms.maps.model.VisibleRegion:
    com.google.android.gms.maps.model.VisibleRegionCreator CREATOR -> CREATOR
    int aj -> aj
    com.google.android.gms.maps.model.LatLng nearLeft -> nearLeft
    com.google.android.gms.maps.model.LatLng nearRight -> nearRight
    com.google.android.gms.maps.model.LatLng farLeft -> farLeft
    com.google.android.gms.maps.model.LatLng farRight -> farRight
    com.google.android.gms.maps.model.LatLngBounds latLngBounds -> latLngBounds
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    int describeContents() -> describeContents
    int hashCode() -> hashCode
    int j() -> j
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
com.google.android.gms.maps.model.VisibleRegionCreator -> com.google.android.gms.maps.model.VisibleRegionCreator:
    int CONTENT_DESCRIPTION -> CONTENT_DESCRIPTION
    com.google.android.gms.maps.model.VisibleRegion createFromParcel(android.os.Parcel) -> createFromParcel
    com.google.android.gms.maps.model.VisibleRegion[] newArray(int) -> newArray
    void a(com.google.android.gms.maps.model.VisibleRegion,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.maps.model.internal.IPolylineDelegate -> com.google.android.gms.maps.model.internal.IPolylineDelegate:
    void remove() -> remove
    java.lang.String getId() -> getId
    void setPoints(java.util.List) -> setPoints
    java.util.List getPoints() -> getPoints
    void setWidth(float) -> setWidth
    float getWidth() -> getWidth
    void setColor(int) -> setColor
    int getColor() -> getColor
    void setZIndex(float) -> setZIndex
    float getZIndex() -> getZIndex
    void setVisible(boolean) -> setVisible
    boolean isVisible() -> isVisible
    void setGeodesic(boolean) -> setGeodesic
    boolean isGeodesic() -> isGeodesic
    boolean equalsRemote(com.google.android.gms.maps.model.internal.IPolylineDelegate) -> equalsRemote
    int hashCodeRemote() -> hashCodeRemote
com.google.android.gms.maps.model.internal.IPolylineDelegate$a -> com.google.android.gms.maps.model.internal.IPolylineDelegate$a:
    com.google.android.gms.maps.model.internal.IPolylineDelegate q(android.os.IBinder) -> q
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.google.android.gms.maps.model.internal.IPolylineDelegate$a$a -> com.google.android.gms.maps.model.internal.IPolylineDelegate$a$a:
    android.os.IBinder b -> b
    android.os.IBinder asBinder() -> asBinder
    void remove() -> remove
    java.lang.String getId() -> getId
    void setPoints(java.util.List) -> setPoints
    java.util.List getPoints() -> getPoints
    void setWidth(float) -> setWidth
    float getWidth() -> getWidth
    void setColor(int) -> setColor
    int getColor() -> getColor
    void setZIndex(float) -> setZIndex
    float getZIndex() -> getZIndex
    void setVisible(boolean) -> setVisible
    boolean isVisible() -> isVisible
    void setGeodesic(boolean) -> setGeodesic
    boolean isGeodesic() -> isGeodesic
    boolean equalsRemote(com.google.android.gms.maps.model.internal.IPolylineDelegate) -> equalsRemote
    int hashCodeRemote() -> hashCodeRemote
com.google.android.gms.panorama.PanoramaClient -> com.google.android.gms.panorama.PanoramaClient:
    com.google.android.gms.internal.aj fY -> fY
    void loadPanoramaInfo(com.google.android.gms.panorama.PanoramaClient$OnPanoramaInfoLoadedListener,android.net.Uri) -> loadPanoramaInfo
    void loadPanoramaInfoAndGrantAccess(com.google.android.gms.panorama.PanoramaClient$OnPanoramaInfoLoadedListener,android.net.Uri) -> loadPanoramaInfoAndGrantAccess
    void connect() -> connect
    boolean isConnected() -> isConnected
    void registerConnectionCallbacks(com.google.android.gms.common.GooglePlayServicesClient$ConnectionCallbacks) -> registerConnectionCallbacks
    boolean isConnectionCallbacksRegistered(com.google.android.gms.common.GooglePlayServicesClient$ConnectionCallbacks) -> isConnectionCallbacksRegistered
    void unregisterConnectionCallbacks(com.google.android.gms.common.GooglePlayServicesClient$ConnectionCallbacks) -> unregisterConnectionCallbacks
    void registerConnectionFailedListener(com.google.android.gms.common.GooglePlayServicesClient$OnConnectionFailedListener) -> registerConnectionFailedListener
    boolean isConnectionFailedListenerRegistered(com.google.android.gms.common.GooglePlayServicesClient$OnConnectionFailedListener) -> isConnectionFailedListenerRegistered
    void unregisterConnectionFailedListener(com.google.android.gms.common.GooglePlayServicesClient$OnConnectionFailedListener) -> unregisterConnectionFailedListener
    void disconnect() -> disconnect
com.google.android.gms.panorama.PanoramaClient$OnPanoramaInfoLoadedListener -> com.google.android.gms.panorama.PanoramaClient$OnPanoramaInfoLoadedListener:
    void onPanoramaInfoLoaded(com.google.android.gms.common.ConnectionResult,android.content.Intent) -> onPanoramaInfoLoaded
com.google.android.gms.panorama.PanoramaClient$a -> com.google.android.gms.panorama.PanoramaClient$a:
    void a(com.google.android.gms.common.ConnectionResult,int,android.content.Intent) -> a
com.google.android.gms.plus.GooglePlusUtil -> com.google.android.gms.plus.GooglePlusUtil:
    java.lang.String TAG -> TAG
    int SUCCESS -> SUCCESS
    int APP_UPDATE_REQUIRED -> APP_UPDATE_REQUIRED
    int APP_DISABLED -> APP_DISABLED
    int APP_MISSING -> APP_MISSING
    java.lang.String GOOGLE_PLUS_PACKAGE -> GOOGLE_PLUS_PACKAGE
    java.lang.String PLATFORM_LOGGING_TAG -> PLATFORM_LOGGING_TAG
    int checkGooglePlusApp(android.content.Context) -> checkGooglePlusApp
    int b(android.content.Context,int) -> b
    android.app.Dialog getErrorDialog(int,android.app.Activity,int) -> getErrorDialog
    java.lang.String a(android.content.Context,java.lang.String,java.lang.String) -> a
com.google.android.gms.plus.PlusClient -> com.google.android.gms.plus.PlusClient:
    java.lang.String DEFAULT_ACCOUNT -> DEFAULT_ACCOUNT
    java.lang.String KEY_REQUEST_VISIBLE_ACTIVITIES -> KEY_REQUEST_VISIBLE_ACTIVITIES
    com.google.android.gms.internal.ai cG -> cG
    java.lang.String getAccountName() -> getAccountName
    boolean n(java.lang.String) -> n
    void a(com.google.android.gms.plus.PlusClient$b,java.lang.String) -> a
    void writeMoment(com.google.android.gms.plus.model.moments.Moment) -> writeMoment
    void loadMoments(com.google.android.gms.plus.PlusClient$OnMomentsLoadedListener) -> loadMoments
    void loadMoments(com.google.android.gms.plus.PlusClient$OnMomentsLoadedListener,int,java.lang.String,android.net.Uri,java.lang.String,java.lang.String) -> loadMoments
    void removeMoment(java.lang.String) -> removeMoment
    void loadPeople(com.google.android.gms.plus.PlusClient$OnPeopleLoadedListener,int) -> loadPeople
    void loadPeople(com.google.android.gms.plus.PlusClient$OnPeopleLoadedListener,int,int,int,java.lang.String) -> loadPeople
    void loadPerson(com.google.android.gms.plus.PlusClient$OnPersonLoadedListener,java.lang.String) -> loadPerson
    com.google.android.gms.plus.model.people.Person getCurrentPerson() -> getCurrentPerson
    void clearDefaultAccount() -> clearDefaultAccount
    void revokeAccessAndDisconnect(com.google.android.gms.plus.PlusClient$OnAccessRevokedListener) -> revokeAccessAndDisconnect
    void a(com.google.android.gms.plus.PlusClient$a,android.net.Uri,int) -> a
    void connect() -> connect
    boolean isConnected() -> isConnected
    void registerConnectionCallbacks(com.google.android.gms.common.GooglePlayServicesClient$ConnectionCallbacks) -> registerConnectionCallbacks
    boolean isConnectionCallbacksRegistered(com.google.android.gms.common.GooglePlayServicesClient$ConnectionCallbacks) -> isConnectionCallbacksRegistered
    void unregisterConnectionCallbacks(com.google.android.gms.common.GooglePlayServicesClient$ConnectionCallbacks) -> unregisterConnectionCallbacks
    void registerConnectionFailedListener(com.google.android.gms.common.GooglePlayServicesClient$OnConnectionFailedListener) -> registerConnectionFailedListener
    boolean isConnectionFailedListenerRegistered(com.google.android.gms.common.GooglePlayServicesClient$OnConnectionFailedListener) -> isConnectionFailedListenerRegistered
    void unregisterConnectionFailedListener(com.google.android.gms.common.GooglePlayServicesClient$OnConnectionFailedListener) -> unregisterConnectionFailedListener
    void disconnect() -> disconnect
com.google.android.gms.plus.PlusClient$1 -> com.google.android.gms.plus.PlusClient$1:
com.google.android.gms.plus.PlusClient$Builder -> com.google.android.gms.plus.PlusClient$Builder:
    android.content.Context mContext -> mContext
    java.lang.String Z -> Z
    com.google.android.gms.common.GooglePlayServicesClient$ConnectionCallbacks aa -> aa
    com.google.android.gms.common.GooglePlayServicesClient$OnConnectionFailedListener ab -> ab
    java.util.ArrayList ac -> ac
    java.lang.String[] ad -> ad
    java.lang.String[] ae -> ae
    com.google.android.gms.plus.PlusClient$Builder setAccountName(java.lang.String) -> setAccountName
    com.google.android.gms.plus.PlusClient$Builder setScopes(java.lang.String[]) -> setScopes
    com.google.android.gms.plus.PlusClient$Builder clearScopes() -> clearScopes
    com.google.android.gms.plus.PlusClient$Builder setVisibleActivities(java.lang.String[]) -> setVisibleActivities
    com.google.android.gms.plus.PlusClient build() -> build
com.google.android.gms.plus.PlusClient$OnAccessRevokedListener -> com.google.android.gms.plus.PlusClient$OnAccessRevokedListener:
    void onAccessRevoked(com.google.android.gms.common.ConnectionResult) -> onAccessRevoked
com.google.android.gms.plus.PlusClient$OnMomentsLoadedListener -> com.google.android.gms.plus.PlusClient$OnMomentsLoadedListener:
    void onMomentsLoaded(com.google.android.gms.common.ConnectionResult,com.google.android.gms.plus.model.moments.MomentBuffer,java.lang.String,java.lang.String) -> onMomentsLoaded
com.google.android.gms.plus.PlusClient$OnPeopleLoadedListener -> com.google.android.gms.plus.PlusClient$OnPeopleLoadedListener:
    void onPeopleLoaded(com.google.android.gms.common.ConnectionResult,com.google.android.gms.plus.model.people.PersonBuffer,java.lang.String) -> onPeopleLoaded
com.google.android.gms.plus.PlusClient$OnPersonLoadedListener -> com.google.android.gms.plus.PlusClient$OnPersonLoadedListener:
    void onPersonLoaded(com.google.android.gms.common.ConnectionResult,com.google.android.gms.plus.model.people.Person) -> onPersonLoaded
com.google.android.gms.plus.PlusClient$a -> com.google.android.gms.plus.PlusClient$a:
    void a(com.google.android.gms.common.ConnectionResult,android.os.ParcelFileDescriptor) -> a
com.google.android.gms.plus.PlusClient$b -> com.google.android.gms.plus.PlusClient$b:
    void a(com.google.android.gms.common.ConnectionResult,com.google.android.gms.internal.ck) -> a
com.google.android.gms.plus.PlusOneButton -> com.google.android.gms.plus.PlusOneButton:
    int SIZE_SMALL -> SIZE_SMALL
    int SIZE_MEDIUM -> SIZE_MEDIUM
    int SIZE_TALL -> SIZE_TALL
    int SIZE_STANDARD -> SIZE_STANDARD
    int ANNOTATION_NONE -> ANNOTATION_NONE
    int ANNOTATION_BUBBLE -> ANNOTATION_BUBBLE
    int ANNOTATION_INLINE -> ANNOTATION_INLINE
    com.google.android.gms.internal.ag fe -> fe
    void initialize(com.google.android.gms.plus.PlusClient,java.lang.String,int) -> initialize
    void initialize(com.google.android.gms.plus.PlusClient,java.lang.String,com.google.android.gms.plus.PlusOneButton$OnPlusOneClickListener) -> initialize
    void setOnPlusOneClickListener(com.google.android.gms.plus.PlusOneButton$OnPlusOneClickListener) -> setOnPlusOneClickListener
    void setAnnotation(int) -> setAnnotation
    void setSize(int) -> setSize
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
com.google.android.gms.plus.PlusOneButton$OnPlusOneClickListener -> com.google.android.gms.plus.PlusOneButton$OnPlusOneClickListener:
    void onPlusOneClick(android.content.Intent) -> onPlusOneClick
com.google.android.gms.plus.PlusShare -> com.google.android.gms.plus.PlusShare:
    java.lang.String EXTRA_CONTENT_URL -> EXTRA_CONTENT_URL
    java.lang.String EXTRA_CONTENT_DEEP_LINK_ID -> EXTRA_CONTENT_DEEP_LINK_ID
    java.lang.String EXTRA_CONTENT_DEEP_LINK_METADATA -> EXTRA_CONTENT_DEEP_LINK_METADATA
    java.lang.String KEY_CONTENT_DEEP_LINK_METADATA_TITLE -> KEY_CONTENT_DEEP_LINK_METADATA_TITLE
    java.lang.String KEY_CONTENT_DEEP_LINK_METADATA_DESCRIPTION -> KEY_CONTENT_DEEP_LINK_METADATA_DESCRIPTION
    java.lang.String KEY_CONTENT_DEEP_LINK_METADATA_THUMBNAIL_URL -> KEY_CONTENT_DEEP_LINK_METADATA_THUMBNAIL_URL
    java.lang.String EXTRA_IS_INTERACTIVE_POST -> EXTRA_IS_INTERACTIVE_POST
    java.lang.String EXTRA_SENDER_ID -> EXTRA_SENDER_ID
    java.lang.String EXTRA_CALL_TO_ACTION -> EXTRA_CALL_TO_ACTION
    java.lang.String KEY_CALL_TO_ACTION_LABEL -> KEY_CALL_TO_ACTION_LABEL
    java.lang.String KEY_CALL_TO_ACTION_URL -> KEY_CALL_TO_ACTION_URL
    java.lang.String KEY_CALL_TO_ACTION_DEEP_LINK_ID -> KEY_CALL_TO_ACTION_DEEP_LINK_ID
    java.lang.String PARAM_CONTENT_DEEP_LINK_ID -> PARAM_CONTENT_DEEP_LINK_ID
    java.lang.String getDeepLinkId(android.content.Intent) -> getDeepLinkId
    android.os.Bundle a(java.lang.String,java.lang.String,android.net.Uri) -> a
    com.google.android.gms.plus.model.people.Person createPerson(java.lang.String,java.lang.String) -> createPerson
com.google.android.gms.plus.PlusShare$Builder -> com.google.android.gms.plus.PlusShare$Builder:
    android.content.Intent cH -> cH
    boolean dW -> dW
    java.util.ArrayList dX -> dX
    boolean dY -> dY
    com.google.android.gms.plus.PlusShare$Builder setType(java.lang.String) -> setType
    com.google.android.gms.plus.PlusShare$Builder setRecipients(java.util.List) -> setRecipients
    com.google.android.gms.plus.PlusShare$Builder setText(java.lang.CharSequence) -> setText
    com.google.android.gms.plus.PlusShare$Builder setStream(android.net.Uri) -> setStream
    com.google.android.gms.plus.PlusShare$Builder addStream(android.net.Uri) -> addStream
    com.google.android.gms.plus.PlusShare$Builder setContentUrl(android.net.Uri) -> setContentUrl
    com.google.android.gms.plus.PlusShare$Builder setContentDeepLinkId(java.lang.String) -> setContentDeepLinkId
    com.google.android.gms.plus.PlusShare$Builder setContentDeepLinkId(java.lang.String,java.lang.String,java.lang.String,android.net.Uri) -> setContentDeepLinkId
    com.google.android.gms.plus.PlusShare$Builder addCallToAction(java.lang.String,android.net.Uri,java.lang.String) -> addCallToAction
    android.content.Intent getIntent() -> getIntent
com.google.android.gms.plus.model.apps.ApplicationBuffer -> com.google.android.gms.plus.model.apps.ApplicationBuffer:
    com.google.android.gms.internal.ac r(int) -> r
    java.lang.Object get(int) -> get
com.google.android.gms.plus.model.moments.ItemScope -> com.google.android.gms.plus.model.moments.ItemScope:
    com.google.android.gms.plus.model.moments.ItemScope getAbout() -> getAbout
    boolean hasAbout() -> hasAbout
    java.util.List getAdditionalName() -> getAdditionalName
    boolean hasAdditionalName() -> hasAdditionalName
    com.google.android.gms.plus.model.moments.ItemScope getAddress() -> getAddress
    boolean hasAddress() -> hasAddress
    java.lang.String getAddressCountry() -> getAddressCountry
    boolean hasAddressCountry() -> hasAddressCountry
    java.lang.String getAddressLocality() -> getAddressLocality
    boolean hasAddressLocality() -> hasAddressLocality
    java.lang.String getAddressRegion() -> getAddressRegion
    boolean hasAddressRegion() -> hasAddressRegion
    java.util.List getAssociated_media() -> getAssociated_media
    boolean hasAssociated_media() -> hasAssociated_media
    int getAttendeeCount() -> getAttendeeCount
    boolean hasAttendeeCount() -> hasAttendeeCount
    java.util.List getAttendees() -> getAttendees
    boolean hasAttendees() -> hasAttendees
    com.google.android.gms.plus.model.moments.ItemScope getAudio() -> getAudio
    boolean hasAudio() -> hasAudio
    java.util.List getAuthor() -> getAuthor
    boolean hasAuthor() -> hasAuthor
    java.lang.String getBestRating() -> getBestRating
    boolean hasBestRating() -> hasBestRating
    java.lang.String getBirthDate() -> getBirthDate
    boolean hasBirthDate() -> hasBirthDate
    com.google.android.gms.plus.model.moments.ItemScope getByArtist() -> getByArtist
    boolean hasByArtist() -> hasByArtist
    java.lang.String getCaption() -> getCaption
    boolean hasCaption() -> hasCaption
    java.lang.String getContentSize() -> getContentSize
    boolean hasContentSize() -> hasContentSize
    java.lang.String getContentUrl() -> getContentUrl
    boolean hasContentUrl() -> hasContentUrl
    java.util.List getContributor() -> getContributor
    boolean hasContributor() -> hasContributor
    java.lang.String getDateCreated() -> getDateCreated
    boolean hasDateCreated() -> hasDateCreated
    java.lang.String getDateModified() -> getDateModified
    boolean hasDateModified() -> hasDateModified
    java.lang.String getDatePublished() -> getDatePublished
    boolean hasDatePublished() -> hasDatePublished
    java.lang.String getDescription() -> getDescription
    boolean hasDescription() -> hasDescription
    java.lang.String getDuration() -> getDuration
    boolean hasDuration() -> hasDuration
    java.lang.String getEmbedUrl() -> getEmbedUrl
    boolean hasEmbedUrl() -> hasEmbedUrl
    java.lang.String getEndDate() -> getEndDate
    boolean hasEndDate() -> hasEndDate
    java.lang.String getFamilyName() -> getFamilyName
    boolean hasFamilyName() -> hasFamilyName
    java.lang.String getGender() -> getGender
    boolean hasGender() -> hasGender
    com.google.android.gms.plus.model.moments.ItemScope getGeo() -> getGeo
    boolean hasGeo() -> hasGeo
    java.lang.String getGivenName() -> getGivenName
    boolean hasGivenName() -> hasGivenName
    java.lang.String getHeight() -> getHeight
    boolean hasHeight() -> hasHeight
    java.lang.String getId() -> getId
    boolean hasId() -> hasId
    java.lang.String getImage() -> getImage
    boolean hasImage() -> hasImage
    com.google.android.gms.plus.model.moments.ItemScope getInAlbum() -> getInAlbum
    boolean hasInAlbum() -> hasInAlbum
    double getLatitude() -> getLatitude
    boolean hasLatitude() -> hasLatitude
    com.google.android.gms.plus.model.moments.ItemScope getLocation() -> getLocation
    boolean hasLocation() -> hasLocation
    double getLongitude() -> getLongitude
    boolean hasLongitude() -> hasLongitude
    java.lang.String getName() -> getName
    boolean hasName() -> hasName
    com.google.android.gms.plus.model.moments.ItemScope getPartOfTVSeries() -> getPartOfTVSeries
    boolean hasPartOfTVSeries() -> hasPartOfTVSeries
    java.util.List getPerformers() -> getPerformers
    boolean hasPerformers() -> hasPerformers
    java.lang.String getPlayerType() -> getPlayerType
    boolean hasPlayerType() -> hasPlayerType
    java.lang.String getPostOfficeBoxNumber() -> getPostOfficeBoxNumber
    boolean hasPostOfficeBoxNumber() -> hasPostOfficeBoxNumber
    java.lang.String getPostalCode() -> getPostalCode
    boolean hasPostalCode() -> hasPostalCode
    java.lang.String getRatingValue() -> getRatingValue
    boolean hasRatingValue() -> hasRatingValue
    com.google.android.gms.plus.model.moments.ItemScope getReviewRating() -> getReviewRating
    boolean hasReviewRating() -> hasReviewRating
    java.lang.String getStartDate() -> getStartDate
    boolean hasStartDate() -> hasStartDate
    java.lang.String getStreetAddress() -> getStreetAddress
    boolean hasStreetAddress() -> hasStreetAddress
    java.lang.String getText() -> getText
    boolean hasText() -> hasText
    com.google.android.gms.plus.model.moments.ItemScope getThumbnail() -> getThumbnail
    boolean hasThumbnail() -> hasThumbnail
    java.lang.String getThumbnailUrl() -> getThumbnailUrl
    boolean hasThumbnailUrl() -> hasThumbnailUrl
    java.lang.String getTickerSymbol() -> getTickerSymbol
    boolean hasTickerSymbol() -> hasTickerSymbol
    java.lang.String getType() -> getType
    boolean hasType() -> hasType
    java.lang.String getUrl() -> getUrl
    boolean hasUrl() -> hasUrl
    java.lang.String getWidth() -> getWidth
    boolean hasWidth() -> hasWidth
    java.lang.String getWorstRating() -> getWorstRating
    boolean hasWorstRating() -> hasWorstRating
com.google.android.gms.plus.model.moments.ItemScope$Builder -> com.google.android.gms.plus.model.moments.ItemScope$Builder:
    com.google.android.gms.internal.ca ee -> ee
    java.util.List ef -> ef
    com.google.android.gms.internal.ca eg -> eg
    java.lang.String eh -> eh
    java.lang.String ei -> ei
    java.lang.String ej -> ej
    java.util.List ek -> ek
    int el -> el
    java.util.List em -> em
    com.google.android.gms.internal.ca en -> en
    java.util.List eo -> eo
    java.lang.String ep -> ep
    java.lang.String eq -> eq
    com.google.android.gms.internal.ca er -> er
    java.lang.String es -> es
    java.lang.String et -> et
    java.lang.String eu -> eu
    java.util.List ev -> ev
    java.lang.String ew -> ew
    java.lang.String ex -> ex
    java.lang.String ey -> ey
    java.lang.String da -> da
    java.lang.String ez -> ez
    java.lang.String eA -> eA
    java.lang.String db -> db
    java.lang.String bp -> bp
    java.lang.String eB -> eB
    com.google.android.gms.internal.ca eC -> eC
    java.lang.String br -> br
    java.lang.String eD -> eD
    java.lang.String cO -> cO
    java.lang.String eE -> eE
    com.google.android.gms.internal.ca eF -> eF
    double eG -> eG
    com.google.android.gms.internal.ca eH -> eH
    double eI -> eI
    java.lang.String mName -> mName
    com.google.android.gms.internal.ca eJ -> eJ
    java.util.List eK -> eK
    java.lang.String eL -> eL
    java.lang.String eM -> eM
    java.lang.String eN -> eN
    java.lang.String eO -> eO
    com.google.android.gms.internal.ca eP -> eP
    java.lang.String cQ -> cQ
    java.lang.String eQ -> eQ
    java.lang.String eR -> eR
    com.google.android.gms.internal.ca eS -> eS
    java.lang.String eT -> eT
    java.lang.String eU -> eU
    java.lang.String cS -> cS
    java.lang.String cU -> cU
    java.lang.String eV -> eV
    java.lang.String eW -> eW
    java.util.Set ai -> ai
    com.google.android.gms.plus.model.moments.ItemScope$Builder setAbout(com.google.android.gms.plus.model.moments.ItemScope) -> setAbout
    com.google.android.gms.plus.model.moments.ItemScope$Builder setAdditionalName(java.util.List) -> setAdditionalName
    com.google.android.gms.plus.model.moments.ItemScope$Builder setAddress(com.google.android.gms.plus.model.moments.ItemScope) -> setAddress
    com.google.android.gms.plus.model.moments.ItemScope$Builder setAddressCountry(java.lang.String) -> setAddressCountry
    com.google.android.gms.plus.model.moments.ItemScope$Builder setAddressLocality(java.lang.String) -> setAddressLocality
    com.google.android.gms.plus.model.moments.ItemScope$Builder setAddressRegion(java.lang.String) -> setAddressRegion
    com.google.android.gms.plus.model.moments.ItemScope$Builder setAssociated_media(java.util.List) -> setAssociated_media
    com.google.android.gms.plus.model.moments.ItemScope$Builder setAttendeeCount(int) -> setAttendeeCount
    com.google.android.gms.plus.model.moments.ItemScope$Builder setAttendees(java.util.List) -> setAttendees
    com.google.android.gms.plus.model.moments.ItemScope$Builder setAudio(com.google.android.gms.plus.model.moments.ItemScope) -> setAudio
    com.google.android.gms.plus.model.moments.ItemScope$Builder setAuthor(java.util.List) -> setAuthor
    com.google.android.gms.plus.model.moments.ItemScope$Builder setBestRating(java.lang.String) -> setBestRating
    com.google.android.gms.plus.model.moments.ItemScope$Builder setBirthDate(java.lang.String) -> setBirthDate
    com.google.android.gms.plus.model.moments.ItemScope$Builder setByArtist(com.google.android.gms.plus.model.moments.ItemScope) -> setByArtist
    com.google.android.gms.plus.model.moments.ItemScope$Builder setCaption(java.lang.String) -> setCaption
    com.google.android.gms.plus.model.moments.ItemScope$Builder setContentSize(java.lang.String) -> setContentSize
    com.google.android.gms.plus.model.moments.ItemScope$Builder setContentUrl(java.lang.String) -> setContentUrl
    com.google.android.gms.plus.model.moments.ItemScope$Builder setContributor(java.util.List) -> setContributor
    com.google.android.gms.plus.model.moments.ItemScope$Builder setDateCreated(java.lang.String) -> setDateCreated
    com.google.android.gms.plus.model.moments.ItemScope$Builder setDateModified(java.lang.String) -> setDateModified
    com.google.android.gms.plus.model.moments.ItemScope$Builder setDatePublished(java.lang.String) -> setDatePublished
    com.google.android.gms.plus.model.moments.ItemScope$Builder setDescription(java.lang.String) -> setDescription
    com.google.android.gms.plus.model.moments.ItemScope$Builder setDuration(java.lang.String) -> setDuration
    com.google.android.gms.plus.model.moments.ItemScope$Builder setEmbedUrl(java.lang.String) -> setEmbedUrl
    com.google.android.gms.plus.model.moments.ItemScope$Builder setEndDate(java.lang.String) -> setEndDate
    com.google.android.gms.plus.model.moments.ItemScope$Builder setFamilyName(java.lang.String) -> setFamilyName
    com.google.android.gms.plus.model.moments.ItemScope$Builder setGender(java.lang.String) -> setGender
    com.google.android.gms.plus.model.moments.ItemScope$Builder setGeo(com.google.android.gms.plus.model.moments.ItemScope) -> setGeo
    com.google.android.gms.plus.model.moments.ItemScope$Builder setGivenName(java.lang.String) -> setGivenName
    com.google.android.gms.plus.model.moments.ItemScope$Builder setHeight(java.lang.String) -> setHeight
    com.google.android.gms.plus.model.moments.ItemScope$Builder setId(java.lang.String) -> setId
    com.google.android.gms.plus.model.moments.ItemScope$Builder setImage(java.lang.String) -> setImage
    com.google.android.gms.plus.model.moments.ItemScope$Builder setInAlbum(com.google.android.gms.plus.model.moments.ItemScope) -> setInAlbum
    com.google.android.gms.plus.model.moments.ItemScope$Builder setLatitude(double) -> setLatitude
    com.google.android.gms.plus.model.moments.ItemScope$Builder setLocation(com.google.android.gms.plus.model.moments.ItemScope) -> setLocation
    com.google.android.gms.plus.model.moments.ItemScope$Builder setLongitude(double) -> setLongitude
    com.google.android.gms.plus.model.moments.ItemScope$Builder setName(java.lang.String) -> setName
    com.google.android.gms.plus.model.moments.ItemScope$Builder setPartOfTVSeries(com.google.android.gms.plus.model.moments.ItemScope) -> setPartOfTVSeries
    com.google.android.gms.plus.model.moments.ItemScope$Builder setPerformers(java.util.List) -> setPerformers
    com.google.android.gms.plus.model.moments.ItemScope$Builder setPlayerType(java.lang.String) -> setPlayerType
    com.google.android.gms.plus.model.moments.ItemScope$Builder setPostOfficeBoxNumber(java.lang.String) -> setPostOfficeBoxNumber
    com.google.android.gms.plus.model.moments.ItemScope$Builder setPostalCode(java.lang.String) -> setPostalCode
    com.google.android.gms.plus.model.moments.ItemScope$Builder setRatingValue(java.lang.String) -> setRatingValue
    com.google.android.gms.plus.model.moments.ItemScope$Builder setReviewRating(com.google.android.gms.plus.model.moments.ItemScope) -> setReviewRating
    com.google.android.gms.plus.model.moments.ItemScope$Builder setStartDate(java.lang.String) -> setStartDate
    com.google.android.gms.plus.model.moments.ItemScope$Builder setStreetAddress(java.lang.String) -> setStreetAddress
    com.google.android.gms.plus.model.moments.ItemScope$Builder setText(java.lang.String) -> setText
    com.google.android.gms.plus.model.moments.ItemScope$Builder setThumbnail(com.google.android.gms.plus.model.moments.ItemScope) -> setThumbnail
    com.google.android.gms.plus.model.moments.ItemScope$Builder setThumbnailUrl(java.lang.String) -> setThumbnailUrl
    com.google.android.gms.plus.model.moments.ItemScope$Builder setTickerSymbol(java.lang.String) -> setTickerSymbol
    com.google.android.gms.plus.model.moments.ItemScope$Builder setType(java.lang.String) -> setType
    com.google.android.gms.plus.model.moments.ItemScope$Builder setUrl(java.lang.String) -> setUrl
    com.google.android.gms.plus.model.moments.ItemScope$Builder setWidth(java.lang.String) -> setWidth
    com.google.android.gms.plus.model.moments.ItemScope$Builder setWorstRating(java.lang.String) -> setWorstRating
    com.google.android.gms.plus.model.moments.ItemScope build() -> build
com.google.android.gms.plus.model.moments.Moment -> com.google.android.gms.plus.model.moments.Moment:
    java.lang.String getId() -> getId
    boolean hasId() -> hasId
    com.google.android.gms.plus.model.moments.ItemScope getResult() -> getResult
    boolean hasResult() -> hasResult
    java.lang.String getStartDate() -> getStartDate
    boolean hasStartDate() -> hasStartDate
    com.google.android.gms.plus.model.moments.ItemScope getTarget() -> getTarget
    boolean hasTarget() -> hasTarget
    java.lang.String getType() -> getType
    boolean hasType() -> hasType
com.google.android.gms.plus.model.moments.Moment$Builder -> com.google.android.gms.plus.model.moments.Moment$Builder:
    java.lang.String cO -> cO
    com.google.android.gms.internal.ca cP -> cP
    java.lang.String cQ -> cQ
    com.google.android.gms.internal.ca cR -> cR
    java.lang.String cS -> cS
    java.util.Set ai -> ai
    com.google.android.gms.plus.model.moments.Moment$Builder setId(java.lang.String) -> setId
    com.google.android.gms.plus.model.moments.Moment$Builder setResult(com.google.android.gms.plus.model.moments.ItemScope) -> setResult
    com.google.android.gms.plus.model.moments.Moment$Builder setStartDate(java.lang.String) -> setStartDate
    com.google.android.gms.plus.model.moments.Moment$Builder setTarget(com.google.android.gms.plus.model.moments.ItemScope) -> setTarget
    com.google.android.gms.plus.model.moments.Moment$Builder setType(java.lang.String) -> setType
    com.google.android.gms.plus.model.moments.Moment build() -> build
com.google.android.gms.plus.model.moments.MomentBuffer -> com.google.android.gms.plus.model.moments.MomentBuffer:
    com.google.android.gms.plus.model.moments.Moment get(int) -> get
    java.lang.Object get(int) -> get
com.google.android.gms.plus.model.people.Person -> com.google.android.gms.plus.model.people.Person:
    java.lang.String getAboutMe() -> getAboutMe
    boolean hasAboutMe() -> hasAboutMe
    com.google.android.gms.plus.model.people.Person$AgeRange getAgeRange() -> getAgeRange
    boolean hasAgeRange() -> hasAgeRange
    java.lang.String getBirthday() -> getBirthday
    boolean hasBirthday() -> hasBirthday
    java.lang.String getBraggingRights() -> getBraggingRights
    boolean hasBraggingRights() -> hasBraggingRights
    int getCircledByCount() -> getCircledByCount
    boolean hasCircledByCount() -> hasCircledByCount
    com.google.android.gms.plus.model.people.Person$Cover getCover() -> getCover
    boolean hasCover() -> hasCover
    java.lang.String getCurrentLocation() -> getCurrentLocation
    boolean hasCurrentLocation() -> hasCurrentLocation
    java.lang.String getDisplayName() -> getDisplayName
    boolean hasDisplayName() -> hasDisplayName
    java.util.List getEmails() -> getEmails
    boolean hasEmails() -> hasEmails
    int getGender() -> getGender
    boolean hasGender() -> hasGender
    boolean isHasApp() -> isHasApp
    boolean hasHasApp() -> hasHasApp
    java.lang.String getId() -> getId
    boolean hasId() -> hasId
    com.google.android.gms.plus.model.people.Person$Image getImage() -> getImage
    boolean hasImage() -> hasImage
    boolean isPlusUser() -> isPlusUser
    boolean hasIsPlusUser() -> hasIsPlusUser
    java.lang.String getLanguage() -> getLanguage
    boolean hasLanguage() -> hasLanguage
    com.google.android.gms.plus.model.people.Person$Name getName() -> getName
    boolean hasName() -> hasName
    java.lang.String getNickname() -> getNickname
    boolean hasNickname() -> hasNickname
    int getObjectType() -> getObjectType
    boolean hasObjectType() -> hasObjectType
    java.util.List getOrganizations() -> getOrganizations
    boolean hasOrganizations() -> hasOrganizations
    java.util.List getPlacesLived() -> getPlacesLived
    boolean hasPlacesLived() -> hasPlacesLived
    int getPlusOneCount() -> getPlusOneCount
    boolean hasPlusOneCount() -> hasPlusOneCount
    int getRelationshipStatus() -> getRelationshipStatus
    boolean hasRelationshipStatus() -> hasRelationshipStatus
    java.lang.String getTagline() -> getTagline
    boolean hasTagline() -> hasTagline
    java.lang.String getUrl() -> getUrl
    boolean hasUrl() -> hasUrl
    java.util.List getUrls() -> getUrls
    boolean hasUrls() -> hasUrls
    boolean isVerified() -> isVerified
    boolean hasVerified() -> hasVerified
com.google.android.gms.plus.model.people.Person$AgeRange -> com.google.android.gms.plus.model.people.Person$AgeRange:
    int getMax() -> getMax
    boolean hasMax() -> hasMax
    int getMin() -> getMin
    boolean hasMin() -> hasMin
com.google.android.gms.plus.model.people.Person$Collection -> com.google.android.gms.plus.model.people.Person$Collection:
    int VISIBLE -> VISIBLE
com.google.android.gms.plus.model.people.Person$Cover -> com.google.android.gms.plus.model.people.Person$Cover:
    com.google.android.gms.plus.model.people.Person$Cover$CoverInfo getCoverInfo() -> getCoverInfo
    boolean hasCoverInfo() -> hasCoverInfo
    com.google.android.gms.plus.model.people.Person$Cover$CoverPhoto getCoverPhoto() -> getCoverPhoto
    boolean hasCoverPhoto() -> hasCoverPhoto
    int getLayout() -> getLayout
    boolean hasLayout() -> hasLayout
com.google.android.gms.plus.model.people.Person$Cover$CoverInfo -> com.google.android.gms.plus.model.people.Person$Cover$CoverInfo:
    int getLeftImageOffset() -> getLeftImageOffset
    boolean hasLeftImageOffset() -> hasLeftImageOffset
    int getTopImageOffset() -> getTopImageOffset
    boolean hasTopImageOffset() -> hasTopImageOffset
com.google.android.gms.plus.model.people.Person$Cover$CoverPhoto -> com.google.android.gms.plus.model.people.Person$Cover$CoverPhoto:
    int getHeight() -> getHeight
    boolean hasHeight() -> hasHeight
    java.lang.String getUrl() -> getUrl
    boolean hasUrl() -> hasUrl
    int getWidth() -> getWidth
    boolean hasWidth() -> hasWidth
com.google.android.gms.plus.model.people.Person$Cover$Layout -> com.google.android.gms.plus.model.people.Person$Cover$Layout:
    int BANNER -> BANNER
com.google.android.gms.plus.model.people.Person$Emails -> com.google.android.gms.plus.model.people.Person$Emails:
    boolean isPrimary() -> isPrimary
    boolean hasPrimary() -> hasPrimary
    int getType() -> getType
    boolean hasType() -> hasType
    java.lang.String getValue() -> getValue
    boolean hasValue() -> hasValue
com.google.android.gms.plus.model.people.Person$Emails$Type -> com.google.android.gms.plus.model.people.Person$Emails$Type:
    int HOME -> HOME
    int WORK -> WORK
    int OTHER -> OTHER
com.google.android.gms.plus.model.people.Person$Gender -> com.google.android.gms.plus.model.people.Person$Gender:
    int MALE -> MALE
    int FEMALE -> FEMALE
    int OTHER -> OTHER
com.google.android.gms.plus.model.people.Person$Image -> com.google.android.gms.plus.model.people.Person$Image:
    java.lang.String getUrl() -> getUrl
    boolean hasUrl() -> hasUrl
com.google.android.gms.plus.model.people.Person$Name -> com.google.android.gms.plus.model.people.Person$Name:
    java.lang.String getFamilyName() -> getFamilyName
    boolean hasFamilyName() -> hasFamilyName
    java.lang.String getFormatted() -> getFormatted
    boolean hasFormatted() -> hasFormatted
    java.lang.String getGivenName() -> getGivenName
    boolean hasGivenName() -> hasGivenName
    java.lang.String getHonorificPrefix() -> getHonorificPrefix
    boolean hasHonorificPrefix() -> hasHonorificPrefix
    java.lang.String getHonorificSuffix() -> getHonorificSuffix
    boolean hasHonorificSuffix() -> hasHonorificSuffix
    java.lang.String getMiddleName() -> getMiddleName
    boolean hasMiddleName() -> hasMiddleName
com.google.android.gms.plus.model.people.Person$ObjectType -> com.google.android.gms.plus.model.people.Person$ObjectType:
    int PERSON -> PERSON
    int PAGE -> PAGE
com.google.android.gms.plus.model.people.Person$OrderBy -> com.google.android.gms.plus.model.people.Person$OrderBy:
    int ALPHABETICAL -> ALPHABETICAL
    int BEST -> BEST
com.google.android.gms.plus.model.people.Person$Organizations -> com.google.android.gms.plus.model.people.Person$Organizations:
    java.lang.String getDepartment() -> getDepartment
    boolean hasDepartment() -> hasDepartment
    java.lang.String getDescription() -> getDescription
    boolean hasDescription() -> hasDescription
    java.lang.String getEndDate() -> getEndDate
    boolean hasEndDate() -> hasEndDate
    java.lang.String getLocation() -> getLocation
    boolean hasLocation() -> hasLocation
    java.lang.String getName() -> getName
    boolean hasName() -> hasName
    boolean isPrimary() -> isPrimary
    boolean hasPrimary() -> hasPrimary
    java.lang.String getStartDate() -> getStartDate
    boolean hasStartDate() -> hasStartDate
    java.lang.String getTitle() -> getTitle
    boolean hasTitle() -> hasTitle
    int getType() -> getType
    boolean hasType() -> hasType
com.google.android.gms.plus.model.people.Person$Organizations$Type -> com.google.android.gms.plus.model.people.Person$Organizations$Type:
    int WORK -> WORK
    int SCHOOL -> SCHOOL
com.google.android.gms.plus.model.people.Person$PlacesLived -> com.google.android.gms.plus.model.people.Person$PlacesLived:
    boolean isPrimary() -> isPrimary
    boolean hasPrimary() -> hasPrimary
    java.lang.String getValue() -> getValue
    boolean hasValue() -> hasValue
com.google.android.gms.plus.model.people.Person$RelationshipStatus -> com.google.android.gms.plus.model.people.Person$RelationshipStatus:
    int SINGLE -> SINGLE
    int IN_A_RELATIONSHIP -> IN_A_RELATIONSHIP
    int ENGAGED -> ENGAGED
    int MARRIED -> MARRIED
    int ITS_COMPLICATED -> ITS_COMPLICATED
    int OPEN_RELATIONSHIP -> OPEN_RELATIONSHIP
    int WIDOWED -> WIDOWED
    int IN_DOMESTIC_PARTNERSHIP -> IN_DOMESTIC_PARTNERSHIP
    int IN_CIVIL_UNION -> IN_CIVIL_UNION
com.google.android.gms.plus.model.people.Person$Urls -> com.google.android.gms.plus.model.people.Person$Urls:
    boolean isPrimary() -> isPrimary
    boolean hasPrimary() -> hasPrimary
    int getType() -> getType
    boolean hasType() -> hasType
    java.lang.String getValue() -> getValue
    boolean hasValue() -> hasValue
com.google.android.gms.plus.model.people.Person$Urls$Type -> com.google.android.gms.plus.model.people.Person$Urls$Type:
    int HOME -> HOME
    int WORK -> WORK
    int BLOG -> BLOG
    int PROFILE -> PROFILE
    int OTHER -> OTHER
com.google.android.gms.plus.model.people.PersonBuffer -> com.google.android.gms.plus.model.people.PersonBuffer:
    com.google.android.gms.plus.model.people.Person get(int) -> get
    java.lang.Object get(int) -> get
com.google.android.maps.GeoPoint -> com.google.android.maps.GeoPoint:
    android_maps_conflict_avoidance.com.google.map.MapPoint mMapPoint -> mMapPoint
    boolean equals(java.lang.Object) -> equals
    int getLatitudeE6() -> getLatitudeE6
    int getLongitudeE6() -> getLongitudeE6
    android_maps_conflict_avoidance.com.google.map.MapPoint getMapPoint() -> getMapPoint
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
com.google.android.maps.GestureDetector -> com.google.android.maps.GestureDetector:
    int DOUBLE_TAP_TIMEOUT -> DOUBLE_TAP_TIMEOUT
    int LONGPRESS_TIMEOUT -> LONGPRESS_TIMEOUT
    int TAP_TIMEOUT -> TAP_TIMEOUT
    boolean mAlwaysInBiggerTapRegion -> mAlwaysInBiggerTapRegion
    boolean mAlwaysInTapRegion -> mAlwaysInTapRegion
    int mBiggerTouchSlopSquare -> mBiggerTouchSlopSquare
    android.view.MotionEvent mCurrentDownEvent -> mCurrentDownEvent
    com.google.android.maps.GestureDetector$OnDoubleTapListener mDoubleTapListener -> mDoubleTapListener
    int mDoubleTapSlopSquare -> mDoubleTapSlopSquare
    android.os.Handler mHandler -> mHandler
    boolean mInLongPress -> mInLongPress
    boolean mIsDoubleTapping -> mIsDoubleTapping
    boolean mIsLongpressEnabled -> mIsLongpressEnabled
    float mLastMotionX -> mLastMotionX
    float mLastMotionY -> mLastMotionY
    com.google.android.maps.GestureDetector$OnGestureListener mListener -> mListener
    int mMaximumFlingVelocity -> mMaximumFlingVelocity
    int mMinimumFlingVelocity -> mMinimumFlingVelocity
    android.view.MotionEvent mPreviousUpEvent -> mPreviousUpEvent
    boolean mStillDown -> mStillDown
    int mTouchSlopSquare -> mTouchSlopSquare
    android.view.VelocityTracker mVelocityTracker -> mVelocityTracker
    android.view.MotionEvent access$000(com.google.android.maps.GestureDetector) -> access$000
    com.google.android.maps.GestureDetector$OnGestureListener access$100(com.google.android.maps.GestureDetector) -> access$100
    void access$200(com.google.android.maps.GestureDetector) -> access$200
    com.google.android.maps.GestureDetector$OnDoubleTapListener access$300(com.google.android.maps.GestureDetector) -> access$300
    boolean access$400(com.google.android.maps.GestureDetector) -> access$400
    void cancel() -> cancel
    void dispatchLongPress() -> dispatchLongPress
    void init(android.content.Context) -> init
    boolean isConsideredDoubleTap(android.view.MotionEvent,android.view.MotionEvent,android.view.MotionEvent) -> isConsideredDoubleTap
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void setIsLongpressEnabled(boolean) -> setIsLongpressEnabled
    void setOnDoubleTapListener(com.google.android.maps.GestureDetector$OnDoubleTapListener) -> setOnDoubleTapListener
com.google.android.maps.GestureDetector$GestureHandler -> com.google.android.maps.GestureDetector$GestureHandler:
    com.google.android.maps.GestureDetector this$0 -> this$0
    void handleMessage(android.os.Message) -> handleMessage
com.google.android.maps.GestureDetector$OnDoubleTapListener -> com.google.android.maps.GestureDetector$OnDoubleTapListener:
    boolean onDoubleTap(android.view.MotionEvent) -> onDoubleTap
    boolean onDoubleTapEvent(android.view.MotionEvent) -> onDoubleTapEvent
    boolean onSingleTapConfirmed(android.view.MotionEvent) -> onSingleTapConfirmed
com.google.android.maps.GestureDetector$OnGestureListener -> com.google.android.maps.GestureDetector$OnGestureListener:
    boolean onDown(android.view.MotionEvent) -> onDown
    boolean onFling(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onFling
    void onLongPress(android.view.MotionEvent) -> onLongPress
    boolean onScroll(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onScroll
    void onShowPress(android.view.MotionEvent) -> onShowPress
    boolean onSingleTapUp(android.view.MotionEvent) -> onSingleTapUp
com.google.android.maps.GestureDetector$SimpleOnGestureListener -> com.google.android.maps.GestureDetector$SimpleOnGestureListener:
    boolean onDoubleTap(android.view.MotionEvent) -> onDoubleTap
    boolean onDoubleTapEvent(android.view.MotionEvent) -> onDoubleTapEvent
    boolean onDown(android.view.MotionEvent) -> onDown
    boolean onFling(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onFling
    void onLongPress(android.view.MotionEvent) -> onLongPress
    boolean onScroll(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onScroll
    void onShowPress(android.view.MotionEvent) -> onShowPress
    boolean onSingleTapConfirmed(android.view.MotionEvent) -> onSingleTapConfirmed
    boolean onSingleTapUp(android.view.MotionEvent) -> onSingleTapUp
com.google.android.maps.InternalR -> com.google.android.maps.InternalR:
    int access$000(java.lang.Class,java.lang.String) -> access$000
    java.lang.Object access$100(java.lang.Class,java.lang.String) -> access$100
    int get(java.lang.Class,java.lang.String) -> get
    java.lang.reflect.Field getField(java.lang.Class,java.lang.String) -> getField
    java.lang.Object getObject(java.lang.Class,java.lang.String) -> getObject
    java.lang.RuntimeException translateException(java.lang.IllegalAccessException,java.lang.Class,java.lang.String) -> translateException
com.google.android.maps.InternalR$array -> com.google.android.maps.InternalR$array:
    int maps_starting_lat_lng -> maps_starting_lat_lng
    int maps_starting_zoom -> maps_starting_zoom
    int get(java.lang.String) -> get
com.google.android.maps.InternalR$attr -> com.google.android.maps.InternalR$attr:
    int mapViewStyle -> mapViewStyle
    int state_focused -> state_focused
    int state_pressed -> state_pressed
    int state_selected -> state_selected
    int get(java.lang.String) -> get
com.google.android.maps.InternalR$drawable -> com.google.android.maps.InternalR$drawable:
    int compass_arrow -> compass_arrow
    int compass_base -> compass_base
    int ic_maps_indicator_current_position_anim -> ic_maps_indicator_current_position_anim
    int loading_tile_android -> loading_tile_android
    int maps_google_logo -> maps_google_logo
    int no_tile_256 -> no_tile_256
    int reticle -> reticle
    int get(java.lang.String) -> get
com.google.android.maps.InternalR$styleable -> com.google.android.maps.InternalR$styleable:
    int[] MapView -> MapView
    int MapView_apiKey -> MapView_apiKey
    java.lang.Class cls -> cls
com.google.android.maps.ItemizedOverlay -> com.google.android.maps.ItemizedOverlay:
    int MINIMUM_TOUCH_DIAMETER -> MINIMUM_TOUCH_DIAMETER
    android.graphics.drawable.Drawable mBalloon -> mBalloon
    int mCurrentlyPressedItemRank -> mCurrentlyPressedItemRank
    int mCurrentlySelectedItemRank -> mCurrentlySelectedItemRank
    boolean mDrawFocusedItem -> mDrawFocusedItem
    com.google.android.maps.OverlayItem mFocused -> mFocused
    int mInGestureMask -> mInGestureMask
    int[] mItemState -> mItemState
    java.util.ArrayList mItemsOrderedByRank -> mItemsOrderedByRank
    int mLastFocusedIndex -> mLastFocusedIndex
    int mLastSelectedItemRank -> mLastSelectedItemRank
    int mLatSpanE6 -> mLatSpanE6
    int mLonSpanE6 -> mLonSpanE6
    com.google.android.maps.ItemizedOverlay$OnFocusChangeListener mOnFocusChangeListener -> mOnFocusChangeListener
    int[] mRanksOrderedByLat -> mRanksOrderedByLat
    android.graphics.Point mTempPoint -> mTempPoint
    android.graphics.Rect mTouchableBounds -> mTouchableBounds
    android.graphics.drawable.Drawable boundCenter(android.graphics.drawable.Drawable) -> boundCenter
    android.graphics.drawable.Drawable boundCenterBottom(android.graphics.drawable.Drawable) -> boundCenterBottom
    void drawItem(android.graphics.Canvas,com.google.android.maps.MapView,boolean,int) -> drawItem
    void focus(int) -> focus
    android.graphics.drawable.Drawable getDrawable(com.google.android.maps.OverlayItem,int) -> getDrawable
    int getItemAtLocation(int,int,com.google.android.maps.MapView) -> getItemAtLocation
    java.util.ArrayList getItemsAtLocation(int,int,com.google.android.maps.MapView) -> getItemsAtLocation
    android.graphics.Rect getTouchableBounds(android.graphics.Rect) -> getTouchableBounds
    boolean handleMotionEvent(boolean,int,android.view.MotionEvent,com.google.android.maps.MapView,int,int) -> handleMotionEvent
    int maskHelper(int,int,int) -> maskHelper
    void press(int) -> press
    void select(int) -> select
    void setFocus(int,com.google.android.maps.OverlayItem) -> setFocus
    com.google.android.maps.OverlayItem createItem(int) -> createItem
    void draw(android.graphics.Canvas,com.google.android.maps.MapView,boolean) -> draw
    com.google.android.maps.GeoPoint getCenter() -> getCenter
    com.google.android.maps.OverlayItem getFocus() -> getFocus
    int getIndexToDraw(int) -> getIndexToDraw
    com.google.android.maps.OverlayItem getItem(int) -> getItem
    int getLastFocusedIndex() -> getLastFocusedIndex
    int getLatSpanE6() -> getLatSpanE6
    int getLonSpanE6() -> getLonSpanE6
    boolean hitTest(com.google.android.maps.OverlayItem,android.graphics.drawable.Drawable,int,int) -> hitTest
    com.google.android.maps.OverlayItem nextFocus(boolean) -> nextFocus
    boolean onKeyUp(int,android.view.KeyEvent,com.google.android.maps.MapView) -> onKeyUp
    boolean onSnapToItem(int,int,android.graphics.Point,com.google.android.maps.MapView) -> onSnapToItem
    boolean onTap(int) -> onTap
    boolean onTap(com.google.android.maps.GeoPoint,com.google.android.maps.MapView) -> onTap
    boolean onTouchEvent(android.view.MotionEvent,com.google.android.maps.MapView) -> onTouchEvent
    boolean onTrackballEvent(android.view.MotionEvent,com.google.android.maps.MapView) -> onTrackballEvent
    void populate() -> populate
    void setDrawFocusedItem(boolean) -> setDrawFocusedItem
    void setFocus(com.google.android.maps.OverlayItem) -> setFocus
    void setLastFocusedIndex(int) -> setLastFocusedIndex
    void setOnFocusChangeListener(com.google.android.maps.ItemizedOverlay$OnFocusChangeListener) -> setOnFocusChangeListener
    int size() -> size
com.google.android.maps.ItemizedOverlay$OnFocusChangeListener -> com.google.android.maps.ItemizedOverlay$OnFocusChangeListener:
    void onFocusChanged(com.google.android.maps.ItemizedOverlay,com.google.android.maps.OverlayItem) -> onFocusChanged
com.google.android.maps.KeyHelper -> com.google.android.maps.KeyHelper:
    java.lang.String getSignatureFingerprint(android.content.pm.PackageManager,java.lang.String) -> getSignatureFingerprint
    java.lang.String toHex(byte[]) -> toHex
com.google.android.maps.MapActivity -> com.google.android.maps.MapActivity:
    int MAP_DATA_SOURCE_CHINA -> MAP_DATA_SOURCE_CHINA
    int MAP_DATA_SOURCE_DEFAULT -> MAP_DATA_SOURCE_DEFAULT
    java.util.Map drawableIdMap -> drawableIdMap
    java.lang.ref.WeakReference sActivityReference -> sActivityReference
    java.lang.ref.WeakReference sMapReference -> sMapReference
    android_maps_conflict_avoidance.com.google.common.android.AndroidConfig mConfig -> mConfig
    android_maps_conflict_avoidance.com.google.googlenav.datarequest.DataRequestDispatcher mDataRequestDispatcher -> mDataRequestDispatcher
    android_maps_conflict_avoidance.com.google.googlenav.map.Map mMap -> mMap
    com.google.android.maps.MapView mMapView -> mMapView
    android.os.Handler mNetworkHandler -> mNetworkHandler
    com.google.android.maps.NetworkConnectivityListener mNetworkWatcher -> mNetworkWatcher
    android_maps_conflict_avoidance.com.google.googlenav.map.TrafficService mTrafficService -> mTrafficService
    com.google.android.maps.NetworkConnectivityListener access$000(com.google.android.maps.MapActivity) -> access$000
    android_maps_conflict_avoidance.com.google.googlenav.datarequest.DataRequestDispatcher access$100(com.google.android.maps.MapActivity) -> access$100
    android_maps_conflict_avoidance.com.google.common.android.AndroidConfig access$200(com.google.android.maps.MapActivity) -> access$200
    void createMap() -> createMap
    java.lang.String getServerUrl() -> getServerUrl
    void restoreGlobalState() -> restoreGlobalState
    void sendStartSession() -> sendStartSession
    void setupTileDensity() -> setupTileDensity
    boolean isLocationDisplayed() -> isLocationDisplayed
    boolean isRouteDisplayed() -> isRouteDisplayed
    void onCreate(android.os.Bundle) -> onCreate
    void onDestroy() -> onDestroy
    int onGetMapDataSource() -> onGetMapDataSource
    void onNewIntent(android.content.Intent) -> onNewIntent
    void onPause() -> onPause
    void onResume() -> onResume
    void setupMapView(com.google.android.maps.MapView) -> setupMapView
com.google.android.maps.MapActivity$1 -> com.google.android.maps.MapActivity$1:
    com.google.android.maps.MapActivity this$0 -> this$0
    void handleMessage(android.os.Message) -> handleMessage
com.google.android.maps.MapController -> com.google.android.maps.MapController:
    android.view.animation.Transformation EMPTY_TRANSFORM -> EMPTY_TRANSFORM
    android.os.Message mAnimationCompletedMessage -> mAnimationCompletedMessage
    java.lang.Runnable mAnimationCompletedRunnable -> mAnimationCompletedRunnable
    int mDeferredLatSpanE6 -> mDeferredLatSpanE6
    int mDeferredLonSpanE6 -> mDeferredLonSpanE6
    int[] mDeltas -> mDeltas
    boolean mDirty -> mDirty
    boolean mHasBeenMeasured -> mHasBeenMeasured
    com.google.android.maps.MapController$HorizPanState mHorizPan -> mHorizPan
    android_maps_conflict_avoidance.com.google.googlenav.map.Map mMap -> mMap
    com.google.android.maps.MapView mMapView -> mMapView
    float[] mOrigin -> mOrigin
    android.view.animation.Animation mPanAnimation -> mPanAnimation
    android_maps_conflict_avoidance.com.google.map.MapPoint mPanPoint -> mPanPoint
    com.google.android.maps.MapController$VertPanState mVertPan -> mVertPan
    float mXPanSpeed -> mXPanSpeed
    float mYPanSpeed -> mYPanSpeed
    void animateTo(com.google.android.maps.GeoPoint,java.lang.Runnable,android.os.Message) -> animateTo
    void centerMapToInternal(android_maps_conflict_avoidance.com.google.map.MapPoint) -> centerMapToInternal
    float curve(float,float) -> curve
    boolean onKeyDown(int) -> onKeyDown
    boolean onKeyUp(int) -> onKeyUp
    void animateTo(com.google.android.maps.GeoPoint) -> animateTo
    void animateTo(com.google.android.maps.GeoPoint,android.os.Message) -> animateTo
    void animateTo(com.google.android.maps.GeoPoint,java.lang.Runnable) -> animateTo
    void clean() -> clean
    int[] getDeltas() -> getDeltas
    boolean isDirty() -> isDirty
    boolean onKey(android.view.View,int,android.view.KeyEvent) -> onKey
    void onMeasure() -> onMeasure
    void repaint() -> repaint
    void scrollBy(int,int) -> scrollBy
    void scrollByTrackball(int,int) -> scrollByTrackball
    void setCenter(com.google.android.maps.GeoPoint) -> setCenter
    int setZoom(int) -> setZoom
    boolean stepAnimation(long) -> stepAnimation
    void stopAnimation(boolean) -> stopAnimation
    void stopPanning() -> stopPanning
    boolean zoomIn() -> zoomIn
    boolean zoomInFixing(int,int) -> zoomInFixing
    boolean zoomOut() -> zoomOut
    boolean zoomOutFixing(int,int) -> zoomOutFixing
    void zoomTo(android_maps_conflict_avoidance.com.google.map.Zoom) -> zoomTo
    void zoomToSpan(int,int) -> zoomToSpan
com.google.android.maps.MapController$1 -> com.google.android.maps.MapController$1:
    int[] $SwitchMap$com$google$android$maps$MapController$HorizPanState -> $SwitchMap$com$google$android$maps$MapController$HorizPanState
    int[] $SwitchMap$com$google$android$maps$MapController$VertPanState -> $SwitchMap$com$google$android$maps$MapController$VertPanState
com.google.android.maps.MapController$HorizPanState -> com.google.android.maps.MapController$HorizPanState:
    com.google.android.maps.MapController$HorizPanState[] $VALUES -> $VALUES
    com.google.android.maps.MapController$HorizPanState LEFT -> LEFT
    com.google.android.maps.MapController$HorizPanState NONE -> NONE
    com.google.android.maps.MapController$HorizPanState RIGHT -> RIGHT
    com.google.android.maps.MapController$HorizPanState valueOf(java.lang.String) -> valueOf
    com.google.android.maps.MapController$HorizPanState[] values() -> values
com.google.android.maps.MapController$VertPanState -> com.google.android.maps.MapController$VertPanState:
    com.google.android.maps.MapController$VertPanState[] $VALUES -> $VALUES
    com.google.android.maps.MapController$VertPanState DOWN -> DOWN
    com.google.android.maps.MapController$VertPanState NONE -> NONE
    com.google.android.maps.MapController$VertPanState UP -> UP
    com.google.android.maps.MapController$VertPanState valueOf(java.lang.String) -> valueOf
    com.google.android.maps.MapController$VertPanState[] values() -> values
com.google.android.maps.MapView -> com.google.android.maps.MapView:
    java.lang.String KEY_CENTER_LATITUDE -> KEY_CENTER_LATITUDE
    java.lang.String KEY_CENTER_LONGITUDE -> KEY_CENTER_LONGITUDE
    java.lang.String KEY_ZOOM_DISPLAYED -> KEY_ZOOM_DISPLAYED
    java.lang.String KEY_ZOOM_LEVEL -> KEY_ZOOM_LEVEL
    long ZOOM_CONTROLS_TIMEOUT -> ZOOM_CONTROLS_TIMEOUT
    boolean mBuiltInZoomControlsEnabled -> mBuiltInZoomControlsEnabled
    com.google.android.maps.MapController mController -> mController
    com.google.android.maps.PixelConverter mConverter -> mConverter
    android_maps_conflict_avoidance.com.google.common.graphics.android.AndroidGraphics mDrawer -> mDrawer
    boolean mFakeStreetViewEnabled -> mFakeStreetViewEnabled
    com.google.android.maps.GestureDetector mGestureDetector -> mGestureDetector
    android.graphics.drawable.Drawable mGoogleLogo -> mGoogleLogo
    int mGoogleLogoHeight -> mGoogleLogoHeight
    int mGoogleLogoWidth -> mGoogleLogoWidth
    android.os.Handler mHandler -> mHandler
    java.lang.String mKey -> mKey
    int mLastFlingX -> mLastFlingX
    int mLastFlingY -> mLastFlingY
    android_maps_conflict_avoidance.com.google.googlenav.map.Map mMap -> mMap
    com.google.android.maps.OverlayBundle mOverlayBundle -> mOverlayBundle
    android_maps_conflict_avoidance.com.google.googlenav.ui.android.AndroidTileOverlayRenderer mOverlayRenderer -> mOverlayRenderer
    com.google.android.maps.MapView$Repainter mRepainter -> mRepainter
    android.graphics.drawable.Drawable mReticle -> mReticle
    com.google.android.maps.MapView$ReticleDrawMode mReticleDrawMode -> mReticleDrawMode
    android.view.ScaleGestureDetector mScaleGestureDetector -> mScaleGestureDetector
    android.widget.Scroller mScroller -> mScroller
    com.google.android.maps.TrackballGestureDetector mTrackballGestureDetector -> mTrackballGestureDetector
    android.widget.ZoomButtonsController mZoomButtonsController -> mZoomButtonsController
    java.lang.Runnable mZoomControlRunnable -> mZoomControlRunnable
    android.widget.ZoomControls mZoomControls -> mZoomControls
    com.google.android.maps.ZoomHelper mZoomHelper -> mZoomHelper
    android.widget.Scroller access$000(com.google.android.maps.MapView) -> access$000
    com.google.android.maps.MapController access$100(com.google.android.maps.MapView) -> access$100
    long access$1000() -> access$1000
    void access$1100(com.google.android.maps.MapView) -> access$1100
    com.google.android.maps.PixelConverter access$200(com.google.android.maps.MapView) -> access$200
    com.google.android.maps.OverlayBundle access$300(com.google.android.maps.MapView) -> access$300
    int access$400(com.google.android.maps.MapView) -> access$400
    int access$402(com.google.android.maps.MapView,int) -> access$402
    int access$502(com.google.android.maps.MapView,int) -> access$502
    com.google.android.maps.ZoomHelper access$600(com.google.android.maps.MapView) -> access$600
    android.widget.ZoomControls access$700(com.google.android.maps.MapView) -> access$700
    java.lang.Runnable access$800(com.google.android.maps.MapView) -> access$800
    android.os.Handler access$900(com.google.android.maps.MapView) -> access$900
    boolean canZoomIn() -> canZoomIn
    boolean canZoomOut() -> canZoomOut
    android.widget.ZoomButtonsController createZoomButtonsController() -> createZoomButtonsController
    android.widget.ZoomControls createZoomControls() -> createZoomControls
    boolean isLocationDisplayed() -> isLocationDisplayed
    boolean isRouteDisplayed() -> isRouteDisplayed
    void updateZoomControls() -> updateZoomControls
    boolean canCoverCenter() -> canCoverCenter
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    void cleanupMapReferences(android_maps_conflict_avoidance.com.google.googlenav.datarequest.DataRequestDispatcher) -> cleanupMapReferences
    void computeScroll() -> computeScroll
    void displayZoomControls(boolean) -> displayZoomControls
    boolean doZoom(boolean) -> doZoom
    boolean doZoom(boolean,int,int) -> doZoom
    boolean drawMap(android.graphics.Canvas,boolean) -> drawMap
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    com.google.android.maps.MapView$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    com.google.android.maps.MapController getController() -> getController
    int getLatitudeSpan() -> getLatitudeSpan
    int getLongitudeSpan() -> getLongitudeSpan
    com.google.android.maps.GeoPoint getMapCenter() -> getMapCenter
    int getMaxZoomLevel() -> getMaxZoomLevel
    java.util.List getOverlays() -> getOverlays
    com.google.android.maps.Projection getProjection() -> getProjection
    android_maps_conflict_avoidance.com.google.map.Zoom getZoom() -> getZoom
    android.widget.ZoomButtonsController getZoomButtonsController() -> getZoomButtonsController
    android.view.View getZoomControls() -> getZoomControls
    int getZoomLevel() -> getZoomLevel
    boolean isOpaque() -> isOpaque
    boolean isSatellite() -> isSatellite
    boolean isStreetView() -> isStreetView
    boolean isTraffic() -> isTraffic
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onDraw(android.graphics.Canvas) -> onDraw
    void onFocusChanged(boolean,int,android.graphics.Rect) -> onFocusChanged
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    void onLayout(boolean,int,int,int,int) -> onLayout
    void onMeasure(int,int) -> onMeasure
    void onRestoreInstanceState(android.os.Bundle) -> onRestoreInstanceState
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    boolean onTrackballEvent(android.view.MotionEvent) -> onTrackballEvent
    void onVisibilityChanged(android.view.View,int) -> onVisibilityChanged
    void onWindowFocusChanged(boolean) -> onWindowFocusChanged
    void preLoad() -> preLoad
    void restoreMapReferences(android_maps_conflict_avoidance.com.google.googlenav.datarequest.DataRequestDispatcher) -> restoreMapReferences
    void setBuiltInZoomControls(boolean) -> setBuiltInZoomControls
    void setReticleDrawMode(com.google.android.maps.MapView$ReticleDrawMode) -> setReticleDrawMode
    void setSatellite(boolean) -> setSatellite
    void setStreetView(boolean) -> setStreetView
    void setTraffic(boolean) -> setTraffic
    void setup(android_maps_conflict_avoidance.com.google.googlenav.map.Map,android_maps_conflict_avoidance.com.google.googlenav.map.TrafficService,android_maps_conflict_avoidance.com.google.googlenav.datarequest.DataRequestDispatcher) -> setup
com.google.android.maps.MapView$1 -> com.google.android.maps.MapView$1:
    com.google.android.maps.MapView this$0 -> this$0
    boolean onDown(android.view.MotionEvent) -> onDown
    boolean onFling(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onFling
    boolean onScroll(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onScroll
    boolean onSingleTapUp(android.view.MotionEvent) -> onSingleTapUp
com.google.android.maps.MapView$2 -> com.google.android.maps.MapView$2:
    com.google.android.maps.MapView this$0 -> this$0
    boolean onScale(android.view.ScaleGestureDetector) -> onScale
    boolean onScaleBegin(android.view.ScaleGestureDetector) -> onScaleBegin
    void onScaleEnd(android.view.ScaleGestureDetector) -> onScaleEnd
com.google.android.maps.MapView$3 -> com.google.android.maps.MapView$3:
    com.google.android.maps.MapView this$0 -> this$0
    void run() -> run
com.google.android.maps.MapView$4 -> com.google.android.maps.MapView$4:
    com.google.android.maps.MapView this$0 -> this$0
    void onClick(android.view.View) -> onClick
com.google.android.maps.MapView$5 -> com.google.android.maps.MapView$5:
    com.google.android.maps.MapView this$0 -> this$0
    void onClick(android.view.View) -> onClick
com.google.android.maps.MapView$6 -> com.google.android.maps.MapView$6:
    android.graphics.Point mTempPoint -> mTempPoint
    com.google.android.maps.MapView this$0 -> this$0
    android.widget.ZoomButtonsController val$controller -> val$controller
    void onVisibilityChanged(boolean) -> onVisibilityChanged
    void onZoom(boolean) -> onZoom
com.google.android.maps.MapView$LayoutParams -> com.google.android.maps.MapView$LayoutParams:
    int BOTTOM -> BOTTOM
    int BOTTOM_CENTER -> BOTTOM_CENTER
    int CENTER -> CENTER
    int CENTER_HORIZONTAL -> CENTER_HORIZONTAL
    int CENTER_VERTICAL -> CENTER_VERTICAL
    int LEFT -> LEFT
    int MODE_MAP -> MODE_MAP
    int MODE_VIEW -> MODE_VIEW
    int RIGHT -> RIGHT
    int TOP -> TOP
    int TOP_LEFT -> TOP_LEFT
    int alignment -> alignment
    int mode -> mode
    com.google.android.maps.GeoPoint point -> point
    int x -> x
    int y -> y
    java.lang.String debug(java.lang.String) -> debug
com.google.android.maps.MapView$Repainter -> com.google.android.maps.MapView$Repainter:
    java.lang.Thread mThread -> mThread
    com.google.android.maps.MapView this$0 -> this$0
    void onComplete(android_maps_conflict_avoidance.com.google.googlenav.datarequest.DataRequest) -> onComplete
    void onNetworkError(int,boolean,java.lang.String) -> onNetworkError
    void repaint() -> repaint
com.google.android.maps.MapView$Repainter$1 -> com.google.android.maps.MapView$Repainter$1:
    com.google.android.maps.MapView$Repainter this$1 -> this$1
    void run() -> run
com.google.android.maps.MapView$ReticleDrawMode -> com.google.android.maps.MapView$ReticleDrawMode:
    com.google.android.maps.MapView$ReticleDrawMode[] $VALUES -> $VALUES
    com.google.android.maps.MapView$ReticleDrawMode DRAW_RETICLE_NEVER -> DRAW_RETICLE_NEVER
    com.google.android.maps.MapView$ReticleDrawMode DRAW_RETICLE_OVER -> DRAW_RETICLE_OVER
    com.google.android.maps.MapView$ReticleDrawMode DRAW_RETICLE_UNDER -> DRAW_RETICLE_UNDER
    com.google.android.maps.MapView$ReticleDrawMode valueOf(java.lang.String) -> valueOf
    com.google.android.maps.MapView$ReticleDrawMode[] values() -> values
com.google.android.maps.MyLocationOverlay -> com.google.android.maps.MyLocationOverlay:
    java.lang.String[] DESIRED_PROVIDER_NAMES -> DESIRED_PROVIDER_NAMES
    android.graphics.Paint LOCATION_ACCURACY_FILL_PAINT -> LOCATION_ACCURACY_FILL_PAINT
    android.graphics.Paint LOCATION_ACCURACY_STROKE_PAINT -> LOCATION_ACCURACY_STROKE_PAINT
    android.graphics.drawable.Drawable mCompassArrow -> mCompassArrow
    android.graphics.drawable.Drawable mCompassBase -> mCompassBase
    android.content.Context mContext -> mContext
    com.google.android.maps.MapController mController -> mController
    java.util.ArrayList mEnabledProviders -> mEnabledProviders
    boolean mIsCompassEnabled -> mIsCompassEnabled
    boolean mIsMyLocationEnabled -> mIsMyLocationEnabled
    boolean mIsOnScreen -> mIsOnScreen
    android.location.Location mLastFix -> mLastFix
    boolean mLocationChangedSinceLastDraw -> mLocationChangedSinceLastDraw
    android.graphics.drawable.LevelListDrawable mLocationDot -> mLocationDot
    int mLocationDotHalfHeight -> mLocationDotHalfHeight
    int mLocationDotHalfWidth -> mLocationDotHalfWidth
    com.google.android.maps.MapView mMapView -> mMapView
    com.google.android.maps.GeoPoint mMyLocation -> mMyLocation
    long mMyLocationTime -> mMyLocationTime
    android.location.Location mNetworkLocation -> mNetworkLocation
    android.os.Handler mNetworkLocationHandler -> mNetworkLocationHandler
    float mOrientation -> mOrientation
    com.google.android.maps.GeoPoint mPreviousMyLocation -> mPreviousMyLocation
    java.util.Queue mRunOnFirstFix -> mRunOnFirstFix
    android.graphics.Point mTempPoint -> mTempPoint
    android.graphics.Rect mTempRect -> mTempRect
    void clearNetworkLocationRebroadcasts() -> clearNetworkLocationRebroadcasts
    android.graphics.drawable.Drawable getCompassArrow() -> getCompassArrow
    android.graphics.drawable.Drawable getCompassBase() -> getCompassBase
    android.graphics.drawable.LevelListDrawable getLocationDot() -> getLocationDot
    boolean isCloseToPoint(int,int,com.google.android.maps.MapView) -> isCloseToPoint
    boolean isLocationOnScreen(com.google.android.maps.MapView,com.google.android.maps.GeoPoint) -> isLocationOnScreen
    float isect(float,float,float) -> isect
    void disableCompass() -> disableCompass
    void disableMyLocation() -> disableMyLocation
    boolean dispatchTap() -> dispatchTap
    boolean draw(android.graphics.Canvas,com.google.android.maps.MapView,boolean,long) -> draw
    void drawCompass(android.graphics.Canvas,float) -> drawCompass
    void drawMyLocation(android.graphics.Canvas,com.google.android.maps.MapView,android.location.Location,com.google.android.maps.GeoPoint,long) -> drawMyLocation
    boolean enableCompass() -> enableCompass
    boolean enableMyLocation() -> enableMyLocation
    android.location.Location getLastFix() -> getLastFix
    com.google.android.maps.GeoPoint getMyLocation() -> getMyLocation
    float getOrientation() -> getOrientation
    boolean isCompassEnabled() -> isCompassEnabled
    boolean isMyLocationEnabled() -> isMyLocationEnabled
    void onAccuracyChanged(int,int) -> onAccuracyChanged
    void onLocationChanged(android.location.Location) -> onLocationChanged
    void onProviderDisabled(java.lang.String) -> onProviderDisabled
    void onProviderEnabled(java.lang.String) -> onProviderEnabled
    void onSensorChanged(int,float[]) -> onSensorChanged
    boolean onSnapToItem(int,int,android.graphics.Point,com.google.android.maps.MapView) -> onSnapToItem
    void onStatusChanged(java.lang.String,int,android.os.Bundle) -> onStatusChanged
    boolean onTap(com.google.android.maps.GeoPoint,com.google.android.maps.MapView) -> onTap
    boolean runOnFirstFix(java.lang.Runnable) -> runOnFirstFix
com.google.android.maps.MyLocationOverlay$1 -> com.google.android.maps.MyLocationOverlay$1:
    com.google.android.maps.MyLocationOverlay this$0 -> this$0
    void handleMessage(android.os.Message) -> handleMessage
com.google.android.maps.MyLocationOverlay$NameAndDate -> com.google.android.maps.MyLocationOverlay$NameAndDate:
    long date -> date
    java.lang.String name -> name
com.google.android.maps.NetworkConnectivityListener -> com.google.android.maps.NetworkConnectivityListener:
    android.content.Context mContext -> mContext
    java.util.HashMap mHandlers -> mHandlers
    boolean mIsFailover -> mIsFailover
    boolean mListening -> mListening
    android.net.NetworkInfo mNetworkInfo -> mNetworkInfo
    android.net.NetworkInfo mOtherNetworkInfo -> mOtherNetworkInfo
    java.lang.String mReason -> mReason
    com.google.android.maps.NetworkConnectivityListener$ConnectivityBroadcastReceiver mReceiver -> mReceiver
    com.google.android.maps.NetworkConnectivityListener$State mState -> mState
    boolean access$000(com.google.android.maps.NetworkConnectivityListener) -> access$000
    com.google.android.maps.NetworkConnectivityListener$State access$100(com.google.android.maps.NetworkConnectivityListener) -> access$100
    com.google.android.maps.NetworkConnectivityListener$State access$102(com.google.android.maps.NetworkConnectivityListener,com.google.android.maps.NetworkConnectivityListener$State) -> access$102
    android.net.NetworkInfo access$202(com.google.android.maps.NetworkConnectivityListener,android.net.NetworkInfo) -> access$202
    android.net.NetworkInfo access$302(com.google.android.maps.NetworkConnectivityListener,android.net.NetworkInfo) -> access$302
    java.lang.String access$402(com.google.android.maps.NetworkConnectivityListener,java.lang.String) -> access$402
    boolean access$502(com.google.android.maps.NetworkConnectivityListener,boolean) -> access$502
    java.util.HashMap access$600(com.google.android.maps.NetworkConnectivityListener) -> access$600
    com.google.android.maps.NetworkConnectivityListener$State getState() -> getState
    void registerHandler(android.os.Handler,int) -> registerHandler
    void startListening(android.content.Context) -> startListening
    void stopListening() -> stopListening
    void unregisterHandler(android.os.Handler) -> unregisterHandler
com.google.android.maps.NetworkConnectivityListener$1 -> com.google.android.maps.NetworkConnectivityListener$1:
com.google.android.maps.NetworkConnectivityListener$ConnectivityBroadcastReceiver -> com.google.android.maps.NetworkConnectivityListener$ConnectivityBroadcastReceiver:
    com.google.android.maps.NetworkConnectivityListener this$0 -> this$0
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.google.android.maps.NetworkConnectivityListener$State -> com.google.android.maps.NetworkConnectivityListener$State:
    com.google.android.maps.NetworkConnectivityListener$State[] $VALUES -> $VALUES
    com.google.android.maps.NetworkConnectivityListener$State CONNECTED -> CONNECTED
    com.google.android.maps.NetworkConnectivityListener$State NOT_CONNECTED -> NOT_CONNECTED
    com.google.android.maps.NetworkConnectivityListener$State UNKNOWN -> UNKNOWN
    com.google.android.maps.NetworkConnectivityListener$State valueOf(java.lang.String) -> valueOf
    com.google.android.maps.NetworkConnectivityListener$State[] values() -> values
com.google.android.maps.Overlay -> com.google.android.maps.Overlay:
    float SHADOW_X_SKEW -> SHADOW_X_SKEW
    float SHADOW_Y_SCALE -> SHADOW_Y_SCALE
    void drawAt(android.graphics.Canvas,android.graphics.drawable.Drawable,int,int,boolean) -> drawAt
    void draw(android.graphics.Canvas,com.google.android.maps.MapView,boolean) -> draw
    boolean draw(android.graphics.Canvas,com.google.android.maps.MapView,boolean,long) -> draw
    boolean onKeyDown(int,android.view.KeyEvent,com.google.android.maps.MapView) -> onKeyDown
    boolean onKeyUp(int,android.view.KeyEvent,com.google.android.maps.MapView) -> onKeyUp
    boolean onTap(com.google.android.maps.GeoPoint,com.google.android.maps.MapView) -> onTap
    boolean onTouchEvent(android.view.MotionEvent,com.google.android.maps.MapView) -> onTouchEvent
    boolean onTrackballEvent(android.view.MotionEvent,com.google.android.maps.MapView) -> onTrackballEvent
com.google.android.maps.Overlay$Snappable -> com.google.android.maps.Overlay$Snappable:
    boolean onSnapToItem(int,int,android.graphics.Point,com.google.android.maps.MapView) -> onSnapToItem
com.google.android.maps.OverlayBundle -> com.google.android.maps.OverlayBundle:
    java.util.List mOverlays -> mOverlays
    boolean draw(android.graphics.Canvas,com.google.android.maps.MapView,long) -> draw
    java.util.List getOverlays() -> getOverlays
    boolean onKeyDown(int,android.view.KeyEvent,com.google.android.maps.MapView) -> onKeyDown
    boolean onKeyUp(int,android.view.KeyEvent,com.google.android.maps.MapView) -> onKeyUp
    boolean onTap(com.google.android.maps.GeoPoint,com.google.android.maps.MapView) -> onTap
    boolean onTouchEvent(android.view.MotionEvent,com.google.android.maps.MapView) -> onTouchEvent
    boolean onTrackballEvent(android.view.MotionEvent,com.google.android.maps.MapView) -> onTrackballEvent
com.google.android.maps.OverlayItem -> com.google.android.maps.OverlayItem:
    int ITEM_STATE_FOCUSED_MASK -> ITEM_STATE_FOCUSED_MASK
    int ITEM_STATE_PRESSED_MASK -> ITEM_STATE_PRESSED_MASK
    int ITEM_STATE_SELECTED_MASK -> ITEM_STATE_SELECTED_MASK
    int[][] ITEM_STATE_TO_STATE_SET -> ITEM_STATE_TO_STATE_SET
    android.graphics.drawable.Drawable mMarker -> mMarker
    com.google.android.maps.GeoPoint mPoint -> mPoint
    java.lang.String mSnippet -> mSnippet
    java.lang.String mTitle -> mTitle
    void setState(android.graphics.drawable.Drawable,int) -> setState
    android.graphics.drawable.Drawable getMarker(int) -> getMarker
    com.google.android.maps.GeoPoint getPoint() -> getPoint
    java.lang.String getSnippet() -> getSnippet
    java.lang.String getTitle() -> getTitle
    java.lang.String routableAddress() -> routableAddress
    void setMarker(android.graphics.drawable.Drawable) -> setMarker
com.google.android.maps.PixelConverter -> com.google.android.maps.PixelConverter:
    android.graphics.Matrix mInverse -> mInverse
    android_maps_conflict_avoidance.com.google.googlenav.map.Map mMap -> mMap
    android.graphics.Matrix mMatrix -> mMatrix
    float[] mTempFloats -> mTempFloats
    android_maps_conflict_avoidance.com.google.common.geom.Point mTempPoint -> mTempPoint
    void transformTempPoint() -> transformTempPoint
    com.google.android.maps.GeoPoint fromPixels(int,int) -> fromPixels
    android.graphics.Matrix getInverseMatrix() -> getInverseMatrix
    float metersToEquatorPixels(float) -> metersToEquatorPixels
    void resetMatrix() -> resetMatrix
    void setMatricesFrom(com.google.android.maps.PixelConverter) -> setMatricesFrom
    void setMatrix(android.graphics.Matrix,float,com.google.android.maps.GeoPoint,float,float) -> setMatrix
    android.graphics.Point toPixels(com.google.android.maps.GeoPoint,android.graphics.Point) -> toPixels
    android.graphics.Point toPixels(com.google.android.maps.GeoPoint,android.graphics.Point,boolean) -> toPixels
com.google.android.maps.Projection -> com.google.android.maps.Projection:
    com.google.android.maps.GeoPoint fromPixels(int,int) -> fromPixels
    float metersToEquatorPixels(float) -> metersToEquatorPixels
    android.graphics.Point toPixels(com.google.android.maps.GeoPoint,android.graphics.Point) -> toPixels
com.google.android.maps.TrackballGestureDetector -> com.google.android.maps.TrackballGestureDetector:
    boolean mAlwaysInTapRegion -> mAlwaysInTapRegion
    float mCurrentDownX -> mCurrentDownX
    float mCurrentDownY -> mCurrentDownY
    long mDownTime -> mDownTime
    float mFirstDownX -> mFirstDownX
    float mFirstDownY -> mFirstDownY
    android.os.Handler mHandler -> mHandler
    boolean mInLongPress -> mInLongPress
    boolean mIsDoubleTap -> mIsDoubleTap
    boolean mIsScroll -> mIsScroll
    boolean mIsTap -> mIsTap
    float mLastMotionX -> mLastMotionX
    float mLastMotionY -> mLastMotionY
    java.lang.Runnable mOurLongPressRunnable -> mOurLongPressRunnable
    long mPreviousDownTime -> mPreviousDownTime
    float mScrollX -> mScrollX
    float mScrollY -> mScrollY
    java.lang.Runnable mUserLongPressRunnable -> mUserLongPressRunnable
    void access$000(com.google.android.maps.TrackballGestureDetector) -> access$000
    void dispatchLongPress() -> dispatchLongPress
    void analyze(android.view.MotionEvent) -> analyze
    float getCurrentDownX() -> getCurrentDownX
    float getCurrentDownY() -> getCurrentDownY
    float getFirstDownX() -> getFirstDownX
    float getFirstDownY() -> getFirstDownY
    boolean isDoubleTap() -> isDoubleTap
    boolean isScroll() -> isScroll
    boolean isTap() -> isTap
    void registerLongPressCallback(java.lang.Runnable) -> registerLongPressCallback
    float scrollX() -> scrollX
    float scrollY() -> scrollY
com.google.android.maps.TrackballGestureDetector$1 -> com.google.android.maps.TrackballGestureDetector$1:
    com.google.android.maps.TrackballGestureDetector this$0 -> this$0
    void run() -> run
com.google.android.maps.ZoomHelper -> com.google.android.maps.ZoomHelper:
    android.view.animation.AnimationSet mAnimations -> mAnimations
    android.graphics.Paint mBitmapPaint -> mBitmapPaint
    long mCommitTime -> mCommitTime
    com.google.android.maps.MapController mController -> mController
    boolean mFading -> mFading
    android.view.animation.Transformation mLastDrawnScale -> mLastDrawnScale
    boolean mManualZoomActive -> mManualZoomActive
    com.google.android.maps.MapView mMapView -> mMapView
    com.google.android.maps.PixelConverter mPCAtBeginningOfManualZoom -> mPCAtBeginningOfManualZoom
    com.google.android.maps.ZoomHelper$Snapshot mSnapshot -> mSnapshot
    android.graphics.Matrix mTempMatrix -> mTempMatrix
    android.graphics.Point mTempPoint -> mTempPoint
    void addFade() -> addFade
    void addScale(long) -> addScale
    int calculateRoundedZoom(float,int) -> calculateRoundedZoom
    void createSnapshot() -> createSnapshot
    float getScale(android_maps_conflict_avoidance.com.google.map.Zoom,android_maps_conflict_avoidance.com.google.map.Zoom) -> getScale
    void stepAnimation(long,com.google.android.maps.PixelConverter) -> stepAnimation
    void updateSnapshotFixedPoint(float,float) -> updateSnapshotFixedPoint
    void updateSnapshotFixedPoint(com.google.android.maps.PixelConverter,android.graphics.Matrix,float,float) -> updateSnapshotFixedPoint
    void beginZoom(float,float) -> beginZoom
    boolean doZoom(android_maps_conflict_avoidance.com.google.map.Zoom,boolean,int,int) -> doZoom
    boolean doZoom(boolean,boolean,int,int) -> doZoom
    void endZoom() -> endZoom
    boolean onDraw(android.graphics.Canvas,com.google.android.maps.MapView,long) -> onDraw
    boolean shouldDrawMap(long) -> shouldDrawMap
    void updateZoom(float,float,float) -> updateZoom
com.google.android.maps.ZoomHelper$1 -> com.google.android.maps.ZoomHelper$1:
com.google.android.maps.ZoomHelper$Snapshot -> com.google.android.maps.ZoomHelper$Snapshot:
    android.graphics.Bitmap bitmap -> bitmap
    com.google.android.maps.GeoPoint fixedPoint -> fixedPoint
    float[] fixedPointCoords -> fixedPointCoords
    float[] fixedPointScreenCoords -> fixedPointScreenCoords
    android_maps_conflict_avoidance.com.google.map.Zoom zoom -> zoom
com.hp.hpl.sparta.BuildDocument -> com.hp.hpl.sparta.BuildDocument:
    com.hp.hpl.sparta.ParseLog log_ -> log_
    com.hp.hpl.sparta.Element currentElement_ -> currentElement_
    com.hp.hpl.sparta.Document doc_ -> doc_
    com.hp.hpl.sparta.ParseSource parseSource_ -> parseSource_
    void setParseSource(com.hp.hpl.sparta.ParseSource) -> setParseSource
    com.hp.hpl.sparta.ParseSource getParseSource() -> getParseSource
    java.lang.String toString() -> toString
    java.lang.String getSystemId() -> getSystemId
    int getLineNumber() -> getLineNumber
    com.hp.hpl.sparta.Document getDocument() -> getDocument
    void startDocument() -> startDocument
    void endDocument() -> endDocument
    void startElement(com.hp.hpl.sparta.Element) -> startElement
    void endElement(com.hp.hpl.sparta.Element) -> endElement
    void characters(char[],int,int) -> characters
com.hp.hpl.sparta.CharCircBuffer -> com.hp.hpl.sparta.CharCircBuffer:
    int[] buf_ -> buf_
    int next_ -> next_
    int total_ -> total_
    boolean enabled_ -> enabled_
    void enable() -> enable
    void disable() -> disable
    void addInt(int) -> addInt
    void addChar(char) -> addChar
    void addRaw(int) -> addRaw
    void addString(java.lang.String) -> addString
    java.lang.String toString() -> toString
com.hp.hpl.sparta.DOMException -> com.hp.hpl.sparta.DOMException:
    short code -> code
    short DOMSTRING_SIZE_ERR -> DOMSTRING_SIZE_ERR
    short HIERARCHY_REQUEST_ERR -> HIERARCHY_REQUEST_ERR
    short NOT_FOUND_ERR -> NOT_FOUND_ERR
com.hp.hpl.sparta.DefaultLog -> com.hp.hpl.sparta.DefaultLog:
    void error(java.lang.String,java.lang.String,int) -> error
    void warning(java.lang.String,java.lang.String,int) -> warning
    void note(java.lang.String,java.lang.String,int) -> note
com.hp.hpl.sparta.DefaultParseHandler -> com.hp.hpl.sparta.DefaultParseHandler:
    com.hp.hpl.sparta.ParseSource parseSource_ -> parseSource_
    void setParseSource(com.hp.hpl.sparta.ParseSource) -> setParseSource
    com.hp.hpl.sparta.ParseSource getParseSource() -> getParseSource
    void startDocument() -> startDocument
    void endDocument() -> endDocument
    void startElement(com.hp.hpl.sparta.Element) -> startElement
    void endElement(com.hp.hpl.sparta.Element) -> endElement
    void characters(char[],int,int) -> characters
com.hp.hpl.sparta.Document -> com.hp.hpl.sparta.Document:
    boolean DEBUG -> DEBUG
    java.lang.Integer ONE -> ONE
    java.util.Enumeration EMPTY -> EMPTY
    com.hp.hpl.sparta.Element rootElement_ -> rootElement_
    java.lang.String systemId_ -> systemId_
    com.hp.hpl.sparta.Sparta$Cache indices_ -> indices_
    java.util.Vector observers_ -> observers_
    java.util.Hashtable indexible_ -> indexible_
    java.lang.Object clone() -> clone
    java.lang.String getSystemId() -> getSystemId
    void setSystemId(java.lang.String) -> setSystemId
    java.lang.String toString() -> toString
    com.hp.hpl.sparta.Element getDocumentElement() -> getDocumentElement
    void setDocumentElement(com.hp.hpl.sparta.Element) -> setDocumentElement
    com.hp.hpl.sparta.XPathVisitor visitor(java.lang.String,boolean) -> visitor
    com.hp.hpl.sparta.XPathVisitor visitor(com.hp.hpl.sparta.xpath.XPath,boolean) -> visitor
    java.util.Enumeration xpathSelectElements(java.lang.String) -> xpathSelectElements
    void monitor(com.hp.hpl.sparta.xpath.XPath) -> monitor
    java.util.Enumeration xpathSelectStrings(java.lang.String) -> xpathSelectStrings
    com.hp.hpl.sparta.Element xpathSelectElement(java.lang.String) -> xpathSelectElement
    java.lang.String xpathSelectString(java.lang.String) -> xpathSelectString
    boolean xpathEnsure(java.lang.String) -> xpathEnsure
    boolean xpathHasIndex(java.lang.String) -> xpathHasIndex
    com.hp.hpl.sparta.Document$Index xpathGetIndex(java.lang.String) -> xpathGetIndex
    void addObserver(com.hp.hpl.sparta.Document$Observer) -> addObserver
    void deleteObserver(com.hp.hpl.sparta.Document$Observer) -> deleteObserver
    void toString(java.io.Writer) -> toString
    void notifyObservers() -> notifyObservers
    void toXml(java.io.Writer) -> toXml
    boolean equals(java.lang.Object) -> equals
    int computeHashCode() -> computeHashCode
com.hp.hpl.sparta.Document$Index -> com.hp.hpl.sparta.Document$Index:
    com.hp.hpl.sparta.Sparta$Cache dict_ -> dict_
    com.hp.hpl.sparta.xpath.XPath xpath_ -> xpath_
    java.lang.String attrName_ -> attrName_
    com.hp.hpl.sparta.Document this$0 -> this$0
    java.util.Enumeration get(java.lang.String) -> get
    int size() -> size
    void update(com.hp.hpl.sparta.Document) -> update
    void regenerate() -> regenerate
com.hp.hpl.sparta.Document$Observer -> com.hp.hpl.sparta.Document$Observer:
    void update(com.hp.hpl.sparta.Document) -> update
com.hp.hpl.sparta.DocumentSource -> com.hp.hpl.sparta.DocumentSource:
    com.hp.hpl.sparta.Document getDocument() -> getDocument
com.hp.hpl.sparta.Element -> com.hp.hpl.sparta.Element:
    boolean DEBUG -> DEBUG
    com.hp.hpl.sparta.Node firstChild_ -> firstChild_
    com.hp.hpl.sparta.Node lastChild_ -> lastChild_
    java.util.Hashtable attributes_ -> attributes_
    java.util.Vector attributeNames_ -> attributeNames_
    java.lang.String tagName_ -> tagName_
    java.lang.Object clone() -> clone
    com.hp.hpl.sparta.Element cloneShallow() -> cloneShallow
    com.hp.hpl.sparta.Element cloneElement(boolean) -> cloneElement
    java.lang.String getTagName() -> getTagName
    void setTagName(java.lang.String) -> setTagName
    com.hp.hpl.sparta.Node getFirstChild() -> getFirstChild
    com.hp.hpl.sparta.Node getLastChild() -> getLastChild
    java.util.Enumeration getAttributeNames() -> getAttributeNames
    java.lang.String getAttribute(java.lang.String) -> getAttribute
    void setAttribute(java.lang.String,java.lang.String) -> setAttribute
    void removeAttribute(java.lang.String) -> removeAttribute
    void appendChildNoChecking(com.hp.hpl.sparta.Node) -> appendChildNoChecking
    void appendChild(com.hp.hpl.sparta.Node) -> appendChild
    boolean canHaveAsDescendent(com.hp.hpl.sparta.Node) -> canHaveAsDescendent
    boolean removeChildNoChecking(com.hp.hpl.sparta.Node) -> removeChildNoChecking
    void removeChild(com.hp.hpl.sparta.Node) -> removeChild
    void replaceChild(com.hp.hpl.sparta.Element,com.hp.hpl.sparta.Node) -> replaceChild
    void replaceChild(com.hp.hpl.sparta.Text,com.hp.hpl.sparta.Node) -> replaceChild
    void replaceChild_(com.hp.hpl.sparta.Node,com.hp.hpl.sparta.Node) -> replaceChild_
    void toString(java.io.Writer) -> toString
    void toXml(java.io.Writer) -> toXml
    com.hp.hpl.sparta.XPathVisitor visitor(java.lang.String,boolean) -> visitor
    java.util.Enumeration xpathSelectElements(java.lang.String) -> xpathSelectElements
    java.util.Enumeration xpathSelectStrings(java.lang.String) -> xpathSelectStrings
    boolean xpathEnsure(java.lang.String) -> xpathEnsure
    com.hp.hpl.sparta.Element xpathSelectElement(java.lang.String) -> xpathSelectElement
    java.lang.String xpathSelectString(java.lang.String) -> xpathSelectString
    boolean equals(java.lang.Object) -> equals
    int computeHashCode() -> computeHashCode
    void checkInvariant() -> checkInvariant
com.hp.hpl.sparta.EmptyEnumeration -> com.hp.hpl.sparta.EmptyEnumeration:
    boolean hasMoreElements() -> hasMoreElements
    java.lang.Object nextElement() -> nextElement
com.hp.hpl.sparta.EncodingMismatchException -> com.hp.hpl.sparta.EncodingMismatchException:
    java.lang.String declaredEncoding_ -> declaredEncoding_
    java.lang.String getDeclaredEncoding() -> getDeclaredEncoding
com.hp.hpl.sparta.Node -> com.hp.hpl.sparta.Node:
    com.hp.hpl.sparta.Document doc_ -> doc_
    com.hp.hpl.sparta.Element parentNode_ -> parentNode_
    com.hp.hpl.sparta.Node previousSibling_ -> previousSibling_
    com.hp.hpl.sparta.Node nextSibling_ -> nextSibling_
    java.lang.Object annotation_ -> annotation_
    int hash_ -> hash_
    void notifyObservers() -> notifyObservers
    void setOwnerDocument(com.hp.hpl.sparta.Document) -> setOwnerDocument
    com.hp.hpl.sparta.Document getOwnerDocument() -> getOwnerDocument
    com.hp.hpl.sparta.Element getParentNode() -> getParentNode
    com.hp.hpl.sparta.Node getPreviousSibling() -> getPreviousSibling
    com.hp.hpl.sparta.Node getNextSibling() -> getNextSibling
    java.lang.Object getAnnotation() -> getAnnotation
    void setAnnotation(java.lang.Object) -> setAnnotation
    void setParentNode(com.hp.hpl.sparta.Element) -> setParentNode
    void insertAtEndOfLinkedList(com.hp.hpl.sparta.Node) -> insertAtEndOfLinkedList
    void removeFromLinkedList() -> removeFromLinkedList
    void replaceInLinkedList(com.hp.hpl.sparta.Node) -> replaceInLinkedList
    java.lang.String toXml() -> toXml
    boolean xpathSetStrings(java.lang.String,java.lang.String) -> xpathSetStrings
    com.hp.hpl.sparta.Element makeMatching(com.hp.hpl.sparta.Element,com.hp.hpl.sparta.xpath.Step,java.lang.String) -> makeMatching
    java.util.Enumeration xpathSelectElements(java.lang.String) -> xpathSelectElements
    java.util.Enumeration xpathSelectStrings(java.lang.String) -> xpathSelectStrings
    com.hp.hpl.sparta.Element xpathSelectElement(java.lang.String) -> xpathSelectElement
    java.lang.String xpathSelectString(java.lang.String) -> xpathSelectString
    java.lang.Object clone() -> clone
    java.lang.String toString() -> toString
    void toString(java.io.Writer) -> toString
    void toXml(java.io.Writer) -> toXml
    void htmlEncode(java.io.Writer,java.lang.String) -> htmlEncode
    int computeHashCode() -> computeHashCode
    int hashCode() -> hashCode
com.hp.hpl.sparta.Node$1 -> com.hp.hpl.sparta.Node$1:
    com.hp.hpl.sparta.Element val$newChild -> val$newChild
    com.hp.hpl.sparta.Element val$parent -> val$parent
    java.lang.String val$msgContext -> val$msgContext
    java.lang.String val$tagName -> val$tagName
    com.hp.hpl.sparta.Node this$0 -> this$0
    void visit(com.hp.hpl.sparta.xpath.TrueExpr) -> visit
    void visit(com.hp.hpl.sparta.xpath.AttrExistsExpr) -> visit
    void visit(com.hp.hpl.sparta.xpath.AttrEqualsExpr) -> visit
    void visit(com.hp.hpl.sparta.xpath.AttrNotEqualsExpr) -> visit
    void visit(com.hp.hpl.sparta.xpath.AttrLessExpr) -> visit
    void visit(com.hp.hpl.sparta.xpath.AttrGreaterExpr) -> visit
    void visit(com.hp.hpl.sparta.xpath.TextExistsExpr) -> visit
    void visit(com.hp.hpl.sparta.xpath.TextEqualsExpr) -> visit
    void visit(com.hp.hpl.sparta.xpath.TextNotEqualsExpr) -> visit
    void visit(com.hp.hpl.sparta.xpath.PositionEqualsExpr) -> visit
com.hp.hpl.sparta.NodeListWithPosition -> com.hp.hpl.sparta.NodeListWithPosition:
    java.lang.Integer ONE -> ONE
    java.lang.Integer TWO -> TWO
    java.lang.Integer THREE -> THREE
    java.lang.Integer FOUR -> FOUR
    java.lang.Integer FIVE -> FIVE
    java.lang.Integer SIX -> SIX
    java.lang.Integer SEVEN -> SEVEN
    java.lang.Integer EIGHT -> EIGHT
    java.lang.Integer NINE -> NINE
    java.lang.Integer TEN -> TEN
    java.util.Vector vector_ -> vector_
    java.util.Hashtable positions_ -> positions_
    java.util.Enumeration iterator() -> iterator
    void removeAllElements() -> removeAllElements
    void add(java.lang.String) -> add
    java.lang.Integer identity(com.hp.hpl.sparta.Node) -> identity
    void add(com.hp.hpl.sparta.Node,int) -> add
    int position(com.hp.hpl.sparta.Node) -> position
    java.lang.String toString() -> toString
com.hp.hpl.sparta.ParseByteStream -> com.hp.hpl.sparta.ParseByteStream:
    com.hp.hpl.sparta.ParseCharStream parseSource_ -> parseSource_
    java.lang.String toString() -> toString
    java.lang.String getSystemId() -> getSystemId
    int getLineNumber() -> getLineNumber
    java.lang.String guessEncoding(java.lang.String,byte[],int,com.hp.hpl.sparta.ParseLog) -> guessEncoding
    java.lang.String hex(byte) -> hex
    boolean equals(byte[],int) -> equals
    boolean equals(byte[],short) -> equals
    java.lang.String fixEncoding(java.lang.String) -> fixEncoding
com.hp.hpl.sparta.ParseCharStream -> com.hp.hpl.sparta.ParseCharStream:
    boolean DEBUG -> DEBUG
    boolean H_DEBUG -> H_DEBUG
    char[] NAME_PUNCT_CHARS -> NAME_PUNCT_CHARS
    int MAX_COMMON_CHAR -> MAX_COMMON_CHAR
    boolean[] IS_NAME_CHAR -> IS_NAME_CHAR
    char[] COMMENT_BEGIN -> COMMENT_BEGIN
    char[] COMMENT_END -> COMMENT_END
    char[] PI_BEGIN -> PI_BEGIN
    char[] QU_END -> QU_END
    char[] DOCTYPE_BEGIN -> DOCTYPE_BEGIN
    char[] XML_BEGIN -> XML_BEGIN
    char[] ENCODING -> ENCODING
    char[] VERSION -> VERSION
    char[] VERSIONNUM_PUNC_CHARS -> VERSIONNUM_PUNC_CHARS
    char[] MARKUPDECL_BEGIN -> MARKUPDECL_BEGIN
    char[] CHARREF_BEGIN -> CHARREF_BEGIN
    char[] ENTITY_BEGIN -> ENTITY_BEGIN
    char[] NDATA -> NDATA
    char[] SYSTEM -> SYSTEM
    char[] PUBLIC -> PUBLIC
    char[] BEGIN_CDATA -> BEGIN_CDATA
    char[] END_CDATA -> END_CDATA
    char[] END_EMPTYTAG -> END_EMPTYTAG
    char[] BEGIN_ETAG -> BEGIN_ETAG
    java.lang.String systemId_ -> systemId_
    java.lang.String docTypeName_ -> docTypeName_
    java.io.Reader reader_ -> reader_
    java.util.Hashtable entities_ -> entities_
    java.util.Hashtable pes_ -> pes_
    com.hp.hpl.sparta.ParseLog log_ -> log_
    java.lang.String encoding_ -> encoding_
    int ch_ -> ch_
    boolean isExternalDtd_ -> isExternalDtd_
    int CBUF_SIZE -> CBUF_SIZE
    char[] cbuf_ -> cbuf_
    int curPos_ -> curPos_
    int endPos_ -> endPos_
    boolean eos_ -> eos_
    int TMP_BUF_SIZE -> TMP_BUF_SIZE
    char[] tmpBuf_ -> tmpBuf_
    int lineNumber_ -> lineNumber_
    com.hp.hpl.sparta.CharCircBuffer history_ -> history_
    int HISTORY_LENGTH -> HISTORY_LENGTH
    com.hp.hpl.sparta.ParseHandler handler_ -> handler_
    java.lang.String toString() -> toString
    java.lang.String getSystemId() -> getSystemId
    int getLineNumber() -> getLineNumber
    int getLastCharRead() -> getLastCharRead
    java.lang.String getHistory() -> getHistory
    int fillBuf() -> fillBuf
    int fillBuf(int) -> fillBuf
    char readChar() -> readChar
    char peekChar() -> peekChar
    void readChar(char) -> readChar
    boolean isChar(char) -> isChar
    char readChar(char,char) -> readChar
    char readChar(char,char,char,char) -> readChar
    boolean isChar(char,char) -> isChar
    boolean isChar(char,char,char,char) -> isChar
    boolean isIn(char,char[]) -> isIn
    void readS() -> readS
    boolean isS() -> isS
    boolean isNameChar() -> isNameChar
    boolean isLetter(char) -> isLetter
    boolean isNameChar(char) -> isNameChar
    boolean isExtender(char) -> isExtender
    java.lang.String readName() -> readName
    char readNameStartChar() -> readNameStartChar
    java.lang.String readEntityValue() -> readEntityValue
    boolean isEntityValue() -> isEntityValue
    void readSystemLiteral() -> readSystemLiteral
    void readPubidLiteral() -> readPubidLiteral
    boolean isMisc() -> isMisc
    void readMisc() -> readMisc
    void readComment() -> readComment
    boolean isComment() -> isComment
    void readPi() -> readPi
    boolean isPi() -> isPi
    void readProlog() -> readProlog
    boolean isDocTypeDecl() -> isDocTypeDecl
    void readXmlDecl() -> readXmlDecl
    boolean isXmlDecl() -> isXmlDecl
    boolean isEncodingDecl() -> isEncodingDecl
    java.lang.String readEncodingDecl() -> readEncodingDecl
    void readVersionInfo() -> readVersionInfo
    void readEq() -> readEq
    boolean isVersionNumChar() -> isVersionNumChar
    void readVersionNum() -> readVersionNum
    void readDocTypeDecl() -> readDocTypeDecl
    void readDeclSep() -> readDeclSep
    boolean isDeclSep() -> isDeclSep
    void readMarkupDecl() -> readMarkupDecl
    char readCharRef() -> readCharRef
    char[] readReference() -> readReference
    boolean isReference() -> isReference
    java.lang.String readEntityRef() -> readEntityRef
    java.lang.String readPeReference() -> readPeReference
    boolean isPeReference() -> isPeReference
    void readEntityDecl() -> readEntityDecl
    boolean isEntityDecl() -> isEntityDecl
    java.lang.String readExternalId() -> readExternalId
    boolean isExternalId() -> isExternalId
    void readSymbol(char[]) -> readSymbol
    boolean isSymbol(char[]) -> isSymbol
    java.lang.String readAttValue() -> readAttValue
    void readPossibleCharData() -> readPossibleCharData
    void readCdSect() -> readCdSect
    boolean isCdSect() -> isCdSect
    com.hp.hpl.sparta.Element readElement() -> readElement
    com.hp.hpl.sparta.ParseLog getLog() -> getLog
    boolean readEmptyElementTagOrSTag(com.hp.hpl.sparta.Element) -> readEmptyElementTagOrSTag
    void readAttribute(com.hp.hpl.sparta.Element) -> readAttribute
    void readETag(com.hp.hpl.sparta.Element) -> readETag
    boolean isETag() -> isETag
    void readContent() -> readContent
com.hp.hpl.sparta.ParseException -> com.hp.hpl.sparta.ParseException:
    int lineNumber_ -> lineNumber_
    java.lang.Throwable cause_ -> cause_
    java.lang.String toString(char[]) -> toString
    int getLineNumber() -> getLineNumber
    java.lang.Throwable getCause() -> getCause
    java.lang.String toMessage(java.lang.String,int,int,java.lang.String,java.lang.String) -> toMessage
    java.lang.String charRepr(int) -> charRepr
com.hp.hpl.sparta.ParseHandler -> com.hp.hpl.sparta.ParseHandler:
    void setParseSource(com.hp.hpl.sparta.ParseSource) -> setParseSource
    com.hp.hpl.sparta.ParseSource getParseSource() -> getParseSource
    void startDocument() -> startDocument
    void endDocument() -> endDocument
    void startElement(com.hp.hpl.sparta.Element) -> startElement
    void endElement(com.hp.hpl.sparta.Element) -> endElement
    void characters(char[],int,int) -> characters
com.hp.hpl.sparta.ParseLog -> com.hp.hpl.sparta.ParseLog:
    void error(java.lang.String,java.lang.String,int) -> error
    void warning(java.lang.String,java.lang.String,int) -> warning
    void note(java.lang.String,java.lang.String,int) -> note
com.hp.hpl.sparta.ParseSource -> com.hp.hpl.sparta.ParseSource:
    com.hp.hpl.sparta.ParseLog DEFAULT_LOG -> DEFAULT_LOG
    int MAXLOOKAHEAD -> MAXLOOKAHEAD
    java.lang.String toString() -> toString
    java.lang.String getSystemId() -> getSystemId
    int getLineNumber() -> getLineNumber
com.hp.hpl.sparta.Parser -> com.hp.hpl.sparta.Parser:
    com.hp.hpl.sparta.Document parse(java.lang.String,java.io.Reader) -> parse
    com.hp.hpl.sparta.Document parse(java.lang.String,java.io.Reader,com.hp.hpl.sparta.ParseLog) -> parse
    com.hp.hpl.sparta.Document parse(java.lang.String) -> parse
    com.hp.hpl.sparta.Document parse(char[]) -> parse
    com.hp.hpl.sparta.Document parse(byte[]) -> parse
    com.hp.hpl.sparta.Document parse(java.lang.String,java.io.Reader,com.hp.hpl.sparta.ParseLog,java.lang.String) -> parse
    com.hp.hpl.sparta.Document parse(java.lang.String,java.io.InputStream,com.hp.hpl.sparta.ParseLog) -> parse
    com.hp.hpl.sparta.Document parse(java.lang.String,java.io.InputStream) -> parse
    com.hp.hpl.sparta.Document parse(java.lang.String,java.io.InputStream,com.hp.hpl.sparta.ParseLog,java.lang.String) -> parse
    void parse(java.lang.String,java.io.Reader,com.hp.hpl.sparta.ParseHandler) -> parse
    void parse(java.lang.String,java.io.Reader,com.hp.hpl.sparta.ParseLog,com.hp.hpl.sparta.ParseHandler) -> parse
    void parse(java.lang.String,com.hp.hpl.sparta.ParseHandler) -> parse
    void parse(char[],com.hp.hpl.sparta.ParseHandler) -> parse
    void parse(byte[],com.hp.hpl.sparta.ParseHandler) -> parse
    void parse(java.lang.String,java.io.InputStream,com.hp.hpl.sparta.ParseLog,com.hp.hpl.sparta.ParseHandler) -> parse
    void parse(java.lang.String,java.io.InputStream,com.hp.hpl.sparta.ParseHandler) -> parse
    void parse(java.lang.String,java.io.InputStream,com.hp.hpl.sparta.ParseLog,java.lang.String,com.hp.hpl.sparta.ParseHandler) -> parse
    void parse(java.lang.String,java.io.Reader,com.hp.hpl.sparta.ParseLog,java.lang.String,com.hp.hpl.sparta.ParseHandler) -> parse
com.hp.hpl.sparta.Sparta -> com.hp.hpl.sparta.Sparta:
    com.hp.hpl.sparta.Sparta$Internment internment_ -> internment_
    com.hp.hpl.sparta.Sparta$CacheFactory cacheFactory_ -> cacheFactory_
    java.lang.String intern(java.lang.String) -> intern
    void setInternment(com.hp.hpl.sparta.Sparta$Internment) -> setInternment
    com.hp.hpl.sparta.Sparta$Cache newCache() -> newCache
    void setCacheFactory(com.hp.hpl.sparta.Sparta$CacheFactory) -> setCacheFactory
com.hp.hpl.sparta.Sparta$1 -> com.hp.hpl.sparta.Sparta$1:
    java.util.Hashtable strings_ -> strings_
    java.lang.String intern(java.lang.String) -> intern
com.hp.hpl.sparta.Sparta$2 -> com.hp.hpl.sparta.Sparta$2:
    com.hp.hpl.sparta.Sparta$Cache create() -> create
com.hp.hpl.sparta.Sparta$Cache -> com.hp.hpl.sparta.Sparta$Cache:
    java.lang.Object get(java.lang.Object) -> get
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    int size() -> size
com.hp.hpl.sparta.Sparta$CacheFactory -> com.hp.hpl.sparta.Sparta$CacheFactory:
    com.hp.hpl.sparta.Sparta$Cache create() -> create
com.hp.hpl.sparta.Sparta$HashtableCache -> com.hp.hpl.sparta.Sparta$HashtableCache:
com.hp.hpl.sparta.Sparta$Internment -> com.hp.hpl.sparta.Sparta$Internment:
    java.lang.String intern(java.lang.String) -> intern
com.hp.hpl.sparta.Text -> com.hp.hpl.sparta.Text:
    java.lang.StringBuffer text_ -> text_
    java.lang.Object clone() -> clone
    void appendData(java.lang.String) -> appendData
    void appendData(char) -> appendData
    void appendData(char[],int,int) -> appendData
    java.lang.String getData() -> getData
    void setData(java.lang.String) -> setData
    void toXml(java.io.Writer) -> toXml
    void toString(java.io.Writer) -> toString
    java.util.Enumeration xpathSelectElements(java.lang.String) -> xpathSelectElements
    java.util.Enumeration xpathSelectStrings(java.lang.String) -> xpathSelectStrings
    com.hp.hpl.sparta.Element xpathSelectElement(java.lang.String) -> xpathSelectElement
    java.lang.String xpathSelectString(java.lang.String) -> xpathSelectString
    boolean equals(java.lang.Object) -> equals
    int computeHashCode() -> computeHashCode
com.hp.hpl.sparta.XPathVisitor -> com.hp.hpl.sparta.XPathVisitor:
    java.lang.Boolean TRUE -> TRUE
    java.lang.Boolean FALSE -> FALSE
    com.hp.hpl.sparta.NodeListWithPosition nodelistRaw_ -> nodelistRaw_
    java.util.Vector nodelistFiltered_ -> nodelistFiltered_
    java.util.Enumeration nodesetIterator_ -> nodesetIterator_
    java.lang.Object node_ -> node_
    com.hp.hpl.sparta.XPathVisitor$BooleanStack exprStack_ -> exprStack_
    com.hp.hpl.sparta.Node contextNode_ -> contextNode_
    boolean multiLevel_ -> multiLevel_
    com.hp.hpl.sparta.xpath.XPath xpath_ -> xpath_
    void visit(com.hp.hpl.sparta.xpath.ThisNodeTest) -> visit
    void visit(com.hp.hpl.sparta.xpath.ParentNodeTest) -> visit
    void visit(com.hp.hpl.sparta.xpath.AllElementTest) -> visit
    void accumulateElements(com.hp.hpl.sparta.Document) -> accumulateElements
    void accumulateElements(com.hp.hpl.sparta.Element) -> accumulateElements
    void visit(com.hp.hpl.sparta.xpath.TextTest) -> visit
    void visit(com.hp.hpl.sparta.xpath.ElementTest) -> visit
    void accumulateMatchingElements(com.hp.hpl.sparta.Document,java.lang.String) -> accumulateMatchingElements
    void accumulateMatchingElements(com.hp.hpl.sparta.Element,java.lang.String) -> accumulateMatchingElements
    void visit(com.hp.hpl.sparta.xpath.AttrTest) -> visit
    void visit(com.hp.hpl.sparta.xpath.TrueExpr) -> visit
    void visit(com.hp.hpl.sparta.xpath.AttrExistsExpr) -> visit
    void visit(com.hp.hpl.sparta.xpath.AttrEqualsExpr) -> visit
    void visit(com.hp.hpl.sparta.xpath.AttrNotEqualsExpr) -> visit
    void visit(com.hp.hpl.sparta.xpath.AttrLessExpr) -> visit
    void visit(com.hp.hpl.sparta.xpath.AttrGreaterExpr) -> visit
    void visit(com.hp.hpl.sparta.xpath.TextExistsExpr) -> visit
    void visit(com.hp.hpl.sparta.xpath.TextEqualsExpr) -> visit
    void visit(com.hp.hpl.sparta.xpath.TextNotEqualsExpr) -> visit
    void visit(com.hp.hpl.sparta.xpath.PositionEqualsExpr) -> visit
    java.util.Enumeration getResultEnumeration() -> getResultEnumeration
    com.hp.hpl.sparta.Element getFirstResultElement() -> getFirstResultElement
    java.lang.String getFirstResultString() -> getFirstResultString
com.hp.hpl.sparta.XPathVisitor$1 -> com.hp.hpl.sparta.XPathVisitor$1:
com.hp.hpl.sparta.XPathVisitor$BooleanStack -> com.hp.hpl.sparta.XPathVisitor$BooleanStack:
    com.hp.hpl.sparta.XPathVisitor$BooleanStack$Item top_ -> top_
    void push(java.lang.Boolean) -> push
    java.lang.Boolean pop() -> pop
com.hp.hpl.sparta.XPathVisitor$BooleanStack$Item -> com.hp.hpl.sparta.XPathVisitor$BooleanStack$Item:
    java.lang.Boolean bool -> bool
    com.hp.hpl.sparta.XPathVisitor$BooleanStack$Item prev -> prev
com.hp.hpl.sparta.xpath.AllElementTest -> com.hp.hpl.sparta.xpath.AllElementTest:
    com.hp.hpl.sparta.xpath.AllElementTest INSTANCE -> INSTANCE
    void accept(com.hp.hpl.sparta.xpath.Visitor) -> accept
    boolean isStringValue() -> isStringValue
    java.lang.String toString() -> toString
com.hp.hpl.sparta.xpath.AttrCompareExpr -> com.hp.hpl.sparta.xpath.AttrCompareExpr:
    java.lang.String attrValue_ -> attrValue_
    java.lang.String getAttrValue() -> getAttrValue
    java.lang.String toString(java.lang.String) -> toString
com.hp.hpl.sparta.xpath.AttrEqualsExpr -> com.hp.hpl.sparta.xpath.AttrEqualsExpr:
    void accept(com.hp.hpl.sparta.xpath.BooleanExprVisitor) -> accept
    java.lang.String toString() -> toString
com.hp.hpl.sparta.xpath.AttrExistsExpr -> com.hp.hpl.sparta.xpath.AttrExistsExpr:
    void accept(com.hp.hpl.sparta.xpath.BooleanExprVisitor) -> accept
    java.lang.String toString() -> toString
com.hp.hpl.sparta.xpath.AttrExpr -> com.hp.hpl.sparta.xpath.AttrExpr:
    java.lang.String attrName_ -> attrName_
    java.lang.String getAttrName() -> getAttrName
    java.lang.String toString() -> toString
com.hp.hpl.sparta.xpath.AttrGreaterExpr -> com.hp.hpl.sparta.xpath.AttrGreaterExpr:
    void accept(com.hp.hpl.sparta.xpath.BooleanExprVisitor) -> accept
    java.lang.String toString() -> toString
com.hp.hpl.sparta.xpath.AttrLessExpr -> com.hp.hpl.sparta.xpath.AttrLessExpr:
    void accept(com.hp.hpl.sparta.xpath.BooleanExprVisitor) -> accept
    java.lang.String toString() -> toString
com.hp.hpl.sparta.xpath.AttrNotEqualsExpr -> com.hp.hpl.sparta.xpath.AttrNotEqualsExpr:
    void accept(com.hp.hpl.sparta.xpath.BooleanExprVisitor) -> accept
    java.lang.String toString() -> toString
com.hp.hpl.sparta.xpath.AttrRelationalExpr -> com.hp.hpl.sparta.xpath.AttrRelationalExpr:
    int attrValue_ -> attrValue_
    double getAttrValue() -> getAttrValue
    java.lang.String toString(java.lang.String) -> toString
com.hp.hpl.sparta.xpath.AttrTest -> com.hp.hpl.sparta.xpath.AttrTest:
    java.lang.String attrName_ -> attrName_
    void accept(com.hp.hpl.sparta.xpath.Visitor) -> accept
    boolean isStringValue() -> isStringValue
    java.lang.String getAttrName() -> getAttrName
    java.lang.String toString() -> toString
com.hp.hpl.sparta.xpath.BooleanExpr -> com.hp.hpl.sparta.xpath.BooleanExpr:
    void accept(com.hp.hpl.sparta.xpath.BooleanExprVisitor) -> accept
com.hp.hpl.sparta.xpath.BooleanExprVisitor -> com.hp.hpl.sparta.xpath.BooleanExprVisitor:
    void visit(com.hp.hpl.sparta.xpath.TrueExpr) -> visit
    void visit(com.hp.hpl.sparta.xpath.AttrExistsExpr) -> visit
    void visit(com.hp.hpl.sparta.xpath.AttrEqualsExpr) -> visit
    void visit(com.hp.hpl.sparta.xpath.AttrNotEqualsExpr) -> visit
    void visit(com.hp.hpl.sparta.xpath.AttrLessExpr) -> visit
    void visit(com.hp.hpl.sparta.xpath.AttrGreaterExpr) -> visit
    void visit(com.hp.hpl.sparta.xpath.TextExistsExpr) -> visit
    void visit(com.hp.hpl.sparta.xpath.TextEqualsExpr) -> visit
    void visit(com.hp.hpl.sparta.xpath.TextNotEqualsExpr) -> visit
    void visit(com.hp.hpl.sparta.xpath.PositionEqualsExpr) -> visit
com.hp.hpl.sparta.xpath.ElementTest -> com.hp.hpl.sparta.xpath.ElementTest:
    java.lang.String tagName_ -> tagName_
    void accept(com.hp.hpl.sparta.xpath.Visitor) -> accept
    boolean isStringValue() -> isStringValue
    java.lang.String getTagName() -> getTagName
    java.lang.String toString() -> toString
com.hp.hpl.sparta.xpath.ExprFactory -> com.hp.hpl.sparta.xpath.ExprFactory:
    com.hp.hpl.sparta.xpath.BooleanExpr createExpr(com.hp.hpl.sparta.xpath.XPath,com.hp.hpl.sparta.xpath.SimpleStreamTokenizer) -> createExpr
com.hp.hpl.sparta.xpath.NodeTest -> com.hp.hpl.sparta.xpath.NodeTest:
    void accept(com.hp.hpl.sparta.xpath.Visitor) -> accept
    boolean isStringValue() -> isStringValue
com.hp.hpl.sparta.xpath.NodeTestVisitor -> com.hp.hpl.sparta.xpath.NodeTestVisitor:
    void visit(com.hp.hpl.sparta.xpath.AllElementTest) -> visit
    void visit(com.hp.hpl.sparta.xpath.ThisNodeTest) -> visit
    void visit(com.hp.hpl.sparta.xpath.ParentNodeTest) -> visit
    void visit(com.hp.hpl.sparta.xpath.ElementTest) -> visit
    void visit(com.hp.hpl.sparta.xpath.AttrTest) -> visit
    void visit(com.hp.hpl.sparta.xpath.TextTest) -> visit
com.hp.hpl.sparta.xpath.ParentNodeTest -> com.hp.hpl.sparta.xpath.ParentNodeTest:
    com.hp.hpl.sparta.xpath.ParentNodeTest INSTANCE -> INSTANCE
    void accept(com.hp.hpl.sparta.xpath.Visitor) -> accept
    boolean isStringValue() -> isStringValue
    java.lang.String toString() -> toString
com.hp.hpl.sparta.xpath.PositionEqualsExpr -> com.hp.hpl.sparta.xpath.PositionEqualsExpr:
    int position_ -> position_
    void accept(com.hp.hpl.sparta.xpath.BooleanExprVisitor) -> accept
    int getPosition() -> getPosition
    java.lang.String toString() -> toString
com.hp.hpl.sparta.xpath.SimpleStreamTokenizer -> com.hp.hpl.sparta.xpath.SimpleStreamTokenizer:
    int TT_EOF -> TT_EOF
    int TT_NUMBER -> TT_NUMBER
    int TT_WORD -> TT_WORD
    int ttype -> ttype
    int nval -> nval
    java.lang.String sval -> sval
    int WHITESPACE -> WHITESPACE
    int QUOTE -> QUOTE
    java.lang.StringBuffer buf_ -> buf_
    int nextType_ -> nextType_
    java.io.Reader reader_ -> reader_
    int[] charType_ -> charType_
    boolean pushedBack_ -> pushedBack_
    char inQuote_ -> inQuote_
    java.lang.String toString() -> toString
    void ordinaryChar(char) -> ordinaryChar
    void wordChars(char,char) -> wordChars
    int nextToken() -> nextToken
    void pushBack() -> pushBack
com.hp.hpl.sparta.xpath.Step -> com.hp.hpl.sparta.xpath.Step:
    com.hp.hpl.sparta.xpath.Step DOT -> DOT
    com.hp.hpl.sparta.xpath.NodeTest nodeTest_ -> nodeTest_
    com.hp.hpl.sparta.xpath.BooleanExpr predicate_ -> predicate_
    boolean multiLevel_ -> multiLevel_
    java.lang.String toString() -> toString
    boolean isMultiLevel() -> isMultiLevel
    boolean isStringValue() -> isStringValue
    com.hp.hpl.sparta.xpath.NodeTest getNodeTest() -> getNodeTest
    com.hp.hpl.sparta.xpath.BooleanExpr getPredicate() -> getPredicate
com.hp.hpl.sparta.xpath.TextCompareExpr -> com.hp.hpl.sparta.xpath.TextCompareExpr:
    java.lang.String value_ -> value_
    java.lang.String getValue() -> getValue
    java.lang.String toString(java.lang.String) -> toString
com.hp.hpl.sparta.xpath.TextEqualsExpr -> com.hp.hpl.sparta.xpath.TextEqualsExpr:
    void accept(com.hp.hpl.sparta.xpath.BooleanExprVisitor) -> accept
    java.lang.String toString() -> toString
com.hp.hpl.sparta.xpath.TextExistsExpr -> com.hp.hpl.sparta.xpath.TextExistsExpr:
    com.hp.hpl.sparta.xpath.TextExistsExpr INSTANCE -> INSTANCE
    void accept(com.hp.hpl.sparta.xpath.BooleanExprVisitor) -> accept
    java.lang.String toString() -> toString
com.hp.hpl.sparta.xpath.TextNotEqualsExpr -> com.hp.hpl.sparta.xpath.TextNotEqualsExpr:
    void accept(com.hp.hpl.sparta.xpath.BooleanExprVisitor) -> accept
    java.lang.String toString() -> toString
com.hp.hpl.sparta.xpath.TextTest -> com.hp.hpl.sparta.xpath.TextTest:
    com.hp.hpl.sparta.xpath.TextTest INSTANCE -> INSTANCE
    void accept(com.hp.hpl.sparta.xpath.Visitor) -> accept
    boolean isStringValue() -> isStringValue
    java.lang.String toString() -> toString
com.hp.hpl.sparta.xpath.ThisNodeTest -> com.hp.hpl.sparta.xpath.ThisNodeTest:
    com.hp.hpl.sparta.xpath.ThisNodeTest INSTANCE -> INSTANCE
    void accept(com.hp.hpl.sparta.xpath.Visitor) -> accept
    boolean isStringValue() -> isStringValue
    java.lang.String toString() -> toString
com.hp.hpl.sparta.xpath.TrueExpr -> com.hp.hpl.sparta.xpath.TrueExpr:
    com.hp.hpl.sparta.xpath.TrueExpr INSTANCE -> INSTANCE
    void accept(com.hp.hpl.sparta.xpath.BooleanExprVisitor) -> accept
    java.lang.String toString() -> toString
com.hp.hpl.sparta.xpath.Visitor -> com.hp.hpl.sparta.xpath.Visitor:
com.hp.hpl.sparta.xpath.XPath -> com.hp.hpl.sparta.xpath.XPath:
    int ASSERTION -> ASSERTION
    java.util.Stack steps_ -> steps_
    boolean absolute_ -> absolute_
    java.lang.String string_ -> string_
    java.util.Hashtable cache_ -> cache_
    java.lang.String toString() -> toString
    java.lang.String generateString() -> generateString
    boolean isAbsolute() -> isAbsolute
    boolean isStringValue() -> isStringValue
    java.util.Enumeration getSteps() -> getSteps
    java.lang.String getIndexingAttrName() -> getIndexingAttrName
    java.lang.String getIndexingAttrNameOfEquals() -> getIndexingAttrNameOfEquals
    java.lang.Object clone() -> clone
    com.hp.hpl.sparta.xpath.XPath get(java.lang.String) -> get
    com.hp.hpl.sparta.xpath.XPath get(boolean,com.hp.hpl.sparta.xpath.Step[]) -> get
    boolean isStringValue(java.lang.String) -> isStringValue
com.hp.hpl.sparta.xpath.XPathException -> com.hp.hpl.sparta.xpath.XPathException:
    java.lang.Throwable cause_ -> cause_
    java.lang.Throwable getCause() -> getCause
    java.lang.String toString(com.hp.hpl.sparta.xpath.SimpleStreamTokenizer) -> toString
    java.lang.String tokenToString(com.hp.hpl.sparta.xpath.SimpleStreamTokenizer) -> tokenToString
com.jianzhiniu.activity.ApplyFollowActivity -> com.jianzhiniu.activity.ApplyFollowActivity:
    android.app.Activity activity -> c
    android.widget.TextView topcenterView -> d
    android.widget.TextView cancleView -> e
    android.widget.TextView status1 -> f
    android.widget.TextView status2 -> g
    android.widget.TextView status3 -> h
    android.widget.TextView content1 -> i
    android.widget.TextView content2 -> j
    android.widget.TextView content3 -> k
    android.widget.TextView jobname -> l
    android.widget.TextView didian -> m
    android.widget.TextView time -> n
    android.widget.TextView price -> o
    android.widget.ImageView returnView -> p
    android.widget.ImageView img -> q
    android.widget.ImageView start -> r
    android.widget.ImageView round2 -> s
    android.widget.ImageView round3 -> t
    android.widget.ImageView round1 -> u
    android.view.View jobinfoView -> v
    android.view.View topView -> w
    com.jianzhiniu.network.MapUtil mapUtil -> x
    com.jianzhiniu.network.WebServiceUIAsyncTask wt -> y
    java.util.List list -> z
    java.util.Map rMap -> A
    java.util.Map infoMap -> B
    android.content.Intent intent -> C
    com.nostra13.universalimageloader.core.ImageLoader loader -> D
    com.nostra13.universalimageloader.core.DisplayImageOptions options -> E
    com.jianzhiniu.views.MyAlertDialog myAlertDialog -> F
    java.lang.String webtype -> G
    com.jianzhiniu.views.MyAlertDialog$AlertCallback callback -> a
    void onCreate(android.os.Bundle) -> onCreate
    void onClick(android.view.View) -> onClick
    void ExecuteAsyncTask(java.lang.String,java.util.Map) -> a
    void onDestroy() -> onDestroy
    void access$0(com.jianzhiniu.activity.ApplyFollowActivity,java.lang.String) -> a
    com.jianzhiniu.network.MapUtil access$1(com.jianzhiniu.activity.ApplyFollowActivity) -> a
    android.content.Intent access$2(com.jianzhiniu.activity.ApplyFollowActivity) -> b
    android.app.Activity access$3(com.jianzhiniu.activity.ApplyFollowActivity) -> c
    java.lang.String access$4(com.jianzhiniu.activity.ApplyFollowActivity) -> d
    void access$5(com.jianzhiniu.activity.ApplyFollowActivity,java.util.Map) -> a
    java.util.Map access$6(com.jianzhiniu.activity.ApplyFollowActivity) -> e
    android.widget.TextView access$7(com.jianzhiniu.activity.ApplyFollowActivity) -> f
    android.widget.TextView access$8(com.jianzhiniu.activity.ApplyFollowActivity) -> g
    android.widget.TextView access$9(com.jianzhiniu.activity.ApplyFollowActivity) -> h
    android.widget.TextView access$10(com.jianzhiniu.activity.ApplyFollowActivity) -> i
    android.widget.TextView access$11(com.jianzhiniu.activity.ApplyFollowActivity) -> j
    android.widget.ImageView access$12(com.jianzhiniu.activity.ApplyFollowActivity) -> k
    android.widget.ImageView access$13(com.jianzhiniu.activity.ApplyFollowActivity) -> l
    void access$14(com.jianzhiniu.activity.ApplyFollowActivity,java.util.List) -> a
    java.util.List access$15(com.jianzhiniu.activity.ApplyFollowActivity) -> m
    android.widget.ImageView access$16(com.jianzhiniu.activity.ApplyFollowActivity) -> n
    android.widget.TextView access$17(com.jianzhiniu.activity.ApplyFollowActivity) -> o
    android.widget.TextView access$18(com.jianzhiniu.activity.ApplyFollowActivity) -> p
    void access$19(com.jianzhiniu.activity.ApplyFollowActivity,java.util.Map) -> b
    java.util.Map access$20(com.jianzhiniu.activity.ApplyFollowActivity) -> q
    com.nostra13.universalimageloader.core.ImageLoader access$21(com.jianzhiniu.activity.ApplyFollowActivity) -> r
    android.widget.ImageView access$22(com.jianzhiniu.activity.ApplyFollowActivity) -> s
    com.nostra13.universalimageloader.core.DisplayImageOptions access$23(com.jianzhiniu.activity.ApplyFollowActivity) -> t
    android.widget.TextView access$24(com.jianzhiniu.activity.ApplyFollowActivity) -> u
    android.widget.TextView access$25(com.jianzhiniu.activity.ApplyFollowActivity) -> v
    android.widget.TextView access$26(com.jianzhiniu.activity.ApplyFollowActivity) -> w
    android.widget.TextView access$27(com.jianzhiniu.activity.ApplyFollowActivity) -> x
com.jianzhiniu.activity.ApplyFollowActivity$1 -> com.jianzhiniu.activity.a:
    com.jianzhiniu.activity.ApplyFollowActivity this$0 -> a
    void ybutton() -> a
com.jianzhiniu.activity.ApplyFollowActivity$2 -> com.jianzhiniu.activity.b:
    com.jianzhiniu.activity.ApplyFollowActivity this$0 -> a
    void onTaskStartDoInUI(java.lang.String[]) -> a
    void onGetDataSuccessfulDoInUI(java.lang.String) -> a
    void onUseCacheDoInUI() -> a
    void onTaskWorkingDoInUI(java.lang.String[]) -> b
    void onExceptionDoInUI(java.lang.String[]) -> c
    void onCancelledDoInUI(java.lang.String) -> b
    void onTimeoutDoInUI(java.lang.String[]) -> d
com.jianzhiniu.activity.BaseActivity -> com.jianzhiniu.activity.c:
    android.view.GestureDetector mGestureDetector -> b
    boolean mNeedBackGesture -> a
    void onCreate(android.os.Bundle) -> onCreate
    void onStop() -> onStop
    void onResume() -> onResume
    void initGestureDetector() -> a
    boolean dispatchTouchEvent(android.view.MotionEvent) -> dispatchTouchEvent
    void doBack(android.view.View) -> doBack
    void onDestroy() -> onDestroy
    void onClick(android.view.View) -> onClick
com.jianzhiniu.activity.BaseFragmentActivity -> com.jianzhiniu.activity.d:
    android.view.GestureDetector mGestureDetector -> a
    boolean mNeedBackGesture -> b
    void onCreate(android.os.Bundle) -> onCreate
    void initGestureDetector() -> a
    boolean dispatchTouchEvent(android.view.MotionEvent) -> dispatchTouchEvent
    void doBack(android.view.View) -> doBack
    void onDestroy() -> onDestroy
    void onClick(android.view.View) -> onClick
com.jianzhiniu.activity.ConsultReplyActivity -> com.jianzhiniu.activity.ConsultReplyActivity:
    android.app.Activity activity -> c
    android.widget.TextView topcenter -> d
    android.widget.TextView jobname -> e
    android.widget.TextView time -> f
    android.widget.TextView price -> g
    android.widget.TextView place -> h
    android.widget.TextView balert -> i
    android.widget.TextView oalert -> j
    android.widget.ImageView returnView -> k
    android.widget.ImageView ricon -> l
    android.widget.ImageView alerticon -> m
    java.util.List xlist -> n
    java.util.List mlist -> o
    java.util.Map infomap -> p
    android.widget.ListView xListView -> q
    com.jianzhiniu.adapter.ReplyAdapter xAdapter -> r
    android.view.View jobinfoView -> s
    android.view.View replyView -> t
    int page -> u
    int size -> v
    android.content.Intent intent -> w
    com.jianzhiniu.network.MapUtil mapUtil -> x
    com.jianzhiniu.network.WebServiceUIAsyncTask wt -> y
    java.lang.String webtype -> z
    com.nostra13.universalimageloader.core.ImageLoader loader -> A
    com.nostra13.universalimageloader.core.DisplayImageOptions options -> B
    android.widget.AdapterView$OnItemClickListener itemClickListener -> a
    void onCreate(android.os.Bundle) -> onCreate
    void ExecuteAsyncTask(java.lang.String,java.util.Map) -> a
    void onDestroy() -> onDestroy
    void onClick(android.view.View) -> onClick
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    android.app.Activity access$0(com.jianzhiniu.activity.ConsultReplyActivity) -> a
    java.util.List access$1(com.jianzhiniu.activity.ConsultReplyActivity) -> b
    java.lang.String access$2(com.jianzhiniu.activity.ConsultReplyActivity) -> c
    void access$3(com.jianzhiniu.activity.ConsultReplyActivity,java.util.Map) -> a
    java.util.Map access$4(com.jianzhiniu.activity.ConsultReplyActivity) -> d
    com.nostra13.universalimageloader.core.ImageLoader access$5(com.jianzhiniu.activity.ConsultReplyActivity) -> e
    android.widget.ImageView access$6(com.jianzhiniu.activity.ConsultReplyActivity) -> f
    com.nostra13.universalimageloader.core.DisplayImageOptions access$7(com.jianzhiniu.activity.ConsultReplyActivity) -> g
    android.widget.TextView access$8(com.jianzhiniu.activity.ConsultReplyActivity) -> h
    android.widget.TextView access$9(com.jianzhiniu.activity.ConsultReplyActivity) -> i
    android.widget.TextView access$10(com.jianzhiniu.activity.ConsultReplyActivity) -> j
    android.widget.TextView access$11(com.jianzhiniu.activity.ConsultReplyActivity) -> k
    void access$12(com.jianzhiniu.activity.ConsultReplyActivity,java.lang.String) -> a
    com.jianzhiniu.network.MapUtil access$13(com.jianzhiniu.activity.ConsultReplyActivity) -> l
    android.content.Intent access$14(com.jianzhiniu.activity.ConsultReplyActivity) -> m
    int access$15(com.jianzhiniu.activity.ConsultReplyActivity) -> n
    int access$16(com.jianzhiniu.activity.ConsultReplyActivity) -> o
    void access$17(com.jianzhiniu.activity.ConsultReplyActivity,java.util.List) -> a
    java.util.List access$18(com.jianzhiniu.activity.ConsultReplyActivity) -> p
    com.jianzhiniu.adapter.ReplyAdapter access$19(com.jianzhiniu.activity.ConsultReplyActivity) -> q
    android.view.View access$20(com.jianzhiniu.activity.ConsultReplyActivity) -> r
com.jianzhiniu.activity.ConsultReplyActivity$1 -> com.jianzhiniu.activity.e:
    com.jianzhiniu.activity.ConsultReplyActivity this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.jianzhiniu.activity.ConsultReplyActivity$2 -> com.jianzhiniu.activity.f:
    com.jianzhiniu.activity.ConsultReplyActivity this$0 -> a
    void onTaskStartDoInUI(java.lang.String[]) -> a
    void onGetDataSuccessfulDoInUI(java.lang.String) -> a
    void onUseCacheDoInUI() -> a
    void onTaskWorkingDoInUI(java.lang.String[]) -> b
    void onExceptionDoInUI(java.lang.String[]) -> c
    void onCancelledDoInUI(java.lang.String) -> b
    void onTimeoutDoInUI(java.lang.String[]) -> d
com.jianzhiniu.activity.ContentEditActivity -> com.jianzhiniu.activity.ContentEditActivity:
    android.app.Activity activity -> a
    android.widget.TextView centerView -> c
    android.widget.TextView rightView -> d
    android.widget.EditText editText -> e
    android.widget.EditText emailEditText -> f
    android.widget.ImageView returnView -> g
    android.content.Intent intent -> h
    java.lang.String typeString -> i
    com.jianzhiniu.network.WebServiceUIAsyncTask wt -> j
    com.jianzhiniu.network.MapUtil mapUtil -> k
    android.content.SharedPreferences isShared -> l
    android.content.SharedPreferences idShared -> m
    java.util.Map infomap -> n
    android.view.View emailView -> o
    void onCreate(android.os.Bundle) -> onCreate
    void onResume() -> onResume
    void onClick(android.view.View) -> onClick
    void ExecuteAsyncTask(java.lang.String,java.util.Map) -> a
    void onDestroy() -> onDestroy
    android.app.Activity access$0(com.jianzhiniu.activity.ContentEditActivity) -> a
    void access$1(com.jianzhiniu.activity.ContentEditActivity,java.util.Map) -> a
    java.util.Map access$2(com.jianzhiniu.activity.ContentEditActivity) -> b
    java.lang.String access$3(com.jianzhiniu.activity.ContentEditActivity) -> c
com.jianzhiniu.activity.ContentEditActivity$1 -> com.jianzhiniu.activity.g:
    com.jianzhiniu.activity.ContentEditActivity this$0 -> a
    void onTaskStartDoInUI(java.lang.String[]) -> a
    void onGetDataSuccessfulDoInUI(java.lang.String) -> a
    void onUseCacheDoInUI() -> a
    void onTaskWorkingDoInUI(java.lang.String[]) -> b
    void onExceptionDoInUI(java.lang.String[]) -> c
    void onCancelledDoInUI(java.lang.String) -> b
    void onTimeoutDoInUI(java.lang.String[]) -> d
com.jianzhiniu.activity.EnterCenterActivity -> com.jianzhiniu.activity.EnterCenterActivity:
    android.app.Activity activity -> a
    android.widget.TextView topcenter -> c
    android.widget.TextView topright -> d
    android.widget.TextView txTextView -> e
    android.widget.ImageView returView -> f
    android.widget.ImageView start -> g
    com.jianzhiniu.views.RoundImageView img -> h
    android.widget.EditText linkman -> i
    android.widget.EditText linkphone -> j
    android.widget.EditText linkemail -> k
    android.widget.EditText comintroduce -> l
    android.widget.EditText name -> m
    boolean isEnable -> n
    boolean isPic -> o
    android.content.SharedPreferences shared -> p
    android.content.SharedPreferences$Editor editor -> q
    com.jianzhiniu.network.WebServiceUIAsyncTask wt -> r
    com.jianzhiniu.network.MapUtil mapUtil -> s
    java.util.Map rmap -> t
    java.lang.String imgurl -> u
    android.graphics.Bitmap imgBitmap -> v
    android.graphics.Bitmap upBitmap -> w
    android.content.Intent intent -> x
    android.os.Handler myHandler -> y
    void onCreate(android.os.Bundle) -> onCreate
    void ExecuteAsyncTask(java.lang.String,java.util.Map) -> a
    void onDestroy() -> onDestroy
    void onClick(android.view.View) -> onClick
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void setEnable(boolean) -> a
    android.app.Activity access$0(com.jianzhiniu.activity.EnterCenterActivity) -> a
    com.jianzhiniu.views.RoundImageView access$1(com.jianzhiniu.activity.EnterCenterActivity) -> b
    android.graphics.Bitmap access$2(com.jianzhiniu.activity.EnterCenterActivity) -> c
    java.lang.String access$3(com.jianzhiniu.activity.EnterCenterActivity) -> d
    android.graphics.Bitmap access$4(com.jianzhiniu.activity.EnterCenterActivity) -> e
    void access$5(com.jianzhiniu.activity.EnterCenterActivity,boolean) -> a
    com.jianzhiniu.network.MapUtil access$6(com.jianzhiniu.activity.EnterCenterActivity) -> f
    android.content.SharedPreferences access$7(com.jianzhiniu.activity.EnterCenterActivity) -> g
    java.util.Map access$8(com.jianzhiniu.activity.EnterCenterActivity) -> h
    void access$9(com.jianzhiniu.activity.EnterCenterActivity,android.graphics.Bitmap) -> a
    android.os.Handler access$10(com.jianzhiniu.activity.EnterCenterActivity) -> i
    boolean access$11(com.jianzhiniu.activity.EnterCenterActivity) -> j
    void access$12(com.jianzhiniu.activity.EnterCenterActivity,java.util.Map) -> a
    void access$13(com.jianzhiniu.activity.EnterCenterActivity,boolean) -> b
    android.widget.TextView access$14(com.jianzhiniu.activity.EnterCenterActivity) -> k
    android.content.SharedPreferences$Editor access$15(com.jianzhiniu.activity.EnterCenterActivity) -> l
    android.widget.EditText access$16(com.jianzhiniu.activity.EnterCenterActivity) -> m
    android.widget.EditText access$17(com.jianzhiniu.activity.EnterCenterActivity) -> n
    android.widget.EditText access$18(com.jianzhiniu.activity.EnterCenterActivity) -> o
    android.widget.EditText access$19(com.jianzhiniu.activity.EnterCenterActivity) -> p
    android.widget.EditText access$20(com.jianzhiniu.activity.EnterCenterActivity) -> q
com.jianzhiniu.activity.EnterCenterActivity$1 -> com.jianzhiniu.activity.h:
    com.jianzhiniu.activity.EnterCenterActivity this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.jianzhiniu.activity.EnterCenterActivity$2 -> com.jianzhiniu.activity.i:
    com.jianzhiniu.activity.EnterCenterActivity this$0 -> a
    void onTaskStartDoInUI(java.lang.String[]) -> a
    void onGetDataSuccessfulDoInUI(java.lang.String) -> a
    void onUseCacheDoInUI() -> a
    void onTaskWorkingDoInUI(java.lang.String[]) -> b
    void onExceptionDoInUI(java.lang.String[]) -> c
    void onCancelledDoInUI(java.lang.String) -> b
    void onTimeoutDoInUI(java.lang.String[]) -> d
com.jianzhiniu.activity.EnterCenterActivity$mythread -> com.jianzhiniu.activity.j:
    com.jianzhiniu.activity.EnterCenterActivity this$0 -> a
    void run() -> run
com.jianzhiniu.activity.GoogleMapActivity -> com.jianzhiniu.activity.GoogleMapActivity:
    com.google.android.gms.maps.GoogleMap googleMap -> b
    android.widget.TextView topcenter -> c
    android.widget.ImageView returnView -> d
    android.content.Intent intent -> e
    void onCreate(android.os.Bundle) -> onCreate
    void onLocationChanged(android.location.Location) -> onLocationChanged
    void onProviderDisabled(java.lang.String) -> onProviderDisabled
    void onProviderEnabled(java.lang.String) -> onProviderEnabled
    void onStatusChanged(java.lang.String,int,android.os.Bundle) -> onStatusChanged
com.jianzhiniu.activity.GoogleMapActivity$returnclick -> com.jianzhiniu.activity.k:
    com.jianzhiniu.activity.GoogleMapActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.jianzhiniu.activity.InterestJobActivity -> com.jianzhiniu.activity.InterestJobActivity:
    android.app.Activity activity -> c
    android.support.v4.view.ViewPager viewPager -> d
    java.util.List fragments -> b
    android.widget.ImageView returnView -> e
    android.widget.TextView centerView -> f
    void onCreate(android.os.Bundle) -> onCreate
    void onClick(android.view.View) -> onClick
com.jianzhiniu.activity.InterestJobActivity$MyFragAdapter -> com.jianzhiniu.activity.l:
    java.util.List listFragments -> a
    com.jianzhiniu.activity.InterestJobActivity this$0 -> b
    int getCount() -> getCount
    android.support.v4.app.Fragment getItem(int) -> getItem
com.jianzhiniu.activity.JobInfoActivity -> com.jianzhiniu.activity.JobInfoActivity:
    android.widget.ImageView returnView -> c
    android.widget.TextView topright -> d
    android.app.Activity activity -> e
    android.support.v4.view.ViewPager viewPager -> f
    java.util.List fragments -> b
    android.widget.TextView leftView -> g
    android.widget.TextView rightView -> h
    android.content.Intent intent -> i
    com.jianzhiniu.network.WebServiceUIAsyncTask wt -> j
    java.util.Map infomap -> k
    void onCreate(android.os.Bundle) -> onCreate
    void LeftOrRight(int) -> a
    void onDestroy() -> onDestroy
    void onClick(android.view.View) -> onClick
    android.support.v4.view.ViewPager access$0(com.jianzhiniu.activity.JobInfoActivity) -> a
    void access$1(com.jianzhiniu.activity.JobInfoActivity,int) -> a
    android.app.Activity access$2(com.jianzhiniu.activity.JobInfoActivity) -> b
com.jianzhiniu.activity.JobInfoActivity$1 -> com.jianzhiniu.activity.m:
    com.jianzhiniu.activity.JobInfoActivity this$0 -> a
    void onPageSelected(int) -> onPageSelected
    void onPageScrolled(int,float,int) -> onPageScrolled
    void onPageScrollStateChanged(int) -> onPageScrollStateChanged
com.jianzhiniu.activity.JobInfoActivity$MyFragAdapter -> com.jianzhiniu.activity.n:
    java.util.List listFragments -> a
    com.jianzhiniu.activity.JobInfoActivity this$0 -> b
    int getCount() -> getCount
    android.support.v4.app.Fragment getItem(int) -> getItem
com.jianzhiniu.activity.JobInfoActivity$TopClick -> com.jianzhiniu.activity.o:
    int index -> a
    com.jianzhiniu.activity.JobInfoActivity this$0 -> b
    void onClick(android.view.View) -> onClick
com.jianzhiniu.activity.JobIssueActivity -> com.jianzhiniu.activity.JobIssueActivity:
    android.app.Activity activity -> e
    android.widget.TextView topViewtext -> f
    android.widget.TextView jobtypetext -> g
    android.widget.TextView timetypetext -> h
    android.widget.TextView unittext -> i
    android.widget.TextView citytext -> j
    android.widget.TextView jtcancle -> k
    android.widget.ImageView returnView -> l
    android.widget.EditText jobdescribe -> m
    android.widget.EditText jobtitle -> n
    android.widget.EditText jobpeople -> o
    android.widget.EditText jobtreatment -> p
    android.widget.EditText jobtime -> q
    android.widget.EditText jobaddress -> r
    android.widget.EditText linkman -> s
    android.widget.EditText email -> t
    android.widget.EditText zxphone -> u
    android.widget.ScrollView scrollView -> v
    android.view.View historyView -> w
    android.view.View unitView -> x
    android.view.View locationView -> y
    android.view.View cityselectView -> z
    android.view.View jobtypeView -> A
    android.view.View timetypeView -> B
    com.kyleduo.switchbutton.SwitchButton switchButton -> C
    android.widget.Button issueButton -> D
    android.widget.LinearLayout dialogView -> E
    android.widget.ListView listView -> F
    java.util.Map mmap -> G
    java.util.List mList -> H
    java.util.List list -> I
    java.util.List jtlist -> J
    java.util.List ttlist -> K
    java.util.List utlist -> L
    com.jianzhiniu.adapter.Dialogadapter2 dialogadapter -> M
    android.widget.ListView dialogListView -> N
    android.app.Dialog alertDialog -> O
    int width -> P
    int height -> Q
    com.jianzhiniu.utils.MyLocationManager myLocation -> R
    double latitude -> S
    double longitude -> T
    java.lang.String cityString -> U
    java.lang.String position -> V
    java.lang.String idjtString -> W
    java.lang.String idttString -> X
    java.lang.String idutString -> Y
    java.lang.String webtype -> Z
    boolean isCheck -> aa
    com.jianzhiniu.network.WebServiceUIAsyncTask wt -> ab
    com.jianzhiniu.network.MapUtil mapUtil -> ac
    android.content.SharedPreferences shared -> ad
    android.widget.CompoundButton$OnCheckedChangeListener changeListener -> a
    android.widget.AdapterView$OnItemClickListener selectItemClick -> c
    java.lang.Runnable getAddressName -> d
    android.os.Handler myHandler -> ae
    void onCreate(android.os.Bundle) -> onCreate
    void onClick(android.view.View) -> onClick
    void ExecuteAsyncTask(java.lang.String,java.util.Map) -> a
    void onCurrentLocation(android.location.Location) -> a
    void getLocationAddress(double,double) -> a
    void onDestroy() -> onDestroy
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void showdialog(java.util.List,int) -> a
    void access$0(com.jianzhiniu.activity.JobIssueActivity,boolean) -> a
    android.app.Activity access$1(com.jianzhiniu.activity.JobIssueActivity) -> a
    android.widget.LinearLayout access$2(com.jianzhiniu.activity.JobIssueActivity) -> b
    android.widget.EditText access$3(com.jianzhiniu.activity.JobIssueActivity) -> c
    java.util.List access$4(com.jianzhiniu.activity.JobIssueActivity) -> d
    android.widget.TextView access$5(com.jianzhiniu.activity.JobIssueActivity) -> e
    android.widget.TextView access$6(com.jianzhiniu.activity.JobIssueActivity) -> f
    android.widget.EditText access$7(com.jianzhiniu.activity.JobIssueActivity) -> g
    android.widget.EditText access$8(com.jianzhiniu.activity.JobIssueActivity) -> h
    android.widget.TextView access$9(com.jianzhiniu.activity.JobIssueActivity) -> i
    android.widget.EditText access$10(com.jianzhiniu.activity.JobIssueActivity) -> j
    android.widget.EditText access$11(com.jianzhiniu.activity.JobIssueActivity) -> k
    android.widget.TextView access$12(com.jianzhiniu.activity.JobIssueActivity) -> l
    android.widget.EditText access$13(com.jianzhiniu.activity.JobIssueActivity) -> m
    void access$14(com.jianzhiniu.activity.JobIssueActivity,java.lang.String) -> a
    void access$15(com.jianzhiniu.activity.JobIssueActivity,java.lang.String) -> b
    void access$16(com.jianzhiniu.activity.JobIssueActivity,double) -> a
    void access$17(com.jianzhiniu.activity.JobIssueActivity,double) -> b
    com.kyleduo.switchbutton.SwitchButton access$18(com.jianzhiniu.activity.JobIssueActivity) -> n
    double access$19(com.jianzhiniu.activity.JobIssueActivity) -> o
    double access$20(com.jianzhiniu.activity.JobIssueActivity) -> p
    void access$21(com.jianzhiniu.activity.JobIssueActivity,double,double) -> a
    java.lang.String access$22(com.jianzhiniu.activity.JobIssueActivity) -> q
    java.lang.String access$23(com.jianzhiniu.activity.JobIssueActivity) -> r
    java.util.List access$24(com.jianzhiniu.activity.JobIssueActivity) -> s
    void access$25(com.jianzhiniu.activity.JobIssueActivity,java.util.List,int) -> a
    java.util.List access$26(com.jianzhiniu.activity.JobIssueActivity) -> t
    java.util.List access$27(com.jianzhiniu.activity.JobIssueActivity) -> u
    com.jianzhiniu.adapter.Dialogadapter2 access$28(com.jianzhiniu.activity.JobIssueActivity) -> v
    void access$29(com.jianzhiniu.activity.JobIssueActivity,java.lang.String) -> c
    android.app.Dialog access$30(com.jianzhiniu.activity.JobIssueActivity) -> w
    java.lang.String access$31() -> a
    void access$32(com.jianzhiniu.activity.JobIssueActivity,java.util.List) -> a
    void access$33(com.jianzhiniu.activity.JobIssueActivity,java.util.Map) -> a
    java.util.Map access$34(com.jianzhiniu.activity.JobIssueActivity) -> x
    java.util.List access$35(com.jianzhiniu.activity.JobIssueActivity) -> y
    void access$36(com.jianzhiniu.activity.JobIssueActivity,java.util.List) -> b
    android.os.Handler access$37(com.jianzhiniu.activity.JobIssueActivity) -> z
    void access$38(com.jianzhiniu.activity.JobIssueActivity,java.util.List) -> c
    void access$39(com.jianzhiniu.activity.JobIssueActivity,java.util.List) -> d
    void access$40(com.jianzhiniu.activity.JobIssueActivity,java.util.List) -> e
com.jianzhiniu.activity.JobIssueActivity$1 -> com.jianzhiniu.activity.p:
    com.jianzhiniu.activity.JobIssueActivity this$0 -> a
    void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
com.jianzhiniu.activity.JobIssueActivity$2 -> com.jianzhiniu.activity.q:
    com.jianzhiniu.activity.JobIssueActivity this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.jianzhiniu.activity.JobIssueActivity$3 -> com.jianzhiniu.activity.r:
    com.jianzhiniu.activity.JobIssueActivity this$0 -> a
    void run() -> run
com.jianzhiniu.activity.JobIssueActivity$4 -> com.jianzhiniu.activity.s:
    com.jianzhiniu.activity.JobIssueActivity this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.jianzhiniu.activity.JobIssueActivity$5 -> com.jianzhiniu.activity.t:
    com.jianzhiniu.activity.JobIssueActivity this$0 -> a
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.jianzhiniu.activity.JobIssueActivity$6 -> com.jianzhiniu.activity.u:
    com.jianzhiniu.activity.JobIssueActivity this$0 -> a
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.jianzhiniu.activity.JobIssueActivity$7 -> com.jianzhiniu.activity.v:
    com.jianzhiniu.activity.JobIssueActivity this$0 -> a
    void onTaskStartDoInUI(java.lang.String[]) -> a
    void onGetDataSuccessfulDoInUI(java.lang.String) -> a
    void onUseCacheDoInUI() -> a
    void onTaskWorkingDoInUI(java.lang.String[]) -> b
    void onExceptionDoInUI(java.lang.String[]) -> c
    void onCancelledDoInUI(java.lang.String) -> b
    void onTimeoutDoInUI(java.lang.String[]) -> d
com.jianzhiniu.activity.JobIssueActivity$dialogitemclick -> com.jianzhiniu.activity.w:
    int ii -> a
    com.jianzhiniu.activity.JobIssueActivity this$0 -> b
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.jianzhiniu.activity.JobIssueActivity$jtadapter -> com.jianzhiniu.activity.x:
    android.widget.TextView itemView -> a
    java.util.List alist -> b
    com.jianzhiniu.activity.JobIssueActivity this$0 -> c
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.jianzhiniu.activity.JobManInfoActivity -> com.jianzhiniu.activity.JobManInfoActivity:
    android.app.Activity activity -> e
    android.widget.TextView topcenter -> f
    android.widget.TextView title -> g
    android.widget.TextView time -> h
    android.widget.TextView city -> i
    android.widget.TextView price -> j
    android.widget.TextView action -> k
    android.widget.TextView apply -> l
    android.widget.TextView hire -> m
    android.widget.TextView refuse -> n
    android.widget.TextView mhire -> o
    android.widget.ImageView returnView -> p
    android.widget.ImageView typeimg -> q
    java.util.List xlist -> r
    java.util.Map rMap -> s
    java.util.Map infoMap -> t
    com.jianzhiniu.views.XListView xListView -> u
    com.jianzhiniu.adapter.JobManInfoAdapter xAdapter -> v
    android.view.View jobinfoView -> w
    android.view.View actionView -> x
    android.view.View statusView -> y
    int page -> z
    int size -> A
    int position -> B
    android.content.Intent intent -> C
    android.content.Intent bIntent -> D
    android.content.Intent toIntent -> E
    com.jianzhiniu.network.MapUtil mapUtil -> F
    com.jianzhiniu.network.WebServiceUIAsyncTask wt -> G
    java.lang.String webtype -> H
    android.content.IntentFilter filter -> I
    com.nostra13.universalimageloader.core.ImageLoader loader -> J
    com.nostra13.universalimageloader.core.DisplayImageOptions options -> K
    com.jianzhiniu.views.MyAlertDialog myAlertDialog -> L
    com.jianzhiniu.views.MyAlertDialog$AlertCallback callback -> a
    android.content.BroadcastReceiver receiver -> c
    android.widget.AdapterView$OnItemClickListener itemClick -> d
    void onCreate(android.os.Bundle) -> onCreate
    void ExecuteAsyncTask(java.lang.String,java.util.Map) -> a
    void onDestroy() -> onDestroy
    void onRefresh() -> a
    void onLoadMore() -> b
    void onClick(android.view.View) -> onClick
    android.content.Intent access$0(com.jianzhiniu.activity.JobManInfoActivity) -> a
    void access$1(com.jianzhiniu.activity.JobManInfoActivity,java.lang.String) -> a
    com.jianzhiniu.network.MapUtil access$2(com.jianzhiniu.activity.JobManInfoActivity) -> b
    java.util.List access$3(com.jianzhiniu.activity.JobManInfoActivity) -> c
    int access$4(com.jianzhiniu.activity.JobManInfoActivity) -> d
    com.jianzhiniu.adapter.JobManInfoAdapter access$5(com.jianzhiniu.activity.JobManInfoActivity) -> e
    android.widget.TextView access$6(com.jianzhiniu.activity.JobManInfoActivity) -> f
    android.widget.TextView access$7(com.jianzhiniu.activity.JobManInfoActivity) -> g
    void access$8(com.jianzhiniu.activity.JobManInfoActivity,int) -> a
    android.app.Activity access$9(com.jianzhiniu.activity.JobManInfoActivity) -> h
    void access$10(com.jianzhiniu.activity.JobManInfoActivity,android.content.Intent) -> a
    android.content.Intent access$11(com.jianzhiniu.activity.JobManInfoActivity) -> i
    java.lang.String access$12(com.jianzhiniu.activity.JobManInfoActivity) -> j
    void access$13(com.jianzhiniu.activity.JobManInfoActivity,java.util.Map) -> a
    java.util.Map access$14(com.jianzhiniu.activity.JobManInfoActivity) -> k
    android.view.View access$15(com.jianzhiniu.activity.JobManInfoActivity) -> l
    void access$16(com.jianzhiniu.activity.JobManInfoActivity,android.content.Intent) -> b
    android.content.Intent access$17(com.jianzhiniu.activity.JobManInfoActivity) -> m
    void access$18(com.jianzhiniu.activity.JobManInfoActivity,java.util.List) -> a
    android.widget.TextView access$19(com.jianzhiniu.activity.JobManInfoActivity) -> n
    void access$20(com.jianzhiniu.activity.JobManInfoActivity,java.util.Map) -> b
    java.util.Map access$21(com.jianzhiniu.activity.JobManInfoActivity) -> o
    com.nostra13.universalimageloader.core.ImageLoader access$22(com.jianzhiniu.activity.JobManInfoActivity) -> p
    android.widget.ImageView access$23(com.jianzhiniu.activity.JobManInfoActivity) -> q
    com.nostra13.universalimageloader.core.DisplayImageOptions access$24(com.jianzhiniu.activity.JobManInfoActivity) -> r
    android.widget.TextView access$25(com.jianzhiniu.activity.JobManInfoActivity) -> s
    android.widget.TextView access$26(com.jianzhiniu.activity.JobManInfoActivity) -> t
    android.widget.TextView access$27(com.jianzhiniu.activity.JobManInfoActivity) -> u
    android.widget.TextView access$28(com.jianzhiniu.activity.JobManInfoActivity) -> v
    int access$29(com.jianzhiniu.activity.JobManInfoActivity) -> w
    int access$30(com.jianzhiniu.activity.JobManInfoActivity) -> x
    android.widget.TextView access$31(com.jianzhiniu.activity.JobManInfoActivity) -> y
com.jianzhiniu.activity.JobManInfoActivity$1 -> com.jianzhiniu.activity.y:
    com.jianzhiniu.activity.JobManInfoActivity this$0 -> a
    void ybutton() -> a
com.jianzhiniu.activity.JobManInfoActivity$2 -> com.jianzhiniu.activity.z:
    com.jianzhiniu.activity.JobManInfoActivity this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.jianzhiniu.activity.JobManInfoActivity$3 -> com.jianzhiniu.activity.aa:
    com.jianzhiniu.activity.JobManInfoActivity this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.jianzhiniu.activity.JobManInfoActivity$4 -> com.jianzhiniu.activity.ab:
    com.jianzhiniu.activity.JobManInfoActivity this$0 -> a
    void onTaskStartDoInUI(java.lang.String[]) -> a
    void onGetDataSuccessfulDoInUI(java.lang.String) -> a
    void onUseCacheDoInUI() -> a
    void onTaskWorkingDoInUI(java.lang.String[]) -> b
    void onExceptionDoInUI(java.lang.String[]) -> c
    void onCancelledDoInUI(java.lang.String) -> b
    void onTimeoutDoInUI(java.lang.String[]) -> d
com.jianzhiniu.activity.LoginActivity -> com.jianzhiniu.activity.LoginActivity:
    android.widget.Button button_login -> a
    android.widget.Button button_fb -> c
    android.widget.Button button_tw -> d
    android.content.Context activity -> e
    android.widget.ImageView returnView -> f
    android.content.Intent intent -> g
    android.content.Intent toIntent -> h
    boolean isE -> i
    boolean isFB -> j
    boolean isTW -> k
    com.jianzhiniu.network.WebServiceUIAsyncTask wt -> l
    android.widget.EditText accountEdit -> m
    android.widget.EditText pwdEdit -> n
    com.jianzhiniu.network.MapUtil mapUtil -> o
    android.widget.TextView registerView -> p
    android.widget.TextView forgetView -> q
    android.widget.TextView entryText -> r
    android.widget.CheckBox rememberView -> s
    android.content.SharedPreferences shared -> t
    android.content.SharedPreferences shareds -> u
    android.content.SharedPreferences einfoShared -> v
    android.content.SharedPreferences infoShared -> w
    android.content.SharedPreferences$Editor editor -> x
    android.content.SharedPreferences$Editor editors -> y
    android.content.SharedPreferences$Editor einfoEditor -> z
    android.content.SharedPreferences$Editor infoEditor -> A
    com.jianzhiniu.views.RoundImageView roundImg -> B
    java.lang.String imgurl -> C
    android.graphics.Bitmap image -> D
    android.view.View divideView -> E
    void onCreate(android.os.Bundle) -> onCreate
    void onResume() -> onResume
    void authorize(cn.sharesdk.framework.Platform) -> a
    void onClick(android.view.View) -> onClick
    void onComplete(cn.sharesdk.framework.Platform,int,java.util.HashMap) -> onComplete
    void onError(cn.sharesdk.framework.Platform,int,java.lang.Throwable) -> onError
    void onCancel(cn.sharesdk.framework.Platform,int) -> onCancel
    boolean handleMessage(android.os.Message) -> handleMessage
    void ExecuteAsyncTask(java.lang.String,java.util.Map) -> a
    void onPause() -> onPause
    android.widget.EditText access$0(com.jianzhiniu.activity.LoginActivity) -> a
    com.jianzhiniu.views.RoundImageView access$1(com.jianzhiniu.activity.LoginActivity) -> b
    boolean access$2(com.jianzhiniu.activity.LoginActivity) -> c
    void access$3(com.jianzhiniu.activity.LoginActivity,java.lang.String) -> a
    java.lang.String access$4(com.jianzhiniu.activity.LoginActivity) -> d
    void access$5(com.jianzhiniu.activity.LoginActivity,android.graphics.Bitmap) -> a
    android.graphics.Bitmap access$6(com.jianzhiniu.activity.LoginActivity) -> e
    android.content.Context access$7(com.jianzhiniu.activity.LoginActivity) -> f
    void access$8(com.jianzhiniu.activity.LoginActivity,android.content.Intent) -> a
    android.content.SharedPreferences$Editor access$9(com.jianzhiniu.activity.LoginActivity) -> g
    android.widget.CheckBox access$10(com.jianzhiniu.activity.LoginActivity) -> h
    android.content.SharedPreferences$Editor access$11(com.jianzhiniu.activity.LoginActivity) -> i
    android.widget.EditText access$12(com.jianzhiniu.activity.LoginActivity) -> j
    android.content.Intent access$13(com.jianzhiniu.activity.LoginActivity) -> k
    boolean access$14(com.jianzhiniu.activity.LoginActivity) -> l
    boolean access$15(com.jianzhiniu.activity.LoginActivity) -> m
    android.content.SharedPreferences$Editor access$16(com.jianzhiniu.activity.LoginActivity) -> n
    android.content.SharedPreferences$Editor access$17(com.jianzhiniu.activity.LoginActivity) -> o
com.jianzhiniu.activity.LoginActivity$1 -> com.jianzhiniu.activity.ac:
    com.jianzhiniu.activity.LoginActivity this$0 -> a
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void afterTextChanged(android.text.Editable) -> afterTextChanged
com.jianzhiniu.activity.LoginActivity$2 -> com.jianzhiniu.activity.ad:
    com.jianzhiniu.activity.LoginActivity this$0 -> a
    void onTaskStartDoInUI(java.lang.String[]) -> a
    void onGetDataSuccessfulDoInUI(java.lang.String) -> a
    void onUseCacheDoInUI() -> a
    void onTaskWorkingDoInUI(java.lang.String[]) -> b
    void onExceptionDoInUI(java.lang.String[]) -> c
    void onCancelledDoInUI(java.lang.String) -> b
    void onTimeoutDoInUI(java.lang.String[]) -> d
com.jianzhiniu.activity.MainActivity -> com.jianzhiniu.activity.MainActivity:
    android.content.Context activity -> b
    android.widget.LinearLayout layout1 -> c
    android.widget.LinearLayout layout2 -> d
    android.widget.LinearLayout layout3 -> e
    android.widget.LinearLayout layout4 -> f
    com.jianzhiniu.views.MyViewPager viewPager -> g
    android.widget.TextView cityView -> h
    android.widget.TextView textView1 -> i
    android.widget.TextView textView2 -> j
    android.widget.TextView textView3 -> k
    android.widget.TextView textView4 -> l
    android.widget.TextView toptext -> m
    android.widget.ImageView img1 -> n
    android.widget.ImageView img2 -> o
    android.widget.ImageView img3 -> p
    android.widget.ImageView img4 -> q
    android.widget.ImageView down -> r
    android.widget.ImageView reddot -> s
    java.util.List fragments -> t
    boolean isexit -> u
    android.content.SharedPreferences shared -> v
    android.content.SharedPreferences shared2 -> w
    android.content.SharedPreferences infoshare -> x
    android.content.SharedPreferences$Editor editor2 -> y
    android.content.SharedPreferences$Editor infoEditor -> z
    boolean isE -> A
    android.content.Intent intent -> B
    com.jianzhiniu.network.WebServiceUIAsyncTask wt -> C
    com.jianzhiniu.network.MapUtil mapUtil -> D
    java.util.List xlist -> E
    java.util.ArrayList myTouchListeners -> F
    void onCreate(android.os.Bundle) -> onCreate
    void initfragments() -> a
    void setBack() -> b
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onClick(android.view.View) -> onClick
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void ExecuteAsyncTask(java.lang.String,java.util.Map) -> a
    void onDestroy() -> onDestroy
    boolean dispatchTouchEvent(android.view.MotionEvent) -> dispatchTouchEvent
    com.jianzhiniu.views.MyViewPager access$0(com.jianzhiniu.activity.MainActivity) -> a
    android.widget.TextView access$1(com.jianzhiniu.activity.MainActivity) -> b
    void access$2(com.jianzhiniu.activity.MainActivity) -> c
    android.widget.ImageView access$3(com.jianzhiniu.activity.MainActivity) -> d
    android.widget.TextView access$4(com.jianzhiniu.activity.MainActivity) -> e
    boolean access$5(com.jianzhiniu.activity.MainActivity) -> f
    android.widget.ImageView access$6(com.jianzhiniu.activity.MainActivity) -> g
    android.widget.TextView access$7(com.jianzhiniu.activity.MainActivity) -> h
    android.widget.ImageView access$8(com.jianzhiniu.activity.MainActivity) -> i
    android.widget.ImageView access$9(com.jianzhiniu.activity.MainActivity) -> j
    android.widget.TextView access$10(com.jianzhiniu.activity.MainActivity) -> k
    android.widget.ImageView access$11(com.jianzhiniu.activity.MainActivity) -> l
    android.widget.TextView access$12(com.jianzhiniu.activity.MainActivity) -> m
    void access$13(com.jianzhiniu.activity.MainActivity,boolean) -> a
    void access$14(com.jianzhiniu.activity.MainActivity,java.util.List) -> a
    java.util.List access$15(com.jianzhiniu.activity.MainActivity) -> n
    android.content.Context access$16(com.jianzhiniu.activity.MainActivity) -> o
com.jianzhiniu.activity.MainActivity$1 -> com.jianzhiniu.activity.ae:
    com.jianzhiniu.activity.MainActivity this$0 -> a
    void onExtraPageScrollStateChanged(int) -> a
    void onExtraPageSelected(int) -> b
com.jianzhiniu.activity.MainActivity$2 -> com.jianzhiniu.activity.af:
    com.jianzhiniu.activity.MainActivity this$0 -> a
    void run() -> run
com.jianzhiniu.activity.MainActivity$3 -> com.jianzhiniu.activity.ag:
    com.jianzhiniu.activity.MainActivity this$0 -> a
    void onTaskStartDoInUI(java.lang.String[]) -> a
    void onGetDataSuccessfulDoInUI(java.lang.String) -> a
    void onUseCacheDoInUI() -> a
    void onTaskWorkingDoInUI(java.lang.String[]) -> b
    void onExceptionDoInUI(java.lang.String[]) -> c
    void onCancelledDoInUI(java.lang.String) -> b
    void onTimeoutDoInUI(java.lang.String[]) -> d
com.jianzhiniu.activity.MainActivity$MyOnClickListener -> com.jianzhiniu.activity.ah:
    int index -> b
    com.jianzhiniu.activity.MainActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.jianzhiniu.activity.MainActivity$MyTouchListener -> com.jianzhiniu.activity.ai:
    void onTouchEvent(android.view.MotionEvent) -> a
com.jianzhiniu.activity.MyApplyActivity -> com.jianzhiniu.activity.MyApplyActivity:
    android.app.Activity activity -> d
    android.widget.TextView centerView -> e
    android.widget.ImageView returnView -> f
    java.util.List xlist -> g
    java.util.List mlist -> h
    com.jianzhiniu.views.XListView xListView -> i
    com.jianzhiniu.adapter.MyApplylistAdapter xAdapter -> j
    android.content.Intent intent -> k
    int page -> l
    int size -> m
    android.content.SharedPreferences shared -> n
    com.jianzhiniu.network.WebServiceUIAsyncTask wt -> o
    com.jianzhiniu.network.MapUtil mapUtil -> p
    boolean isLoad -> q
    boolean isRefresh -> r
    boolean isFirst -> s
    boolean isE -> t
    boolean isCancle -> u
    android.content.BroadcastReceiver receiver -> a
    android.os.Handler myHandler -> v
    android.widget.AdapterView$OnItemClickListener NewjobitemClick -> c
    void onCreate(android.os.Bundle) -> onCreate
    void onResume() -> onResume
    void ExecuteAsyncTask(java.lang.String,java.util.Map) -> a
    void onDestroy() -> onDestroy
    void onRefresh() -> a
    void onLoadMore() -> b
    void onLoad() -> c
    void onClick(android.view.View) -> onClick
    void access$0(com.jianzhiniu.activity.MyApplyActivity,boolean) -> a
    android.app.Activity access$1(com.jianzhiniu.activity.MyApplyActivity) -> a
    boolean access$2(com.jianzhiniu.activity.MyApplyActivity) -> b
    java.util.List access$3(com.jianzhiniu.activity.MyApplyActivity) -> c
    com.jianzhiniu.adapter.MyApplylistAdapter access$4(com.jianzhiniu.activity.MyApplyActivity) -> d
    com.jianzhiniu.views.XListView access$5(com.jianzhiniu.activity.MyApplyActivity) -> e
    void access$6(com.jianzhiniu.activity.MyApplyActivity) -> f
    java.util.List access$7(com.jianzhiniu.activity.MyApplyActivity) -> g
    boolean access$8(com.jianzhiniu.activity.MyApplyActivity) -> h
    void access$9(com.jianzhiniu.activity.MyApplyActivity,boolean) -> b
    void access$10(com.jianzhiniu.activity.MyApplyActivity,java.util.List) -> a
    android.os.Handler access$11(com.jianzhiniu.activity.MyApplyActivity) -> i
    int access$12(com.jianzhiniu.activity.MyApplyActivity) -> j
    void access$13(com.jianzhiniu.activity.MyApplyActivity,boolean) -> c
com.jianzhiniu.activity.MyApplyActivity$1 -> com.jianzhiniu.activity.aj:
    com.jianzhiniu.activity.MyApplyActivity this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.jianzhiniu.activity.MyApplyActivity$2 -> com.jianzhiniu.activity.ak:
    com.jianzhiniu.activity.MyApplyActivity this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.jianzhiniu.activity.MyApplyActivity$3 -> com.jianzhiniu.activity.al:
    com.jianzhiniu.activity.MyApplyActivity this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.jianzhiniu.activity.MyApplyActivity$4 -> com.jianzhiniu.activity.am:
    com.jianzhiniu.activity.MyApplyActivity this$0 -> a
    void onTaskStartDoInUI(java.lang.String[]) -> a
    void onGetDataSuccessfulDoInUI(java.lang.String) -> a
    void onUseCacheDoInUI() -> a
    void onTaskWorkingDoInUI(java.lang.String[]) -> b
    void onExceptionDoInUI(java.lang.String[]) -> c
    void onCancelledDoInUI(java.lang.String) -> b
    void onTimeoutDoInUI(java.lang.String[]) -> d
com.jianzhiniu.activity.MyCollectActivity -> com.jianzhiniu.activity.MyCollectActivity:
    android.widget.TextView centerView -> b
    android.widget.ImageView returnView -> c
    void onCreate(android.os.Bundle) -> onCreate
    void onClick(android.view.View) -> onClick
com.jianzhiniu.activity.MyJobActivity -> com.jianzhiniu.activity.MyJobActivity:
    android.widget.TextView leftText -> c
    android.widget.TextView rightText -> d
    android.widget.TextView topcenter -> e
    android.view.View leftView -> f
    android.view.View rightView -> g
    android.support.v4.view.ViewPager viewPager -> h
    android.widget.LinearLayout left -> i
    android.widget.LinearLayout right -> j
    android.widget.ImageView returnLayout -> k
    java.util.List fragments -> b
    android.app.Activity activity -> l
    android.content.Intent intent -> m
    void onCreate(android.os.Bundle) -> onCreate
    void LeftOrRight(int) -> a
    void onClick(android.view.View) -> onClick
    android.support.v4.view.ViewPager access$0(com.jianzhiniu.activity.MyJobActivity) -> a
    void access$1(com.jianzhiniu.activity.MyJobActivity,int) -> a
    android.app.Activity access$2(com.jianzhiniu.activity.MyJobActivity) -> b
com.jianzhiniu.activity.MyJobActivity$1 -> com.jianzhiniu.activity.an:
    com.jianzhiniu.activity.MyJobActivity this$0 -> a
    void onPageSelected(int) -> onPageSelected
    void onPageScrolled(int,float,int) -> onPageScrolled
    void onPageScrollStateChanged(int) -> onPageScrollStateChanged
com.jianzhiniu.activity.MyJobActivity$MyFragAdapter -> com.jianzhiniu.activity.ao:
    java.util.List listFragments -> a
    com.jianzhiniu.activity.MyJobActivity this$0 -> b
    int getCount() -> getCount
    android.support.v4.app.Fragment getItem(int) -> getItem
com.jianzhiniu.activity.MyJobActivity$TopClick -> com.jianzhiniu.activity.ap:
    int index -> a
    com.jianzhiniu.activity.MyJobActivity this$0 -> b
    void onClick(android.view.View) -> onClick
com.jianzhiniu.activity.NearbyJobActivity -> com.jianzhiniu.activity.NearbyJobActivity:
    android.app.Activity activity -> d
    java.util.List xlist -> e
    java.util.List mlist -> f
    com.jianzhiniu.views.XListView xListView -> g
    com.jianzhiniu.adapter.NewjoblistAdapter xAdapter -> h
    android.widget.TextView topTextView -> i
    android.widget.TextView locationView -> j
    android.widget.ImageView returnView -> k
    android.widget.ImageView refreshView -> l
    int page -> m
    int size -> n
    int itemdis -> o
    com.jianzhiniu.utils.MyLocationManager myLocation -> p
    double latitude -> q
    double longitude -> r
    double distance -> s
    java.lang.String addressName -> t
    java.lang.String cityString -> u
    java.lang.String position -> v
    java.lang.String dist -> w
    android.content.SharedPreferences shared -> x
    android.content.SharedPreferences$Editor editor -> y
    boolean isRefresh -> z
    boolean isLoad -> A
    boolean isFirst -> B
    com.jianzhiniu.network.WebServiceUIAsyncTask wt -> C
    com.jianzhiniu.network.MapUtil mapUtil -> D
    boolean isDes -> E
    android.widget.AdapterView$OnItemClickListener NewjobitemClick -> a
    java.lang.Runnable getAddressName -> c
    android.os.Handler myHandler -> F
    void onCreate(android.os.Bundle) -> onCreate
    void ExecuteAsyncTask(java.lang.String,java.util.Map) -> a
    void onRefresh() -> a
    void onLoadMore() -> b
    void onLoad() -> d
    void onClick(android.view.View) -> onClick
    void getLocationAddress(double,double) -> a
    void onDestroy() -> onDestroy
    void onCurrentLocation(android.location.Location) -> a
    android.app.Activity access$0(com.jianzhiniu.activity.NearbyJobActivity) -> a
    java.util.List access$1(com.jianzhiniu.activity.NearbyJobActivity) -> b
    void access$2(com.jianzhiniu.activity.NearbyJobActivity,java.lang.String) -> a
    java.lang.String access$3(com.jianzhiniu.activity.NearbyJobActivity) -> c
    void access$4(com.jianzhiniu.activity.NearbyJobActivity,int) -> a
    int access$5(com.jianzhiniu.activity.NearbyJobActivity) -> d
    double access$6(com.jianzhiniu.activity.NearbyJobActivity) -> e
    double access$7(com.jianzhiniu.activity.NearbyJobActivity) -> f
    void access$8(com.jianzhiniu.activity.NearbyJobActivity,double,double) -> a
    android.widget.TextView access$9(com.jianzhiniu.activity.NearbyJobActivity) -> g
    android.content.SharedPreferences$Editor access$10(com.jianzhiniu.activity.NearbyJobActivity) -> h
    java.lang.String access$11(com.jianzhiniu.activity.NearbyJobActivity) -> i
    boolean access$12() -> c
    java.lang.String access$13(com.jianzhiniu.activity.NearbyJobActivity) -> j
    com.jianzhiniu.views.XListView access$14(com.jianzhiniu.activity.NearbyJobActivity) -> k
    boolean access$15(com.jianzhiniu.activity.NearbyJobActivity) -> l
    com.jianzhiniu.adapter.NewjoblistAdapter access$16(com.jianzhiniu.activity.NearbyJobActivity) -> m
    void access$17(com.jianzhiniu.activity.NearbyJobActivity) -> n
    java.util.List access$18(com.jianzhiniu.activity.NearbyJobActivity) -> o
    boolean access$19(com.jianzhiniu.activity.NearbyJobActivity) -> p
    void access$20(com.jianzhiniu.activity.NearbyJobActivity,boolean) -> a
    void access$21(com.jianzhiniu.activity.NearbyJobActivity,java.util.List) -> a
    android.os.Handler access$22(com.jianzhiniu.activity.NearbyJobActivity) -> q
    int access$23(com.jianzhiniu.activity.NearbyJobActivity) -> r
    void access$24(com.jianzhiniu.activity.NearbyJobActivity,boolean) -> b
com.jianzhiniu.activity.NearbyJobActivity$1 -> com.jianzhiniu.activity.aq:
    com.jianzhiniu.activity.NearbyJobActivity this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.jianzhiniu.activity.NearbyJobActivity$2 -> com.jianzhiniu.activity.ar:
    com.jianzhiniu.activity.NearbyJobActivity this$0 -> a
    void run() -> run
com.jianzhiniu.activity.NearbyJobActivity$3 -> com.jianzhiniu.activity.as:
    com.jianzhiniu.activity.NearbyJobActivity this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.jianzhiniu.activity.NearbyJobActivity$4 -> com.jianzhiniu.activity.at:
    com.jianzhiniu.activity.NearbyJobActivity this$0 -> a
    void onTaskStartDoInUI(java.lang.String[]) -> a
    void onGetDataSuccessfulDoInUI(java.lang.String) -> a
    void onUseCacheDoInUI() -> a
    void onTaskWorkingDoInUI(java.lang.String[]) -> b
    void onExceptionDoInUI(java.lang.String[]) -> c
    void onCancelledDoInUI(java.lang.String) -> b
    void onTimeoutDoInUI(java.lang.String[]) -> d
com.jianzhiniu.activity.NewMessageActivity -> com.jianzhiniu.activity.NewMessageActivity:
    android.app.Activity activity -> d
    android.content.Intent intent -> e
    java.util.List xlist -> f
    java.util.List mlist -> g
    java.util.Map rMap -> h
    com.jianzhiniu.views.XListView xListView -> i
    com.jianzhiniu.adapter.MessageAdapter xAdapter -> j
    android.widget.TextView topTextView -> k
    android.widget.ImageView returnView -> l
    int page -> m
    int size -> n
    int position -> o
    boolean isNotice -> p
    boolean isFirst -> q
    boolean isRefresh -> r
    boolean isLoad -> s
    boolean isE -> t
    boolean isReaded -> u
    com.jianzhiniu.network.WebServiceUIAsyncTask wt -> v
    com.jianzhiniu.network.MapUtil mapUtil -> w
    android.content.SharedPreferences shared -> x
    android.content.BroadcastReceiver receiver -> a
    android.widget.AdapterView$OnItemClickListener NewjobitemClick -> c
    android.os.Handler myHandler -> y
    void onCreate(android.os.Bundle) -> onCreate
    void ExecuteAsyncTask(java.lang.String,java.util.Map) -> a
    void onDestroy() -> onDestroy
    void onRefresh() -> a
    void onLoadMore() -> b
    void onLoad() -> c
    void onClick(android.view.View) -> onClick
    void access$0(com.jianzhiniu.activity.NewMessageActivity,int) -> a
    boolean access$1(com.jianzhiniu.activity.NewMessageActivity) -> a
    java.util.List access$2(com.jianzhiniu.activity.NewMessageActivity) -> b
    android.app.Activity access$3(com.jianzhiniu.activity.NewMessageActivity) -> c
    boolean access$4(com.jianzhiniu.activity.NewMessageActivity) -> d
    void access$5(com.jianzhiniu.activity.NewMessageActivity,boolean) -> a
    com.jianzhiniu.network.MapUtil access$6(com.jianzhiniu.activity.NewMessageActivity) -> e
    boolean access$7(com.jianzhiniu.activity.NewMessageActivity) -> f
    com.jianzhiniu.adapter.MessageAdapter access$8(com.jianzhiniu.activity.NewMessageActivity) -> g
    com.jianzhiniu.views.XListView access$9(com.jianzhiniu.activity.NewMessageActivity) -> h
    void access$10(com.jianzhiniu.activity.NewMessageActivity) -> i
    java.util.List access$11(com.jianzhiniu.activity.NewMessageActivity) -> j
    boolean access$12(com.jianzhiniu.activity.NewMessageActivity) -> k
    void access$13(com.jianzhiniu.activity.NewMessageActivity,boolean) -> b
    boolean access$14(com.jianzhiniu.activity.NewMessageActivity) -> l
    void access$15(com.jianzhiniu.activity.NewMessageActivity,java.util.Map) -> a
    java.util.Map access$16(com.jianzhiniu.activity.NewMessageActivity) -> m
    int access$17(com.jianzhiniu.activity.NewMessageActivity) -> n
    void access$18(com.jianzhiniu.activity.NewMessageActivity,java.util.List) -> a
    android.os.Handler access$19(com.jianzhiniu.activity.NewMessageActivity) -> o
    int access$20(com.jianzhiniu.activity.NewMessageActivity) -> p
    void access$21(com.jianzhiniu.activity.NewMessageActivity,boolean) -> c
com.jianzhiniu.activity.NewMessageActivity$1 -> com.jianzhiniu.activity.au:
    com.jianzhiniu.activity.NewMessageActivity this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.jianzhiniu.activity.NewMessageActivity$2 -> com.jianzhiniu.activity.av:
    com.jianzhiniu.activity.NewMessageActivity this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.jianzhiniu.activity.NewMessageActivity$3 -> com.jianzhiniu.activity.aw:
    com.jianzhiniu.activity.NewMessageActivity this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.jianzhiniu.activity.NewMessageActivity$4 -> com.jianzhiniu.activity.ax:
    com.jianzhiniu.activity.NewMessageActivity this$0 -> a
    void onTaskStartDoInUI(java.lang.String[]) -> a
    void onGetDataSuccessfulDoInUI(java.lang.String) -> a
    void onUseCacheDoInUI() -> a
    void onTaskWorkingDoInUI(java.lang.String[]) -> b
    void onExceptionDoInUI(java.lang.String[]) -> c
    void onCancelledDoInUI(java.lang.String) -> b
    void onTimeoutDoInUI(java.lang.String[]) -> d
com.jianzhiniu.activity.NewestJobActivity -> com.jianzhiniu.activity.NewestJobActivity:
    android.widget.TextView centerView -> b
    android.widget.ImageView returnView -> c
    android.content.Intent intent -> d
    void onCreate(android.os.Bundle) -> onCreate
    void onClick(android.view.View) -> onClick
com.jianzhiniu.activity.PersonalCenterActivity -> com.jianzhiniu.activity.PersonalCenterActivity:
    android.app.Activity activity -> c
    android.widget.ImageView returnView -> d
    android.widget.ImageView to1 -> e
    android.widget.ImageView to2 -> f
    android.widget.ImageView to3 -> g
    android.widget.ImageView to4 -> h
    android.widget.ImageView phonecall -> i
    android.widget.TextView topcenter -> j
    android.widget.TextView topright -> k
    android.widget.TextView sexLayout -> l
    android.widget.TextView birthLayout -> m
    android.widget.TextView jobobjective -> n
    android.widget.TextView city -> o
    android.widget.TextView man -> p
    android.widget.TextView woman -> q
    android.widget.TextView nametext -> r
    android.widget.TextView phonetext -> s
    android.widget.TextView txTextView -> t
    boolean isEnable -> u
    boolean isHire -> v
    boolean isRead -> w
    android.widget.EditText name -> x
    android.widget.EditText age -> y
    android.widget.EditText height -> z
    android.widget.EditText school -> A
    android.widget.EditText selfintro -> B
    android.widget.EditText experience -> C
    android.widget.EditText email -> D
    android.widget.EditText phone -> E
    android.widget.EditText fb -> F
    android.widget.EditText tw -> G
    com.jianzhiniu.network.WebServiceUIAsyncTask wt -> H
    com.jianzhiniu.network.MapUtil mapUtil -> I
    int pmwidth -> J
    int pmheight -> K
    android.app.Dialog alertDialog -> L
    android.view.View objectView -> M
    android.view.View bottomView -> N
    java.lang.String[] arrs -> O
    boolean[] boos -> P
    com.jianzhiniu.views.CustomMultiChoiceDialog$Builder multiChoiceDialogBuilder -> Q
    android.content.SharedPreferences shared -> R
    android.content.SharedPreferences shared2 -> S
    android.content.SharedPreferences$Editor editor -> T
    com.jianzhiniu.views.RoundImageView touxiang -> U
    java.util.Map rmap -> V
    java.util.Map smap -> W
    java.util.List typelist -> X
    java.lang.String sidString -> Y
    java.lang.String imgurl -> Z
    java.lang.String webtype -> aa
    android.graphics.Bitmap image -> ab
    android.graphics.Bitmap upBitmap -> ac
    android.content.Intent intent -> ad
    android.content.Intent bIntent -> ae
    android.widget.Button yesButton -> af
    android.widget.Button noButton -> ag
    com.jianzhiniu.views.MyAlertDialog myAlertDialog -> ah
    android.os.Handler myHandler -> ai
    com.jianzhiniu.views.MyAlertDialog$AlertCallback callback -> a
    void onCreate(android.os.Bundle) -> onCreate
    void ExecuteAsyncTask(java.lang.String,java.util.Map) -> a
    void ExecuteAsyncTask2(java.lang.String,java.util.Map) -> b
    void onDestroy() -> onDestroy
    void onClick(android.view.View) -> onClick
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void showMultiChoiceDialog() -> a
    void ShowDateDialog() -> b
    java.lang.String getStringDate(java.lang.Long) -> a
    void setEnable(boolean) -> a
    android.app.Activity access$0(com.jianzhiniu.activity.PersonalCenterActivity) -> a
    com.jianzhiniu.views.RoundImageView access$1(com.jianzhiniu.activity.PersonalCenterActivity) -> b
    android.graphics.Bitmap access$2(com.jianzhiniu.activity.PersonalCenterActivity) -> c
    java.lang.String access$3(com.jianzhiniu.activity.PersonalCenterActivity) -> d
    android.graphics.Bitmap access$4(com.jianzhiniu.activity.PersonalCenterActivity) -> e
    void access$5(com.jianzhiniu.activity.PersonalCenterActivity,java.lang.String) -> a
    com.jianzhiniu.network.MapUtil access$6(com.jianzhiniu.activity.PersonalCenterActivity) -> f
    android.content.SharedPreferences access$7(com.jianzhiniu.activity.PersonalCenterActivity) -> g
    java.util.Map access$8(com.jianzhiniu.activity.PersonalCenterActivity) -> h
    java.util.Map access$9(com.jianzhiniu.activity.PersonalCenterActivity) -> i
    android.widget.TextView access$10(com.jianzhiniu.activity.PersonalCenterActivity) -> j
    android.widget.EditText access$11(com.jianzhiniu.activity.PersonalCenterActivity) -> k
    android.widget.TextView access$12(com.jianzhiniu.activity.PersonalCenterActivity) -> l
    android.widget.EditText access$13(com.jianzhiniu.activity.PersonalCenterActivity) -> m
    android.widget.TextView access$14(com.jianzhiniu.activity.PersonalCenterActivity) -> n
    android.widget.EditText access$15(com.jianzhiniu.activity.PersonalCenterActivity) -> o
    android.widget.EditText access$16(com.jianzhiniu.activity.PersonalCenterActivity) -> p
    android.widget.TextView access$17(com.jianzhiniu.activity.PersonalCenterActivity) -> q
    android.widget.EditText access$18(com.jianzhiniu.activity.PersonalCenterActivity) -> r
    android.widget.TextView access$19(com.jianzhiniu.activity.PersonalCenterActivity) -> s
    android.widget.TextView access$20(com.jianzhiniu.activity.PersonalCenterActivity) -> t
    android.widget.EditText access$21(com.jianzhiniu.activity.PersonalCenterActivity) -> u
    android.widget.EditText access$22(com.jianzhiniu.activity.PersonalCenterActivity) -> v
    android.widget.EditText access$23(com.jianzhiniu.activity.PersonalCenterActivity) -> w
    void access$24(com.jianzhiniu.activity.PersonalCenterActivity,boolean) -> a
    boolean access$25(com.jianzhiniu.activity.PersonalCenterActivity) -> x
    android.content.Intent access$26(com.jianzhiniu.activity.PersonalCenterActivity) -> y
    java.lang.String access$27(com.jianzhiniu.activity.PersonalCenterActivity) -> z
    void access$28(com.jianzhiniu.activity.PersonalCenterActivity,android.graphics.Bitmap) -> a
    android.os.Handler access$29(com.jianzhiniu.activity.PersonalCenterActivity) -> A
    void access$30(com.jianzhiniu.activity.PersonalCenterActivity,java.lang.String) -> b
    com.jianzhiniu.views.CustomMultiChoiceDialog$Builder access$31(com.jianzhiniu.activity.PersonalCenterActivity) -> B
    void access$32(com.jianzhiniu.activity.PersonalCenterActivity,boolean[]) -> a
    boolean[] access$33(com.jianzhiniu.activity.PersonalCenterActivity) -> C
    java.lang.String[] access$34(com.jianzhiniu.activity.PersonalCenterActivity) -> D
    java.lang.String access$35(com.jianzhiniu.activity.PersonalCenterActivity) -> E
    java.util.List access$36(com.jianzhiniu.activity.PersonalCenterActivity) -> F
    void access$37(com.jianzhiniu.activity.PersonalCenterActivity,java.util.Map) -> a
    void access$38(com.jianzhiniu.activity.PersonalCenterActivity,java.util.Map) -> b
    void access$39(com.jianzhiniu.activity.PersonalCenterActivity,boolean) -> b
    android.widget.TextView access$40(com.jianzhiniu.activity.PersonalCenterActivity) -> G
    android.content.SharedPreferences$Editor access$41(com.jianzhiniu.activity.PersonalCenterActivity) -> H
    android.widget.EditText access$42(com.jianzhiniu.activity.PersonalCenterActivity) -> I
    android.widget.EditText access$43(com.jianzhiniu.activity.PersonalCenterActivity) -> J
    void access$44(com.jianzhiniu.activity.PersonalCenterActivity,java.util.List) -> a
    void access$45(com.jianzhiniu.activity.PersonalCenterActivity,java.lang.String[]) -> a
    boolean access$46(com.jianzhiniu.activity.PersonalCenterActivity) -> K
    android.view.View access$47(com.jianzhiniu.activity.PersonalCenterActivity) -> L
    void access$48(com.jianzhiniu.activity.PersonalCenterActivity,android.content.Intent) -> a
    android.content.Intent access$49(com.jianzhiniu.activity.PersonalCenterActivity) -> M
com.jianzhiniu.activity.PersonalCenterActivity$1 -> com.jianzhiniu.activity.ay:
    com.jianzhiniu.activity.PersonalCenterActivity this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.jianzhiniu.activity.PersonalCenterActivity$2 -> com.jianzhiniu.activity.az:
    com.jianzhiniu.activity.PersonalCenterActivity this$0 -> a
    void ybutton() -> a
com.jianzhiniu.activity.PersonalCenterActivity$3 -> com.jianzhiniu.activity.ba:
    com.jianzhiniu.activity.PersonalCenterActivity this$0 -> a
    void onTaskStartDoInUI(java.lang.String[]) -> a
    void onGetDataSuccessfulDoInUI(java.lang.String) -> a
    void onUseCacheDoInUI() -> a
    void onTaskWorkingDoInUI(java.lang.String[]) -> b
    void onExceptionDoInUI(java.lang.String[]) -> c
    void onCancelledDoInUI(java.lang.String) -> b
    void onTimeoutDoInUI(java.lang.String[]) -> d
com.jianzhiniu.activity.PersonalCenterActivity$4 -> com.jianzhiniu.activity.bb:
    com.jianzhiniu.activity.PersonalCenterActivity this$0 -> a
    void onTaskStartDoInUI(java.lang.String[]) -> a
    void onGetDataSuccessfulDoInUI(java.lang.String) -> a
    void onUseCacheDoInUI() -> a
    void onTaskWorkingDoInUI(java.lang.String[]) -> b
    void onExceptionDoInUI(java.lang.String[]) -> c
    void onCancelledDoInUI(java.lang.String) -> b
    void onTimeoutDoInUI(java.lang.String[]) -> d
com.jianzhiniu.activity.PersonalCenterActivity$PositiveClickListener -> com.jianzhiniu.activity.bc:
    com.jianzhiniu.activity.PersonalCenterActivity this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.jianzhiniu.activity.PersonalCenterActivity$listener2 -> com.jianzhiniu.activity.bd:
    com.jianzhiniu.activity.PersonalCenterActivity this$0 -> a
    void OnDateTimeSet(android.app.AlertDialog,long) -> a
com.jianzhiniu.activity.PersonalCenterActivity$mythread -> com.jianzhiniu.activity.be:
    com.jianzhiniu.activity.PersonalCenterActivity this$0 -> a
    void run() -> run
com.jianzhiniu.activity.R -> com.jianzhiniu.activity.bf:
com.jianzhiniu.activity.R$styleable -> com.jianzhiniu.activity.bg:
    int[] MapAttrs -> MapAttrs
    int MapAttrs_cameraBearing -> MapAttrs_cameraBearing
    int MapAttrs_cameraTargetLat -> MapAttrs_cameraTargetLat
    int MapAttrs_cameraTargetLng -> MapAttrs_cameraTargetLng
    int MapAttrs_cameraTilt -> MapAttrs_cameraTilt
    int MapAttrs_cameraZoom -> MapAttrs_cameraZoom
    int MapAttrs_mapType -> MapAttrs_mapType
    int MapAttrs_uiCompass -> MapAttrs_uiCompass
    int MapAttrs_uiRotateGestures -> MapAttrs_uiRotateGestures
    int MapAttrs_uiScrollGestures -> MapAttrs_uiScrollGestures
    int MapAttrs_uiTiltGestures -> MapAttrs_uiTiltGestures
    int MapAttrs_uiZoomControls -> MapAttrs_uiZoomControls
    int MapAttrs_uiZoomGestures -> MapAttrs_uiZoomGestures
    int MapAttrs_useViewLifecycle -> MapAttrs_useViewLifecycle
    int MapAttrs_zOrderOnTop -> MapAttrs_zOrderOnTop
    int[] NumberPicker -> NumberPicker
    int NumberPicker_internalLayout -> NumberPicker_internalLayout
    int NumberPicker_internalMaxHeight -> NumberPicker_internalMaxHeight
    int NumberPicker_internalMaxWidth -> NumberPicker_internalMaxWidth
    int NumberPicker_internalMinHeight -> NumberPicker_internalMinHeight
    int NumberPicker_internalMinWidth -> NumberPicker_internalMinWidth
    int NumberPicker_selectionDivider -> NumberPicker_selectionDivider
    int NumberPicker_selectionDividerHeight -> NumberPicker_selectionDividerHeight
    int NumberPicker_selectionDividersDistance -> NumberPicker_selectionDividersDistance
    int NumberPicker_solidColor -> NumberPicker_solidColor
    int NumberPicker_virtualButtonPressedDrawable -> NumberPicker_virtualButtonPressedDrawable
    int[] SwitchButton -> SwitchButton
    int SwitchButton_animationVelocity -> SwitchButton_animationVelocity
    int SwitchButton_insetBottom -> SwitchButton_insetBottom
    int SwitchButton_insetLeft -> SwitchButton_insetLeft
    int SwitchButton_insetRight -> SwitchButton_insetRight
    int SwitchButton_insetTop -> SwitchButton_insetTop
    int SwitchButton_measureFactor -> SwitchButton_measureFactor
    int SwitchButton_offColor -> SwitchButton_offColor
    int SwitchButton_offDrawable -> SwitchButton_offDrawable
    int SwitchButton_onColor -> SwitchButton_onColor
    int SwitchButton_onDrawable -> SwitchButton_onDrawable
    int SwitchButton_radius -> SwitchButton_radius
    int SwitchButton_thumbColor -> SwitchButton_thumbColor
    int SwitchButton_thumbDrawable -> SwitchButton_thumbDrawable
    int SwitchButton_thumbPressedColor -> SwitchButton_thumbPressedColor
    int SwitchButton_thumb_height -> SwitchButton_thumb_height
    int SwitchButton_thumb_margin -> SwitchButton_thumb_margin
    int SwitchButton_thumb_marginBottom -> SwitchButton_thumb_marginBottom
    int SwitchButton_thumb_marginLeft -> SwitchButton_thumb_marginLeft
    int SwitchButton_thumb_marginRight -> SwitchButton_thumb_marginRight
    int SwitchButton_thumb_marginTop -> SwitchButton_thumb_marginTop
    int SwitchButton_thumb_width -> SwitchButton_thumb_width
    int[] roundedimageview -> roundedimageview
    int roundedimageview_border_inside_color -> roundedimageview_border_inside_color
    int roundedimageview_border_outside_color -> roundedimageview_border_outside_color
    int roundedimageview_border_thickness -> roundedimageview_border_thickness
com.jianzhiniu.activity.RegisterActivity -> com.jianzhiniu.activity.RegisterActivity:
    android.widget.TextView getverify -> a
    android.widget.TextView agreement -> c
    android.widget.TextView topTextView -> d
    android.widget.ImageView returnView -> e
    android.widget.Button registerButton -> f
    android.widget.CheckBox checkBox -> g
    android.widget.EditText phoneEdit -> h
    android.widget.EditText verifyEdit -> i
    android.widget.EditText pwdEdit -> j
    android.content.Context activity -> k
    com.jianzhiniu.network.WebServiceUIAsyncTask wt -> l
    com.jianzhiniu.network.MapUtil mapUtil -> m
    boolean isE -> n
    android.content.Intent intent -> o
    int sec -> p
    java.lang.String webtype -> q
    android.content.SharedPreferences shared -> r
    android.content.SharedPreferences$Editor editor -> s
    android.os.Handler myHandler -> t
    void onCreate(android.os.Bundle) -> onCreate
    void ExecuteAsyncTask(java.lang.String,java.util.Map) -> a
    void onPause() -> onPause
    void onClick(android.view.View) -> onClick
    boolean isMobile(java.lang.String) -> a
    void onDestroy() -> onDestroy
    android.content.Context access$0(com.jianzhiniu.activity.RegisterActivity) -> a
    android.widget.TextView access$1(com.jianzhiniu.activity.RegisterActivity) -> b
    int access$2() -> a
    android.os.Handler access$3(com.jianzhiniu.activity.RegisterActivity) -> c
    void access$4(com.jianzhiniu.activity.RegisterActivity,java.lang.String) -> a
    boolean access$5(com.jianzhiniu.activity.RegisterActivity) -> d
    com.jianzhiniu.network.MapUtil access$6(com.jianzhiniu.activity.RegisterActivity) -> e
    android.widget.EditText access$7(com.jianzhiniu.activity.RegisterActivity) -> f
    android.widget.EditText access$8(com.jianzhiniu.activity.RegisterActivity) -> g
    void access$9(int) -> a
    java.lang.String access$10(com.jianzhiniu.activity.RegisterActivity) -> h
    android.content.SharedPreferences$Editor access$11(com.jianzhiniu.activity.RegisterActivity) -> i
com.jianzhiniu.activity.RegisterActivity$1 -> com.jianzhiniu.activity.bh:
    com.jianzhiniu.activity.RegisterActivity this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.jianzhiniu.activity.RegisterActivity$2 -> com.jianzhiniu.activity.bi:
    com.jianzhiniu.activity.RegisterActivity this$0 -> a
    void afterEvent(int,int,java.lang.Object) -> afterEvent
com.jianzhiniu.activity.RegisterActivity$3 -> com.jianzhiniu.activity.bj:
    com.jianzhiniu.activity.RegisterActivity this$0 -> a
    void onTaskStartDoInUI(java.lang.String[]) -> a
    void onGetDataSuccessfulDoInUI(java.lang.String) -> a
    void onUseCacheDoInUI() -> a
    void onTaskWorkingDoInUI(java.lang.String[]) -> b
    void onExceptionDoInUI(java.lang.String[]) -> c
    void onCancelledDoInUI(java.lang.String) -> b
    void onTimeoutDoInUI(java.lang.String[]) -> d
com.jianzhiniu.activity.ResetpwdActivityOne -> com.jianzhiniu.activity.ResetpwdActivityOne:
    android.content.Context activity -> a
    android.widget.TextView topView -> c
    android.widget.ImageView returnView -> d
    android.widget.Button nextButton -> e
    android.content.Intent intent -> f
    android.widget.EditText editText -> g
    boolean isE -> h
    com.jianzhiniu.network.WebServiceUIAsyncTask wt -> i
    com.jianzhiniu.network.MapUtil mapUtil -> j
    void onCreate(android.os.Bundle) -> onCreate
    void onPause() -> onPause
    boolean isMobile(java.lang.String) -> a
    void onClick(android.view.View) -> onClick
    void ExecuteAsyncTask(java.lang.String,java.util.Map) -> a
    android.content.Context access$0(com.jianzhiniu.activity.ResetpwdActivityOne) -> a
    boolean access$1(com.jianzhiniu.activity.ResetpwdActivityOne) -> b
    android.widget.EditText access$2(com.jianzhiniu.activity.ResetpwdActivityOne) -> c
com.jianzhiniu.activity.ResetpwdActivityOne$1 -> com.jianzhiniu.activity.bk:
    com.jianzhiniu.activity.ResetpwdActivityOne this$0 -> a
    void onTaskStartDoInUI(java.lang.String[]) -> a
    void onGetDataSuccessfulDoInUI(java.lang.String) -> a
    void onUseCacheDoInUI() -> a
    void onTaskWorkingDoInUI(java.lang.String[]) -> b
    void onExceptionDoInUI(java.lang.String[]) -> c
    void onCancelledDoInUI(java.lang.String) -> b
    void onTimeoutDoInUI(java.lang.String[]) -> d
com.jianzhiniu.activity.ResetpwdActivityThree -> com.jianzhiniu.activity.ResetpwdActivityThree:
    android.widget.ImageView returnView -> a
    android.widget.Button submit -> c
    android.content.Context activity -> d
    boolean isE -> e
    android.widget.EditText pwdEditText -> f
    android.widget.EditText pwdtEditText -> g
    android.widget.TextView topTextView -> h
    android.content.Intent intent -> i
    java.lang.String idString -> j
    com.jianzhiniu.network.WebServiceUIAsyncTask wt -> k
    com.jianzhiniu.network.MapUtil mapUtil -> l
    void onCreate(android.os.Bundle) -> onCreate
    void onClick(android.view.View) -> onClick
    void ExecuteAsyncTask(java.lang.String,java.util.Map) -> a
    void onPause() -> onPause
    android.content.Context access$0(com.jianzhiniu.activity.ResetpwdActivityThree) -> a
com.jianzhiniu.activity.ResetpwdActivityThree$1 -> com.jianzhiniu.activity.bl:
    com.jianzhiniu.activity.ResetpwdActivityThree this$0 -> a
    void onTaskStartDoInUI(java.lang.String[]) -> a
    void onGetDataSuccessfulDoInUI(java.lang.String) -> a
    void onUseCacheDoInUI() -> a
    void onTaskWorkingDoInUI(java.lang.String[]) -> b
    void onExceptionDoInUI(java.lang.String[]) -> c
    void onCancelledDoInUI(java.lang.String) -> b
    void onTimeoutDoInUI(java.lang.String[]) -> d
com.jianzhiniu.activity.ResetpwdActivityTwo -> com.jianzhiniu.activity.ResetpwdActivityTwo:
    android.widget.TextView topText -> a
    android.widget.TextView getverify -> c
    android.widget.ImageView returnImage -> d
    android.widget.EditText phoneEdit -> e
    android.widget.Button nextButton -> f
    android.content.Context activity -> g
    int sec -> h
    boolean isE -> i
    android.content.Intent intent -> j
    java.lang.String numString -> k
    android.os.Handler myHandler -> l
    void onCreate(android.os.Bundle) -> onCreate
    void initsms() -> b
    void onDestroy() -> onDestroy
    void onClick(android.view.View) -> onClick
    android.content.Context access$0(com.jianzhiniu.activity.ResetpwdActivityTwo) -> a
    android.widget.TextView access$1(com.jianzhiniu.activity.ResetpwdActivityTwo) -> b
    int access$2() -> a
    android.os.Handler access$3(com.jianzhiniu.activity.ResetpwdActivityTwo) -> c
    boolean access$4(com.jianzhiniu.activity.ResetpwdActivityTwo) -> d
    android.content.Intent access$5(com.jianzhiniu.activity.ResetpwdActivityTwo) -> e
    void access$6(int) -> a
com.jianzhiniu.activity.ResetpwdActivityTwo$1 -> com.jianzhiniu.activity.bm:
    com.jianzhiniu.activity.ResetpwdActivityTwo this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.jianzhiniu.activity.ResetpwdActivityTwo$2 -> com.jianzhiniu.activity.bn:
    com.jianzhiniu.activity.ResetpwdActivityTwo this$0 -> a
    void afterEvent(int,int,java.lang.Object) -> afterEvent
com.jianzhiniu.activity.SelectCitysActivity -> com.jianzhiniu.activity.SelectCitysActivity:
    android.app.Activity activity -> h
    android.widget.TextView toptext -> i
    com.jianzhiniu.views.IndexBar bar -> a
    android.widget.ListView lv -> c
    boolean issearch -> j
    android.widget.TextView tvShow -> d
    android.widget.TextView locationView -> e
    android.widget.TextView deleteView -> k
    android.widget.EditText autotv_search -> l
    java.util.List beans -> m
    java.util.List beans_search -> n
    java.util.List nameList -> o
    android.widget.ImageView returnView -> p
    android.widget.ImageView refreshView -> q
    com.jianzhiniu.utils.MyLocationManager myLocation -> r
    double latitude -> s
    double longitude -> t
    java.lang.String addressName -> u
    java.lang.String cityString -> v
    android.content.SharedPreferences shared -> w
    android.content.SharedPreferences$Editor editor -> x
    android.widget.AdapterView$OnItemClickListener listener -> f
    java.lang.Runnable getAddressName -> g
    android.os.Handler myHandler -> y
    void onCreate(android.os.Bundle) -> onCreate
    void init() -> a
    java.lang.String convertTouppercase(java.lang.String) -> b
    java.lang.String converterToFirstSpell(java.lang.String) -> a
    void LoadContacts() -> b
    void onClick(android.view.View) -> onClick
    void onCurrentLocation(android.location.Location) -> a
    void getLocationAddress(double,double) -> a
    void onDestroy() -> onDestroy
    boolean access$0(com.jianzhiniu.activity.SelectCitysActivity) -> a
    java.util.List access$1(com.jianzhiniu.activity.SelectCitysActivity) -> b
    java.util.List access$2(com.jianzhiniu.activity.SelectCitysActivity) -> c
    android.app.Activity access$3(com.jianzhiniu.activity.SelectCitysActivity) -> d
    double access$4(com.jianzhiniu.activity.SelectCitysActivity) -> e
    double access$5(com.jianzhiniu.activity.SelectCitysActivity) -> f
    void access$6(com.jianzhiniu.activity.SelectCitysActivity,double,double) -> a
    android.content.SharedPreferences$Editor access$7(com.jianzhiniu.activity.SelectCitysActivity) -> g
    java.lang.String access$8(com.jianzhiniu.activity.SelectCitysActivity) -> h
    android.widget.EditText access$9(com.jianzhiniu.activity.SelectCitysActivity) -> i
    void access$10(com.jianzhiniu.activity.SelectCitysActivity,boolean) -> a
    java.lang.String access$11(com.jianzhiniu.activity.SelectCitysActivity,java.lang.String) -> a
com.jianzhiniu.activity.SelectCitysActivity$1 -> com.jianzhiniu.activity.bo:
    com.jianzhiniu.activity.SelectCitysActivity this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.jianzhiniu.activity.SelectCitysActivity$2 -> com.jianzhiniu.activity.bp:
    com.jianzhiniu.activity.SelectCitysActivity this$0 -> a
    void run() -> run
com.jianzhiniu.activity.SelectCitysActivity$3 -> com.jianzhiniu.activity.bq:
    com.jianzhiniu.activity.SelectCitysActivity this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.jianzhiniu.activity.SelectCitysActivity$4 -> com.jianzhiniu.activity.br:
    com.jianzhiniu.activity.SelectCitysActivity this$0 -> a
    void indexSelected(char) -> a
    void indexChange(char) -> b
com.jianzhiniu.activity.SelectCitysActivity$5 -> com.jianzhiniu.activity.bs:
    com.jianzhiniu.activity.SelectCitysActivity this$0 -> a
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void afterTextChanged(android.text.Editable) -> afterTextChanged
com.jianzhiniu.activity.SelectCitysActivity$Contacts -> com.jianzhiniu.activity.bt:
    java.lang.String name -> a
    char sortKey -> b
    boolean isHead -> c
    com.jianzhiniu.activity.SelectCitysActivity this$0 -> d
com.jianzhiniu.activity.SelectCitysActivity$MyAdapter -> com.jianzhiniu.activity.bu:
    android.content.Context context -> a
    java.util.List nameStrings -> b
    android.view.LayoutInflater inflater -> c
    com.jianzhiniu.activity.SelectCitysActivity this$0 -> d
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.jianzhiniu.activity.SelectCitysActivity$ViewHolder -> com.jianzhiniu.activity.bv:
    android.widget.TextView tvName -> a
com.jianzhiniu.activity.SettingActivity -> com.jianzhiniu.activity.SettingActivity:
    android.widget.TextView centerView -> c
    android.widget.ImageView returnView -> d
    com.kyleduo.switchbutton.SwitchButton push_btn -> e
    android.app.Activity activity -> f
    android.widget.RelativeLayout alterLayout -> g
    android.app.Dialog d -> h
    android.widget.EditText editText2 -> i
    android.widget.EditText editText3 -> j
    com.jianzhiniu.network.WebServiceUIAsyncTask wt -> k
    com.jianzhiniu.network.MapUtil mapUtil -> l
    java.util.Map rmap -> m
    android.content.Intent intent -> n
    int width -> o
    com.jianzhiniu.views.MyAlertDialog$AlertCallback callback -> a
    void onCreate(android.os.Bundle) -> onCreate
    void onClick(android.view.View) -> onClick
    void ExecuteAsyncTask(java.lang.String,java.util.Map) -> a
    void onDestroy() -> onDestroy
    android.app.Activity access$0(com.jianzhiniu.activity.SettingActivity) -> a
    void access$1(com.jianzhiniu.activity.SettingActivity,java.util.Map) -> a
    java.util.Map access$2(com.jianzhiniu.activity.SettingActivity) -> b
    android.app.Dialog access$3(com.jianzhiniu.activity.SettingActivity) -> c
com.jianzhiniu.activity.SettingActivity$1 -> com.jianzhiniu.activity.bw:
    com.jianzhiniu.activity.SettingActivity this$0 -> a
    void ybutton() -> a
com.jianzhiniu.activity.SettingActivity$2 -> com.jianzhiniu.activity.bx:
    com.jianzhiniu.activity.SettingActivity this$0 -> a
    void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
com.jianzhiniu.activity.SettingActivity$3 -> com.jianzhiniu.activity.by:
    com.jianzhiniu.activity.SettingActivity this$0 -> a
    void onTaskStartDoInUI(java.lang.String[]) -> a
    void onGetDataSuccessfulDoInUI(java.lang.String) -> a
    void onUseCacheDoInUI() -> a
    void onTaskWorkingDoInUI(java.lang.String[]) -> b
    void onExceptionDoInUI(java.lang.String[]) -> c
    void onCancelledDoInUI(java.lang.String) -> b
    void onTimeoutDoInUI(java.lang.String[]) -> d
com.jianzhiniu.activity.WebViewActivity -> com.jianzhiniu.activity.WebViewActivity:
    android.widget.ProgressBar progressBar -> a
    android.webkit.WebView webView -> c
    android.content.Intent intent -> d
    android.widget.ImageView returnView -> e
    android.widget.TextView topcenter -> f
    void onCreate(android.os.Bundle) -> onCreate
    void onClick(android.view.View) -> onClick
    void initWebView() -> a
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    android.widget.ProgressBar access$0(com.jianzhiniu.activity.WebViewActivity) -> a
    android.webkit.WebView access$1(com.jianzhiniu.activity.WebViewActivity) -> b
    android.widget.ImageView access$2(com.jianzhiniu.activity.WebViewActivity) -> c
com.jianzhiniu.activity.WebViewActivity$1 -> com.jianzhiniu.activity.bz:
    com.jianzhiniu.activity.WebViewActivity this$0 -> a
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.jianzhiniu.activity.WebViewActivity$MyWebChromeClient -> com.jianzhiniu.activity.ca:
    com.jianzhiniu.activity.WebViewActivity this$0 -> a
    void onProgressChanged(android.webkit.WebView,int) -> onProgressChanged
com.jianzhiniu.activity.WebViewActivity$MyWebViewClient -> com.jianzhiniu.activity.cb:
    com.jianzhiniu.activity.WebViewActivity this$0 -> a
    boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String) -> shouldOverrideUrlLoading
    void onPageFinished(android.webkit.WebView,java.lang.String) -> onPageFinished
    void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap) -> onPageStarted
    void onReceivedError(android.webkit.WebView,int,java.lang.String,java.lang.String) -> onReceivedError
com.jianzhiniu.activity.WelcomeActivity -> com.jianzhiniu.activity.WelcomeActivity:
    android.widget.Button button_p -> c
    android.widget.Button button_e -> d
    boolean exit -> e
    android.widget.LinearLayout linearLayout -> f
    android.content.Intent intent -> g
    com.jianzhiniu.utils.MyLocationManager myLocation -> h
    double latitude -> i
    double longitude -> j
    java.lang.String addressName -> k
    java.lang.String cityString -> l
    android.content.SharedPreferences shared -> m
    android.content.SharedPreferences infoPreferences -> n
    android.content.SharedPreferences einfoPreferences -> o
    android.content.SharedPreferences$Editor editor -> p
    android.content.SharedPreferences$Editor iEditor -> q
    android.content.SharedPreferences$Editor eEditor -> r
    android.os.Handler myHandler -> s
    java.lang.Runnable getAddressName -> a
    void onCreate(android.os.Bundle) -> onCreate
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onClick(android.view.View) -> onClick
    void onCurrentLocation(android.location.Location) -> a
    void getLocationAddress(double,double) -> a
    void onDestroy() -> onDestroy
    android.widget.LinearLayout access$0(com.jianzhiniu.activity.WelcomeActivity) -> a
    double access$1(com.jianzhiniu.activity.WelcomeActivity) -> b
    double access$2(com.jianzhiniu.activity.WelcomeActivity) -> c
    void access$3(com.jianzhiniu.activity.WelcomeActivity,double,double) -> a
    android.os.Handler access$4(com.jianzhiniu.activity.WelcomeActivity) -> d
    void access$5(com.jianzhiniu.activity.WelcomeActivity,boolean) -> a
com.jianzhiniu.activity.WelcomeActivity$1 -> com.jianzhiniu.activity.cc:
    com.jianzhiniu.activity.WelcomeActivity this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.jianzhiniu.activity.WelcomeActivity$2 -> com.jianzhiniu.activity.cd:
    com.jianzhiniu.activity.WelcomeActivity this$0 -> a
    void run() -> run
com.jianzhiniu.activity.WelcomeActivity$3 -> com.jianzhiniu.activity.ce:
    com.jianzhiniu.activity.WelcomeActivity this$0 -> a
    void run() -> run
com.jianzhiniu.activity.WelcomeActivity$4 -> com.jianzhiniu.activity.cf:
    com.jianzhiniu.activity.WelcomeActivity this$0 -> a
    void run() -> run
com.jianzhiniu.adapter.CheckAdapter -> com.jianzhiniu.a.a:
    java.lang.String[] names -> b
    android.view.LayoutInflater mInflater -> c
    android.content.Context mContext -> d
    boolean[] checkedItem -> e
    android.util.SparseArray lmap -> a
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    boolean[] getCheckedItem() -> a
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.jianzhiniu.adapter.CheckAdapter$ViewHolder -> com.jianzhiniu.a.b:
    android.widget.TextView name -> a
    android.widget.CheckBox checkBox -> b
    com.jianzhiniu.adapter.CheckAdapter this$0 -> c
com.jianzhiniu.adapter.Dialogadapter -> com.jianzhiniu.a.c:
    java.util.List list -> a
    com.jianzhiniu.adapter.Dialogadapter$ViewHoder hoder -> b
    android.content.Context context -> c
    void refresh(java.util.List) -> a
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.jianzhiniu.adapter.Dialogadapter$ViewHoder -> com.jianzhiniu.a.d:
    android.widget.TextView textView -> a
com.jianzhiniu.adapter.Dialogadapter2 -> com.jianzhiniu.a.e:
    java.util.List list -> a
    com.jianzhiniu.adapter.Dialogadapter2$ViewHoder hoder -> b
    android.content.Context context -> c
    void refresh(java.util.List) -> a
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.jianzhiniu.adapter.Dialogadapter2$ViewHoder -> com.jianzhiniu.a.f:
    android.widget.TextView textView -> a
com.jianzhiniu.adapter.FragmentViewPagerAdapter -> com.jianzhiniu.a.g:
    java.util.List fragments -> a
    android.support.v4.app.FragmentManager fragmentManager -> b
    android.support.v4.view.ViewPager viewPager -> c
    int currentPageIndex -> d
    com.jianzhiniu.adapter.FragmentViewPagerAdapter$OnExtraPageChangeListener onExtraPageChangeListener -> e
    int getCount() -> getCount
    boolean isViewFromObject(android.view.View,java.lang.Object) -> isViewFromObject
    void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> destroyItem
    java.lang.Object instantiateItem(android.view.ViewGroup,int) -> instantiateItem
    void setOnExtraPageChangeListener(com.jianzhiniu.adapter.FragmentViewPagerAdapter$OnExtraPageChangeListener) -> a
    void onPageScrolled(int,float,int) -> onPageScrolled
    void onPageSelected(int) -> onPageSelected
    void onPageScrollStateChanged(int) -> onPageScrollStateChanged
com.jianzhiniu.adapter.FragmentViewPagerAdapter$OnExtraPageChangeListener -> com.jianzhiniu.a.h:
    void onExtraPageScrolled(int,float,int) -> a
    void onExtraPageSelected(int) -> b
    void onExtraPageScrollStateChanged(int) -> a
com.jianzhiniu.adapter.JobManInfoAdapter -> com.jianzhiniu.a.i:
    java.util.List list -> a
    com.jianzhiniu.adapter.JobManInfoAdapter$ViewHoder hoder -> b
    android.content.Context context -> c
    void refresh(java.util.List) -> a
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.jianzhiniu.adapter.JobManInfoAdapter$ViewHoder -> com.jianzhiniu.a.j:
    android.widget.TextView name -> a
    android.widget.TextView phone -> b
    android.widget.TextView state -> c
com.jianzhiniu.adapter.JobManageAdapter -> com.jianzhiniu.a.k:
    java.util.List list -> a
    com.jianzhiniu.adapter.JobManageAdapter$ViewHoder hoder -> b
    android.content.Context context -> c
    com.nostra13.universalimageloader.core.ImageLoader loader -> d
    com.nostra13.universalimageloader.core.DisplayImageOptions options -> e
    void refresh(java.util.List) -> a
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.jianzhiniu.adapter.JobManageAdapter$ViewHoder -> com.jianzhiniu.a.l:
    android.widget.TextView place -> a
    android.widget.TextView time -> b
    android.widget.TextView price -> c
    android.widget.TextView state -> d
    android.widget.TextView title -> e
    android.widget.TextView count -> f
    android.widget.ImageView img -> g
com.jianzhiniu.adapter.JobManageAdapter1 -> com.jianzhiniu.a.m:
    java.util.List list -> a
    com.jianzhiniu.adapter.JobManageAdapter1$ViewHoder hoder -> b
    android.content.Context context -> c
    com.nostra13.universalimageloader.core.ImageLoader loader -> d
    com.nostra13.universalimageloader.core.DisplayImageOptions options -> e
    void refresh(java.util.List) -> a
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.jianzhiniu.adapter.JobManageAdapter1$ViewHoder -> com.jianzhiniu.a.n:
    android.widget.TextView place -> a
    android.widget.TextView time -> b
    android.widget.TextView price -> c
    android.widget.TextView state -> d
    android.widget.TextView title -> e
    android.widget.TextView count -> f
    android.widget.ImageView img -> g
com.jianzhiniu.adapter.JobManageAdapter2 -> com.jianzhiniu.a.o:
    java.util.List list -> a
    com.jianzhiniu.adapter.JobManageAdapter2$ViewHoder hoder -> b
    android.content.Context context -> c
    com.nostra13.universalimageloader.core.ImageLoader loader -> d
    com.nostra13.universalimageloader.core.DisplayImageOptions options -> e
    void refresh(java.util.List) -> a
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.jianzhiniu.adapter.JobManageAdapter2$ViewHoder -> com.jianzhiniu.a.p:
    android.widget.TextView place -> a
    android.widget.TextView time -> b
    android.widget.TextView price -> c
    android.widget.TextView state -> d
    android.widget.TextView title -> e
    android.widget.TextView count -> f
    android.widget.ImageView img -> g
com.jianzhiniu.adapter.JobinfoAdapter -> com.jianzhiniu.a.q:
    java.util.List list -> a
    com.jianzhiniu.adapter.JobinfoAdapter$ViewHoder hoder -> b
    android.content.Context context -> c
    void refresh(java.util.List) -> a
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.jianzhiniu.adapter.JobinfoAdapter$ViewHoder -> com.jianzhiniu.a.r:
    android.widget.TextView name -> a
    android.widget.TextView reply -> b
    android.widget.TextView name2 -> c
    android.widget.TextView reply2 -> d
    android.view.View bottomView -> e
com.jianzhiniu.adapter.MessageAdapter -> com.jianzhiniu.a.s:
    java.util.List list -> a
    com.jianzhiniu.adapter.MessageAdapter$ViewHoder hoder -> b
    android.content.Context context -> c
    boolean isNotice -> d
    void refresh(java.util.List) -> a
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.jianzhiniu.adapter.MessageAdapter$ViewHoder -> com.jianzhiniu.a.t:
    android.widget.TextView title -> a
    android.widget.TextView time -> b
    android.widget.TextView state -> c
    android.widget.ImageView imageView -> d
com.jianzhiniu.adapter.MyApplylistAdapter -> com.jianzhiniu.a.u:
    java.util.List list -> a
    android.content.Context context -> b
    com.jianzhiniu.adapter.MyApplylistAdapter$ViewHoder hoder -> c
    com.nostra13.universalimageloader.core.ImageLoader loader -> d
    com.nostra13.universalimageloader.core.DisplayImageOptions options -> e
    void refreshdata(java.util.List) -> a
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.jianzhiniu.adapter.MyApplylistAdapter$ViewHoder -> com.jianzhiniu.a.v:
    android.widget.TextView place -> a
    android.widget.TextView time -> b
    android.widget.TextView price -> c
    android.widget.TextView state -> d
    android.widget.TextView title -> e
    android.widget.ImageView start -> f
    android.widget.ImageView img -> g
com.jianzhiniu.adapter.MyJobOnwayAdapter -> com.jianzhiniu.a.w:
    java.util.List list -> a
    com.jianzhiniu.adapter.MyJobOnwayAdapter$ViewHoder hoder -> b
    android.app.Activity context -> c
    com.nostra13.universalimageloader.core.ImageLoader loader -> d
    com.nostra13.universalimageloader.core.DisplayImageOptions options -> e
    void refresh(java.util.List) -> a
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.jianzhiniu.adapter.MyJobOnwayAdapter$ViewHoder -> com.jianzhiniu.a.x:
    android.widget.TextView title -> a
    android.widget.TextView company -> b
    android.widget.TextView contacter -> c
    android.widget.TextView phone -> d
    android.widget.ImageView img -> e
    android.widget.LinearLayout layout -> f
com.jianzhiniu.adapter.MyJobOnwayAdapter$phoneclick -> com.jianzhiniu.a.y:
    int pp -> a
    com.jianzhiniu.adapter.MyJobOnwayAdapter this$0 -> b
    void onClick(android.view.View) -> onClick
com.jianzhiniu.adapter.NewjoblistAdapter -> com.jianzhiniu.a.z:
    java.util.List list -> a
    android.content.Context context -> b
    com.jianzhiniu.adapter.NewjoblistAdapter$ViewHoder hoder -> c
    boolean isNear -> d
    java.lang.String dist -> e
    int distance -> f
    com.nostra13.universalimageloader.core.ImageLoader loader -> g
    com.nostra13.universalimageloader.core.DisplayImageOptions options -> h
    void refreshdata(java.util.List) -> a
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.jianzhiniu.adapter.NewjoblistAdapter$ViewHoder -> com.jianzhiniu.a.aa:
    android.widget.TextView place -> a
    android.widget.TextView time -> b
    android.widget.TextView price -> c
    android.widget.TextView state -> d
    android.widget.TextView title -> e
    android.widget.ImageView start -> f
    android.widget.ImageView img -> g
com.jianzhiniu.adapter.ReplyAdapter -> com.jianzhiniu.a.ab:
    java.util.List list -> a
    com.jianzhiniu.adapter.ReplyAdapter$ViewHoder hoder -> b
    android.content.Context context -> c
    void refresh(java.util.List) -> a
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.jianzhiniu.adapter.ReplyAdapter$ViewHoder -> com.jianzhiniu.a.ac:
    android.widget.TextView name -> a
    android.widget.TextView reply -> b
    android.widget.TextView name2 -> c
    android.widget.TextView reply2 -> d
    android.view.View bottomView -> e
com.jianzhiniu.config.MyApplication -> com.jianzhiniu.config.MyApplication:
    com.jianzhiniu.config.MyApplication instance -> a
    java.util.List activityList -> b
    void addActivity(android.app.Activity) -> a
    void exit() -> a
    void onCreate() -> onCreate
    com.jianzhiniu.config.MyApplication getInstance() -> b
com.jianzhiniu.config.Myconfig -> com.jianzhiniu.config.a:
    boolean isE -> a
    boolean isRead -> b
    boolean isLogin -> c
com.jianzhiniu.entity.AdInfo -> com.jianzhiniu.b.a:
    java.lang.String advImg -> a
    java.lang.String advDesc -> b
    java.lang.String getAdvImg() -> a
    void setAdvImg(java.lang.String) -> a
    java.lang.String getAdvDesc() -> b
com.jianzhiniu.fragments.AssistantFragment -> com.jianzhiniu.fragments.a:
    android.app.Activity activity -> c
    android.widget.ListView listView -> d
    java.util.List list -> e
    android.widget.TextView itemtext -> f
    android.widget.ImageView itemimg -> g
    android.widget.ImageView reddot -> h
    boolean isE -> i
    android.content.Intent intent -> j
    com.jianzhiniu.fragments.AssistantFragment$Myadapter myadapter -> k
    com.jianzhiniu.views.MyAlertDialog myAlertDialog -> l
    com.jianzhiniu.views.MyAlertDialog$AlertCallback callback -> a
    android.widget.AdapterView$OnItemClickListener itemClickListener -> b
    void onAttach(android.app.Activity) -> onAttach
    void onCreate(android.os.Bundle) -> onCreate
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onResume() -> onResume
    void onClick(android.view.View) -> onClick
    android.app.Activity access$0(com.jianzhiniu.fragments.AssistantFragment) -> a
    boolean access$1(com.jianzhiniu.fragments.AssistantFragment) -> b
    com.jianzhiniu.fragments.AssistantFragment$Myadapter access$2(com.jianzhiniu.fragments.AssistantFragment) -> c
    com.jianzhiniu.views.MyAlertDialog access$3(com.jianzhiniu.fragments.AssistantFragment) -> d
    java.util.List access$4(com.jianzhiniu.fragments.AssistantFragment) -> e
    void access$5(com.jianzhiniu.fragments.AssistantFragment,android.widget.TextView) -> a
    void access$6(com.jianzhiniu.fragments.AssistantFragment,android.widget.ImageView) -> a
    void access$7(com.jianzhiniu.fragments.AssistantFragment,android.widget.ImageView) -> b
    android.widget.ImageView access$8(com.jianzhiniu.fragments.AssistantFragment) -> f
    android.widget.ImageView access$9(com.jianzhiniu.fragments.AssistantFragment) -> g
    android.widget.TextView access$10(com.jianzhiniu.fragments.AssistantFragment) -> h
com.jianzhiniu.fragments.AssistantFragment$1 -> com.jianzhiniu.fragments.b:
    com.jianzhiniu.fragments.AssistantFragment this$0 -> a
    void ybutton() -> a
com.jianzhiniu.fragments.AssistantFragment$2 -> com.jianzhiniu.fragments.c:
    com.jianzhiniu.fragments.AssistantFragment this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.jianzhiniu.fragments.AssistantFragment$Myadapter -> com.jianzhiniu.fragments.d:
    com.jianzhiniu.fragments.AssistantFragment this$0 -> a
    int getCount() -> getCount
    void refresh() -> a
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.jianzhiniu.fragments.EnterpriseInfoFragment -> com.jianzhiniu.fragments.e:
    android.app.Activity activity -> b
    android.widget.TextView name -> c
    android.widget.TextView introduce -> d
    android.widget.ImageView logo -> e
    android.widget.ImageView start -> f
    com.jianzhiniu.network.WebServiceUIAsyncTask wt -> g
    com.jianzhiniu.network.MapUtil mapUtil -> h
    java.util.Map infomap -> i
    android.graphics.Bitmap bitmap -> j
    boolean isUn -> k
    android.content.BroadcastReceiver receiver -> a
    android.os.Handler myHandler -> l
    void onAttach(android.app.Activity) -> onAttach
    void onCreate(android.os.Bundle) -> onCreate
    void ExecuteAsyncTask(java.lang.String,java.util.Map) -> a
    void onDestroy() -> onDestroy
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    android.app.Activity access$0(com.jianzhiniu.fragments.EnterpriseInfoFragment) -> a
    com.jianzhiniu.network.MapUtil access$1(com.jianzhiniu.fragments.EnterpriseInfoFragment) -> b
    android.widget.TextView access$2(com.jianzhiniu.fragments.EnterpriseInfoFragment) -> c
    java.util.Map access$3(com.jianzhiniu.fragments.EnterpriseInfoFragment) -> d
    android.widget.TextView access$4(com.jianzhiniu.fragments.EnterpriseInfoFragment) -> e
    android.widget.ImageView access$5(com.jianzhiniu.fragments.EnterpriseInfoFragment) -> f
    void access$6(com.jianzhiniu.fragments.EnterpriseInfoFragment,boolean) -> a
    android.widget.ImageView access$7(com.jianzhiniu.fragments.EnterpriseInfoFragment) -> g
    android.graphics.Bitmap access$8(com.jianzhiniu.fragments.EnterpriseInfoFragment) -> h
    void access$9(com.jianzhiniu.fragments.EnterpriseInfoFragment,android.graphics.Bitmap) -> a
    android.os.Handler access$10(com.jianzhiniu.fragments.EnterpriseInfoFragment) -> i
    void access$11(com.jianzhiniu.fragments.EnterpriseInfoFragment,java.util.Map) -> a
com.jianzhiniu.fragments.EnterpriseInfoFragment$1 -> com.jianzhiniu.fragments.f:
    com.jianzhiniu.fragments.EnterpriseInfoFragment this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.jianzhiniu.fragments.EnterpriseInfoFragment$2 -> com.jianzhiniu.fragments.g:
    com.jianzhiniu.fragments.EnterpriseInfoFragment this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.jianzhiniu.fragments.EnterpriseInfoFragment$3 -> com.jianzhiniu.fragments.h:
    com.jianzhiniu.fragments.EnterpriseInfoFragment this$0 -> a
    void onTaskStartDoInUI(java.lang.String[]) -> a
    void onGetDataSuccessfulDoInUI(java.lang.String) -> a
    void onUseCacheDoInUI() -> a
    void onTaskWorkingDoInUI(java.lang.String[]) -> b
    void onExceptionDoInUI(java.lang.String[]) -> c
    void onCancelledDoInUI(java.lang.String) -> b
    void onTimeoutDoInUI(java.lang.String[]) -> d
com.jianzhiniu.fragments.EnterpriseInfoFragment$thread -> com.jianzhiniu.fragments.i:
    com.jianzhiniu.fragments.EnterpriseInfoFragment this$0 -> a
    void run() -> run
com.jianzhiniu.fragments.JobInfoFragment -> com.jianzhiniu.fragments.j:
    android.app.Activity activity -> c
    com.jianzhiniu.views.MyListview listView -> d
    com.jianzhiniu.adapter.JobinfoAdapter adapter -> e
    android.widget.LinearLayout shareview -> f
    android.widget.LinearLayout complainview -> g
    android.widget.LinearLayout applyview -> h
    android.widget.LinearLayout consultview -> i
    android.widget.LinearLayout mapview -> j
    android.widget.RelativeLayout phoneview -> k
    java.util.List list -> l
    com.jianzhiniu.network.WebServiceUIAsyncTask wt -> m
    com.jianzhiniu.network.MapUtil mapUtil -> n
    java.util.Map infomap -> o
    android.widget.ImageView typeimg -> p
    android.widget.ImageView callimg -> q
    android.widget.TextView title -> r
    android.widget.TextView city -> s
    android.widget.TextView issuetime -> t
    android.widget.TextView price -> u
    android.widget.TextView companyname -> v
    android.widget.TextView peonum -> w
    android.widget.TextView price2 -> x
    android.widget.TextView jobtime -> y
    android.widget.TextView content -> z
    android.widget.TextView place -> A
    android.widget.TextView linkman -> B
    android.widget.TextView phonenum -> C
    android.widget.TextView totalconsult -> D
    android.content.Intent intent -> E
    android.view.View mainView -> F
    android.view.View bottomView -> G
    java.lang.String webtype -> H
    android.content.SharedPreferences isShared -> I
    android.content.SharedPreferences idShared -> J
    boolean isE -> K
    com.nostra13.universalimageloader.core.ImageLoader loader -> L
    com.nostra13.universalimageloader.core.DisplayImageOptions options -> M
    com.jianzhiniu.views.MyAlertDialog myAlertDialog -> N
    com.jianzhiniu.views.MyAlertDialog$AlertCallback callback -> a
    com.jianzhiniu.views.MyAlertDialog$AlertCallback callback2 -> b
    android.os.Handler myHandler -> O
    void onAttach(android.app.Activity) -> onAttach
    void onCreate(android.os.Bundle) -> onCreate
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void ExecuteAsyncTask(java.lang.String,java.util.Map) -> a
    void onDestroy() -> onDestroy
    void setListViewHeightBasedOnChildren(android.widget.ListView) -> a
    void showShare() -> a
    void onClick(android.view.View) -> onClick
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void access$0(com.jianzhiniu.fragments.JobInfoFragment,java.lang.String) -> a
    com.jianzhiniu.network.MapUtil access$1(com.jianzhiniu.fragments.JobInfoFragment) -> a
    android.content.SharedPreferences access$2(com.jianzhiniu.fragments.JobInfoFragment) -> b
    android.content.Intent access$3(com.jianzhiniu.fragments.JobInfoFragment) -> c
    android.app.Activity access$4(com.jianzhiniu.fragments.JobInfoFragment) -> d
    com.nostra13.universalimageloader.core.ImageLoader access$5(com.jianzhiniu.fragments.JobInfoFragment) -> e
    java.util.Map access$6(com.jianzhiniu.fragments.JobInfoFragment) -> f
    android.widget.ImageView access$7(com.jianzhiniu.fragments.JobInfoFragment) -> g
    com.nostra13.universalimageloader.core.DisplayImageOptions access$8(com.jianzhiniu.fragments.JobInfoFragment) -> h
    android.widget.ImageView access$9(com.jianzhiniu.fragments.JobInfoFragment) -> i
    boolean access$10(com.jianzhiniu.fragments.JobInfoFragment) -> j
    android.view.View access$11(com.jianzhiniu.fragments.JobInfoFragment) -> k
    android.widget.LinearLayout access$12(com.jianzhiniu.fragments.JobInfoFragment) -> l
    android.widget.TextView access$13(com.jianzhiniu.fragments.JobInfoFragment) -> m
    android.widget.TextView access$14(com.jianzhiniu.fragments.JobInfoFragment) -> n
    android.widget.TextView access$15(com.jianzhiniu.fragments.JobInfoFragment) -> o
    android.widget.TextView access$16(com.jianzhiniu.fragments.JobInfoFragment) -> p
    android.widget.TextView access$17(com.jianzhiniu.fragments.JobInfoFragment) -> q
    android.widget.TextView access$18(com.jianzhiniu.fragments.JobInfoFragment) -> r
    android.widget.TextView access$19(com.jianzhiniu.fragments.JobInfoFragment) -> s
    android.widget.TextView access$20(com.jianzhiniu.fragments.JobInfoFragment) -> t
    android.widget.TextView access$21(com.jianzhiniu.fragments.JobInfoFragment) -> u
    android.widget.TextView access$22(com.jianzhiniu.fragments.JobInfoFragment) -> v
    android.widget.TextView access$23(com.jianzhiniu.fragments.JobInfoFragment) -> w
    android.widget.TextView access$24(com.jianzhiniu.fragments.JobInfoFragment) -> x
    android.view.View access$25(com.jianzhiniu.fragments.JobInfoFragment) -> y
    android.widget.TextView access$26(com.jianzhiniu.fragments.JobInfoFragment) -> z
    java.util.List access$27(com.jianzhiniu.fragments.JobInfoFragment) -> A
    com.jianzhiniu.adapter.JobinfoAdapter access$28(com.jianzhiniu.fragments.JobInfoFragment) -> B
    com.jianzhiniu.views.MyListview access$29(com.jianzhiniu.fragments.JobInfoFragment) -> C
    java.lang.String access$30(com.jianzhiniu.fragments.JobInfoFragment) -> D
    void access$31(com.jianzhiniu.fragments.JobInfoFragment,java.util.List) -> a
    android.os.Handler access$32(com.jianzhiniu.fragments.JobInfoFragment) -> E
    void access$33(com.jianzhiniu.fragments.JobInfoFragment,java.util.Map) -> a
com.jianzhiniu.fragments.JobInfoFragment$1 -> com.jianzhiniu.fragments.k:
    com.jianzhiniu.fragments.JobInfoFragment this$0 -> a
    void ybutton() -> a
com.jianzhiniu.fragments.JobInfoFragment$2 -> com.jianzhiniu.fragments.l:
    com.jianzhiniu.fragments.JobInfoFragment this$0 -> a
    void ybutton() -> a
com.jianzhiniu.fragments.JobInfoFragment$3 -> com.jianzhiniu.fragments.m:
    com.jianzhiniu.fragments.JobInfoFragment this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.jianzhiniu.fragments.JobInfoFragment$4 -> com.jianzhiniu.fragments.n:
    com.jianzhiniu.fragments.JobInfoFragment this$0 -> a
    void onTaskStartDoInUI(java.lang.String[]) -> a
    void onGetDataSuccessfulDoInUI(java.lang.String) -> a
    void onUseCacheDoInUI() -> a
    void onTaskWorkingDoInUI(java.lang.String[]) -> b
    void onExceptionDoInUI(java.lang.String[]) -> c
    void onCancelledDoInUI(java.lang.String) -> b
    void onTimeoutDoInUI(java.lang.String[]) -> d
com.jianzhiniu.fragments.JobManageFragment -> com.jianzhiniu.fragments.o:
    android.widget.TextView leftText -> b
    android.widget.TextView rightText -> c
    android.widget.TextView midtext -> d
    android.view.View leftView -> e
    android.view.View rightView -> f
    android.view.View midView -> g
    android.support.v4.view.ViewPager viewPager -> h
    android.widget.LinearLayout left -> i
    android.widget.LinearLayout right -> j
    android.widget.LinearLayout middle -> k
    java.util.List fragments -> a
    android.app.Activity activity -> l
    void onAttach(android.app.Activity) -> onAttach
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void LeftOrRight(int) -> a
    android.support.v4.view.ViewPager access$0(com.jianzhiniu.fragments.JobManageFragment) -> a
    void access$1(com.jianzhiniu.fragments.JobManageFragment,int) -> a
    android.app.Activity access$2(com.jianzhiniu.fragments.JobManageFragment) -> b
com.jianzhiniu.fragments.JobManageFragment$1 -> com.jianzhiniu.fragments.p:
    com.jianzhiniu.fragments.JobManageFragment this$0 -> a
    void onPageSelected(int) -> onPageSelected
    void onPageScrolled(int,float,int) -> onPageScrolled
    void onPageScrollStateChanged(int) -> onPageScrollStateChanged
com.jianzhiniu.fragments.JobManageFragment$MyFragAdapter -> com.jianzhiniu.fragments.q:
    java.util.List listFragments -> a
    com.jianzhiniu.fragments.JobManageFragment this$0 -> b
    int getCount() -> getCount
    android.support.v4.app.Fragment getItem(int) -> getItem
com.jianzhiniu.fragments.JobManageFragment$TopClick -> com.jianzhiniu.fragments.r:
    int index -> a
    com.jianzhiniu.fragments.JobManageFragment this$0 -> b
    void onClick(android.view.View) -> onClick
com.jianzhiniu.fragments.JobManageFragment1 -> com.jianzhiniu.fragments.s:
    android.app.Activity activity -> c
    java.util.List xlist -> d
    java.util.List mlist -> e
    com.jianzhiniu.views.XListView xListView -> f
    com.jianzhiniu.adapter.JobManageAdapter xAdapter -> g
    int page -> h
    int size -> i
    int position -> j
    com.jianzhiniu.network.WebServiceUIAsyncTask wt -> k
    com.jianzhiniu.network.MapUtil mapUtil -> l
    boolean isLoad -> m
    boolean isRefresh -> n
    android.content.SharedPreferences shared -> o
    android.content.BroadcastReceiver receiver -> a
    android.os.Handler myHandler -> p
    android.widget.AdapterView$OnItemClickListener NewjobitemClick -> b
    void onAttach(android.app.Activity) -> onAttach
    void onCreate(android.os.Bundle) -> onCreate
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void ExecuteAsyncTask(java.lang.String,java.util.Map) -> a
    void onDestroy() -> onDestroy
    void onRefresh() -> a
    void onLoadMore() -> b
    void onLoad() -> c
    java.util.List access$0(com.jianzhiniu.fragments.JobManageFragment1) -> a
    int access$1(com.jianzhiniu.fragments.JobManageFragment1) -> b
    com.jianzhiniu.adapter.JobManageAdapter access$2(com.jianzhiniu.fragments.JobManageFragment1) -> c
    android.app.Activity access$3(com.jianzhiniu.fragments.JobManageFragment1) -> d
    boolean access$4(com.jianzhiniu.fragments.JobManageFragment1) -> e
    com.jianzhiniu.views.XListView access$5(com.jianzhiniu.fragments.JobManageFragment1) -> f
    void access$6(com.jianzhiniu.fragments.JobManageFragment1) -> g
    java.util.List access$7(com.jianzhiniu.fragments.JobManageFragment1) -> h
    void access$8(com.jianzhiniu.fragments.JobManageFragment1,int) -> a
    void access$9(com.jianzhiniu.fragments.JobManageFragment1,java.util.List) -> a
    android.os.Handler access$10(com.jianzhiniu.fragments.JobManageFragment1) -> i
    int access$11(com.jianzhiniu.fragments.JobManageFragment1) -> j
    void access$12(com.jianzhiniu.fragments.JobManageFragment1,boolean) -> a
com.jianzhiniu.fragments.JobManageFragment1$1 -> com.jianzhiniu.fragments.t:
    com.jianzhiniu.fragments.JobManageFragment1 this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.jianzhiniu.fragments.JobManageFragment1$2 -> com.jianzhiniu.fragments.u:
    com.jianzhiniu.fragments.JobManageFragment1 this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.jianzhiniu.fragments.JobManageFragment1$3 -> com.jianzhiniu.fragments.v:
    com.jianzhiniu.fragments.JobManageFragment1 this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.jianzhiniu.fragments.JobManageFragment1$4 -> com.jianzhiniu.fragments.w:
    com.jianzhiniu.fragments.JobManageFragment1 this$0 -> a
    void onTaskStartDoInUI(java.lang.String[]) -> a
    void onGetDataSuccessfulDoInUI(java.lang.String) -> a
    void onUseCacheDoInUI() -> a
    void onTaskWorkingDoInUI(java.lang.String[]) -> b
    void onExceptionDoInUI(java.lang.String[]) -> c
    void onCancelledDoInUI(java.lang.String) -> b
    void onTimeoutDoInUI(java.lang.String[]) -> d
com.jianzhiniu.fragments.JobManageFragment2 -> com.jianzhiniu.fragments.x:
    android.app.Activity activity -> d
    java.util.List xlist -> e
    java.util.List mlist -> f
    com.jianzhiniu.views.XListView xListView -> g
    com.jianzhiniu.adapter.JobManageAdapter1 xAdapter -> h
    int page -> i
    int size -> j
    int position -> k
    com.jianzhiniu.network.WebServiceUIAsyncTask wt -> l
    com.jianzhiniu.network.MapUtil mapUtil -> m
    boolean isLoad -> n
    boolean isRefresh -> o
    boolean isCloseBroad -> p
    android.content.SharedPreferences shared -> q
    android.content.BroadcastReceiver receiver2 -> a
    android.content.BroadcastReceiver receiver -> b
    android.os.Handler myHandler -> r
    android.widget.AdapterView$OnItemClickListener NewjobitemClick -> c
    void onAttach(android.app.Activity) -> onAttach
    void onCreate(android.os.Bundle) -> onCreate
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void ExecuteAsyncTask(java.lang.String,java.util.Map) -> a
    void onDestroy() -> onDestroy
    void onRefresh() -> a
    void onLoadMore() -> b
    void onLoad() -> c
    java.util.List access$0(com.jianzhiniu.fragments.JobManageFragment2) -> a
    int access$1(com.jianzhiniu.fragments.JobManageFragment2) -> b
    com.jianzhiniu.adapter.JobManageAdapter1 access$2(com.jianzhiniu.fragments.JobManageFragment2) -> c
    com.jianzhiniu.views.XListView access$3(com.jianzhiniu.fragments.JobManageFragment2) -> d
    android.app.Activity access$4(com.jianzhiniu.fragments.JobManageFragment2) -> e
    boolean access$5(com.jianzhiniu.fragments.JobManageFragment2) -> f
    void access$6(com.jianzhiniu.fragments.JobManageFragment2) -> g
    java.util.List access$7(com.jianzhiniu.fragments.JobManageFragment2) -> h
    void access$8(com.jianzhiniu.fragments.JobManageFragment2,int) -> a
    void access$9(com.jianzhiniu.fragments.JobManageFragment2,java.util.List) -> a
    android.os.Handler access$10(com.jianzhiniu.fragments.JobManageFragment2) -> i
    int access$11(com.jianzhiniu.fragments.JobManageFragment2) -> j
    boolean access$12(com.jianzhiniu.fragments.JobManageFragment2) -> k
    void access$13(com.jianzhiniu.fragments.JobManageFragment2,boolean) -> a
    void access$14(com.jianzhiniu.fragments.JobManageFragment2,boolean) -> b
com.jianzhiniu.fragments.JobManageFragment2$1 -> com.jianzhiniu.fragments.y:
    com.jianzhiniu.fragments.JobManageFragment2 this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.jianzhiniu.fragments.JobManageFragment2$2 -> com.jianzhiniu.fragments.z:
    com.jianzhiniu.fragments.JobManageFragment2 this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.jianzhiniu.fragments.JobManageFragment2$3 -> com.jianzhiniu.fragments.aa:
    com.jianzhiniu.fragments.JobManageFragment2 this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.jianzhiniu.fragments.JobManageFragment2$4 -> com.jianzhiniu.fragments.ab:
    com.jianzhiniu.fragments.JobManageFragment2 this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.jianzhiniu.fragments.JobManageFragment2$5 -> com.jianzhiniu.fragments.ac:
    com.jianzhiniu.fragments.JobManageFragment2 this$0 -> a
    void onTaskStartDoInUI(java.lang.String[]) -> a
    void onGetDataSuccessfulDoInUI(java.lang.String) -> a
    void onUseCacheDoInUI() -> a
    void onTaskWorkingDoInUI(java.lang.String[]) -> b
    void onExceptionDoInUI(java.lang.String[]) -> c
    void onCancelledDoInUI(java.lang.String) -> b
    void onTimeoutDoInUI(java.lang.String[]) -> d
com.jianzhiniu.fragments.JobManageFragment3 -> com.jianzhiniu.fragments.ad:
    android.app.Activity activity -> c
    java.util.List xlist -> d
    java.util.List mlist -> e
    com.jianzhiniu.views.XListView xListView -> f
    com.jianzhiniu.adapter.JobManageAdapter2 xAdapter -> g
    int page -> h
    int size -> i
    com.jianzhiniu.network.WebServiceUIAsyncTask wt -> j
    com.jianzhiniu.network.MapUtil mapUtil -> k
    boolean isLoad -> l
    boolean isRefresh -> m
    boolean isCloseBroad -> n
    android.content.SharedPreferences shared -> o
    android.content.BroadcastReceiver receiver -> a
    android.os.Handler myHandler -> p
    android.widget.AdapterView$OnItemClickListener NewjobitemClick -> b
    void onAttach(android.app.Activity) -> onAttach
    void onCreate(android.os.Bundle) -> onCreate
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void ExecuteAsyncTask(java.lang.String,java.util.Map) -> a
    void onDestroy() -> onDestroy
    void onRefresh() -> a
    void onLoadMore() -> b
    void onLoad() -> c
    com.jianzhiniu.views.XListView access$0(com.jianzhiniu.fragments.JobManageFragment3) -> a
    android.app.Activity access$1(com.jianzhiniu.fragments.JobManageFragment3) -> b
    boolean access$2(com.jianzhiniu.fragments.JobManageFragment3) -> c
    java.util.List access$3(com.jianzhiniu.fragments.JobManageFragment3) -> d
    com.jianzhiniu.adapter.JobManageAdapter2 access$4(com.jianzhiniu.fragments.JobManageFragment3) -> e
    void access$5(com.jianzhiniu.fragments.JobManageFragment3) -> f
    java.util.List access$6(com.jianzhiniu.fragments.JobManageFragment3) -> g
    void access$7(com.jianzhiniu.fragments.JobManageFragment3,java.util.List) -> a
    android.os.Handler access$8(com.jianzhiniu.fragments.JobManageFragment3) -> h
    int access$9(com.jianzhiniu.fragments.JobManageFragment3) -> i
    boolean access$10(com.jianzhiniu.fragments.JobManageFragment3) -> j
    void access$11(com.jianzhiniu.fragments.JobManageFragment3,boolean) -> a
    void access$12(com.jianzhiniu.fragments.JobManageFragment3,boolean) -> b
com.jianzhiniu.fragments.JobManageFragment3$1 -> com.jianzhiniu.fragments.ae:
    com.jianzhiniu.fragments.JobManageFragment3 this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.jianzhiniu.fragments.JobManageFragment3$2 -> com.jianzhiniu.fragments.af:
    com.jianzhiniu.fragments.JobManageFragment3 this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.jianzhiniu.fragments.JobManageFragment3$3 -> com.jianzhiniu.fragments.ag:
    com.jianzhiniu.fragments.JobManageFragment3 this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.jianzhiniu.fragments.JobManageFragment3$4 -> com.jianzhiniu.fragments.ah:
    com.jianzhiniu.fragments.JobManageFragment3 this$0 -> a
    void onTaskStartDoInUI(java.lang.String[]) -> a
    void onGetDataSuccessfulDoInUI(java.lang.String) -> a
    void onUseCacheDoInUI() -> a
    void onTaskWorkingDoInUI(java.lang.String[]) -> b
    void onExceptionDoInUI(java.lang.String[]) -> c
    void onCancelledDoInUI(java.lang.String) -> b
    void onTimeoutDoInUI(java.lang.String[]) -> d
com.jianzhiniu.fragments.MainFragment -> com.jianzhiniu.fragments.ai:
    android.app.Activity activity -> c
    com.jianzhiniu.views.AdBannerView mAdBannerView -> d
    java.util.ArrayList mAdInfoList -> e
    android.widget.RelativeLayout reLayout1 -> f
    android.widget.RelativeLayout reLayout2 -> g
    android.widget.RelativeLayout reLayout3 -> h
    android.widget.TextView text1 -> i
    android.widget.TextView text2 -> j
    android.widget.TextView city -> k
    android.widget.LinearLayout lastLayout -> l
    boolean isE -> m
    com.jianzhiniu.network.WebServiceUIAsyncTask wt -> n
    com.jianzhiniu.network.MapUtil mapUtil -> o
    java.util.List list -> p
    java.util.Map versionMap -> q
    com.jianzhiniu.activity.MainActivity mainActivity -> r
    android.app.ProgressDialog progressDialog -> s
    java.lang.String mSavePath -> t
    java.lang.String Name -> u
    int progress -> v
    boolean cancelUpdate -> w
    android.widget.Button vyButton -> x
    android.widget.Button vnButton -> y
    android.app.Dialog versionDialog -> z
    android.widget.TextView versioninfo -> A
    int width -> B
    java.io.File apkFile -> C
    android.view.View line -> D
    android.content.SharedPreferences shared -> E
    android.content.SharedPreferences eshared -> F
    com.jianzhiniu.views.MyAlertDialog myAlertDialog -> G
    com.jianzhiniu.views.MyAlertDialog myAlertDialog2 -> H
    android.content.Intent toIntent -> I
    boolean dissuccess -> J
    com.jianzhiniu.views.MyAlertDialog$AlertCallback callback -> a
    com.jianzhiniu.views.MyAlertDialog$AlertCallback callback2 -> b
    android.os.Handler mHandler -> K
    void onAttach(android.app.Activity) -> onAttach
    void onCreate(android.os.Bundle) -> onCreate
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onResume() -> onResume
    void ExecuteAsyncTask(java.lang.String,java.util.Map) -> a
    void ExecuteAsyncTask2(java.lang.String,java.util.Map) -> b
    void checkUpdate() -> a
    void showNoticeDialog() -> b
    void showDownloadDialog() -> c
    void downloadApk() -> d
    void installApk() -> e
    void onDestroy() -> onDestroy
    void onClick(android.view.View) -> onClick
    boolean access$0(com.jianzhiniu.fragments.MainFragment) -> a
    android.app.Activity access$1(com.jianzhiniu.fragments.MainFragment) -> b
    void access$2(com.jianzhiniu.fragments.MainFragment,android.content.Intent) -> a
    android.content.Intent access$3(com.jianzhiniu.fragments.MainFragment) -> c
    java.util.List access$4(com.jianzhiniu.fragments.MainFragment) -> d
    java.util.ArrayList access$5(com.jianzhiniu.fragments.MainFragment) -> e
    com.jianzhiniu.views.AdBannerView access$6(com.jianzhiniu.fragments.MainFragment) -> f
    android.os.Handler access$7(com.jianzhiniu.fragments.MainFragment) -> g
    void access$8(com.jianzhiniu.fragments.MainFragment,boolean) -> a
    android.app.ProgressDialog access$9(com.jianzhiniu.fragments.MainFragment) -> h
    int access$10(com.jianzhiniu.fragments.MainFragment) -> i
    void access$11(com.jianzhiniu.fragments.MainFragment) -> j
    java.util.Map access$12(com.jianzhiniu.fragments.MainFragment) -> k
    java.lang.String access$13(com.jianzhiniu.fragments.MainFragment) -> l
    java.io.File access$14(com.jianzhiniu.fragments.MainFragment) -> m
    void access$15(com.jianzhiniu.fragments.MainFragment,int) -> a
    boolean access$16(com.jianzhiniu.fragments.MainFragment) -> n
    void access$17(com.jianzhiniu.fragments.MainFragment,java.util.List) -> a
    void access$18(com.jianzhiniu.fragments.MainFragment,java.util.Map) -> a
    void access$19(com.jianzhiniu.fragments.MainFragment,java.lang.String) -> a
    java.lang.String access$20(com.jianzhiniu.fragments.MainFragment) -> o
    void access$21(com.jianzhiniu.fragments.MainFragment,java.io.File) -> a
com.jianzhiniu.fragments.MainFragment$1 -> com.jianzhiniu.fragments.aj:
    com.jianzhiniu.fragments.MainFragment this$0 -> a
    void ybutton() -> a
com.jianzhiniu.fragments.MainFragment$2 -> com.jianzhiniu.fragments.ak:
    com.jianzhiniu.fragments.MainFragment this$0 -> a
    void ybutton() -> a
com.jianzhiniu.fragments.MainFragment$3 -> com.jianzhiniu.fragments.al:
    com.jianzhiniu.fragments.MainFragment this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.jianzhiniu.fragments.MainFragment$4 -> com.jianzhiniu.fragments.am:
    com.jianzhiniu.fragments.MainFragment this$0 -> a
    void onTaskStartDoInUI(java.lang.String[]) -> a
    void onGetDataSuccessfulDoInUI(java.lang.String) -> a
    void onUseCacheDoInUI() -> a
    void onTaskWorkingDoInUI(java.lang.String[]) -> b
    void onExceptionDoInUI(java.lang.String[]) -> c
    void onCancelledDoInUI(java.lang.String) -> b
    void onTimeoutDoInUI(java.lang.String[]) -> d
com.jianzhiniu.fragments.MainFragment$5 -> com.jianzhiniu.fragments.an:
    com.jianzhiniu.fragments.MainFragment this$0 -> a
    void onTaskStartDoInUI(java.lang.String[]) -> a
    void onGetDataSuccessfulDoInUI(java.lang.String) -> a
    void onUseCacheDoInUI() -> a
    void onTaskWorkingDoInUI(java.lang.String[]) -> b
    void onExceptionDoInUI(java.lang.String[]) -> c
    void onCancelledDoInUI(java.lang.String) -> b
    void onTimeoutDoInUI(java.lang.String[]) -> d
com.jianzhiniu.fragments.MainFragment$downloadApkThread -> com.jianzhiniu.fragments.ao:
    com.jianzhiniu.fragments.MainFragment this$0 -> a
    void run() -> run
com.jianzhiniu.fragments.MyCollectFragment -> com.jianzhiniu.fragments.MyCollectFragment:
    android.app.Activity activity -> b
    java.util.List xlist -> c
    com.jianzhiniu.views.XListView xListView -> d
    com.jianzhiniu.adapter.NewjoblistAdapter xAdapter -> e
    int page -> f
    int size -> g
    android.widget.AdapterView$OnItemClickListener NewjobitemClick -> a
    void onAttach(android.app.Activity) -> onAttach
    void onCreate(android.os.Bundle) -> onCreate
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void getxlist() -> c
    void onRefresh() -> a
    void onLoadMore() -> b
    void onLoad() -> d
    void onClick(android.view.View) -> onClick
    android.app.Activity access$0(com.jianzhiniu.fragments.MyCollectFragment) -> a
    void access$1(com.jianzhiniu.fragments.MyCollectFragment,int) -> a
    java.util.List access$2(com.jianzhiniu.fragments.MyCollectFragment) -> b
    com.jianzhiniu.adapter.NewjoblistAdapter access$3(com.jianzhiniu.fragments.MyCollectFragment) -> c
    void access$4(com.jianzhiniu.fragments.MyCollectFragment) -> d
    int access$5(com.jianzhiniu.fragments.MyCollectFragment) -> e
com.jianzhiniu.fragments.MyCollectFragment$1 -> com.jianzhiniu.fragments.ap:
    com.jianzhiniu.fragments.MyCollectFragment this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.jianzhiniu.fragments.MyCollectFragment$2 -> com.jianzhiniu.fragments.aq:
    com.jianzhiniu.fragments.MyCollectFragment this$0 -> a
    void run() -> run
com.jianzhiniu.fragments.MyCollectFragment$3 -> com.jianzhiniu.fragments.ar:
    com.jianzhiniu.fragments.MyCollectFragment this$0 -> a
    void run() -> run
com.jianzhiniu.fragments.MyJobEndFragment -> com.jianzhiniu.fragments.as:
    android.app.Activity activity -> c
    java.util.List xlist -> d
    java.util.List mlist -> e
    com.jianzhiniu.views.XListView xListView -> f
    com.jianzhiniu.adapter.MyJobOnwayAdapter xAdapter -> g
    int page -> h
    int size -> i
    com.jianzhiniu.network.WebServiceUIAsyncTask wt -> j
    com.jianzhiniu.network.MapUtil mapUtil -> k
    boolean isLoad -> l
    boolean isRefresh -> m
    boolean isFirst -> n
    boolean isE -> o
    boolean isCloseBroad -> p
    android.content.Intent intent -> q
    android.content.SharedPreferences shared -> r
    android.content.BroadcastReceiver receiver -> a
    android.os.Handler myHandler -> s
    android.widget.AdapterView$OnItemClickListener NewjobitemClick -> b
    void onAttach(android.app.Activity) -> onAttach
    void onCreate(android.os.Bundle) -> onCreate
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void ExecuteAsyncTask(java.lang.String,java.util.Map) -> a
    void onDestroy() -> onDestroy
    void onRefresh() -> a
    void onLoadMore() -> b
    void onLoad() -> c
    void onClick(android.view.View) -> onClick
    com.jianzhiniu.views.XListView access$0(com.jianzhiniu.fragments.MyJobEndFragment) -> a
    android.app.Activity access$1(com.jianzhiniu.fragments.MyJobEndFragment) -> b
    boolean access$2(com.jianzhiniu.fragments.MyJobEndFragment) -> c
    java.util.List access$3(com.jianzhiniu.fragments.MyJobEndFragment) -> d
    com.jianzhiniu.adapter.MyJobOnwayAdapter access$4(com.jianzhiniu.fragments.MyJobEndFragment) -> e
    void access$5(com.jianzhiniu.fragments.MyJobEndFragment) -> f
    java.util.List access$6(com.jianzhiniu.fragments.MyJobEndFragment) -> g
    void access$7(com.jianzhiniu.fragments.MyJobEndFragment,java.util.List) -> a
    android.os.Handler access$8(com.jianzhiniu.fragments.MyJobEndFragment) -> h
    int access$9(com.jianzhiniu.fragments.MyJobEndFragment) -> i
    boolean access$10(com.jianzhiniu.fragments.MyJobEndFragment) -> j
    void access$11(com.jianzhiniu.fragments.MyJobEndFragment,boolean) -> a
    void access$12(com.jianzhiniu.fragments.MyJobEndFragment,boolean) -> b
com.jianzhiniu.fragments.MyJobEndFragment$1 -> com.jianzhiniu.fragments.at:
    com.jianzhiniu.fragments.MyJobEndFragment this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.jianzhiniu.fragments.MyJobEndFragment$2 -> com.jianzhiniu.fragments.au:
    com.jianzhiniu.fragments.MyJobEndFragment this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.jianzhiniu.fragments.MyJobEndFragment$3 -> com.jianzhiniu.fragments.av:
    com.jianzhiniu.fragments.MyJobEndFragment this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.jianzhiniu.fragments.MyJobEndFragment$4 -> com.jianzhiniu.fragments.aw:
    com.jianzhiniu.fragments.MyJobEndFragment this$0 -> a
    void onTaskStartDoInUI(java.lang.String[]) -> a
    void onGetDataSuccessfulDoInUI(java.lang.String) -> a
    void onUseCacheDoInUI() -> a
    void onTaskWorkingDoInUI(java.lang.String[]) -> b
    void onExceptionDoInUI(java.lang.String[]) -> c
    void onCancelledDoInUI(java.lang.String) -> b
    void onTimeoutDoInUI(java.lang.String[]) -> d
com.jianzhiniu.fragments.MyJobOnwayFragment -> com.jianzhiniu.fragments.ax:
    android.app.Activity activity -> b
    java.util.List xlist -> c
    java.util.List mlist -> d
    com.jianzhiniu.views.XListView xListView -> e
    com.jianzhiniu.adapter.MyJobOnwayAdapter xAdapter -> f
    int page -> g
    int size -> h
    com.jianzhiniu.network.WebServiceUIAsyncTask wt -> i
    com.jianzhiniu.network.MapUtil mapUtil -> j
    boolean isLoad -> k
    boolean isRefresh -> l
    boolean isFirst -> m
    boolean isE -> n
    android.content.Intent intent -> o
    android.content.SharedPreferences shared -> p
    android.os.Handler myHandler -> q
    android.widget.AdapterView$OnItemClickListener NewjobitemClick -> a
    void onAttach(android.app.Activity) -> onAttach
    void onCreate(android.os.Bundle) -> onCreate
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void ExecuteAsyncTask(java.lang.String,java.util.Map) -> a
    void onDestroy() -> onDestroy
    void onRefresh() -> a
    void onLoadMore() -> b
    void onLoad() -> c
    android.app.Activity access$0(com.jianzhiniu.fragments.MyJobOnwayFragment) -> a
    boolean access$1(com.jianzhiniu.fragments.MyJobOnwayFragment) -> b
    java.util.List access$2(com.jianzhiniu.fragments.MyJobOnwayFragment) -> c
    com.jianzhiniu.adapter.MyJobOnwayAdapter access$3(com.jianzhiniu.fragments.MyJobOnwayFragment) -> d
    com.jianzhiniu.views.XListView access$4(com.jianzhiniu.fragments.MyJobOnwayFragment) -> e
    void access$5(com.jianzhiniu.fragments.MyJobOnwayFragment) -> f
    java.util.List access$6(com.jianzhiniu.fragments.MyJobOnwayFragment) -> g
    boolean access$7(com.jianzhiniu.fragments.MyJobOnwayFragment) -> h
    void access$8(com.jianzhiniu.fragments.MyJobOnwayFragment,boolean) -> a
    void access$9(com.jianzhiniu.fragments.MyJobOnwayFragment,java.util.List) -> a
    android.os.Handler access$10(com.jianzhiniu.fragments.MyJobOnwayFragment) -> i
    int access$11(com.jianzhiniu.fragments.MyJobOnwayFragment) -> j
    void access$12(com.jianzhiniu.fragments.MyJobOnwayFragment,boolean) -> b
com.jianzhiniu.fragments.MyJobOnwayFragment$1 -> com.jianzhiniu.fragments.ay:
    com.jianzhiniu.fragments.MyJobOnwayFragment this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.jianzhiniu.fragments.MyJobOnwayFragment$2 -> com.jianzhiniu.fragments.az:
    com.jianzhiniu.fragments.MyJobOnwayFragment this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.jianzhiniu.fragments.MyJobOnwayFragment$3 -> com.jianzhiniu.fragments.ba:
    com.jianzhiniu.fragments.MyJobOnwayFragment this$0 -> a
    void onTaskStartDoInUI(java.lang.String[]) -> a
    void onGetDataSuccessfulDoInUI(java.lang.String) -> a
    void onUseCacheDoInUI() -> a
    void onTaskWorkingDoInUI(java.lang.String[]) -> b
    void onExceptionDoInUI(java.lang.String[]) -> c
    void onCancelledDoInUI(java.lang.String) -> b
    void onTimeoutDoInUI(java.lang.String[]) -> d
com.jianzhiniu.fragments.NewFragment -> com.jianzhiniu.fragments.NewFragment:
    android.app.Activity activity -> d
    android.widget.LinearLayout timeLayout -> e
    android.widget.LinearLayout typeLayout -> f
    android.widget.LinearLayout dialogView -> g
    android.widget.ListView listView -> h
    com.jianzhiniu.adapter.Dialogadapter dialogadapter -> i
    boolean isTime -> j
    com.jianzhiniu.network.WebServiceUIAsyncTask wt -> k
    java.util.List xlist -> l
    com.jianzhiniu.views.XListView xListView -> m
    com.jianzhiniu.adapter.NewjoblistAdapter xAdapter -> n
    int page -> o
    int size -> p
    com.jianzhiniu.network.MapUtil mapUtil -> q
    java.util.List mlist -> r
    java.util.List dlist -> s
    java.util.List timelist -> t
    java.util.List typelist -> u
    java.util.Map allmap -> v
    android.content.SharedPreferences shared -> w
    boolean isRefresh -> x
    boolean isLoad -> y
    boolean isMainlist -> z
    boolean isAuto -> A
    boolean isMainpar -> B
    android.widget.TextView timetext -> C
    android.widget.TextView typetext -> D
    android.widget.TextView mcitytext -> E
    java.lang.String timeid -> F
    java.lang.String typeid -> G
    java.lang.String cityString -> H
    com.jianzhiniu.activity.MainActivity mainActivity -> I
    android.content.Intent intent -> J
    android.content.BroadcastReceiver receiver -> a
    android.os.Handler myHandler -> K
    android.widget.AdapterView$OnItemClickListener selectItemClick -> b
    android.widget.AdapterView$OnItemClickListener NewjobitemClick -> c
    void onAttach(android.app.Activity) -> onAttach
    void onCreate(android.os.Bundle) -> onCreate
    void ExecuteAsyncTask(java.lang.String,java.util.Map) -> a
    void onDestroy() -> onDestroy
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onRefresh() -> a
    void onLoadMore() -> b
    void onLoad() -> c
    void onClick(android.view.View) -> onClick
    boolean access$0(com.jianzhiniu.fragments.NewFragment) -> a
    com.jianzhiniu.views.XListView access$1(com.jianzhiniu.fragments.NewFragment) -> b
    java.lang.String access$2(com.jianzhiniu.fragments.NewFragment) -> c
    android.widget.TextView access$3(com.jianzhiniu.fragments.NewFragment) -> d
    void access$4(com.jianzhiniu.fragments.NewFragment,java.lang.String) -> a
    android.app.Activity access$5(com.jianzhiniu.fragments.NewFragment) -> e
    boolean access$6(com.jianzhiniu.fragments.NewFragment) -> f
    java.util.List access$7(com.jianzhiniu.fragments.NewFragment) -> g
    com.jianzhiniu.adapter.NewjoblistAdapter access$8(com.jianzhiniu.fragments.NewFragment) -> h
    void access$9(com.jianzhiniu.fragments.NewFragment) -> i
    java.util.List access$10(com.jianzhiniu.fragments.NewFragment) -> j
    void access$11(com.jianzhiniu.fragments.NewFragment,boolean) -> a
    boolean access$12(com.jianzhiniu.fragments.NewFragment) -> k
    android.widget.TextView access$13(com.jianzhiniu.fragments.NewFragment) -> l
    java.util.List access$14(com.jianzhiniu.fragments.NewFragment) -> m
    void access$15(com.jianzhiniu.fragments.NewFragment,java.lang.String) -> b
    android.widget.TextView access$16(com.jianzhiniu.fragments.NewFragment) -> n
    java.util.List access$17(com.jianzhiniu.fragments.NewFragment) -> o
    void access$18(com.jianzhiniu.fragments.NewFragment,java.lang.String) -> c
    android.widget.LinearLayout access$19(com.jianzhiniu.fragments.NewFragment) -> p
    boolean access$20(com.jianzhiniu.fragments.NewFragment) -> q
    void access$21(com.jianzhiniu.fragments.NewFragment,java.util.List) -> a
    android.os.Handler access$22(com.jianzhiniu.fragments.NewFragment) -> r
    int access$23(com.jianzhiniu.fragments.NewFragment) -> s
    void access$24(com.jianzhiniu.fragments.NewFragment,boolean) -> b
    void access$25(com.jianzhiniu.fragments.NewFragment,java.util.List) -> b
    java.util.Map access$26(com.jianzhiniu.fragments.NewFragment) -> t
    com.jianzhiniu.adapter.Dialogadapter access$27(com.jianzhiniu.fragments.NewFragment) -> u
    void access$28(com.jianzhiniu.fragments.NewFragment,java.util.List) -> c
com.jianzhiniu.fragments.NewFragment$1 -> com.jianzhiniu.fragments.bb:
    com.jianzhiniu.fragments.NewFragment this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.jianzhiniu.fragments.NewFragment$2 -> com.jianzhiniu.fragments.bc:
    com.jianzhiniu.fragments.NewFragment this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.jianzhiniu.fragments.NewFragment$3 -> com.jianzhiniu.fragments.bd:
    com.jianzhiniu.fragments.NewFragment this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.jianzhiniu.fragments.NewFragment$4 -> com.jianzhiniu.fragments.be:
    com.jianzhiniu.fragments.NewFragment this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.jianzhiniu.fragments.NewFragment$5 -> com.jianzhiniu.fragments.bf:
    com.jianzhiniu.fragments.NewFragment this$0 -> a
    void onTaskStartDoInUI(java.lang.String[]) -> a
    void onGetDataSuccessfulDoInUI(java.lang.String) -> a
    void onUseCacheDoInUI() -> a
    void onTaskWorkingDoInUI(java.lang.String[]) -> b
    void onExceptionDoInUI(java.lang.String[]) -> c
    void onCancelledDoInUI(java.lang.String) -> b
    void onTimeoutDoInUI(java.lang.String[]) -> d
com.jianzhiniu.fragments.PersonalFragment -> com.jianzhiniu.fragments.bg:
    android.app.Activity activity -> b
    android.widget.RelativeLayout personalLayout -> c
    android.widget.RelativeLayout collectLayout -> d
    android.widget.RelativeLayout feedbackLayout -> e
    android.widget.RelativeLayout settingLayout -> f
    android.widget.RelativeLayout exitLayout -> g
    android.widget.RelativeLayout checkupdate -> h
    android.widget.Button yButton -> i
    android.widget.Button nButton -> j
    android.widget.Button vyButton -> k
    android.widget.Button vnButton -> l
    android.app.Dialog alertDialog -> m
    android.app.Dialog versionDialog -> n
    cn.sharesdk.framework.Platform facebook -> o
    cn.sharesdk.framework.Platform twitter -> p
    int width -> q
    int height -> r
    android.widget.ImageView start -> s
    android.content.Intent intent -> t
    boolean isE -> u
    android.content.SharedPreferences shared -> v
    com.jianzhiniu.views.RoundImageView touxiang -> w
    android.widget.TextView name -> x
    android.widget.TextView phone -> y
    android.widget.TextView versioninfo -> z
    android.graphics.Bitmap picBitmap -> A
    java.lang.String imgurl -> B
    com.jianzhiniu.network.WebServiceUIAsyncTask wt -> C
    com.jianzhiniu.network.MapUtil mapUtil -> D
    java.util.Map versionMap -> E
    android.app.ProgressDialog progressDialog -> F
    java.lang.String mSavePath -> G
    java.lang.String Name -> H
    int progress -> I
    boolean cancelUpdate -> J
    java.io.File apkFile -> K
    android.content.SharedPreferences ushareds -> L
    android.content.SharedPreferences$Editor ueditor -> M
    android.os.Handler myHandler -> N
    com.jianzhiniu.views.MyAlertDialog$AlertCallback callback -> a
    android.os.Handler mHandler -> O
    void onAttach(android.app.Activity) -> onAttach
    void onCreate(android.os.Bundle) -> onCreate
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onResume() -> onResume
    void onClick(android.view.View) -> onClick
    void ExecuteAsyncTask(java.lang.String,java.util.Map) -> a
    void checkUpdate() -> a
    void showNoticeDialog() -> b
    void showDownloadDialog() -> c
    void downloadApk() -> d
    void installApk() -> e
    void onDestroy() -> onDestroy
    com.jianzhiniu.views.RoundImageView access$0(com.jianzhiniu.fragments.PersonalFragment) -> a
    android.graphics.Bitmap access$1(com.jianzhiniu.fragments.PersonalFragment) -> b
    java.lang.String access$2(com.jianzhiniu.fragments.PersonalFragment) -> c
    android.app.Activity access$3(com.jianzhiniu.fragments.PersonalFragment) -> d
    android.app.ProgressDialog access$4(com.jianzhiniu.fragments.PersonalFragment) -> e
    int access$5(com.jianzhiniu.fragments.PersonalFragment) -> f
    void access$6(com.jianzhiniu.fragments.PersonalFragment) -> g
    android.content.SharedPreferences access$7(com.jianzhiniu.fragments.PersonalFragment) -> h
    void access$8(com.jianzhiniu.fragments.PersonalFragment,android.graphics.Bitmap) -> a
    android.os.Handler access$9(com.jianzhiniu.fragments.PersonalFragment) -> i
    java.util.Map access$10(com.jianzhiniu.fragments.PersonalFragment) -> j
    java.lang.String access$11(com.jianzhiniu.fragments.PersonalFragment) -> k
    java.io.File access$12(com.jianzhiniu.fragments.PersonalFragment) -> l
    void access$13(com.jianzhiniu.fragments.PersonalFragment,int) -> a
    android.os.Handler access$14(com.jianzhiniu.fragments.PersonalFragment) -> m
    boolean access$15(com.jianzhiniu.fragments.PersonalFragment) -> n
    void access$16(com.jianzhiniu.fragments.PersonalFragment,java.util.Map) -> a
    void access$17(com.jianzhiniu.fragments.PersonalFragment,java.lang.String) -> a
    java.lang.String access$18(com.jianzhiniu.fragments.PersonalFragment) -> o
    void access$19(com.jianzhiniu.fragments.PersonalFragment,java.io.File) -> a
com.jianzhiniu.fragments.PersonalFragment$1 -> com.jianzhiniu.fragments.bh:
    com.jianzhiniu.fragments.PersonalFragment this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.jianzhiniu.fragments.PersonalFragment$2 -> com.jianzhiniu.fragments.bi:
    com.jianzhiniu.fragments.PersonalFragment this$0 -> a
    void ybutton() -> a
com.jianzhiniu.fragments.PersonalFragment$3 -> com.jianzhiniu.fragments.bj:
    com.jianzhiniu.fragments.PersonalFragment this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.jianzhiniu.fragments.PersonalFragment$4 -> com.jianzhiniu.fragments.bk:
    com.jianzhiniu.fragments.PersonalFragment this$0 -> a
    void onTaskStartDoInUI(java.lang.String[]) -> a
    void onGetDataSuccessfulDoInUI(java.lang.String) -> a
    void onUseCacheDoInUI() -> a
    void onTaskWorkingDoInUI(java.lang.String[]) -> b
    void onExceptionDoInUI(java.lang.String[]) -> c
    void onCancelledDoInUI(java.lang.String) -> b
    void onTimeoutDoInUI(java.lang.String[]) -> d
com.jianzhiniu.fragments.PersonalFragment$downloadApkThread -> com.jianzhiniu.fragments.bl:
    com.jianzhiniu.fragments.PersonalFragment this$0 -> a
    void run() -> run
com.jianzhiniu.fragments.PersonalFragment$mythread -> com.jianzhiniu.fragments.bm:
    com.jianzhiniu.fragments.PersonalFragment this$0 -> a
    void run() -> run
com.jianzhiniu.fragments.RecommendFragment -> com.jianzhiniu.fragments.bn:
    android.app.Activity activity -> b
    java.util.List xlist -> c
    java.util.List mlist -> d
    com.jianzhiniu.views.XListView xListView -> e
    com.jianzhiniu.adapter.NewjoblistAdapter xAdapter -> f
    android.content.Intent intent -> g
    int page -> h
    int size -> i
    android.content.SharedPreferences shared -> j
    com.jianzhiniu.network.WebServiceUIAsyncTask wt -> k
    com.jianzhiniu.network.MapUtil mapUtil -> l
    java.lang.String cityString -> m
    boolean isLoad -> n
    boolean isRefresh -> o
    boolean isFirst -> p
    android.os.Handler myHandler -> q
    android.widget.AdapterView$OnItemClickListener NewjobitemClick -> a
    void onAttach(android.app.Activity) -> onAttach
    void onCreate(android.os.Bundle) -> onCreate
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void ExecuteAsyncTask(java.lang.String,java.util.Map) -> a
    void onDestroy() -> onDestroy
    void onRefresh() -> a
    void onLoadMore() -> b
    void onLoad() -> c
    void onClick(android.view.View) -> onClick
    android.app.Activity access$0(com.jianzhiniu.fragments.RecommendFragment) -> a
    boolean access$1(com.jianzhiniu.fragments.RecommendFragment) -> b
    java.util.List access$2(com.jianzhiniu.fragments.RecommendFragment) -> c
    com.jianzhiniu.adapter.NewjoblistAdapter access$3(com.jianzhiniu.fragments.RecommendFragment) -> d
    com.jianzhiniu.views.XListView access$4(com.jianzhiniu.fragments.RecommendFragment) -> e
    void access$5(com.jianzhiniu.fragments.RecommendFragment) -> f
    java.util.List access$6(com.jianzhiniu.fragments.RecommendFragment) -> g
    boolean access$7(com.jianzhiniu.fragments.RecommendFragment) -> h
    void access$8(com.jianzhiniu.fragments.RecommendFragment,boolean) -> a
    void access$9(com.jianzhiniu.fragments.RecommendFragment,java.util.List) -> a
    android.os.Handler access$10(com.jianzhiniu.fragments.RecommendFragment) -> i
    int access$11(com.jianzhiniu.fragments.RecommendFragment) -> j
    void access$12(com.jianzhiniu.fragments.RecommendFragment,boolean) -> b
com.jianzhiniu.fragments.RecommendFragment$1 -> com.jianzhiniu.fragments.bo:
    com.jianzhiniu.fragments.RecommendFragment this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.jianzhiniu.fragments.RecommendFragment$2 -> com.jianzhiniu.fragments.bp:
    com.jianzhiniu.fragments.RecommendFragment this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.jianzhiniu.fragments.RecommendFragment$3 -> com.jianzhiniu.fragments.bq:
    com.jianzhiniu.fragments.RecommendFragment this$0 -> a
    void onTaskStartDoInUI(java.lang.String[]) -> a
    void onGetDataSuccessfulDoInUI(java.lang.String) -> a
    void onUseCacheDoInUI() -> a
    void onTaskWorkingDoInUI(java.lang.String[]) -> b
    void onExceptionDoInUI(java.lang.String[]) -> c
    void onCancelledDoInUI(java.lang.String) -> b
    void onTimeoutDoInUI(java.lang.String[]) -> d
com.jianzhiniu.network.HttpConnect -> com.jianzhiniu.c.a:
    android.graphics.Bitmap getHttpBitmap(java.lang.String,int) -> a
    android.graphics.Bitmap getHttpBitmap(java.lang.String) -> a
com.jianzhiniu.network.JsonTool -> com.jianzhiniu.c.b:
    java.util.Map Loginjson(java.lang.String,java.lang.String) -> a
    java.util.Map IsphoneRegisterjson(java.lang.String,java.lang.String) -> b
    java.util.Map CheckVersionjson(java.lang.String) -> a
    java.util.List JTUTypejson(java.lang.String,java.lang.String,int) -> a
    java.util.List AdvertiseImgjson(java.lang.String,java.lang.String,java.lang.String) -> a
    java.util.Map RegJobInfojson(java.lang.String) -> b
    java.util.List JobApplyerListjson(java.lang.String) -> c
    java.util.List HireListjson(java.lang.String) -> d
    java.util.List NewJobjson(java.lang.String,java.lang.String,boolean) -> a
    java.util.List MyJobjson(java.lang.String,java.lang.String) -> c
    java.util.List JobManagejson(java.lang.String,java.lang.String) -> d
    java.util.List MyApplyjson(java.lang.String,java.lang.String) -> e
    java.util.List ApplyFollowjson(java.lang.String,java.lang.String) -> f
    java.util.List Noticejson(java.lang.String,java.lang.String) -> g
    java.util.List Messagejson(java.lang.String,java.lang.String) -> h
    java.util.List ConsultListjson(java.lang.String,java.lang.String) -> i
    java.util.Map JobInfojson(java.lang.String,java.lang.String) -> j
    java.util.Map isSuccessfuljson(java.lang.String) -> e
com.jianzhiniu.network.MapUtil -> com.jianzhiniu.c.c:
    android.content.Context context -> a
    java.lang.String accesskey -> b
    java.util.Map LoginMap(java.lang.String,java.lang.String) -> a
    java.util.Map CheckVersionMap() -> a
    java.util.Map UserInfoMap(java.lang.String) -> a
    java.util.Map JobApplyersMap(java.lang.String,int,int) -> a
    java.util.Map NoticeMap(int,int) -> a
    java.util.Map JobManageMap(java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,int,int) -> a
    java.util.Map HistoryMap(java.lang.String,int,int) -> b
    java.util.Map MyJobMap(int,java.lang.String,int,int,int) -> a
    java.util.Map MessageMap(int,int,java.lang.String) -> a
    java.util.Map JobInfoMap(java.lang.String) -> b
    java.util.Map ConsultListMap(java.lang.String,int,int) -> c
    java.util.Map SendConsultMap(java.lang.String,java.lang.String,java.lang.String) -> a
    java.util.Map ApplyJobMap(java.lang.String,java.lang.String) -> b
    java.util.Map SendComplainMap(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
    java.util.Map SendFeedbackMap(java.lang.String,java.lang.String,java.lang.String) -> b
    java.util.Map ConsultReplyMap(java.lang.String,java.lang.String,java.lang.String) -> c
    java.util.Map IsReadedMap(java.lang.String) -> c
    java.util.Map EntInfoMap(java.lang.String) -> d
    java.util.Map AlterEinfoMap(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
    java.util.Map UploadPicMap(java.lang.String,java.lang.String,java.lang.String) -> d
    java.util.Map ZMXJMap(java.lang.String,int) -> a
    java.util.Map HireRefuseMap(java.lang.String,int) -> b
    java.util.Map AlterPinfoMap(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
    java.util.Map TLoginMap(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
    java.util.Map SeekerRegisterMap(java.lang.String,java.lang.String) -> c
    java.util.Map VerifyphoneMap(java.lang.String) -> e
    java.util.Map AccesskeyMap() -> b
    java.util.Map AlterpwdMap(java.lang.String,java.lang.String,java.lang.String) -> e
    java.util.Map NewJobMap(java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,int) -> a
    java.util.Map InterestJobMap(java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,int) -> b
    java.util.Map MyApplyMap(java.lang.String,int,int) -> d
    java.util.Map ApplyFollowMap(java.lang.String) -> f
    java.util.Map CancleApplyMap(java.lang.String,java.lang.String) -> d
    java.util.Map NearbyJobMap(java.lang.String,java.lang.String,java.lang.String,double,double,double,int,int) -> a
    java.util.Map IssueJobMap(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> b
com.jianzhiniu.network.NetworkUtil -> com.jianzhiniu.c.d:
    boolean isNetWorkConnected(android.content.Context) -> a
com.jianzhiniu.network.WSUtil -> com.jianzhiniu.c.e:
    java.lang.Object getSoapObjectByCallingWS(java.lang.String,java.lang.String,java.util.Map,java.lang.String) -> a
    java.lang.Object getObjectByCallingWS(java.lang.String,java.lang.String,java.util.Map,java.lang.String) -> b
    org.ksoap2.serialization.SoapSerializationEnvelope constructRequestObject2(java.lang.String,java.lang.String,java.util.Map) -> a
    java.lang.Object callWebservice(java.lang.String,java.lang.String,org.ksoap2.serialization.SoapSerializationEnvelope) -> a
com.jianzhiniu.network.WebServiceAsyncTask -> com.jianzhiniu.c.f:
    boolean _isUseCache -> b
    java.lang.String doInBackground(java.util.Map[]) -> a
    java.lang.String CallingWS(java.util.Map[]) -> b
    void myExecute(java.lang.String,java.util.Map,boolean) -> a
    void onTaskStart() -> b
    void onException(java.lang.Exception) -> a
    void onTimeout(java.lang.Exception) -> b
    java.lang.String PrepareResult(java.lang.String) -> c
    void onNoNetworkConnectionAvailable(java.lang.String) -> d
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.jianzhiniu.network.WebServiceUIAsyncTask -> com.jianzhiniu.c.g:
    int processType -> a
    int TASK_START -> c
    int TASK_WORK -> d
    int TASK_EXCEPTION -> e
    int TASK_NONETWORK -> f
    int TIMEOUT_EXCEPTION -> g
    android.content.Context currentActivity -> h
    void onTaskStartDoInUI(java.lang.String[]) -> a
    void onTaskWorkingDoInUI(java.lang.String[]) -> b
    void onGetDataSuccessfulDoInUI(java.lang.String) -> a
    void onCancelledDoInUI(java.lang.String) -> b
    void onNoNetworkDoInUI(java.lang.String[]) -> f
    void onExceptionDoInUI(java.lang.String[]) -> c
    void onTimeoutDoInUI(java.lang.String[]) -> d
    void onPostExecute(java.lang.String) -> e
    void onUseCacheDoInUI() -> a
    void onCancelled(java.lang.String) -> f
    void onProgressUpdate(java.lang.String[]) -> e
    void myPublishProgress(int,java.lang.String) -> a
    void onTaskStart() -> b
    void onException(java.lang.Exception) -> a
    void onTimeout(java.lang.Exception) -> b
    java.lang.String PrepareResult(java.lang.String) -> c
    void onNoNetworkConnectionAvailable(java.lang.String) -> d
    void onPostExecute(java.lang.Object) -> onPostExecute
    void onCancelled(java.lang.Object) -> onCancelled
    void onProgressUpdate(java.lang.Object[]) -> onProgressUpdate
com.jianzhiniu.utils.AsyncImageLoader -> com.jianzhiniu.d.a:
    android.support.v4.util.LruCache mMemoryCache -> a
    android.content.Context mContext -> b
    java.util.concurrent.ExecutorService mImageThreadPool -> c
    android.graphics.Bitmap loadDrawable(java.lang.String,com.jianzhiniu.utils.ImageCallback) -> a
    android.graphics.Bitmap loadImageFromUrl(java.lang.String) -> a
    void addBitmapToMemoryCache(java.lang.String,android.graphics.Bitmap) -> a
    android.graphics.Bitmap getBitmapFromMemCache(java.lang.String) -> b
    android.content.Context access$0(com.jianzhiniu.utils.AsyncImageLoader) -> a
com.jianzhiniu.utils.AsyncImageLoader$1 -> com.jianzhiniu.d.b:
    com.jianzhiniu.utils.AsyncImageLoader this$0 -> a
    int sizeOf(java.lang.String,android.graphics.Bitmap) -> a
    int sizeOf(java.lang.Object,java.lang.Object) -> sizeOf
com.jianzhiniu.utils.AsyncImageLoader$2 -> com.jianzhiniu.d.c:
    com.jianzhiniu.utils.AsyncImageLoader this$0 -> a
    com.jianzhiniu.utils.ImageCallback val$imageCallback -> b
    java.lang.String val$imageUrl -> c
    void handleMessage(android.os.Message) -> handleMessage
com.jianzhiniu.utils.AsyncImageLoader$3 -> com.jianzhiniu.d.d:
    com.jianzhiniu.utils.AsyncImageLoader this$0 -> a
    java.lang.String val$imageUrl -> b
    android.os.Handler val$handler -> c
    void run() -> run
com.jianzhiniu.utils.BackGestureListener -> com.jianzhiniu.d.e:
    android.app.Activity activity -> a
    boolean onDown(android.view.MotionEvent) -> onDown
    boolean onFling(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onFling
    void onLongPress(android.view.MotionEvent) -> onLongPress
    boolean onScroll(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onScroll
    void onShowPress(android.view.MotionEvent) -> onShowPress
    boolean onSingleTapUp(android.view.MotionEvent) -> onSingleTapUp
com.jianzhiniu.utils.ConstantUtil -> com.jianzhiniu.d.f:
    java.lang.String APP_PIC_STORAGE_PATH -> a
    java.lang.String APP_FILE_STORAGE_PATH -> b
com.jianzhiniu.utils.ImageCacheUtils -> com.jianzhiniu.d.g:
    java.lang.String picUrl -> a
    android.graphics.Bitmap getBitmapFormCache(java.lang.String) -> a
    void saveBitmapToCache(java.lang.String,android.graphics.Bitmap) -> a
    android.graphics.Bitmap decodeFile(java.lang.String) -> c
    int getFileFormat(java.lang.String) -> d
    void saveBitmap(android.graphics.Bitmap,java.lang.String,java.lang.String) -> a
    java.lang.String[] getDirAndFileName(java.lang.String) -> e
    void setPicUrl(java.lang.String) -> b
com.jianzhiniu.utils.ImageCallback -> com.jianzhiniu.d.h:
    void imageLoaded(android.graphics.Bitmap,java.lang.String) -> a
com.jianzhiniu.utils.ImageUtil -> com.jianzhiniu.d.i:
    com.jianzhiniu.utils.ImageUtil imageUtil -> a
    byte[] getBitMap(java.lang.String) -> a
    android.graphics.Bitmap getBitmapFromPathWH(java.lang.String,int,int) -> a
    android.graphics.Bitmap getBitmapThumbnail(android.graphics.Bitmap,int,int) -> a
    android.graphics.Bitmap centerSquareScaleBitmap(android.graphics.Bitmap,int) -> a
    java.lang.String compressImage64(android.graphics.Bitmap) -> a
    android.graphics.Bitmap compressImage(android.graphics.Bitmap) -> b
    boolean isHave(java.lang.String) -> b
    void savePNG(android.graphics.Bitmap,java.lang.String) -> a
    android.graphics.Bitmap toRoundCorner(android.graphics.Bitmap,int) -> b
com.jianzhiniu.utils.MyLocationManager -> com.jianzhiniu.d.j:
    java.lang.String TAG -> a
    android.content.Context mContext -> b
    android.location.LocationManager gpsLocationManager -> c
    android.location.LocationManager networkLocationManager -> d
    android.location.Location lastLocation -> e
    com.jianzhiniu.utils.MyLocationManager$LocationCallBack mCallback -> f
    android.location.LocationListener locationListener -> g
    int ENOUGH_LONG -> h
    void updateLocation(android.location.Location) -> a
    void destoryLocationManager() -> a
    void access$0(com.jianzhiniu.utils.MyLocationManager,android.location.Location) -> a
com.jianzhiniu.utils.MyLocationManager$1 -> com.jianzhiniu.d.k:
    com.jianzhiniu.utils.MyLocationManager this$0 -> a
    void onStatusChanged(java.lang.String,int,android.os.Bundle) -> onStatusChanged
    void onProviderEnabled(java.lang.String) -> onProviderEnabled
    void onProviderDisabled(java.lang.String) -> onProviderDisabled
    void onLocationChanged(android.location.Location) -> onLocationChanged
com.jianzhiniu.utils.MyLocationManager$LocationCallBack -> com.jianzhiniu.d.l:
    void onCurrentLocation(android.location.Location) -> a
com.jianzhiniu.utils.MyUtils -> com.jianzhiniu.d.m:
    java.lang.String getIconUrl() -> a
    java.lang.String getPicUrl() -> b
    java.lang.String getWSUrl() -> c
    java.lang.String getAdverUrl() -> d
    java.lang.String getNoticeUrl() -> e
    java.lang.String getAccesskey() -> f
    void showToast2(android.content.Context,java.lang.String) -> a
    void showToast(android.content.Context,int) -> a
    java.lang.String UploadString(java.lang.String) -> a
    java.lang.String ParseString(java.lang.String) -> b
    int getwidth(android.app.Activity) -> a
    boolean isUpdate(java.lang.String,android.content.Context) -> a
    int getAppVersionCode(android.content.Context,java.lang.String) -> b
    java.lang.String getStandardDate(java.lang.String,android.content.Context) -> b
    long getStringToDate(java.lang.String) -> c
com.jianzhiniu.utils.PingYinUtil -> com.jianzhiniu.d.n:
    java.lang.String getPingYin(java.lang.String) -> a
com.jianzhiniu.utils.PinyinComparator -> com.jianzhiniu.d.o:
    int compare(java.lang.Object,java.lang.Object) -> compare
com.jianzhiniu.views.AdBannerView -> com.jianzhiniu.views.AdBannerView:
    java.util.List adList -> a
    java.util.List imageViewsList -> b
    java.util.List dotViewsList -> c
    android.support.v4.view.ViewPager viewPager -> d
    int currentItem -> e
    java.util.concurrent.ScheduledExecutorService scheduledExecutorService -> f
    android.content.Context context -> g
    android.widget.TextView mAdDescTv -> h
    com.jianzhiniu.utils.AsyncImageLoader asyncImageLoader -> i
    android.os.Handler handler -> j
    android.os.Handler mHandler -> k
    int clickFlag -> l
    int getClickFlag() -> getClickFlag
    void setClickFlag(int) -> setClickFlag
    void init(android.os.Handler,java.util.List) -> a
    void startPlay() -> a
    void initData() -> b
    void initUI(android.content.Context) -> a
    android.support.v4.view.ViewPager access$0(com.jianzhiniu.views.AdBannerView) -> a
    int access$1(com.jianzhiniu.views.AdBannerView) -> b
    java.util.List access$2(com.jianzhiniu.views.AdBannerView) -> c
    com.jianzhiniu.utils.AsyncImageLoader access$3(com.jianzhiniu.views.AdBannerView) -> d
    int access$4(com.jianzhiniu.views.AdBannerView) -> e
    android.os.Handler access$5(com.jianzhiniu.views.AdBannerView) -> f
    android.widget.TextView access$6(com.jianzhiniu.views.AdBannerView) -> g
    java.util.List access$7(com.jianzhiniu.views.AdBannerView) -> h
    void access$8(com.jianzhiniu.views.AdBannerView,int) -> a
    java.util.List access$9(com.jianzhiniu.views.AdBannerView) -> i
    android.os.Handler access$10(com.jianzhiniu.views.AdBannerView) -> j
com.jianzhiniu.views.AdBannerView$1 -> com.jianzhiniu.views.a:
    com.jianzhiniu.views.AdBannerView this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.jianzhiniu.views.AdBannerView$MyPageChangeListener -> com.jianzhiniu.views.b:
    boolean isAutoPlay -> a
    com.jianzhiniu.views.AdBannerView this$0 -> b
    void onPageScrollStateChanged(int) -> onPageScrollStateChanged
    void onPageScrolled(int,float,int) -> onPageScrolled
    void onPageSelected(int) -> onPageSelected
com.jianzhiniu.views.AdBannerView$MyPagerAdapter -> com.jianzhiniu.views.c:
    com.jianzhiniu.views.AdBannerView this$0 -> a
    void destroyItem(android.view.View,int,java.lang.Object) -> destroyItem
    java.lang.Object instantiateItem(android.view.View,int) -> instantiateItem
    int getCount() -> getCount
    boolean isViewFromObject(android.view.View,java.lang.Object) -> isViewFromObject
    void restoreState(android.os.Parcelable,java.lang.ClassLoader) -> restoreState
    android.os.Parcelable saveState() -> saveState
    void startUpdate(android.view.View) -> startUpdate
    void finishUpdate(android.view.View) -> finishUpdate
    com.jianzhiniu.views.AdBannerView access$1(com.jianzhiniu.views.AdBannerView$MyPagerAdapter) -> a
com.jianzhiniu.views.AdBannerView$MyPagerAdapter$1 -> com.jianzhiniu.views.d:
    com.jianzhiniu.views.AdBannerView$MyPagerAdapter this$1 -> a
    android.widget.ImageView val$childImg -> b
    void imageLoaded(android.graphics.Bitmap,java.lang.String) -> a
com.jianzhiniu.views.AdBannerView$MyPagerAdapter$2 -> com.jianzhiniu.views.e:
    com.jianzhiniu.views.AdBannerView$MyPagerAdapter this$1 -> a
    int val$p -> b
    void onClick(android.view.View) -> onClick
com.jianzhiniu.views.AdBannerView$SlideShowTask -> com.jianzhiniu.views.f:
    com.jianzhiniu.views.AdBannerView this$0 -> a
    void run() -> run
com.jianzhiniu.views.CustomMultiChoiceDialog -> com.jianzhiniu.views.g:
com.jianzhiniu.views.CustomMultiChoiceDialog$Builder -> com.jianzhiniu.views.h:
    android.content.Context context -> a
    java.lang.String title -> b
    java.lang.String message -> c
    java.lang.String positiveButtonText -> d
    java.lang.String negativeButtonText -> e
    android.view.View contentView -> f
    android.widget.ListView listView -> g
    android.content.DialogInterface$OnClickListener positiveButtonClickListener -> h
    android.content.DialogInterface$OnClickListener negativeButtonClickListener -> i
    android.widget.AdapterView$OnItemClickListener onItemClickListener -> j
    java.lang.String[] items -> k
    boolean[] checkedItems -> l
    boolean showSelectAll -> m
    boolean isMultiChoice -> n
    boolean[] getCheckedItems() -> a
    com.jianzhiniu.views.CustomMultiChoiceDialog$Builder setTitle(int) -> a
    com.jianzhiniu.views.CustomMultiChoiceDialog$Builder setPositiveButton(int,android.content.DialogInterface$OnClickListener) -> a
    com.jianzhiniu.views.CustomMultiChoiceDialog$Builder setNegativeButton(int,android.content.DialogInterface$OnClickListener) -> b
    com.jianzhiniu.views.CustomMultiChoiceDialog$Builder setMultiChoiceItems(java.lang.String[],boolean[],android.widget.AdapterView$OnItemClickListener,boolean) -> a
    com.jianzhiniu.views.CustomMultiChoiceDialog create() -> b
    android.content.DialogInterface$OnClickListener access$0(com.jianzhiniu.views.CustomMultiChoiceDialog$Builder) -> a
    android.content.DialogInterface$OnClickListener access$1(com.jianzhiniu.views.CustomMultiChoiceDialog$Builder) -> b
    android.widget.ListView access$2(com.jianzhiniu.views.CustomMultiChoiceDialog$Builder) -> c
com.jianzhiniu.views.CustomMultiChoiceDialog$Builder$1 -> com.jianzhiniu.views.i:
    com.jianzhiniu.views.CustomMultiChoiceDialog$Builder this$1 -> a
    com.jianzhiniu.views.CustomMultiChoiceDialog val$dialog -> b
    void onClick(android.view.View) -> onClick
com.jianzhiniu.views.CustomMultiChoiceDialog$Builder$2 -> com.jianzhiniu.views.j:
    com.jianzhiniu.views.CustomMultiChoiceDialog$Builder this$1 -> a
    com.jianzhiniu.views.CustomMultiChoiceDialog val$dialog -> b
    void onClick(android.view.View) -> onClick
com.jianzhiniu.views.CustomMultiChoiceDialog$Builder$3 -> com.jianzhiniu.views.k:
    com.jianzhiniu.views.CustomMultiChoiceDialog$Builder this$1 -> a
    com.jianzhiniu.views.CustomMultiChoiceDialog val$dialog -> b
    void onClick(android.view.View) -> onClick
com.jianzhiniu.views.CustomMultiChoiceDialog$Builder$4 -> com.jianzhiniu.views.l:
    com.jianzhiniu.views.CustomMultiChoiceDialog$Builder this$1 -> a
    com.jianzhiniu.views.CustomMultiChoiceDialog val$dialog -> b
    void onClick(android.view.View) -> onClick
com.jianzhiniu.views.CustomMultiChoiceDialog$Builder$5 -> com.jianzhiniu.views.m:
    com.jianzhiniu.views.CustomMultiChoiceDialog$Builder this$1 -> a
    com.jianzhiniu.adapter.CheckAdapter val$checkAdapter -> b
    void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
com.jianzhiniu.views.CustomMultiChoiceDialog$Builder$OnMultiItemClick -> com.jianzhiniu.views.n:
    com.jianzhiniu.views.CustomMultiChoiceDialog$Builder this$1 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.jianzhiniu.views.DateTimePicker -> com.jianzhiniu.views.o:
    net.simonvt.numberpicker.NumberPicker mDateSpinner -> a
    net.simonvt.numberpicker.NumberPicker mMonthSpinner -> b
    net.simonvt.numberpicker.NumberPicker mDaySpinner -> c
    android.widget.TextView textView -> d
    android.widget.Button button -> e
    java.util.Calendar mDate -> f
    int mMonth -> g
    int mDay -> h
    int mYear -> i
    com.jianzhiniu.views.DateTimePicker$OnDateTimeChangedListener mOnDateTimeChangedListener -> j
    com.jianzhiniu.views.DateTimePicker$OnClickListenered clListener -> k
    android.view.View$OnClickListener clickListener -> l
    net.simonvt.numberpicker.NumberPicker$OnValueChangeListener mOnDateChangedListener -> m
    net.simonvt.numberpicker.NumberPicker$OnValueChangeListener mOnHourChangedListener -> n
    net.simonvt.numberpicker.NumberPicker$OnValueChangeListener mOnMinuteChangedListener -> o
    void setOnDateTimeChangedListener(com.jianzhiniu.views.DateTimePicker$OnDateTimeChangedListener) -> setOnDateTimeChangedListener
    void onDateTimeChanged() -> a
    void setOnClickListenered(com.jianzhiniu.views.DateTimePicker$OnClickListenered) -> setOnClickListenered
    void onButtonClicked(android.view.View) -> a
    void access$0(com.jianzhiniu.views.DateTimePicker,android.view.View) -> a
    net.simonvt.numberpicker.NumberPicker access$1(com.jianzhiniu.views.DateTimePicker) -> a
    void access$2(com.jianzhiniu.views.DateTimePicker,int) -> a
    void access$3(com.jianzhiniu.views.DateTimePicker) -> b
    net.simonvt.numberpicker.NumberPicker access$4(com.jianzhiniu.views.DateTimePicker) -> c
    void access$5(com.jianzhiniu.views.DateTimePicker,int) -> b
    net.simonvt.numberpicker.NumberPicker access$6(com.jianzhiniu.views.DateTimePicker) -> d
    void access$7(com.jianzhiniu.views.DateTimePicker,int) -> c
com.jianzhiniu.views.DateTimePicker$1 -> com.jianzhiniu.views.p:
    com.jianzhiniu.views.DateTimePicker this$0 -> a
    void onClick(android.view.View) -> onClick
com.jianzhiniu.views.DateTimePicker$2 -> com.jianzhiniu.views.q:
    com.jianzhiniu.views.DateTimePicker this$0 -> a
    void onValueChange(net.simonvt.numberpicker.NumberPicker,int,int) -> onValueChange
com.jianzhiniu.views.DateTimePicker$3 -> com.jianzhiniu.views.r:
    com.jianzhiniu.views.DateTimePicker this$0 -> a
    void onValueChange(net.simonvt.numberpicker.NumberPicker,int,int) -> onValueChange
com.jianzhiniu.views.DateTimePicker$4 -> com.jianzhiniu.views.s:
    com.jianzhiniu.views.DateTimePicker this$0 -> a
    void onValueChange(net.simonvt.numberpicker.NumberPicker,int,int) -> onValueChange
com.jianzhiniu.views.DateTimePicker$OnClickListenered -> com.jianzhiniu.views.t:
    void OnButtonClickListener(android.view.View) -> a
com.jianzhiniu.views.DateTimePicker$OnDateTimeChangedListener -> com.jianzhiniu.views.u:
    void onDateTimeChanged(com.jianzhiniu.views.DateTimePicker,int,int,int) -> a
com.jianzhiniu.views.DateTimePickerDialog -> com.jianzhiniu.views.v:
    com.jianzhiniu.views.DateTimePicker mDateTimePicker -> a
    java.util.Calendar mDate -> b
    com.jianzhiniu.views.DateTimePickerDialog$OnDateTimeSetListener mOnDateTimeSetListener -> c
    void setOnDateTimeSetListener(com.jianzhiniu.views.DateTimePickerDialog$OnDateTimeSetListener) -> a
    void onClick(android.content.DialogInterface,int) -> onClick
    java.util.Calendar access$0(com.jianzhiniu.views.DateTimePickerDialog) -> a
    com.jianzhiniu.views.DateTimePickerDialog$OnDateTimeSetListener access$1(com.jianzhiniu.views.DateTimePickerDialog) -> b
com.jianzhiniu.views.DateTimePickerDialog$1 -> com.jianzhiniu.views.w:
    com.jianzhiniu.views.DateTimePickerDialog this$0 -> a
    void onDateTimeChanged(com.jianzhiniu.views.DateTimePicker,int,int,int) -> a
com.jianzhiniu.views.DateTimePickerDialog$2 -> com.jianzhiniu.views.x:
    com.jianzhiniu.views.DateTimePickerDialog this$0 -> a
    void OnButtonClickListener(android.view.View) -> a
com.jianzhiniu.views.DateTimePickerDialog$OnDateTimeSetListener -> com.jianzhiniu.views.y:
    void OnDateTimeSet(android.app.AlertDialog,long) -> a
com.jianzhiniu.views.IndexBar -> com.jianzhiniu.views.IndexBar:
    com.jianzhiniu.views.IndexBar$OnIndexSelectedListener osi -> e
    char[] indexs -> f
    android.graphics.Paint paint -> a
    int selected -> b
    int sigleHeight -> c
    char currentIndex -> d
    void setOnIndexSelectedListener(com.jianzhiniu.views.IndexBar$OnIndexSelectedListener) -> setOnIndexSelectedListener
    void onDraw(android.graphics.Canvas) -> onDraw
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
com.jianzhiniu.views.IndexBar$OnIndexSelectedListener -> com.jianzhiniu.views.z:
    void indexChange(char) -> b
    void indexSelected(char) -> a
com.jianzhiniu.views.MyAlertDialog -> com.jianzhiniu.views.aa:
    android.app.Dialog alertDialog -> a
    com.jianzhiniu.views.MyAlertDialog$AlertCallback alertCallback -> b
    android.app.Activity context -> c
    void showMyAlertDialog(int) -> a
com.jianzhiniu.views.MyAlertDialog$1 -> com.jianzhiniu.views.ab:
    com.jianzhiniu.views.MyAlertDialog this$0 -> a
    void onClick(android.view.View) -> onClick
com.jianzhiniu.views.MyAlertDialog$2 -> com.jianzhiniu.views.ac:
    com.jianzhiniu.views.MyAlertDialog this$0 -> a
    void onClick(android.view.View) -> onClick
com.jianzhiniu.views.MyAlertDialog$AlertCallback -> com.jianzhiniu.views.ad:
    void ybutton() -> a
com.jianzhiniu.views.MyListview -> com.jianzhiniu.views.MyListview:
    void onMeasure(int,int) -> onMeasure
com.jianzhiniu.views.MyProgressDialog -> com.jianzhiniu.views.ae:
    android.app.Dialog loadingDialog -> a
    boolean isOpen -> b
    void showDialog(android.content.Context,int) -> a
    void Dismiss() -> a
com.jianzhiniu.views.MyViewPager -> com.jianzhiniu.views.MyViewPager:
    boolean noScroll -> a
    void setNoScroll(boolean) -> setNoScroll
    void scrollTo(int,int) -> scrollTo
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    void setCurrentItem(int,boolean) -> setCurrentItem
    void setCurrentItem(int) -> setCurrentItem
com.jianzhiniu.views.RoundImageView -> com.jianzhiniu.views.RoundImageView:
    int mBorderThickness -> a
    android.content.Context mContext -> b
    int defaultColor -> c
    int mBorderOutsideColor -> d
    int mBorderInsideColor -> e
    int defaultWidth -> f
    int defaultHeight -> g
    void setCustomAttributes(android.util.AttributeSet) -> setCustomAttributes
    void onDraw(android.graphics.Canvas) -> onDraw
    android.graphics.Bitmap getCroppedRoundBitmap(android.graphics.Bitmap,int) -> a
    void drawCircleBorder(android.graphics.Canvas,int,int) -> a
com.jianzhiniu.views.SelectPicPopupWindow -> com.jianzhiniu.views.SelectPicPopupWindow:
    android.widget.Button btn_take_photo -> a
    android.widget.Button btn_pick_photo -> b
    android.widget.Button btn_cancel -> c
    android.widget.LinearLayout layout -> d
    android.content.Intent intent -> e
    void onCreate(android.os.Bundle) -> onCreate
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onClick(android.view.View) -> onClick
com.jianzhiniu.views.SelectPicPopupWindow$1 -> com.jianzhiniu.views.af:
    com.jianzhiniu.views.SelectPicPopupWindow this$0 -> a
    void onClick(android.view.View) -> onClick
com.jianzhiniu.views.ViewPagerScroller -> com.jianzhiniu.views.ag:
    int mScrollDuration -> a
    void startScroll(int,int,int,int,int) -> startScroll
    void startScroll(int,int,int,int) -> startScroll
    void initViewPagerScroll(android.support.v4.view.ViewPager) -> a
com.jianzhiniu.views.XFooterView -> com.jianzhiniu.views.ah:
    int ROTATE_ANIM_DURATION -> a
    android.view.View mLayout -> b
    android.view.View mProgressBar -> c
    android.widget.TextView mHintView -> d
    android.view.animation.Animation mRotateUpAnim -> e
    android.view.animation.Animation mRotateDownAnim -> f
    int mState -> g
    void initView(android.content.Context) -> a
    void setState(int) -> setState
    void setBottomMargin(int) -> setBottomMargin
    int getBottomMargin() -> getBottomMargin
    void hide() -> a
    void show() -> b
com.jianzhiniu.views.XHeaderView -> com.jianzhiniu.views.ai:
    int ROTATE_ANIM_DURATION -> a
    android.widget.LinearLayout mContainer -> b
    android.widget.ImageView mArrowImageView -> c
    android.widget.ProgressBar mProgressBar -> d
    android.widget.TextView mHintTextView -> e
    int mState -> f
    android.view.animation.Animation mRotateUpAnim -> g
    android.view.animation.Animation mRotateDownAnim -> h
    boolean mIsFirst -> i
    void initView(android.content.Context) -> a
    void setState(int) -> setState
    void setVisibleHeight(int) -> setVisibleHeight
    int getVisibleHeight() -> getVisibleHeight
com.jianzhiniu.views.XListView -> com.jianzhiniu.views.XListView:
    float mLastY -> a
    android.widget.Scroller mScroller -> b
    android.widget.AbsListView$OnScrollListener mScrollListener -> c
    int mScrollBack -> d
    com.jianzhiniu.views.XListView$IXListViewListener mListener -> e
    com.jianzhiniu.views.XHeaderView mHeader -> f
    android.widget.RelativeLayout mHeaderContent -> g
    android.widget.TextView mHeaderTime -> h
    int mHeaderHeight -> i
    android.widget.LinearLayout mFooterLayout -> j
    com.jianzhiniu.views.XFooterView mFooterView -> k
    boolean mIsFooterReady -> l
    boolean mEnablePullRefresh -> m
    boolean mPullRefreshing -> n
    boolean mEnablePullLoad -> o
    boolean mEnableAutoLoad -> p
    boolean mPullLoading -> q
    int mTotalItemCount -> r
    void initWithContext(android.content.Context) -> a
    void setAdapter(android.widget.ListAdapter) -> setAdapter
    void setPullRefreshEnable(boolean) -> setPullRefreshEnable
    void setPullLoadEnable(boolean) -> setPullLoadEnable
    void setAutoLoadEnable(boolean) -> setAutoLoadEnable
    void stopRefresh() -> a
    void stopLoadMore() -> b
    void setRefreshTime(java.lang.String) -> setRefreshTime
    void setXListViewListener(com.jianzhiniu.views.XListView$IXListViewListener) -> setXListViewListener
    void autoRefresh() -> c
    void invokeOnScrolling() -> d
    void updateHeaderHeight(float) -> a
    void resetHeaderHeight() -> e
    void updateFooterHeight(float) -> b
    void resetFooterHeight() -> f
    void startLoadMore() -> g
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void computeScroll() -> computeScroll
    void setOnScrollListener(android.widget.AbsListView$OnScrollListener) -> setOnScrollListener
    void onScrollStateChanged(android.widget.AbsListView,int) -> onScrollStateChanged
    void onScroll(android.widget.AbsListView,int,int,int) -> onScroll
    void refresh() -> h
    void loadMore() -> i
    android.widget.RelativeLayout access$0(com.jianzhiniu.views.XListView) -> a
    void access$1(com.jianzhiniu.views.XListView,int) -> a
    void access$2(com.jianzhiniu.views.XListView) -> b
com.jianzhiniu.views.XListView$1 -> com.jianzhiniu.views.aj:
    com.jianzhiniu.views.XListView this$0 -> a
    void onGlobalLayout() -> onGlobalLayout
com.jianzhiniu.views.XListView$2 -> com.jianzhiniu.views.ak:
    com.jianzhiniu.views.XListView this$0 -> a
    void onClick(android.view.View) -> onClick
com.jianzhiniu.views.XListView$IXListViewListener -> com.jianzhiniu.views.al:
    void onRefresh() -> a
    void onLoadMore() -> b
com.jianzhiniu.views.XListView$OnXScrollListener -> com.jianzhiniu.views.am:
    void onXScrolling(android.view.View) -> a
com.kyleduo.switchbutton.AnimationController -> com.kyleduo.switchbutton.AnimationController:
    int ANI_WHAT -> ANI_WHAT
    int DEFAULT_VELOCITY -> DEFAULT_VELOCITY
    int DEFAULT_FRAME_DURATION -> DEFAULT_FRAME_DURATION
    com.kyleduo.switchbutton.AnimationController$AnimationHandler mHandler -> mHandler
    com.kyleduo.switchbutton.AnimationController$OnAnimateListener mOnAnimateListener -> mOnAnimateListener
    boolean isAnimating -> isAnimating
    int mFrame -> mFrame
    int mFrom -> mFrom
    int mTo -> mTo
    int mVelocity -> mVelocity
    com.kyleduo.switchbutton.AnimationController getDefault() -> getDefault
    com.kyleduo.switchbutton.AnimationController init(com.kyleduo.switchbutton.AnimationController$OnAnimateListener) -> init
    void startAnimation(int,int) -> startAnimation
    void stopAnimation() -> stopAnimation
    void setVelocity(int) -> setVelocity
    int access$0() -> access$0
    boolean access$1(com.kyleduo.switchbutton.AnimationController) -> access$1
    com.kyleduo.switchbutton.AnimationController$OnAnimateListener access$2(com.kyleduo.switchbutton.AnimationController) -> access$2
    int access$3(com.kyleduo.switchbutton.AnimationController) -> access$3
    com.kyleduo.switchbutton.AnimationController$AnimationHandler access$4(com.kyleduo.switchbutton.AnimationController) -> access$4
    int access$5() -> access$5
com.kyleduo.switchbutton.AnimationController$AnimationHandler -> com.kyleduo.switchbutton.AnimationController$AnimationHandler:
    void handleMessage(android.os.Message) -> handleMessage
com.kyleduo.switchbutton.AnimationController$OnAnimateListener -> com.kyleduo.switchbutton.AnimationController$OnAnimateListener:
    void onAnimationStart() -> onAnimationStart
    boolean continueAnimating() -> continueAnimating
    void onFrameUpdate(int) -> onFrameUpdate
    void onAnimateComplete() -> onAnimateComplete
com.kyleduo.switchbutton.AnimationController$RequireNextFrame -> com.kyleduo.switchbutton.AnimationController$RequireNextFrame:
    com.kyleduo.switchbutton.AnimationController this$0 -> this$0
    void run() -> run
    void calcNextFrame() -> calcNextFrame
    void requireNextFrame() -> requireNextFrame
com.kyleduo.switchbutton.Configuration -> com.kyleduo.switchbutton.Configuration:
    android.graphics.drawable.Drawable mOnDrawable -> mOnDrawable
    android.graphics.drawable.Drawable mOffDrawable -> mOffDrawable
    android.graphics.drawable.Drawable mThumbDrawable -> mThumbDrawable
    int mOnColor -> mOnColor
    int mOffColor -> mOffColor
    int mThumbColor -> mThumbColor
    int mThumbPressedColor -> mThumbPressedColor
    int mThumbMarginTop -> mThumbMarginTop
    int mThumbMarginBottom -> mThumbMarginBottom
    int mThumbMarginLeft -> mThumbMarginLeft
    int mThumbMarginRight -> mThumbMarginRight
    int mThumbWidth -> mThumbWidth
    int mThumbHeight -> mThumbHeight
    float density -> density
    int mVelocity -> mVelocity
    float mRadius -> mRadius
    float mMeasureFactor -> mMeasureFactor
    android.graphics.Rect mInsetBounds -> mInsetBounds
    com.kyleduo.switchbutton.Configuration getDefault(float) -> getDefault
    void setBackDrawable(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setBackDrawable
    void setOffDrawable(android.graphics.drawable.Drawable) -> setOffDrawable
    void setOnDrawable(android.graphics.drawable.Drawable) -> setOnDrawable
    android.graphics.drawable.Drawable getOnDrawable() -> getOnDrawable
    android.graphics.drawable.Drawable getOffDrawable() -> getOffDrawable
    void setThumbDrawable(android.graphics.drawable.Drawable) -> setThumbDrawable
    android.graphics.drawable.Drawable getThumbDrawable() -> getThumbDrawable
    void setThumbMargin(int,int,int,int) -> setThumbMargin
    void setThumbMarginInPixel(int,int,int,int) -> setThumbMarginInPixel
    void setThumbMargin(int,int,int) -> setThumbMargin
    void setThumbMargin(int,int) -> setThumbMargin
    void setThumbMargin(int) -> setThumbMargin
    void setThumbMarginInPixel(int) -> setThumbMarginInPixel
    int getDefaultThumbMarginInPixel() -> getDefaultThumbMarginInPixel
    int getThumbMarginTop() -> getThumbMarginTop
    int getThumbMarginBottom() -> getThumbMarginBottom
    int getThumbMarginLeft() -> getThumbMarginLeft
    int getThumbMarginRight() -> getThumbMarginRight
    float getDensity() -> getDensity
    void setRadius(float) -> setRadius
    float getRadius() -> getRadius
    void setVelocity(int) -> setVelocity
    int getVelocity() -> getVelocity
    void setOnColor(int) -> setOnColor
    int getOnColor(int) -> getOnColor
    void setOffColor(int) -> setOffColor
    int getOffColor() -> getOffColor
    void setThumbColor(int) -> setThumbColor
    int getThumbColor() -> getThumbColor
    void setThumbWidthAndHeightInPixel(int,int) -> setThumbWidthAndHeightInPixel
    void setThumbWidthAndHeight(int,int) -> setThumbWidthAndHeight
    android.graphics.drawable.Drawable getOffDrawableWithFix() -> getOffDrawableWithFix
    android.graphics.drawable.Drawable getOnDrawableWithFix() -> getOnDrawableWithFix
    android.graphics.drawable.Drawable getThumbDrawableWithFix() -> getThumbDrawableWithFix
    float getMeasureFactor() -> getMeasureFactor
    void setMeasureFactor(float) -> setMeasureFactor
    android.graphics.Rect getInsetBounds() -> getInsetBounds
    void setInsetBounds(int,int,int,int) -> setInsetBounds
    void setInsetLeft(int) -> setInsetLeft
    void setInsetTop(int) -> setInsetTop
    void setInsetRight(int) -> setInsetRight
    void setInsetBottom(int) -> setInsetBottom
    int getInsetX() -> getInsetX
    int getInsetY() -> getInsetY
    int getShrinkX() -> getShrinkX
    int getShrinkY() -> getShrinkY
    boolean needShrink() -> needShrink
    android.graphics.drawable.Drawable getDrawableFromColor(int) -> getDrawableFromColor
    int getThumbWidth() -> getThumbWidth
    int getThumbHeight() -> getThumbHeight
com.kyleduo.switchbutton.Configuration$Default -> com.kyleduo.switchbutton.Configuration$Default:
    int DEFAULT_OFF_COLOR -> DEFAULT_OFF_COLOR
    int DEFAULT_ON_COLOR -> DEFAULT_ON_COLOR
    int DEFAULT_THUMB_COLOR -> DEFAULT_THUMB_COLOR
    int DEFAULT_THUMB_PRESSED_COLOR -> DEFAULT_THUMB_PRESSED_COLOR
    int DEFAULT_THUMB_MARGIN -> DEFAULT_THUMB_MARGIN
    int DEFAULT_RADIUS -> DEFAULT_RADIUS
    float DEFAULT_MEASURE_FACTOR -> DEFAULT_MEASURE_FACTOR
    int DEFAULT_INNER_BOUNDS -> DEFAULT_INNER_BOUNDS
com.kyleduo.switchbutton.Configuration$Limit -> com.kyleduo.switchbutton.Configuration$Limit:
    int MIN_THUMB_SIZE -> MIN_THUMB_SIZE
com.kyleduo.switchbutton.R -> com.kyleduo.switchbutton.R:
com.kyleduo.switchbutton.R$attr -> com.kyleduo.switchbutton.R$attr:
    int animationVelocity -> animationVelocity
    int insetBottom -> insetBottom
    int insetLeft -> insetLeft
    int insetRight -> insetRight
    int insetTop -> insetTop
    int measureFactor -> measureFactor
    int offColor -> offColor
    int offDrawable -> offDrawable
    int onColor -> onColor
    int onDrawable -> onDrawable
    int radius -> radius
    int thumbColor -> thumbColor
    int thumbDrawable -> thumbDrawable
    int thumbPressedColor -> thumbPressedColor
    int thumb_height -> thumb_height
    int thumb_margin -> thumb_margin
    int thumb_marginBottom -> thumb_marginBottom
    int thumb_marginLeft -> thumb_marginLeft
    int thumb_marginRight -> thumb_marginRight
    int thumb_marginTop -> thumb_marginTop
    int thumb_width -> thumb_width
com.kyleduo.switchbutton.R$drawable -> com.kyleduo.switchbutton.R$drawable:
    int ic_launcher -> ic_launcher
    int md_back_off -> md_back_off
    int md_back_on -> md_back_on
    int md_switch_thumb_disable -> md_switch_thumb_disable
    int md_switch_thumb_off_normal -> md_switch_thumb_off_normal
    int md_switch_thumb_off_pressed -> md_switch_thumb_off_pressed
    int md_switch_thumb_on_normal -> md_switch_thumb_on_normal
    int md_switch_thumb_on_pressed -> md_switch_thumb_on_pressed
    int md_thumb -> md_thumb
com.kyleduo.switchbutton.R$string -> com.kyleduo.switchbutton.R$string:
    int app_name -> app_name
com.kyleduo.switchbutton.R$style -> com.kyleduo.switchbutton.R$style:
    int AppBaseTheme -> AppBaseTheme
    int AppTheme -> AppTheme
    int MD -> MD
com.kyleduo.switchbutton.R$styleable -> com.kyleduo.switchbutton.R$styleable:
    int[] SwitchButton -> SwitchButton
    int SwitchButton_animationVelocity -> SwitchButton_animationVelocity
    int SwitchButton_insetBottom -> SwitchButton_insetBottom
    int SwitchButton_insetLeft -> SwitchButton_insetLeft
    int SwitchButton_insetRight -> SwitchButton_insetRight
    int SwitchButton_insetTop -> SwitchButton_insetTop
    int SwitchButton_measureFactor -> SwitchButton_measureFactor
    int SwitchButton_offColor -> SwitchButton_offColor
    int SwitchButton_offDrawable -> SwitchButton_offDrawable
    int SwitchButton_onColor -> SwitchButton_onColor
    int SwitchButton_onDrawable -> SwitchButton_onDrawable
    int SwitchButton_radius -> SwitchButton_radius
    int SwitchButton_thumbColor -> SwitchButton_thumbColor
    int SwitchButton_thumbDrawable -> SwitchButton_thumbDrawable
    int SwitchButton_thumbPressedColor -> SwitchButton_thumbPressedColor
    int SwitchButton_thumb_height -> SwitchButton_thumb_height
    int SwitchButton_thumb_margin -> SwitchButton_thumb_margin
    int SwitchButton_thumb_marginBottom -> SwitchButton_thumb_marginBottom
    int SwitchButton_thumb_marginLeft -> SwitchButton_thumb_marginLeft
    int SwitchButton_thumb_marginRight -> SwitchButton_thumb_marginRight
    int SwitchButton_thumb_marginTop -> SwitchButton_thumb_marginTop
    int SwitchButton_thumb_width -> SwitchButton_thumb_width
com.kyleduo.switchbutton.SwitchButton -> com.kyleduo.switchbutton.SwitchButton:
    boolean SHOW_RECT -> SHOW_RECT
    boolean mIsChecked -> mIsChecked
    com.kyleduo.switchbutton.Configuration mConf -> mConf
    android.graphics.Rect mSafeZone -> mSafeZone
    android.graphics.Rect mBackZone -> mBackZone
    android.graphics.Rect mThumbZone -> mThumbZone
    android.graphics.RectF mSaveLayerZone -> mSaveLayerZone
    com.kyleduo.switchbutton.AnimationController mAnimationController -> mAnimationController
    com.kyleduo.switchbutton.SwitchButton$SBAnimationListener mOnAnimateListener -> mOnAnimateListener
    boolean isAnimating -> isAnimating
    float mStartX -> mStartX
    float mStartY -> mStartY
    float mLastX -> mLastX
    float mCenterPos -> mCenterPos
    int mTouchSlop -> mTouchSlop
    int mClickTimeout -> mClickTimeout
    android.graphics.Paint mRectPaint -> mRectPaint
    android.graphics.Rect mBounds -> mBounds
    android.widget.CompoundButton$OnCheckedChangeListener mOnCheckedChangeListener -> mOnCheckedChangeListener
    void initView() -> initView
    void fetchDrawableFromAttr(android.content.res.TypedArray) -> fetchDrawableFromAttr
    android.graphics.drawable.Drawable fetchDrawable(android.content.res.TypedArray,int,int,int) -> fetchDrawable
    android.graphics.drawable.Drawable fetchThumbDrawable(android.content.res.TypedArray) -> fetchThumbDrawable
    void setConfiguration(com.kyleduo.switchbutton.Configuration) -> setConfiguration
    com.kyleduo.switchbutton.Configuration getConfiguration() -> getConfiguration
    void onMeasure(int,int) -> onMeasure
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void setup() -> setup
    void setupSafeZone() -> setupSafeZone
    void setupBackZone() -> setupBackZone
    void setupThumbZone() -> setupThumbZone
    void setupDrawableBounds() -> setupDrawableBounds
    int measureWidth(int) -> measureWidth
    int measureHeight(int) -> measureHeight
    void onDraw(android.graphics.Canvas) -> onDraw
    boolean notStatableDrawable() -> notStatableDrawable
    int calcAlpha() -> calcAlpha
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    boolean getStatusBasedOnPos() -> getStatusBasedOnPos
    void invalidate() -> invalidate
    boolean performClick() -> performClick
    void catchView() -> catchView
    void setChecked(boolean) -> setChecked
    void setChecked(boolean,boolean) -> setChecked
    boolean isChecked() -> isChecked
    void toggle() -> toggle
    void toggle(boolean) -> toggle
    void drawableStateChanged() -> drawableStateChanged
    void setDrawableState(android.graphics.drawable.Drawable) -> setDrawableState
    void setOnCheckedChangeListener(android.widget.CompoundButton$OnCheckedChangeListener) -> setOnCheckedChangeListener
    void setCheckedInClass(boolean) -> setCheckedInClass
    void setCheckedInClass(boolean,boolean) -> setCheckedInClass
    void slideToChecked(boolean) -> slideToChecked
    void moveThumb(int) -> moveThumb
    void moveThumbTo(int,int) -> moveThumbTo
    void access$0(com.kyleduo.switchbutton.SwitchButton,boolean) -> access$0
    android.graphics.Rect access$1(com.kyleduo.switchbutton.SwitchButton) -> access$1
    android.graphics.Rect access$2(com.kyleduo.switchbutton.SwitchButton) -> access$2
    void access$3(com.kyleduo.switchbutton.SwitchButton,int) -> access$3
    boolean access$4(com.kyleduo.switchbutton.SwitchButton) -> access$4
    void access$5(com.kyleduo.switchbutton.SwitchButton,boolean) -> access$5
com.kyleduo.switchbutton.SwitchButton$SBAnimationListener -> com.kyleduo.switchbutton.SwitchButton$SBAnimationListener:
    com.kyleduo.switchbutton.SwitchButton this$0 -> this$0
    void onAnimationStart() -> onAnimationStart
    boolean continueAnimating() -> continueAnimating
    void onFrameUpdate(int) -> onFrameUpdate
    void onAnimateComplete() -> onAnimateComplete
com.mob.logcollector.LogsCollector -> com.mob.logcollector.LogsCollector:
    com.mob.logcollector.a a -> a
    int getSDKVersion() -> getSDKVersion
    java.lang.String getAppkey() -> getAppkey
    java.lang.String getSDKTag() -> getSDKTag
    void log(java.lang.String,int,int,java.lang.String,java.lang.String) -> log
    int a(int,java.lang.String) -> a
com.mob.logcollector.a -> com.mob.logcollector.a:
    com.mob.logcollector.a a -> a
    java.lang.String b -> b
    android.content.Context c -> c
    com.mob.tools.utils.DeviceHelper d -> d
    com.mob.tools.network.NetworkHelper e -> e
    com.mob.logcollector.a.c f -> f
    android.content.Context a() -> a
    com.mob.logcollector.a a(android.content.Context) -> a
    void a(int,java.lang.String,java.lang.String) -> a
    void a(int,int,java.lang.String,java.lang.String,java.lang.String) -> a
    void b(int,int,java.lang.String,java.lang.String,java.lang.String) -> b
    void onMessage(android.os.Message) -> onMessage
    void a(android.os.Message) -> a
    void b(android.os.Message) -> b
    java.lang.String b() -> b
    void b(int,java.lang.String,java.lang.String) -> b
    java.lang.String c() -> c
    void a(int,java.lang.String,java.lang.String,java.lang.String[]) -> a
    java.util.HashMap c(int,java.lang.String,java.lang.String) -> c
    java.lang.String a(java.lang.String) -> a
    boolean a(java.lang.String,boolean) -> a
com.mob.logcollector.a.a -> com.mob.logcollector.a.a:
    void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
    void onOpen(android.database.sqlite.SQLiteDatabase) -> onOpen
    void close() -> close
com.mob.logcollector.a.b -> com.mob.logcollector.a.b:
    android.content.Context a -> a
    com.mob.logcollector.a.a b -> b
    com.mob.logcollector.a.b c -> c
    com.mob.logcollector.a.b a(android.content.Context) -> a
    long a(java.lang.String,android.content.ContentValues) -> a
    int a(java.lang.String,java.lang.String,java.lang.String[]) -> a
    int a(java.lang.String) -> a
    android.database.Cursor a(java.lang.String,java.lang.String[]) -> a
com.mob.logcollector.a.c -> com.mob.logcollector.a.c:
    android.content.Context a -> a
    android.content.SharedPreferences b -> b
    com.mob.logcollector.a.c c -> c
    com.mob.logcollector.a.c a(android.content.Context) -> a
    void a(java.lang.String,java.lang.String) -> a
    java.lang.String b(java.lang.String,java.lang.String) -> b
    void a(java.lang.String,java.lang.Boolean) -> a
    void a(java.lang.String,java.lang.Long) -> a
    long a(java.lang.String,long) -> a
    void a(long) -> a
    long a() -> a
    void a(boolean) -> a
    boolean b() -> b
    void b(boolean) -> b
    boolean c() -> c
    void c(boolean) -> c
    boolean d() -> d
    void d(boolean) -> d
    boolean e() -> e
    java.lang.String f() -> f
    void a(java.lang.String) -> a
com.mob.logcollector.a.d -> com.mob.logcollector.a.d:
    java.util.ArrayList a -> a
    java.util.ArrayList b -> b
com.mob.logcollector.a.e -> com.mob.logcollector.a.e:
    long a(android.content.Context,long,java.lang.String,int,java.lang.String) -> a
    long a(android.content.Context,java.util.ArrayList) -> a
    java.util.ArrayList a(android.content.Context,java.lang.String,java.lang.String[]) -> a
    java.util.ArrayList a(android.content.Context,java.lang.String[]) -> a
com.mob.tools.FakeActivity -> com.mob.tools.FakeActivity:
    android.app.Activity activity -> activity
    com.mob.tools.FakeActivity resultReceiver -> resultReceiver
    java.util.HashMap result -> result
    android.view.View contentView -> contentView
    void setActivity(android.app.Activity) -> setActivity
    void setContentViewLayoutResName(java.lang.String) -> setContentViewLayoutResName
    void setContentView(android.view.View) -> setContentView
    android.view.View getContentView() -> getContentView
    android.view.View findViewById(int) -> findViewById
    android.view.View findViewByResName(android.view.View,java.lang.String) -> findViewByResName
    android.view.View findViewByResName(java.lang.String) -> findViewByResName
    void onCreate() -> onCreate
    void onNewIntent(android.content.Intent) -> onNewIntent
    void onStart() -> onStart
    void onPause() -> onPause
    void onResume() -> onResume
    void onStop() -> onStop
    void onRestart() -> onRestart
    boolean onFinish() -> onFinish
    void onDestroy() -> onDestroy
    void finish() -> finish
    boolean onKeyEvent(int,android.view.KeyEvent) -> onKeyEvent
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void startActivity(android.content.Intent) -> startActivity
    void startActivityForResult(android.content.Intent,int) -> startActivityForResult
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    android.content.Context getContext() -> getContext
    void show(android.content.Context,android.content.Intent) -> show
    void showForResult(android.content.Context,android.content.Intent,com.mob.tools.FakeActivity) -> showForResult
    com.mob.tools.FakeActivity getParent() -> getParent
    void setResult(java.util.HashMap) -> setResult
    void sendResult() -> sendResult
    void onResult(java.util.HashMap) -> onResult
    void runOnUIThread(java.lang.Runnable) -> runOnUIThread
    void runOnUIThread(java.lang.Runnable,long) -> runOnUIThread
    void setRequestedOrientation(int) -> setRequestedOrientation
    void requestPortraitOrientation() -> requestPortraitOrientation
    void requestLandscapeOrientation() -> requestLandscapeOrientation
    int getOrientation() -> getOrientation
    void requestFullScreen(boolean) -> requestFullScreen
com.mob.tools.FakeActivity$1 -> com.mob.tools.FakeActivity$1:
    com.mob.tools.FakeActivity this$0 -> this$0
    boolean handleMessage(android.os.Message) -> handleMessage
com.mob.tools.FakeActivity$2 -> com.mob.tools.FakeActivity$2:
    java.lang.Runnable val$r -> val$r
    com.mob.tools.FakeActivity this$0 -> this$0
    boolean handleMessage(android.os.Message) -> handleMessage
com.mob.tools.FakeActivity$3 -> com.mob.tools.FakeActivity$3:
    java.lang.Runnable val$r -> val$r
    com.mob.tools.FakeActivity this$0 -> this$0
    boolean handleMessage(android.os.Message) -> handleMessage
com.mob.tools.MobLog -> com.mob.tools.MobLog:
    java.lang.String getSDKTag() -> getSDKTag
    com.mob.tools.log.NLog getInstance() -> getInstance
com.mob.tools.MobUIShell -> com.mob.tools.MobUIShell:
    java.util.HashMap executors -> executors
    com.mob.tools.FakeActivity executor -> executor
    int forceTheme -> forceTheme
    java.lang.String registerExecutor(com.mob.tools.FakeActivity) -> registerExecutor
    java.lang.String registerExecutor(java.lang.String,com.mob.tools.FakeActivity) -> registerExecutor
    void setTheme(int) -> setTheme
    void onCreate(android.os.Bundle) -> onCreate
    void setContentView(int) -> setContentView
    void setContentView(android.view.View) -> setContentView
    void setContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> setContentView
    void onNewIntent(android.content.Intent) -> onNewIntent
    void onStart() -> onStart
    void onResume() -> onResume
    void onPause() -> onPause
    void onStop() -> onStop
    void onRestart() -> onRestart
    void onDestroy() -> onDestroy
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void finish() -> finish
    com.mob.tools.FakeActivity getExecutor() -> getExecutor
com.mob.tools.SSDKHandlerThread -> com.mob.tools.SSDKHandlerThread:
    int MSG_START -> MSG_START
    int MSG_STOP -> MSG_STOP
    android.os.Handler handler -> handler
    java.lang.String name -> name
    java.lang.String getName() -> getName
    void startThread() -> startThread
    void startThread(int,int,java.lang.Object) -> startThread
    void stopThread() -> stopThread
    void stopThread(int,int,java.lang.Object) -> stopThread
    boolean handleMessage(android.os.Message) -> handleMessage
    void onStart(android.os.Message) -> onStart
    void onStop(android.os.Message) -> onStop
    void onMessage(android.os.Message) -> onMessage
com.mob.tools.SSDKWebViewClient -> com.mob.tools.SSDKWebViewClient:
    int ERROR_UNKNOWN -> ERROR_UNKNOWN
    int ERROR_HOST_LOOKUP -> ERROR_HOST_LOOKUP
    int ERROR_UNSUPPORTED_AUTH_SCHEME -> ERROR_UNSUPPORTED_AUTH_SCHEME
    int ERROR_AUTHENTICATION -> ERROR_AUTHENTICATION
    int ERROR_PROXY_AUTHENTICATION -> ERROR_PROXY_AUTHENTICATION
    int ERROR_CONNECT -> ERROR_CONNECT
    int ERROR_IO -> ERROR_IO
    int ERROR_TIMEOUT -> ERROR_TIMEOUT
    int ERROR_REDIRECT_LOOP -> ERROR_REDIRECT_LOOP
    int ERROR_UNSUPPORTED_SCHEME -> ERROR_UNSUPPORTED_SCHEME
    int ERROR_FAILED_SSL_HANDSHAKE -> ERROR_FAILED_SSL_HANDSHAKE
    int ERROR_BAD_URL -> ERROR_BAD_URL
    int ERROR_FILE -> ERROR_FILE
    int ERROR_FILE_NOT_FOUND -> ERROR_FILE_NOT_FOUND
    int ERROR_TOO_MANY_REQUESTS -> ERROR_TOO_MANY_REQUESTS
    boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String) -> shouldOverrideUrlLoading
    void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap) -> onPageStarted
    void onPageFinished(android.webkit.WebView,java.lang.String) -> onPageFinished
    void onLoadResource(android.webkit.WebView,java.lang.String) -> onLoadResource
    void onTooManyRedirects(android.webkit.WebView,android.os.Message,android.os.Message) -> onTooManyRedirects
    void onReceivedError(android.webkit.WebView,int,java.lang.String,java.lang.String) -> onReceivedError
    void onFormResubmission(android.webkit.WebView,android.os.Message,android.os.Message) -> onFormResubmission
    void doUpdateVisitedHistory(android.webkit.WebView,java.lang.String,boolean) -> doUpdateVisitedHistory
    void onReceivedSslError(android.webkit.WebView,android.webkit.SslErrorHandler,android.net.http.SslError) -> onReceivedSslError
    void onReceivedHttpAuthRequest(android.webkit.WebView,android.webkit.HttpAuthHandler,java.lang.String,java.lang.String) -> onReceivedHttpAuthRequest
    boolean shouldOverrideKeyEvent(android.webkit.WebView,android.view.KeyEvent) -> shouldOverrideKeyEvent
    void onUnhandledKeyEvent(android.webkit.WebView,android.view.KeyEvent) -> onUnhandledKeyEvent
    void onScaleChanged(android.webkit.WebView,float,float) -> onScaleChanged
com.mob.tools.gui.AsyncImageView -> com.mob.tools.gui.AsyncImageView:
    int MSG_IMG_GOT -> MSG_IMG_GOT
    java.util.Random rnd -> rnd
    float[] rect -> rect
    boolean scaleToCrop -> scaleToCrop
    java.lang.String url -> url
    int defaultRes -> defaultRes
    android.graphics.Bitmap defaultBm -> defaultBm
    void init(android.content.Context) -> init
    void setRound(float) -> setRound
    void setRound(float,float,float,float) -> setRound
    void setScaleToCropCenter(boolean) -> setScaleToCropCenter
    void execute(java.lang.String,int) -> execute
    void execute(java.lang.String,android.graphics.Bitmap) -> execute
    void setBitmap(android.graphics.Bitmap) -> setBitmap
    void onImageGot(java.lang.String,android.graphics.Bitmap) -> onImageGot
    android.graphics.Bitmap goCrop(android.graphics.Bitmap) -> goCrop
    android.graphics.Bitmap goRound(android.graphics.Bitmap) -> goRound
    int[] getSize() -> getSize
    boolean handleMessage(android.os.Message) -> handleMessage
com.mob.tools.gui.BitmapProcessor -> com.mob.tools.gui.BitmapProcessor:
    int CAPACITY -> CAPACITY
    int MAX_REQ_TIME -> MAX_REQ_TIME
    int MAX_SIZE -> MAX_SIZE
    int OVERFLOW_SIZE -> OVERFLOW_SIZE
    int MAX_CACHE_SIZE -> MAX_CACHE_SIZE
    com.mob.tools.gui.BitmapProcessor instance -> instance
    int reqTimeout -> reqTimeout
    int maxReqCount -> maxReqCount
    int overflowReqCount -> overflowReqCount
    com.mob.tools.gui.CachePool cachePool -> cachePool
    boolean work -> work
    java.util.Vector reqList -> reqList
    java.io.File cacheDir -> cacheDir
    com.mob.tools.gui.BitmapProcessor$WorkerThread[] workerList -> workerList
    java.util.Vector netReqTPS -> netReqTPS
    com.mob.tools.gui.BitmapProcessor$ManagerThread manager -> manager
    void prepare(android.content.Context) -> prepare
    void prepare(android.content.Context,int,int,int,float,int) -> prepare
    void start() -> start
    void stop() -> stop
    void process(java.lang.String,com.mob.tools.gui.BitmapProcessor$BitmapCallback) -> process
    android.graphics.Bitmap getBitmapFromCache(java.lang.String) -> getBitmapFromCache
    boolean access$300(com.mob.tools.gui.BitmapProcessor) -> access$300
    int access$500(com.mob.tools.gui.BitmapProcessor) -> access$500
    com.mob.tools.gui.CachePool access$600(com.mob.tools.gui.BitmapProcessor) -> access$600
    java.util.Vector access$700(com.mob.tools.gui.BitmapProcessor) -> access$700
    com.mob.tools.gui.BitmapProcessor$WorkerThread[] access$800(com.mob.tools.gui.BitmapProcessor) -> access$800
    java.io.File access$1300(com.mob.tools.gui.BitmapProcessor) -> access$1300
    java.util.Vector access$1400(com.mob.tools.gui.BitmapProcessor) -> access$1400
    int access$1500(com.mob.tools.gui.BitmapProcessor) -> access$1500
com.mob.tools.gui.BitmapProcessor$BitmapCallback -> com.mob.tools.gui.BitmapProcessor$BitmapCallback:
    void onImageGot(java.lang.String,android.graphics.Bitmap) -> onImageGot
com.mob.tools.gui.BitmapProcessor$ImageReq -> com.mob.tools.gui.BitmapProcessor$ImageReq:
    java.lang.String url -> url
    com.mob.tools.gui.BitmapProcessor$BitmapCallback callback -> callback
    com.mob.tools.gui.BitmapProcessor$WorkerThread worker -> worker
    long reqTime -> reqTime
    android.graphics.Bitmap image -> image
    void throwComplete(android.graphics.Bitmap) -> throwComplete
    java.lang.String toString() -> toString
    java.lang.String access$002(com.mob.tools.gui.BitmapProcessor$ImageReq,java.lang.String) -> access$002
    com.mob.tools.gui.BitmapProcessor$BitmapCallback access$102(com.mob.tools.gui.BitmapProcessor$ImageReq,com.mob.tools.gui.BitmapProcessor$BitmapCallback) -> access$102
    java.lang.String access$000(com.mob.tools.gui.BitmapProcessor$ImageReq) -> access$000
    com.mob.tools.gui.BitmapProcessor$WorkerThread access$1102(com.mob.tools.gui.BitmapProcessor$ImageReq,com.mob.tools.gui.BitmapProcessor$WorkerThread) -> access$1102
    void access$1200(com.mob.tools.gui.BitmapProcessor$ImageReq,android.graphics.Bitmap) -> access$1200
com.mob.tools.gui.BitmapProcessor$ManagerThread -> com.mob.tools.gui.BitmapProcessor$ManagerThread:
    com.mob.tools.gui.BitmapProcessor processor -> processor
    void scan() -> scan
    com.mob.tools.gui.BitmapProcessor access$200(com.mob.tools.gui.BitmapProcessor$ManagerThread) -> access$200
    void access$400(com.mob.tools.gui.BitmapProcessor$ManagerThread) -> access$400
com.mob.tools.gui.BitmapProcessor$ManagerThread$1 -> com.mob.tools.gui.BitmapProcessor$ManagerThread$1:
    int counter -> counter
    com.mob.tools.gui.BitmapProcessor$ManagerThread this$0 -> this$0
    void run() -> run
com.mob.tools.gui.BitmapProcessor$PatchInputStream -> com.mob.tools.gui.BitmapProcessor$PatchInputStream:
    java.io.InputStream in -> in
    long skip(long) -> skip
com.mob.tools.gui.BitmapProcessor$WorkerThread -> com.mob.tools.gui.BitmapProcessor$WorkerThread:
    com.mob.tools.gui.BitmapProcessor processor -> processor
    long lastReport -> lastReport
    boolean localType -> localType
    com.mob.tools.gui.BitmapProcessor$ImageReq curReq -> curReq
    void run() -> run
    void doLocalTask() -> doLocalTask
    void doNetworkTask() -> doNetworkTask
    void doTask(com.mob.tools.gui.BitmapProcessor$ImageReq) -> doTask
    void saveFile(android.graphics.Bitmap,java.io.File,boolean) -> saveFile
    void interrupt() -> interrupt
    boolean access$902(com.mob.tools.gui.BitmapProcessor$WorkerThread,boolean) -> access$902
    long access$1000(com.mob.tools.gui.BitmapProcessor$WorkerThread) -> access$1000
    boolean access$900(com.mob.tools.gui.BitmapProcessor$WorkerThread) -> access$900
    com.mob.tools.gui.BitmapProcessor$ImageReq access$1602(com.mob.tools.gui.BitmapProcessor$WorkerThread,com.mob.tools.gui.BitmapProcessor$ImageReq) -> access$1602
    void access$1700(com.mob.tools.gui.BitmapProcessor$WorkerThread,android.graphics.Bitmap,java.io.File,boolean) -> access$1700
    com.mob.tools.gui.BitmapProcessor access$1800(com.mob.tools.gui.BitmapProcessor$WorkerThread) -> access$1800
com.mob.tools.gui.BitmapProcessor$WorkerThread$1 -> com.mob.tools.gui.BitmapProcessor$WorkerThread$1:
    java.io.File val$file -> val$file
    boolean val$saveAsPng -> val$saveAsPng
    com.mob.tools.gui.BitmapProcessor$ImageReq val$req -> val$req
    com.mob.tools.gui.BitmapProcessor$WorkerThread this$0 -> this$0
    void onResponse(java.io.InputStream) -> onResponse
com.mob.tools.gui.CachePool -> com.mob.tools.gui.CachePool:
    int capacity -> capacity
    int size -> size
    com.mob.tools.gui.CachePool$Node head -> head
    com.mob.tools.gui.CachePool$Node tail -> tail
    boolean put(java.lang.Object,java.lang.Object) -> put
    java.lang.Object get(java.lang.Object) -> get
    void clear() -> clear
    int size() -> size
com.mob.tools.gui.CachePool$1 -> com.mob.tools.gui.CachePool$1:
com.mob.tools.gui.CachePool$Node -> com.mob.tools.gui.CachePool$Node:
    java.lang.Object key -> key
    java.lang.Object value -> value
    com.mob.tools.gui.CachePool$Node previous -> previous
    com.mob.tools.gui.CachePool$Node next -> next
com.mob.tools.gui.ListInnerAdapter -> com.mob.tools.gui.ListInnerAdapter:
    com.mob.tools.gui.PullToRefreshBaseListAdapter adapter -> adapter
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    int getItemViewType(int) -> getItemViewType
    int getViewTypeCount() -> getViewTypeCount
com.mob.tools.gui.MobViewPager -> com.mob.tools.gui.MobViewPager:
    int TOUCH_STATE_REST -> TOUCH_STATE_REST
    int TOUCH_STATE_SCROLLING -> TOUCH_STATE_SCROLLING
    int SNAP_VELOCITY -> SNAP_VELOCITY
    int currentScreen -> currentScreen
    int screenCount -> screenCount
    android.view.View previousPage -> previousPage
    android.view.View currentPage -> currentPage
    android.view.View nextPage -> nextPage
    android.widget.Scroller scroller -> scroller
    int touchSlop -> touchSlop
    int mMaximumVelocity -> mMaximumVelocity
    com.mob.tools.gui.ViewPagerAdapter adapter -> adapter
    android.view.VelocityTracker mVelocityTracker -> mVelocityTracker
    int touchState -> touchState
    float lastMotionX -> lastMotionX
    float lastMotionY -> lastMotionY
    void init(android.content.Context) -> init
    void setAdapter(com.mob.tools.gui.ViewPagerAdapter) -> setAdapter
    int getCurrentScreen() -> getCurrentScreen
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    void dispatchDraw(android.graphics.Canvas) -> dispatchDraw
    void computeScroll() -> computeScroll
    void onScreenChange(int) -> onScreenChange
    void scrollLeft(boolean) -> scrollLeft
    void scrollRight(boolean) -> scrollRight
    void scrollToScreen(int,boolean) -> scrollToScreen
    boolean dispatchUnhandledMove(android.view.View,int) -> dispatchUnhandledMove
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    void handleInterceptMove(android.view.MotionEvent) -> handleInterceptMove
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void handleScrollMove(android.view.MotionEvent) -> handleScrollMove
com.mob.tools.gui.MobViewPager$1 -> com.mob.tools.gui.MobViewPager$1:
    float[] values -> values
    com.mob.tools.gui.MobViewPager this$0 -> this$0
    float getInterpolation(float) -> getInterpolation
com.mob.tools.gui.OnListStopScrollListener -> com.mob.tools.gui.OnListStopScrollListener:
    void onListStopScrolling(int,int) -> onListStopScrolling
com.mob.tools.gui.PullToRefreshAdatper -> com.mob.tools.gui.PullToRefreshAdatper:
    android.content.Context context -> context
    com.mob.tools.gui.PullToRefreshView parent -> parent
    android.content.Context getContext() -> getContext
    com.mob.tools.gui.PullToRefreshView getParent() -> getParent
    void notifyDataSetChanged() -> notifyDataSetChanged
    android.view.View getHeaderView() -> getHeaderView
    com.mob.tools.gui.Scrollable getBodyView() -> getBodyView
    boolean isPullReady() -> isPullReady
    void onPullDown(int) -> onPullDown
    void onRequest() -> onRequest
    void onReversed() -> onReversed
com.mob.tools.gui.PullToRefreshBaseListAdapter -> com.mob.tools.gui.PullToRefreshBaseListAdapter:
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    long getItemId(int) -> getItemId
    java.lang.Object getItem(int) -> getItem
    int getCount() -> getCount
    boolean isFling() -> isFling
    void onScroll(com.mob.tools.gui.Scrollable,int,int,int) -> onScroll
    int getItemViewType(int) -> getItemViewType
    int getViewTypeCount() -> getViewTypeCount
com.mob.tools.gui.PullToRefreshGridAdapter -> com.mob.tools.gui.PullToRefreshGridAdapter:
    com.mob.tools.gui.ScrollableGridView gridView -> gridView
    com.mob.tools.gui.ListInnerAdapter adapter -> adapter
    boolean fling -> fling
    com.mob.tools.gui.OnListStopScrollListener osListener -> osListener
    com.mob.tools.gui.ScrollableGridView onNewGridView(android.content.Context) -> onNewGridView
    com.mob.tools.gui.Scrollable getBodyView() -> getBodyView
    boolean isPullReady() -> isPullReady
    android.widget.GridView getGridView() -> getGridView
    boolean isFling() -> isFling
    void onScroll(com.mob.tools.gui.Scrollable,int,int,int) -> onScroll
    void notifyDataSetChanged() -> notifyDataSetChanged
    void setHorizontalSpacing(int) -> setHorizontalSpacing
    void setVerticalSpacing(int) -> setVerticalSpacing
    void setNumColumns(int) -> setNumColumns
    void setColumnWidth(int) -> setColumnWidth
    void setStretchMode(int) -> setStretchMode
    boolean access$002(com.mob.tools.gui.PullToRefreshGridAdapter,boolean) -> access$002
    com.mob.tools.gui.OnListStopScrollListener access$100(com.mob.tools.gui.PullToRefreshGridAdapter) -> access$100
    com.mob.tools.gui.ListInnerAdapter access$200(com.mob.tools.gui.PullToRefreshGridAdapter) -> access$200
    com.mob.tools.gui.ScrollableGridView access$300(com.mob.tools.gui.PullToRefreshGridAdapter) -> access$300
com.mob.tools.gui.PullToRefreshGridAdapter$1 -> com.mob.tools.gui.PullToRefreshGridAdapter$1:
    int firstVisibleItem -> firstVisibleItem
    int visibleItemCount -> visibleItemCount
    com.mob.tools.gui.PullToRefreshGridAdapter this$0 -> this$0
    void onScrollStateChanged(android.widget.AbsListView,int) -> onScrollStateChanged
    void onScroll(android.widget.AbsListView,int,int,int) -> onScroll
com.mob.tools.gui.PullToRefreshListAdapter -> com.mob.tools.gui.PullToRefreshListAdapter:
    com.mob.tools.gui.ScrollableListView listView -> listView
    com.mob.tools.gui.ListInnerAdapter adapter -> adapter
    boolean fling -> fling
    com.mob.tools.gui.OnListStopScrollListener osListener -> osListener
    com.mob.tools.gui.ScrollableListView onNewListView(android.content.Context) -> onNewListView
    com.mob.tools.gui.Scrollable getBodyView() -> getBodyView
    boolean isPullReady() -> isPullReady
    android.widget.ListView getListView() -> getListView
    boolean isFling() -> isFling
    void onScroll(com.mob.tools.gui.Scrollable,int,int,int) -> onScroll
    void notifyDataSetChanged() -> notifyDataSetChanged
    void setDivider(android.graphics.drawable.Drawable) -> setDivider
    void setDividerHeight(int) -> setDividerHeight
    boolean access$002(com.mob.tools.gui.PullToRefreshListAdapter,boolean) -> access$002
    com.mob.tools.gui.OnListStopScrollListener access$100(com.mob.tools.gui.PullToRefreshListAdapter) -> access$100
    com.mob.tools.gui.ListInnerAdapter access$200(com.mob.tools.gui.PullToRefreshListAdapter) -> access$200
    com.mob.tools.gui.ScrollableListView access$300(com.mob.tools.gui.PullToRefreshListAdapter) -> access$300
com.mob.tools.gui.PullToRefreshListAdapter$1 -> com.mob.tools.gui.PullToRefreshListAdapter$1:
    int firstVisibleItem -> firstVisibleItem
    int visibleItemCount -> visibleItemCount
    com.mob.tools.gui.PullToRefreshListAdapter this$0 -> this$0
    void onScrollStateChanged(android.widget.AbsListView,int) -> onScrollStateChanged
    void onScroll(android.widget.AbsListView,int,int,int) -> onScroll
com.mob.tools.gui.PullToRefreshView -> com.mob.tools.gui.PullToRefreshView:
    long MIN_REF_TIME -> MIN_REF_TIME
    com.mob.tools.gui.PullToRefreshAdatper adapter -> adapter
    android.view.View headerView -> headerView
    android.view.View bodyView -> bodyView
    int headerHeight -> headerHeight
    int top -> top
    float downY -> downY
    boolean requesting -> requesting
    boolean pullingLock -> pullingLock
    java.lang.Runnable stopAct -> stopAct
    long refreshTime -> refreshTime
    void init() -> init
    void setAdapter(com.mob.tools.gui.PullToRefreshAdatper) -> setAdapter
    boolean dispatchTouchEvent(android.view.MotionEvent) -> dispatchTouchEvent
    android.view.MotionEvent getCancelEvent(android.view.MotionEvent) -> getCancelEvent
    void performRequest() -> performRequest
    void stopRequest() -> stopRequest
    void performPulling(boolean) -> performPulling
    void reversePulling() -> reversePulling
    void stopPulling() -> stopPulling
    void lockPulling() -> lockPulling
    void releaseLock() -> releaseLock
    boolean canPull() -> canPull
    void access$000(com.mob.tools.gui.PullToRefreshView) -> access$000
    void access$100(com.mob.tools.gui.PullToRefreshView) -> access$100
com.mob.tools.gui.PullToRefreshView$1 -> com.mob.tools.gui.PullToRefreshView$1:
    com.mob.tools.gui.PullToRefreshView this$0 -> this$0
    void run() -> run
com.mob.tools.gui.ScaledImageView -> com.mob.tools.gui.ScaledImageView:
    int DRAG_1 -> DRAG_1
    int DRAG_2 -> DRAG_2
    int NONE -> NONE
    int ZOOM -> ZOOM
    android.graphics.Bitmap bitmap -> bitmap
    float distSquare -> distSquare
    float[] downPoint -> downPoint
    int dragScrollMinDistSquare -> dragScrollMinDistSquare
    com.mob.tools.gui.ScaledImageView$OnMatrixChangedListener listener -> listener
    android.graphics.Matrix matrix -> matrix
    int mode -> mode
    android.graphics.Matrix savedMatrix -> savedMatrix
    void init(android.content.Context) -> init
    void setBitmap(android.graphics.Bitmap) -> setBitmap
    void setOnMatrixChangedListener(com.mob.tools.gui.ScaledImageView$OnMatrixChangedListener) -> setOnMatrixChangedListener
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
    void rotateLeft() -> rotateLeft
    void rotateRight() -> rotateRight
    void zoomIn() -> zoomIn
    void zoomOut() -> zoomOut
    android.graphics.Bitmap getCropedBitmap(android.graphics.Rect) -> getCropedBitmap
com.mob.tools.gui.ScaledImageView$OnMatrixChangedListener -> com.mob.tools.gui.ScaledImageView$OnMatrixChangedListener:
    void onMactrixChage(android.graphics.Matrix) -> onMactrixChage
com.mob.tools.gui.Scrollable -> com.mob.tools.gui.Scrollable:
com.mob.tools.gui.Scrollable$OnScrollListener -> com.mob.tools.gui.Scrollable$OnScrollListener:
    void onScrollChanged(com.mob.tools.gui.Scrollable,int,int,int,int) -> onScrollChanged
com.mob.tools.gui.ScrollableGridView -> com.mob.tools.gui.ScrollableGridView:
    com.mob.tools.gui.Scrollable$OnScrollListener osListener -> osListener
    boolean pullEnable -> pullEnable
    void init(android.content.Context) -> init
    boolean isReadyToPull() -> isReadyToPull
    int computeVerticalScrollOffset() -> computeVerticalScrollOffset
    boolean access$002(com.mob.tools.gui.ScrollableGridView,boolean) -> access$002
com.mob.tools.gui.ScrollableGridView$1 -> com.mob.tools.gui.ScrollableGridView$1:
    com.mob.tools.gui.ScrollableGridView this$0 -> this$0
    void onScrollChanged(com.mob.tools.gui.Scrollable,int,int,int,int) -> onScrollChanged
com.mob.tools.gui.ScrollableListView -> com.mob.tools.gui.ScrollableListView:
    com.mob.tools.gui.Scrollable$OnScrollListener osListener -> osListener
    boolean pullEnable -> pullEnable
    void init(android.content.Context) -> init
    boolean isReadyToPull() -> isReadyToPull
    int computeVerticalScrollOffset() -> computeVerticalScrollOffset
    boolean access$002(com.mob.tools.gui.ScrollableListView,boolean) -> access$002
com.mob.tools.gui.ScrollableListView$1 -> com.mob.tools.gui.ScrollableListView$1:
    com.mob.tools.gui.ScrollableListView this$0 -> this$0
    void onScrollChanged(com.mob.tools.gui.Scrollable,int,int,int,int) -> onScrollChanged
com.mob.tools.gui.ViewPagerAdapter -> com.mob.tools.gui.ViewPagerAdapter:
    com.mob.tools.gui.MobViewPager parent -> parent
    void setMobViewPager(com.mob.tools.gui.MobViewPager) -> setMobViewPager
    int getCount() -> getCount
    void onScreenChange(int,int) -> onScreenChange
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    void invalidate() -> invalidate
com.mob.tools.gui.ViewPagerClassic -> com.mob.tools.gui.ViewPagerClassic:
    int SNAP_VELOCITY -> SNAP_VELOCITY
    int currentScreen -> currentScreen
    android.widget.Scroller scroller -> scroller
    android.view.VelocityTracker mVelocityTracker -> mVelocityTracker
    float lastMotionX -> lastMotionX
    float lastMotionY -> lastMotionY
    int TOUCH_STATE_REST -> TOUCH_STATE_REST
    int TOUCH_STATE_SCROLLING -> TOUCH_STATE_SCROLLING
    int touchState -> touchState
    int touchSlop -> touchSlop
    int mMaximumVelocity -> mMaximumVelocity
    com.mob.tools.gui.ViewPagerAdapter adapter -> adapter
    void init(android.content.Context) -> init
    int getCurrentScreen() -> getCurrentScreen
    void setCurrentScreen(int) -> setCurrentScreen
    void computeScroll() -> computeScroll
    void setAdapter(com.mob.tools.gui.ViewPagerAdapter) -> setAdapter
    void dispatchDraw(android.graphics.Canvas) -> dispatchDraw
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    boolean dispatchUnhandledMove(android.view.View,int) -> dispatchUnhandledMove
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    void handleInterceptMove(android.view.MotionEvent) -> handleInterceptMove
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void handleScrollMove(android.view.MotionEvent) -> handleScrollMove
    void scrollToScreen(int) -> scrollToScreen
    void scrollToScreen(int,boolean) -> scrollToScreen
    void scrollLeft() -> scrollLeft
    void scrollRight() -> scrollRight
com.mob.tools.gui.ViewPagerClassic$1 -> com.mob.tools.gui.ViewPagerClassic$1:
    float[] values -> values
    com.mob.tools.gui.ViewPagerClassic this$0 -> this$0
    float getInterpolation(float) -> getInterpolation
com.mob.tools.log.LogCollector -> com.mob.tools.log.LogCollector:
    int LEVEL_NORMAL -> LEVEL_NORMAL
    int LEVEL_CRASH -> LEVEL_CRASH
    int LEVEL_NATIVE -> LEVEL_NATIVE
    void log(java.lang.String,int,int,java.lang.String,java.lang.String) -> log
com.mob.tools.log.LogPrinter -> com.mob.tools.log.LogPrinter:
    java.util.HashMap collectors -> collectors
    java.lang.String packageName -> packageName
    java.lang.String scope -> scope
    void setContext(android.content.Context) -> setContext
    void setCollector(java.lang.String,com.mob.tools.log.LogCollector) -> setCollector
    int println(java.lang.String,int,int,java.lang.String) -> println
    void nativeCrashLog(java.lang.String,java.lang.String) -> nativeCrashLog
    java.lang.String processMessage(java.lang.Thread,java.lang.String) -> processMessage
    java.lang.String getScope(java.lang.Thread) -> getScope
com.mob.tools.log.MobUncaughtExceptionHandler -> com.mob.tools.log.MobUncaughtExceptionHandler:
    void uncaughtException(java.lang.Thread,java.lang.Throwable) -> uncaughtException
com.mob.tools.log.NLog -> com.mob.tools.log.NLog:
    com.mob.tools.log.LogPrinter printer -> printer
    java.util.HashMap loggers -> loggers
    void setContext(android.content.Context) -> setContext
    void setCollector(java.lang.String,com.mob.tools.log.LogCollector) -> setCollector
    com.mob.tools.log.NLog getInstanceForSDK(java.lang.String,boolean) -> getInstanceForSDK
    java.lang.String getSDKTag() -> getSDKTag
    int v(java.lang.Throwable) -> v
    int v(java.lang.Object,java.lang.Object[]) -> v
    int v(java.lang.Throwable,java.lang.Object,java.lang.Object[]) -> v
    int d(java.lang.Throwable) -> d
    int d(java.lang.Object,java.lang.Object[]) -> d
    int d(java.lang.Throwable,java.lang.Object,java.lang.Object[]) -> d
    int i(java.lang.Throwable) -> i
    int i(java.lang.Object,java.lang.Object[]) -> i
    int i(java.lang.Throwable,java.lang.Object,java.lang.Object[]) -> i
    int w(java.lang.Throwable) -> w
    int w(java.lang.Object,java.lang.Object[]) -> w
    int w(java.lang.Throwable,java.lang.Object,java.lang.Object[]) -> w
    int e(java.lang.Throwable) -> e
    int e(java.lang.Object,java.lang.Object[]) -> e
    int e(java.lang.Throwable,java.lang.Object,java.lang.Object[]) -> e
    int crash(java.lang.Throwable) -> crash
    void nativeCrashLog(java.lang.String) -> nativeCrashLog
com.mob.tools.log.NLog$1 -> com.mob.tools.log.NLog$1:
    java.lang.String val$sdkTag -> val$sdkTag
    java.lang.String getSDKTag() -> getSDKTag
com.mob.tools.log.NativeErrorHandler -> com.mob.tools.log.NativeErrorHandler:
    int MAX_LOG_SIZE -> MAX_LOG_SIZE
    boolean enable -> enable
    boolean prepare(android.content.Context) -> prepare
    java.lang.String getCachePath(android.content.Context) -> getCachePath
    void nativePrepare(java.lang.String) -> nativePrepare
    void uploadCreashLog(java.lang.String) -> uploadCreashLog
    java.util.ArrayList parseIndex(java.lang.String) -> parseIndex
    java.lang.String parseLog(java.lang.String,com.mob.tools.log.NativeErrorHandler$NativeCrashInfo) -> parseLog
com.mob.tools.log.NativeErrorHandler$1 -> com.mob.tools.log.NativeErrorHandler$1:
com.mob.tools.log.NativeErrorHandler$NativeCrashInfo -> com.mob.tools.log.NativeErrorHandler$NativeCrashInfo:
    long time -> time
    int signal -> signal
com.mob.tools.network.BufferedByteArrayOutputStream -> com.mob.tools.network.BufferedByteArrayOutputStream:
    boolean switchBuffer(byte[]) -> switchBuffer
    byte[] getBuffer() -> getBuffer
    int getBufferSize() -> getBufferSize
    void write(java.nio.ByteBuffer,int) -> write
com.mob.tools.network.ByteArrayPart -> com.mob.tools.network.ByteArrayPart:
    com.mob.tools.network.BufferedByteArrayOutputStream buffer -> buffer
    com.mob.tools.network.ByteArrayPart append(byte[]) -> append
    java.io.InputStream getInputStream() -> getInputStream
    java.lang.String toString() -> toString
    long length() -> length
com.mob.tools.network.ByteCounterInputStream -> com.mob.tools.network.ByteCounterInputStream:
    java.io.InputStream is -> is
    long readBytes -> readBytes
    com.mob.tools.network.OnReadListener listener -> listener
    int read() -> read
    int read(byte[],int,int) -> read
    void mark(int) -> mark
    boolean markSupported() -> markSupported
    void reset() -> reset
    long skip(long) -> skip
    int available() -> available
    void close() -> close
    void setOnInputStreamReadListener(com.mob.tools.network.OnReadListener) -> setOnInputStreamReadListener
com.mob.tools.network.FilePart -> com.mob.tools.network.FilePart:
    java.io.File file -> file
    void setFile(java.io.File) -> setFile
    void setFile(java.lang.String) -> setFile
    java.io.InputStream getInputStream() -> getInputStream
    java.lang.String toString() -> toString
    long length() -> length
com.mob.tools.network.HTTPPart -> com.mob.tools.network.HTTPPart:
    long offset -> offset
    com.mob.tools.network.OnReadListener listener -> listener
    java.io.InputStream getInputStream() -> getInputStream
    long length() -> length
    void setOffset(long) -> setOffset
    org.apache.http.entity.InputStreamEntity getInputStreamEntity() -> getInputStreamEntity
    void setOnReadListener(com.mob.tools.network.OnReadListener) -> setOnReadListener
com.mob.tools.network.HttpPatch -> com.mob.tools.network.HttpPatch:
    java.lang.String METHOD_NAME -> METHOD_NAME
    java.lang.String getMethod() -> getMethod
com.mob.tools.network.HttpResponseCallback -> com.mob.tools.network.HttpResponseCallback:
    void onResponse(org.apache.http.HttpResponse) -> onResponse
com.mob.tools.network.KVPair -> com.mob.tools.network.KVPair:
    java.lang.String name -> name
    java.lang.Object value -> value
    java.lang.String toString() -> toString
com.mob.tools.network.MultiPart -> com.mob.tools.network.MultiPart:
    java.util.ArrayList parts -> parts
    com.mob.tools.network.MultiPart append(com.mob.tools.network.HTTPPart) -> append
    java.io.InputStream getInputStream() -> getInputStream
    java.lang.String toString() -> toString
    long length() -> length
com.mob.tools.network.MultiPartInputStream -> com.mob.tools.network.MultiPartInputStream:
    java.util.ArrayList isList -> isList
    int curIs -> curIs
    void addInputStream(java.io.InputStream) -> addInputStream
    boolean isEmpty() -> isEmpty
    int available() -> available
    void close() -> close
    long skip(long) -> skip
    int read() -> read
    int read(byte[],int,int) -> read
com.mob.tools.network.NetworkHelper -> com.mob.tools.network.NetworkHelper:
    int connectionTimeout -> connectionTimeout
    int readTimout -> readTimout
    java.lang.String httpGet(java.lang.String,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList) -> httpGet
    java.lang.String downloadCache(android.content.Context,java.lang.String,java.lang.String,boolean) -> downloadCache
    void rawGet(java.lang.String,com.mob.tools.network.RawNetworkCallback) -> rawGet
    java.lang.String jsonPost(java.lang.String,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList) -> jsonPost
    java.lang.String httpPost(java.lang.String,java.util.ArrayList,com.mob.tools.network.KVPair,java.util.ArrayList,java.util.ArrayList) -> httpPost
    java.lang.String httpPostFiles(java.lang.String,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList) -> httpPostFiles
    void httpPost(java.lang.String,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList,com.mob.tools.network.HttpResponseCallback) -> httpPost
    org.apache.http.client.methods.HttpPost getFilePost(java.lang.String,java.util.ArrayList,java.util.ArrayList) -> getFilePost
    org.apache.http.client.methods.HttpPost getTextPost(java.lang.String,java.util.ArrayList) -> getTextPost
    void rawPost(java.lang.String,java.util.ArrayList,com.mob.tools.network.HTTPPart,com.mob.tools.network.RawNetworkCallback) -> rawPost
    void rawPost(java.lang.String,java.util.ArrayList,com.mob.tools.network.HTTPPart,com.mob.tools.network.HttpResponseCallback) -> rawPost
    java.lang.String httpPut(java.lang.String,java.util.ArrayList,com.mob.tools.network.KVPair,java.util.ArrayList,java.util.ArrayList) -> httpPut
    java.util.ArrayList httpHead(java.lang.String,java.util.ArrayList,com.mob.tools.network.KVPair,java.util.ArrayList,java.util.ArrayList) -> httpHead
    void httpPatch(java.lang.String,java.util.ArrayList,com.mob.tools.network.KVPair,long,java.util.ArrayList,java.util.ArrayList,com.mob.tools.network.OnReadListener,com.mob.tools.network.HttpResponseCallback) -> httpPatch
    java.lang.String httpPatch(java.lang.String,java.util.ArrayList,com.mob.tools.network.KVPair,long,java.util.ArrayList,java.util.ArrayList,com.mob.tools.network.OnReadListener) -> httpPatch
    void getHttpPostResponse(java.lang.String,java.util.ArrayList,com.mob.tools.network.KVPair,java.util.ArrayList,java.util.ArrayList,com.mob.tools.network.HttpResponseCallback) -> getHttpPostResponse
    java.lang.String kvPairsToUrl(java.util.ArrayList) -> kvPairsToUrl
    org.apache.http.client.HttpClient getSSLHttpClient() -> getSSLHttpClient
com.mob.tools.network.NetworkHelper$1 -> com.mob.tools.network.NetworkHelper$1:
    java.util.HashMap val$tmpMap -> val$tmpMap
    com.mob.tools.network.NetworkHelper this$0 -> this$0
    void onResponse(org.apache.http.HttpResponse) -> onResponse
com.mob.tools.network.NetworkHelper$2 -> com.mob.tools.network.NetworkHelper$2:
    java.util.HashMap val$tmpMap -> val$tmpMap
    com.mob.tools.network.NetworkHelper this$0 -> this$0
    void onResponse(org.apache.http.HttpResponse) -> onResponse
com.mob.tools.network.OnReadListener -> com.mob.tools.network.OnReadListener:
    void onRead(long) -> onRead
com.mob.tools.network.ProgressCallback -> com.mob.tools.network.ProgressCallback:
    void onProgress(long,long) -> onProgress
com.mob.tools.network.RawNetworkCallback -> com.mob.tools.network.RawNetworkCallback:
    void onResponse(java.io.InputStream) -> onResponse
com.mob.tools.network.SSLSocketFactoryEx -> com.mob.tools.network.SSLSocketFactoryEx:
    javax.net.ssl.SSLContext sslContext -> sslContext
    java.net.Socket createSocket(java.net.Socket,java.lang.String,int,boolean) -> createSocket
    java.net.Socket createSocket() -> createSocket
com.mob.tools.network.SSLSocketFactoryEx$1 -> com.mob.tools.network.SSLSocketFactoryEx$1:
    com.mob.tools.network.SSLSocketFactoryEx this$0 -> this$0
    java.security.cert.X509Certificate[] getAcceptedIssuers() -> getAcceptedIssuers
    void checkClientTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkClientTrusted
    void checkServerTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkServerTrusted
com.mob.tools.network.StringPart -> com.mob.tools.network.StringPart:
    java.lang.StringBuilder sb -> sb
    com.mob.tools.network.StringPart append(java.lang.String) -> append
    java.io.InputStream getInputStream() -> getInputStream
    java.lang.String toString() -> toString
    long length() -> length
com.mob.tools.utils.BitmapHelper -> com.mob.tools.utils.BitmapHelper:
    android.graphics.Bitmap getBitmap(java.lang.String,int) -> getBitmap
    android.graphics.Bitmap getBitmap(java.io.File,int) -> getBitmap
    android.graphics.Bitmap getBitmap(java.io.InputStream,int) -> getBitmap
    android.graphics.Bitmap getBitmap(java.lang.String) -> getBitmap
    android.graphics.Bitmap getBitmap(android.content.Context,java.lang.String) -> getBitmap
    java.lang.String downloadBitmap(android.content.Context,java.lang.String) -> downloadBitmap
    java.lang.String saveViewToImage(android.view.View) -> saveViewToImage
    java.lang.String saveViewToImage(android.view.View,int,int) -> saveViewToImage
    android.graphics.Bitmap captureView(android.view.View,int,int) -> captureView
    android.graphics.Bitmap blur(android.graphics.Bitmap,int,int) -> blur
    android.graphics.Bitmap blur(android.graphics.Bitmap,int,boolean) -> blur
    android.graphics.Bitmap roundBitmap(android.graphics.Bitmap,int,int,float,float,float,float) -> roundBitmap
    int[] fixRect(int[],int[]) -> fixRect
    int[] fixRect_2(int[],int[]) -> fixRect_2
    java.lang.String saveBitmap(android.content.Context,android.graphics.Bitmap,android.graphics.Bitmap$CompressFormat,int) -> saveBitmap
    java.lang.String saveBitmap(android.content.Context,android.graphics.Bitmap) -> saveBitmap
    android.graphics.Bitmap$CompressFormat getBmpFormat(byte[]) -> getBmpFormat
    android.graphics.Bitmap$CompressFormat getBmpFormat(java.lang.String) -> getBmpFormat
    java.lang.String getMime(java.lang.String) -> getMime
    java.lang.String getMime(byte[]) -> getMime
    boolean bytesStartWith(byte[],byte[]) -> bytesStartWith
    android.graphics.Bitmap cropBitmap(android.graphics.Bitmap,int,int,int,int) -> cropBitmap
    boolean isBlackBitmap(android.graphics.Bitmap) -> isBlackBitmap
    int mixAlpha(int,int) -> mixAlpha
    android.graphics.Bitmap scaleBitmapByHeight(android.content.Context,int,int) -> scaleBitmapByHeight
    android.graphics.Bitmap scaleBitmapByHeight(android.graphics.Bitmap,int) -> scaleBitmapByHeight
com.mob.tools.utils.Data -> com.mob.tools.utils.Data:
    java.lang.String CHAT_SET -> CHAT_SET
    byte[] SHA1(java.lang.String) -> SHA1
    byte[] SHA1(byte[]) -> SHA1
    byte[] AES128Encode(java.lang.String,java.lang.String) -> AES128Encode
    byte[] AES128Encode(byte[],java.lang.String) -> AES128Encode
    java.lang.String AES128Decode(java.lang.String,byte[]) -> AES128Decode
    byte[] AES128Decode(byte[],byte[]) -> AES128Decode
    java.lang.String byteToHex(byte[]) -> byteToHex
    java.lang.String byteToHex(byte[],int,int) -> byteToHex
    java.lang.String base62(long) -> base62
    java.lang.String MD5(java.lang.String) -> MD5
    java.lang.String MD5(byte[]) -> MD5
    java.lang.String MD5(java.io.File) -> MD5
    byte[] rawMD5(java.lang.String) -> rawMD5
    byte[] rawMD5(byte[]) -> rawMD5
    byte[] rawMD5(java.io.InputStream) -> rawMD5
    java.lang.String Base64AES(java.lang.String,java.lang.String) -> Base64AES
    java.lang.String urlEncode(java.lang.String,java.lang.String) -> urlEncode
    java.lang.String urlEncode(java.lang.String) -> urlEncode
    java.lang.String CRC32(byte[]) -> CRC32
    byte[] rawRSAEncode(byte[],byte[],int) -> rawRSAEncode
    byte[] rawRSADecode(byte[],byte[],int) -> rawRSADecode
com.mob.tools.utils.DeviceHelper -> com.mob.tools.utils.DeviceHelper:
    android.content.Context context -> context
    com.mob.tools.utils.DeviceHelper deviceHelper -> deviceHelper
    com.mob.tools.utils.DeviceHelper getInstance(android.content.Context) -> getInstance
    boolean isRooted() -> isRooted
    java.lang.String getSSID() -> getSSID
    java.lang.String getBssid() -> getBssid
    java.lang.String getMacAddress() -> getMacAddress
    java.lang.String getModel() -> getModel
    java.lang.String getManufacturer() -> getManufacturer
    java.lang.String getDeviceId() -> getDeviceId
    java.lang.String getMime() -> getMime
    java.lang.String getSerialno() -> getSerialno
    java.lang.String getDeviceData() -> getDeviceData
    java.lang.String getDeviceDataNotAES() -> getDeviceDataNotAES
    java.lang.String Base64AES(java.lang.String,java.lang.String) -> Base64AES
    java.lang.String getOSVersion() -> getOSVersion
    java.lang.String getOSVersionName() -> getOSVersionName
    java.lang.String getOSLanguage() -> getOSLanguage
    java.lang.String getOSCountry() -> getOSCountry
    java.lang.String getScreenSize() -> getScreenSize
    java.lang.String getCarrier() -> getCarrier
    java.lang.String getSimSerialNumber() -> getSimSerialNumber
    java.lang.String getLine1Number() -> getLine1Number
    java.lang.String getBluetoothName() -> getBluetoothName
    java.lang.String getSignMD5() -> getSignMD5
    java.lang.Object getSystemService(java.lang.String) -> getSystemService
    java.lang.String getNetworkType() -> getNetworkType
    java.lang.String getNetworkTypeForStatic() -> getNetworkTypeForStatic
    java.lang.String getDetailNetworkTypeForStatic() -> getDetailNetworkTypeForStatic
    int getPlatformCode() -> getPlatformCode
    boolean is4GMobileNetwork() -> is4GMobileNetwork
    boolean isFastMobileNetwork() -> isFastMobileNetwork
    org.json.JSONArray getRunningApp() -> getRunningApp
    java.lang.String getRunningAppStr() -> getRunningAppStr
    java.lang.String getDeviceKey() -> getDeviceKey
    java.lang.String getCharAndNumr(int) -> getCharAndNumr
    java.lang.String getLocalDeviceKey() -> getLocalDeviceKey
    void saveLocalDeviceKey(java.lang.String) -> saveLocalDeviceKey
    java.lang.String getPackageName() -> getPackageName
    java.lang.String getAppName() -> getAppName
    int getAppVersion() -> getAppVersion
    java.lang.String getAppVersionName() -> getAppVersionName
    java.util.ArrayList getInstalledApp(boolean) -> getInstalledApp
    boolean isSystemApp(android.content.pm.PackageInfo) -> isSystemApp
    java.lang.String getNetworkOperator() -> getNetworkOperator
    boolean checkPermission(java.lang.String) -> checkPermission
    java.lang.String getTopTaskPackageName() -> getTopTaskPackageName
    boolean getSdcardState() -> getSdcardState
    java.lang.String getSdcardPath() -> getSdcardPath
    java.lang.String getAndroidID() -> getAndroidID
    java.lang.String getAdvertisingID() -> getAdvertisingID
    void hideSoftInput(android.view.View) -> hideSoftInput
    void showSoftInput(android.view.View) -> showSoftInput
    boolean isMainProcess(android.content.Context,int) -> isMainProcess
com.mob.tools.utils.DeviceHelper$1 -> com.mob.tools.utils.DeviceHelper$1:
com.mob.tools.utils.DeviceHelper$GSConnection -> com.mob.tools.utils.DeviceHelper$GSConnection:
    boolean got -> got
    java.util.concurrent.BlockingQueue iBinders -> iBinders
    com.mob.tools.utils.DeviceHelper this$0 -> this$0
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
    android.os.IBinder takeBinder() -> takeBinder
com.mob.tools.utils.DownloadFileHelper -> com.mob.tools.utils.DownloadFileHelper:
    java.lang.String FILE_NAME -> FILE_NAME
    int FILE_VERSION -> FILE_VERSION
    int DOWNLOAD_PAUSE -> DOWNLOAD_PAUSE
    int DOWNLOADING -> DOWNLOADING
    int DOWNLOAD_COMPLETE -> DOWNLOAD_COMPLETE
    int state -> state
    int completeSize -> completeSize
    int fileSize -> fileSize
    java.lang.String fileUrl -> fileUrl
    java.lang.String filePath -> filePath
    java.lang.String downloadFileName -> downloadFileName
    android.content.Context context -> context
    boolean startDownload -> startDownload
    com.mob.tools.utils.DownloadFileHelper$DownloadListener downloadListener -> downloadListener
    com.mob.tools.utils.SharePrefrenceHelper sharePrefrence -> sharePrefrence
    java.util.HashMap downloadInfo -> downloadInfo
    void init() -> init
    void getDownloadInfo(java.lang.String) -> getDownloadInfo
    void setDownloadInfo() -> setDownloadInfo
    int getFileSize() -> getFileSize
    void setFileSize(int) -> setFileSize
    int getCompleteSize() -> getCompleteSize
    void setCompleteSize(int) -> setCompleteSize
    java.lang.String getDownloadFilePath() -> getDownloadFilePath
    void pause() -> pause
    void start() -> start
    void downloadFile() -> downloadFile
    java.lang.String access$000(com.mob.tools.utils.DownloadFileHelper) -> access$000
    java.lang.String access$100(com.mob.tools.utils.DownloadFileHelper) -> access$100
    int access$200(com.mob.tools.utils.DownloadFileHelper) -> access$200
    int access$300(com.mob.tools.utils.DownloadFileHelper) -> access$300
    int access$302(com.mob.tools.utils.DownloadFileHelper,int) -> access$302
    void access$400(com.mob.tools.utils.DownloadFileHelper,int) -> access$400
    int access$212(com.mob.tools.utils.DownloadFileHelper,int) -> access$212
    com.mob.tools.utils.DownloadFileHelper$DownloadListener access$500(com.mob.tools.utils.DownloadFileHelper) -> access$500
    int access$602(com.mob.tools.utils.DownloadFileHelper,int) -> access$602
    int access$600(com.mob.tools.utils.DownloadFileHelper) -> access$600
    int access$202(com.mob.tools.utils.DownloadFileHelper,int) -> access$202
    void access$700(com.mob.tools.utils.DownloadFileHelper,int) -> access$700
    void access$800(com.mob.tools.utils.DownloadFileHelper) -> access$800
com.mob.tools.utils.DownloadFileHelper$1 -> com.mob.tools.utils.DownloadFileHelper$1:
    com.mob.tools.utils.DownloadFileHelper this$0 -> this$0
    void run() -> run
com.mob.tools.utils.DownloadFileHelper$DownloadListener -> com.mob.tools.utils.DownloadFileHelper$DownloadListener:
    void onStart() -> onStart
    void onPause() -> onPause
    void onDownloading(int) -> onDownloading
    void onComplete(java.lang.String) -> onComplete
    void onError(java.lang.Throwable) -> onError
com.mob.tools.utils.HEX -> com.mob.tools.utils.HEX:
    char[] DIGITS -> DIGITS
    java.lang.String toHex(byte[]) -> toHex
    byte[] toByte(java.lang.String) -> toByte
    java.lang.String encodeHexString(byte[]) -> encodeHexString
    byte[] decodeHexString(java.lang.String) -> decodeHexString
    byte[] decodeHex(char[]) -> decodeHex
    int toDigit(char,int) -> toDigit
    char[] encodeHex(byte[]) -> encodeHex
    byte[] decode(byte[]) -> decode
    byte[] decode(java.lang.Object) -> decode
    byte[] encode(byte[]) -> encode
    char[] encode(java.lang.Object) -> encode
com.mob.tools.utils.Hashon -> com.mob.tools.utils.Hashon:
    java.util.HashMap fromJson(java.lang.String) -> fromJson
    java.util.HashMap fromJson(org.json.JSONObject) -> fromJson
    java.util.ArrayList fromJson(org.json.JSONArray) -> fromJson
    java.lang.String fromHashMap(java.util.HashMap) -> fromHashMap
    org.json.JSONObject getJSONObject(java.util.HashMap) -> getJSONObject
    boolean isBasicArray(java.lang.Object) -> isBasicArray
    java.util.ArrayList arrayToList(java.lang.Object) -> arrayToList
    org.json.JSONArray getJSONArray(java.util.ArrayList) -> getJSONArray
    java.lang.String format(java.lang.String) -> format
    java.lang.String format(java.lang.String,java.util.HashMap) -> format
    java.lang.String format(java.lang.String,java.util.ArrayList) -> format
com.mob.tools.utils.JsonValidator -> com.mob.tools.utils.JsonValidator:
    java.text.CharacterIterator it -> it
    char c -> c
    int col -> col
    boolean validate(java.lang.String) -> validate
    boolean valid(java.lang.String) -> valid
    boolean value() -> value
    boolean literal(java.lang.String) -> literal
    boolean array() -> array
    boolean object() -> object
    boolean aggregate(char,char,boolean) -> aggregate
    boolean number() -> number
    boolean string() -> string
    boolean escape() -> escape
    boolean ishex(char) -> ishex
    char nextCharacter() -> nextCharacter
    void skipWhiteSpace() -> skipWhiteSpace
    boolean error(java.lang.String,int) -> error
com.mob.tools.utils.LocalDB -> com.mob.tools.utils.LocalDB:
    java.io.File dbFile -> dbFile
    java.util.HashMap map -> map
    void open(java.lang.String) -> open
    void commit() -> commit
    void put(java.lang.String,java.lang.Object) -> put
    java.lang.Object get(java.lang.String) -> get
    void putString(java.lang.String,java.lang.String) -> putString
    java.lang.String getString(java.lang.String) -> getString
    void putBoolean(java.lang.String,java.lang.Boolean) -> putBoolean
    boolean getBoolean(java.lang.String) -> getBoolean
    void putLong(java.lang.String,java.lang.Long) -> putLong
    long getLong(java.lang.String) -> getLong
    void putInt(java.lang.String,java.lang.Integer) -> putInt
    int getInt(java.lang.String) -> getInt
    void putFloat(java.lang.String,java.lang.Float) -> putFloat
    float getFloat(java.lang.String) -> getFloat
    void remove(java.lang.String) -> remove
    void putObject(java.lang.String,java.lang.Object) -> putObject
    java.lang.Object getObject(java.lang.String) -> getObject
com.mob.tools.utils.R -> com.mob.tools.utils.R:
    java.lang.String cacheRoot -> cacheRoot
    float density -> density
    int deviceWidth -> deviceWidth
    int dipToPx(android.content.Context,int) -> dipToPx
    int pxToDip(android.content.Context,int) -> pxToDip
    int designToDevice(android.content.Context,int,int) -> designToDevice
    int designToDevice(android.content.Context,float,int) -> designToDevice
    int[] getScreenSize(android.content.Context) -> getScreenSize
    int getScreenWidth(android.content.Context) -> getScreenWidth
    int getScreenHeight(android.content.Context) -> getScreenHeight
    int getResId(android.content.Context,java.lang.String,java.lang.String) -> getResId
    int getBitmapRes(android.content.Context,java.lang.String) -> getBitmapRes
    int getStringRes(android.content.Context,java.lang.String) -> getStringRes
    int getStringArrayRes(android.content.Context,java.lang.String) -> getStringArrayRes
    int getLayoutRes(android.content.Context,java.lang.String) -> getLayoutRes
    int getStyleRes(android.content.Context,java.lang.String) -> getStyleRes
    int getIdRes(android.content.Context,java.lang.String) -> getIdRes
    int getColorRes(android.content.Context,java.lang.String) -> getColorRes
    int getRawRes(android.content.Context,java.lang.String) -> getRawRes
    int getPluralsRes(android.content.Context,java.lang.String) -> getPluralsRes
    int getAnimRes(android.content.Context,java.lang.String) -> getAnimRes
    void setCacheRoot(java.lang.String) -> setCacheRoot
    java.lang.String getCacheRoot(android.content.Context) -> getCacheRoot
    java.lang.String getCachePath(android.content.Context,java.lang.String) -> getCachePath
    java.lang.String getImageCachePath(android.content.Context) -> getImageCachePath
    void clearCache(android.content.Context) -> clearCache
    void deleteFileAndFolder(java.io.File) -> deleteFileAndFolder
    java.lang.String toWordText(java.lang.String,int) -> toWordText
    int getTextLengthInWord(java.lang.String) -> getTextLengthInWord
    long strToDate(java.lang.String) -> strToDate
    long dateStrToLong(java.lang.String) -> dateStrToLong
    java.util.Date longToDate(long) -> longToDate
    java.lang.String longToTime(long,int) -> longToTime
    long dateToLong(java.lang.String) -> dateToLong
    int[] covertTimeInYears(long) -> covertTimeInYears
    android.net.Uri pathToContentUri(android.content.Context,java.lang.String) -> pathToContentUri
    java.lang.String contentUriToPath(android.content.Context,android.net.Uri) -> contentUriToPath
    java.lang.String encodeUrl(android.os.Bundle) -> encodeUrl
    java.lang.String encodeUrl(java.util.ArrayList) -> encodeUrl
    android.os.Bundle urlToBundle(java.lang.String) -> urlToBundle
    android.os.Bundle decodeUrl(java.lang.String) -> decodeUrl
    int parseInt(java.lang.String) -> parseInt
    int parseInt(java.lang.String,int) -> parseInt
    int parseInt(java.lang.String,int,int,boolean) -> parseInt
    int digit(int,int) -> digit
    java.lang.Throwable invalidInt(java.lang.String) -> invalidInt
    long parseLong(java.lang.String) -> parseLong
    long parseLong(java.lang.String,int) -> parseLong
    long parseLong(java.lang.String,int,int,boolean) -> parseLong
    java.lang.Throwable invalidLong(java.lang.String) -> invalidLong
    boolean copyFile(java.lang.String,java.lang.String) -> copyFile
    void copyFile(java.io.FileInputStream,java.io.FileOutputStream) -> copyFile
    long getFileSize(java.lang.String) -> getFileSize
    long getFileSize(java.io.File) -> getFileSize
    boolean saveObjectToFile(java.lang.String,java.lang.Object) -> saveObjectToFile
    java.lang.Object readObjectFromFile(java.lang.String) -> readObjectFromFile
com.mob.tools.utils.ReflectHelper -> com.mob.tools.utils.ReflectHelper:
    java.util.HashSet packageSet -> packageSet
    java.util.HashMap classMap -> classMap
    com.mob.tools.gui.CachePool cachedMethod -> cachedMethod
    com.mob.tools.gui.CachePool cachedConstr -> cachedConstr
    void importClass(java.lang.String) -> importClass
    void importClass(java.lang.String,java.lang.String) -> importClass
    java.lang.Class getClass(java.lang.String) -> getClass
    java.lang.Class[] getTypes(java.lang.Object[]) -> getTypes
    boolean primitiveEquals(java.lang.Class,java.lang.Class) -> primitiveEquals
    boolean matchParams(java.lang.Class[],java.lang.Class[]) -> matchParams
    java.lang.Object newInstance(java.lang.String,java.lang.Object[]) -> newInstance
    java.lang.Object invokeStaticMethod(java.lang.String,java.lang.String,java.lang.Object[]) -> invokeStaticMethod
    java.lang.Object invokeInstanceMethod(java.lang.Object,java.lang.String,java.lang.Object[]) -> invokeInstanceMethod
    java.lang.Object getStaticField(java.lang.String,java.lang.String) -> getStaticField
    void setStaticField(java.lang.String,java.lang.String,java.lang.Object) -> setStaticField
    java.lang.Object getInstanceField(java.lang.Object,java.lang.String) -> getInstanceField
    void setInstanceField(java.lang.Object,java.lang.String,java.lang.Object) -> setInstanceField
com.mob.tools.utils.SharePrefrenceHelper -> com.mob.tools.utils.SharePrefrenceHelper:
    android.content.Context context -> context
    android.content.SharedPreferences prefrence -> prefrence
    void open(java.lang.String) -> open
    void open(java.lang.String,int) -> open
    void putString(java.lang.String,java.lang.String) -> putString
    java.lang.String getString(java.lang.String) -> getString
    void putBoolean(java.lang.String,java.lang.Boolean) -> putBoolean
    boolean getBoolean(java.lang.String) -> getBoolean
    void putLong(java.lang.String,java.lang.Long) -> putLong
    long getLong(java.lang.String) -> getLong
    void putInt(java.lang.String,java.lang.Integer) -> putInt
    int getInt(java.lang.String) -> getInt
    void putFloat(java.lang.String,java.lang.Float) -> putFloat
    float getFloat(java.lang.String) -> getFloat
    void put(java.lang.String,java.lang.Object) -> put
    java.lang.Object get(java.lang.String) -> get
    void remove(java.lang.String) -> remove
com.mob.tools.utils.UIHandler -> com.mob.tools.utils.UIHandler:
    java.lang.String[] prays -> prays
    android.os.Handler handler -> handler
    void prepare() -> prepare
    void reset() -> reset
    void printPray() -> printPray
    void handleMessage(android.os.Message) -> handleMessage
    android.os.Message getShellMessage(android.os.Message,android.os.Handler$Callback) -> getShellMessage
    android.os.Message getShellMessage(int,android.os.Handler$Callback) -> getShellMessage
    boolean sendMessage(android.os.Message,android.os.Handler$Callback) -> sendMessage
    boolean sendMessageDelayed(android.os.Message,long,android.os.Handler$Callback) -> sendMessageDelayed
    boolean sendMessageAtTime(android.os.Message,long,android.os.Handler$Callback) -> sendMessageAtTime
    boolean sendMessageAtFrontOfQueue(android.os.Message,android.os.Handler$Callback) -> sendMessageAtFrontOfQueue
    boolean sendEmptyMessage(int,android.os.Handler$Callback) -> sendEmptyMessage
    boolean sendEmptyMessageAtTime(int,long,android.os.Handler$Callback) -> sendEmptyMessageAtTime
    boolean sendEmptyMessageDelayed(int,long,android.os.Handler$Callback) -> sendEmptyMessageDelayed
    void access$000(android.os.Message) -> access$000
com.mob.tools.utils.UIHandler$1 -> com.mob.tools.utils.UIHandler$1:
    boolean handleMessage(android.os.Message) -> handleMessage
com.mob.tools.utils.UIHandler$InnerObj -> com.mob.tools.utils.UIHandler$InnerObj:
    android.os.Message msg -> msg
    android.os.Handler$Callback callback -> callback
com.nostra13.universalimageloader.cache.disc.BaseDiscCache -> com.nostra13.universalimageloader.cache.disc.BaseDiscCache:
    java.io.File cacheDir -> cacheDir
    com.nostra13.universalimageloader.cache.disc.naming.FileNameGenerator fileNameGenerator -> fileNameGenerator
    java.io.File get(java.lang.String) -> get
    void clear() -> clear
com.nostra13.universalimageloader.cache.disc.DiscCacheAware -> com.nostra13.universalimageloader.cache.disc.DiscCacheAware:
    void put(java.lang.String,java.io.File) -> put
    java.io.File get(java.lang.String) -> get
    void clear() -> clear
com.nostra13.universalimageloader.cache.disc.LimitedDiscCache -> com.nostra13.universalimageloader.cache.disc.LimitedDiscCache:
    java.util.concurrent.atomic.AtomicInteger cacheSize -> cacheSize
    int sizeLimit -> sizeLimit
    java.util.Map lastUsageDates -> lastUsageDates
    void calculateCacheSizeAndFillUsageMap() -> calculateCacheSizeAndFillUsageMap
    void put(java.lang.String,java.io.File) -> put
    java.io.File get(java.lang.String) -> get
    void clear() -> clear
    int removeNext() -> removeNext
    int getSize(java.io.File) -> getSize
    java.util.Map access$000(com.nostra13.universalimageloader.cache.disc.LimitedDiscCache) -> access$000
    java.util.concurrent.atomic.AtomicInteger access$100(com.nostra13.universalimageloader.cache.disc.LimitedDiscCache) -> access$100
com.nostra13.universalimageloader.cache.disc.LimitedDiscCache$1 -> com.nostra13.universalimageloader.cache.disc.LimitedDiscCache$1:
    com.nostra13.universalimageloader.cache.disc.LimitedDiscCache this$0 -> this$0
    void run() -> run
com.nostra13.universalimageloader.cache.disc.impl.FileCountLimitedDiscCache -> com.nostra13.universalimageloader.cache.disc.impl.FileCountLimitedDiscCache:
    int getSize(java.io.File) -> getSize
com.nostra13.universalimageloader.cache.disc.impl.LimitedAgeDiscCache -> com.nostra13.universalimageloader.cache.disc.impl.LimitedAgeDiscCache:
    long maxFileAge -> maxFileAge
    java.util.Map loadingDates -> loadingDates
    void put(java.lang.String,java.io.File) -> put
    java.io.File get(java.lang.String) -> get
com.nostra13.universalimageloader.cache.disc.impl.TotalSizeLimitedDiscCache -> com.nostra13.universalimageloader.cache.disc.impl.TotalSizeLimitedDiscCache:
    int MIN_NORMAL_CACHE_SIZE_IN_MB -> MIN_NORMAL_CACHE_SIZE_IN_MB
    int MIN_NORMAL_CACHE_SIZE -> MIN_NORMAL_CACHE_SIZE
    int getSize(java.io.File) -> getSize
com.nostra13.universalimageloader.cache.disc.impl.UnlimitedDiscCache -> com.nostra13.universalimageloader.cache.disc.impl.UnlimitedDiscCache:
    void put(java.lang.String,java.io.File) -> put
com.nostra13.universalimageloader.cache.disc.naming.FileNameGenerator -> com.nostra13.universalimageloader.cache.disc.naming.FileNameGenerator:
    java.lang.String generate(java.lang.String) -> generate
com.nostra13.universalimageloader.cache.disc.naming.HashCodeFileNameGenerator -> com.nostra13.universalimageloader.cache.disc.naming.HashCodeFileNameGenerator:
    java.lang.String generate(java.lang.String) -> generate
com.nostra13.universalimageloader.cache.disc.naming.Md5FileNameGenerator -> com.nostra13.universalimageloader.cache.disc.naming.Md5FileNameGenerator:
    java.lang.String HASH_ALGORITHM -> HASH_ALGORITHM
    int RADIX -> RADIX
    java.lang.String generate(java.lang.String) -> generate
    byte[] getMD5(byte[]) -> getMD5
com.nostra13.universalimageloader.cache.memory.BaseMemoryCache -> com.nostra13.universalimageloader.cache.memory.BaseMemoryCache:
    java.util.Map softMap -> softMap
    java.lang.Object get(java.lang.Object) -> get
    boolean put(java.lang.Object,java.lang.Object) -> put
    void remove(java.lang.Object) -> remove
    java.util.Collection keys() -> keys
    void clear() -> clear
    java.lang.ref.Reference createReference(java.lang.Object) -> createReference
com.nostra13.universalimageloader.cache.memory.LimitedMemoryCache -> com.nostra13.universalimageloader.cache.memory.LimitedMemoryCache:
    int MAX_NORMAL_CACHE_SIZE_IN_MB -> MAX_NORMAL_CACHE_SIZE_IN_MB
    int MAX_NORMAL_CACHE_SIZE -> MAX_NORMAL_CACHE_SIZE
    int sizeLimit -> sizeLimit
    java.util.concurrent.atomic.AtomicInteger cacheSize -> cacheSize
    java.util.List hardCache -> hardCache
    boolean put(java.lang.Object,java.lang.Object) -> put
    void remove(java.lang.Object) -> remove
    void clear() -> clear
    int getSizeLimit() -> getSizeLimit
    int getSize(java.lang.Object) -> getSize
    java.lang.Object removeNext() -> removeNext
com.nostra13.universalimageloader.cache.memory.MemoryCacheAware -> com.nostra13.universalimageloader.cache.memory.MemoryCacheAware:
    boolean put(java.lang.Object,java.lang.Object) -> put
    java.lang.Object get(java.lang.Object) -> get
    void remove(java.lang.Object) -> remove
    java.util.Collection keys() -> keys
    void clear() -> clear
com.nostra13.universalimageloader.cache.memory.impl.FIFOLimitedMemoryCache -> com.nostra13.universalimageloader.cache.memory.impl.FIFOLimitedMemoryCache:
    java.util.List queue -> queue
    boolean put(java.lang.String,android.graphics.Bitmap) -> put
    void remove(java.lang.String) -> remove
    void clear() -> clear
    int getSize(android.graphics.Bitmap) -> getSize
    android.graphics.Bitmap removeNext() -> removeNext
    java.lang.ref.Reference createReference(android.graphics.Bitmap) -> createReference
    java.lang.Object removeNext() -> removeNext
    int getSize(java.lang.Object) -> getSize
    void remove(java.lang.Object) -> remove
    boolean put(java.lang.Object,java.lang.Object) -> put
    java.lang.ref.Reference createReference(java.lang.Object) -> createReference
com.nostra13.universalimageloader.cache.memory.impl.FuzzyKeyMemoryCache -> com.nostra13.universalimageloader.cache.memory.impl.FuzzyKeyMemoryCache:
    com.nostra13.universalimageloader.cache.memory.MemoryCacheAware cache -> cache
    java.util.Comparator keyComparator -> keyComparator
    boolean put(java.lang.Object,java.lang.Object) -> put
    java.lang.Object get(java.lang.Object) -> get
    void remove(java.lang.Object) -> remove
    void clear() -> clear
    java.util.Collection keys() -> keys
com.nostra13.universalimageloader.cache.memory.impl.LRULimitedMemoryCache -> com.nostra13.universalimageloader.cache.memory.impl.LRULimitedMemoryCache:
    int INITIAL_CAPACITY -> INITIAL_CAPACITY
    float LOAD_FACTOR -> LOAD_FACTOR
    java.util.Map lruCache -> lruCache
    boolean put(java.lang.String,android.graphics.Bitmap) -> put
    android.graphics.Bitmap get(java.lang.String) -> get
    void remove(java.lang.String) -> remove
    void clear() -> clear
    int getSize(android.graphics.Bitmap) -> getSize
    android.graphics.Bitmap removeNext() -> removeNext
    java.lang.ref.Reference createReference(android.graphics.Bitmap) -> createReference
    java.lang.Object removeNext() -> removeNext
    int getSize(java.lang.Object) -> getSize
    void remove(java.lang.Object) -> remove
    boolean put(java.lang.Object,java.lang.Object) -> put
    java.lang.ref.Reference createReference(java.lang.Object) -> createReference
    java.lang.Object get(java.lang.Object) -> get
com.nostra13.universalimageloader.cache.memory.impl.LargestLimitedMemoryCache -> com.nostra13.universalimageloader.cache.memory.impl.LargestLimitedMemoryCache:
    java.util.Map valueSizes -> valueSizes
    boolean put(java.lang.String,android.graphics.Bitmap) -> put
    void remove(java.lang.String) -> remove
    void clear() -> clear
    int getSize(android.graphics.Bitmap) -> getSize
    android.graphics.Bitmap removeNext() -> removeNext
    java.lang.ref.Reference createReference(android.graphics.Bitmap) -> createReference
    java.lang.Object removeNext() -> removeNext
    int getSize(java.lang.Object) -> getSize
    void remove(java.lang.Object) -> remove
    boolean put(java.lang.Object,java.lang.Object) -> put
    java.lang.ref.Reference createReference(java.lang.Object) -> createReference
com.nostra13.universalimageloader.cache.memory.impl.LimitedAgeMemoryCache -> com.nostra13.universalimageloader.cache.memory.impl.LimitedAgeMemoryCache:
    com.nostra13.universalimageloader.cache.memory.MemoryCacheAware cache -> cache
    long maxAge -> maxAge
    java.util.Map loadingDates -> loadingDates
    boolean put(java.lang.Object,java.lang.Object) -> put
    java.lang.Object get(java.lang.Object) -> get
    void remove(java.lang.Object) -> remove
    java.util.Collection keys() -> keys
    void clear() -> clear
com.nostra13.universalimageloader.cache.memory.impl.LruMemoryCache -> com.nostra13.universalimageloader.cache.memory.impl.LruMemoryCache:
    java.util.LinkedHashMap map -> map
    int maxSize -> maxSize
    int size -> size
    android.graphics.Bitmap get(java.lang.String) -> get
    boolean put(java.lang.String,android.graphics.Bitmap) -> put
    void trimToSize(int) -> trimToSize
    void remove(java.lang.String) -> remove
    java.util.Collection keys() -> keys
    void clear() -> clear
    int sizeOf(java.lang.String,android.graphics.Bitmap) -> sizeOf
    java.lang.String toString() -> toString
    void remove(java.lang.Object) -> remove
    java.lang.Object get(java.lang.Object) -> get
    boolean put(java.lang.Object,java.lang.Object) -> put
com.nostra13.universalimageloader.cache.memory.impl.UsingFreqLimitedMemoryCache -> com.nostra13.universalimageloader.cache.memory.impl.UsingFreqLimitedMemoryCache:
    java.util.Map usingCounts -> usingCounts
    boolean put(java.lang.String,android.graphics.Bitmap) -> put
    android.graphics.Bitmap get(java.lang.String) -> get
    void remove(java.lang.String) -> remove
    void clear() -> clear
    int getSize(android.graphics.Bitmap) -> getSize
    android.graphics.Bitmap removeNext() -> removeNext
    java.lang.ref.Reference createReference(android.graphics.Bitmap) -> createReference
    java.lang.Object removeNext() -> removeNext
    int getSize(java.lang.Object) -> getSize
    void remove(java.lang.Object) -> remove
    boolean put(java.lang.Object,java.lang.Object) -> put
    java.lang.ref.Reference createReference(java.lang.Object) -> createReference
    java.lang.Object get(java.lang.Object) -> get
com.nostra13.universalimageloader.cache.memory.impl.WeakMemoryCache -> com.nostra13.universalimageloader.cache.memory.impl.WeakMemoryCache:
    java.lang.ref.Reference createReference(android.graphics.Bitmap) -> createReference
    java.lang.ref.Reference createReference(java.lang.Object) -> createReference
com.nostra13.universalimageloader.core.DefaultConfigurationFactory -> com.nostra13.universalimageloader.core.DefaultConfigurationFactory:
    java.util.concurrent.Executor createExecutor(int,int,com.nostra13.universalimageloader.core.assist.QueueProcessingType) -> createExecutor
    com.nostra13.universalimageloader.cache.disc.naming.FileNameGenerator createFileNameGenerator() -> createFileNameGenerator
    com.nostra13.universalimageloader.cache.disc.DiscCacheAware createDiscCache(android.content.Context,com.nostra13.universalimageloader.cache.disc.naming.FileNameGenerator,int,int) -> createDiscCache
    com.nostra13.universalimageloader.cache.disc.DiscCacheAware createReserveDiscCache(android.content.Context) -> createReserveDiscCache
    com.nostra13.universalimageloader.cache.memory.MemoryCacheAware createMemoryCache(int) -> createMemoryCache
    com.nostra13.universalimageloader.core.download.ImageDownloader createImageDownloader(android.content.Context) -> createImageDownloader
    com.nostra13.universalimageloader.core.decode.ImageDecoder createImageDecoder(boolean) -> createImageDecoder
    com.nostra13.universalimageloader.core.display.BitmapDisplayer createBitmapDisplayer() -> createBitmapDisplayer
    java.util.concurrent.ThreadFactory createThreadFactory(int) -> createThreadFactory
com.nostra13.universalimageloader.core.DefaultConfigurationFactory$DefaultThreadFactory -> com.nostra13.universalimageloader.core.DefaultConfigurationFactory$DefaultThreadFactory:
    java.util.concurrent.atomic.AtomicInteger poolNumber -> poolNumber
    java.lang.ThreadGroup group -> group
    java.util.concurrent.atomic.AtomicInteger threadNumber -> threadNumber
    java.lang.String namePrefix -> namePrefix
    int threadPriority -> threadPriority
    java.lang.Thread newThread(java.lang.Runnable) -> newThread
com.nostra13.universalimageloader.core.DisplayBitmapTask -> com.nostra13.universalimageloader.core.DisplayBitmapTask:
    java.lang.String LOG_DISPLAY_IMAGE_IN_IMAGEVIEW -> LOG_DISPLAY_IMAGE_IN_IMAGEVIEW
    java.lang.String LOG_TASK_CANCELLED -> LOG_TASK_CANCELLED
    android.graphics.Bitmap bitmap -> bitmap
    java.lang.String imageUri -> imageUri
    android.widget.ImageView imageView -> imageView
    java.lang.String memoryCacheKey -> memoryCacheKey
    com.nostra13.universalimageloader.core.display.BitmapDisplayer displayer -> displayer
    com.nostra13.universalimageloader.core.assist.ImageLoadingListener listener -> listener
    com.nostra13.universalimageloader.core.ImageLoaderEngine engine -> engine
    boolean loggingEnabled -> loggingEnabled
    void run() -> run
    boolean isViewWasReused() -> isViewWasReused
    void setLoggingEnabled(boolean) -> setLoggingEnabled
com.nostra13.universalimageloader.core.DisplayImageOptions -> com.nostra13.universalimageloader.core.DisplayImageOptions:
    int stubImage -> stubImage
    int imageForEmptyUri -> imageForEmptyUri
    int imageOnFail -> imageOnFail
    boolean resetViewBeforeLoading -> resetViewBeforeLoading
    boolean cacheInMemory -> cacheInMemory
    boolean cacheOnDisc -> cacheOnDisc
    com.nostra13.universalimageloader.core.assist.ImageScaleType imageScaleType -> imageScaleType
    android.graphics.BitmapFactory$Options decodingOptions -> decodingOptions
    int delayBeforeLoading -> delayBeforeLoading
    java.lang.Object extraForDownloader -> extraForDownloader
    com.nostra13.universalimageloader.core.process.BitmapProcessor preProcessor -> preProcessor
    com.nostra13.universalimageloader.core.process.BitmapProcessor postProcessor -> postProcessor
    com.nostra13.universalimageloader.core.display.BitmapDisplayer displayer -> displayer
    android.os.Handler handler -> handler
    boolean shouldShowStubImage() -> shouldShowStubImage
    boolean shouldShowImageForEmptyUri() -> shouldShowImageForEmptyUri
    boolean shouldShowImageOnFail() -> shouldShowImageOnFail
    boolean shouldPreProcess() -> shouldPreProcess
    boolean shouldPostProcess() -> shouldPostProcess
    boolean shouldDelayBeforeLoading() -> shouldDelayBeforeLoading
    int getStubImage() -> getStubImage
    int getImageForEmptyUri() -> getImageForEmptyUri
    int getImageOnFail() -> getImageOnFail
    boolean isResetViewBeforeLoading() -> isResetViewBeforeLoading
    boolean isCacheInMemory() -> isCacheInMemory
    boolean isCacheOnDisc() -> isCacheOnDisc
    com.nostra13.universalimageloader.core.assist.ImageScaleType getImageScaleType() -> getImageScaleType
    android.graphics.BitmapFactory$Options getDecodingOptions() -> getDecodingOptions
    int getDelayBeforeLoading() -> getDelayBeforeLoading
    java.lang.Object getExtraForDownloader() -> getExtraForDownloader
    com.nostra13.universalimageloader.core.process.BitmapProcessor getPreProcessor() -> getPreProcessor
    com.nostra13.universalimageloader.core.process.BitmapProcessor getPostProcessor() -> getPostProcessor
    com.nostra13.universalimageloader.core.display.BitmapDisplayer getDisplayer() -> getDisplayer
    android.os.Handler getHandler() -> getHandler
    com.nostra13.universalimageloader.core.DisplayImageOptions createSimple() -> createSimple
    int access$1400(com.nostra13.universalimageloader.core.DisplayImageOptions) -> access$1400
    int access$1500(com.nostra13.universalimageloader.core.DisplayImageOptions) -> access$1500
    int access$1600(com.nostra13.universalimageloader.core.DisplayImageOptions) -> access$1600
    boolean access$1700(com.nostra13.universalimageloader.core.DisplayImageOptions) -> access$1700
    boolean access$1800(com.nostra13.universalimageloader.core.DisplayImageOptions) -> access$1800
    boolean access$1900(com.nostra13.universalimageloader.core.DisplayImageOptions) -> access$1900
    com.nostra13.universalimageloader.core.assist.ImageScaleType access$2000(com.nostra13.universalimageloader.core.DisplayImageOptions) -> access$2000
    android.graphics.BitmapFactory$Options access$2100(com.nostra13.universalimageloader.core.DisplayImageOptions) -> access$2100
    int access$2200(com.nostra13.universalimageloader.core.DisplayImageOptions) -> access$2200
    java.lang.Object access$2300(com.nostra13.universalimageloader.core.DisplayImageOptions) -> access$2300
    com.nostra13.universalimageloader.core.process.BitmapProcessor access$2400(com.nostra13.universalimageloader.core.DisplayImageOptions) -> access$2400
    com.nostra13.universalimageloader.core.process.BitmapProcessor access$2500(com.nostra13.universalimageloader.core.DisplayImageOptions) -> access$2500
    com.nostra13.universalimageloader.core.display.BitmapDisplayer access$2600(com.nostra13.universalimageloader.core.DisplayImageOptions) -> access$2600
    android.os.Handler access$2700(com.nostra13.universalimageloader.core.DisplayImageOptions) -> access$2700
com.nostra13.universalimageloader.core.DisplayImageOptions$1 -> com.nostra13.universalimageloader.core.DisplayImageOptions$1:
com.nostra13.universalimageloader.core.DisplayImageOptions$Builder -> com.nostra13.universalimageloader.core.DisplayImageOptions$Builder:
    int stubImage -> stubImage
    int imageForEmptyUri -> imageForEmptyUri
    int imageOnFail -> imageOnFail
    boolean resetViewBeforeLoading -> resetViewBeforeLoading
    boolean cacheInMemory -> cacheInMemory
    boolean cacheOnDisc -> cacheOnDisc
    com.nostra13.universalimageloader.core.assist.ImageScaleType imageScaleType -> imageScaleType
    android.graphics.BitmapFactory$Options decodingOptions -> decodingOptions
    int delayBeforeLoading -> delayBeforeLoading
    java.lang.Object extraForDownloader -> extraForDownloader
    com.nostra13.universalimageloader.core.process.BitmapProcessor preProcessor -> preProcessor
    com.nostra13.universalimageloader.core.process.BitmapProcessor postProcessor -> postProcessor
    com.nostra13.universalimageloader.core.display.BitmapDisplayer displayer -> displayer
    android.os.Handler handler -> handler
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder showStubImage(int) -> showStubImage
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder showImageForEmptyUri(int) -> showImageForEmptyUri
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder showImageOnFail(int) -> showImageOnFail
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder resetViewBeforeLoading() -> resetViewBeforeLoading
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder cacheInMemory() -> cacheInMemory
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder cacheOnDisc() -> cacheOnDisc
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder imageScaleType(com.nostra13.universalimageloader.core.assist.ImageScaleType) -> imageScaleType
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder bitmapConfig(android.graphics.Bitmap$Config) -> bitmapConfig
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder decodingOptions(android.graphics.BitmapFactory$Options) -> decodingOptions
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder delayBeforeLoading(int) -> delayBeforeLoading
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder extraForDownloader(java.lang.Object) -> extraForDownloader
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder preProcessor(com.nostra13.universalimageloader.core.process.BitmapProcessor) -> preProcessor
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder postProcessor(com.nostra13.universalimageloader.core.process.BitmapProcessor) -> postProcessor
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder displayer(com.nostra13.universalimageloader.core.display.BitmapDisplayer) -> displayer
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder handler(android.os.Handler) -> handler
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder cloneFrom(com.nostra13.universalimageloader.core.DisplayImageOptions) -> cloneFrom
    com.nostra13.universalimageloader.core.DisplayImageOptions build() -> build
    int access$000(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> access$000
    int access$100(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> access$100
    int access$200(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> access$200
    boolean access$300(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> access$300
    boolean access$400(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> access$400
    boolean access$500(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> access$500
    com.nostra13.universalimageloader.core.assist.ImageScaleType access$600(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> access$600
    android.graphics.BitmapFactory$Options access$700(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> access$700
    int access$800(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> access$800
    java.lang.Object access$900(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> access$900
    com.nostra13.universalimageloader.core.process.BitmapProcessor access$1000(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> access$1000
    com.nostra13.universalimageloader.core.process.BitmapProcessor access$1100(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> access$1100
    com.nostra13.universalimageloader.core.display.BitmapDisplayer access$1200(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> access$1200
    android.os.Handler access$1300(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> access$1300
com.nostra13.universalimageloader.core.ImageLoader -> com.nostra13.universalimageloader.core.ImageLoader:
    java.lang.String TAG -> TAG
    java.lang.String LOG_INIT_CONFIG -> LOG_INIT_CONFIG
    java.lang.String LOG_DESTROY -> LOG_DESTROY
    java.lang.String LOG_LOAD_IMAGE_FROM_MEMORY_CACHE -> LOG_LOAD_IMAGE_FROM_MEMORY_CACHE
    java.lang.String WARNING_RE_INIT_CONFIG -> WARNING_RE_INIT_CONFIG
    java.lang.String ERROR_WRONG_ARGUMENTS -> ERROR_WRONG_ARGUMENTS
    java.lang.String ERROR_NOT_INIT -> ERROR_NOT_INIT
    java.lang.String ERROR_INIT_CONFIG_WITH_NULL -> ERROR_INIT_CONFIG_WITH_NULL
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration configuration -> configuration
    com.nostra13.universalimageloader.core.ImageLoaderEngine engine -> engine
    com.nostra13.universalimageloader.core.assist.ImageLoadingListener emptyListener -> emptyListener
    com.nostra13.universalimageloader.core.display.BitmapDisplayer fakeBitmapDisplayer -> fakeBitmapDisplayer
    com.nostra13.universalimageloader.core.ImageLoader instance -> instance
    com.nostra13.universalimageloader.core.ImageLoader getInstance() -> getInstance
    void init(com.nostra13.universalimageloader.core.ImageLoaderConfiguration) -> init
    boolean isInited() -> isInited
    void displayImage(java.lang.String,android.widget.ImageView) -> displayImage
    void displayImage(java.lang.String,android.widget.ImageView,com.nostra13.universalimageloader.core.DisplayImageOptions) -> displayImage
    void displayImage(java.lang.String,android.widget.ImageView,com.nostra13.universalimageloader.core.assist.ImageLoadingListener) -> displayImage
    void displayImage(java.lang.String,android.widget.ImageView,com.nostra13.universalimageloader.core.DisplayImageOptions,com.nostra13.universalimageloader.core.assist.ImageLoadingListener) -> displayImage
    void loadImage(java.lang.String,com.nostra13.universalimageloader.core.assist.ImageLoadingListener) -> loadImage
    void loadImage(java.lang.String,com.nostra13.universalimageloader.core.assist.ImageSize,com.nostra13.universalimageloader.core.assist.ImageLoadingListener) -> loadImage
    void loadImage(java.lang.String,com.nostra13.universalimageloader.core.DisplayImageOptions,com.nostra13.universalimageloader.core.assist.ImageLoadingListener) -> loadImage
    void loadImage(java.lang.String,com.nostra13.universalimageloader.core.assist.ImageSize,com.nostra13.universalimageloader.core.DisplayImageOptions,com.nostra13.universalimageloader.core.assist.ImageLoadingListener) -> loadImage
    void checkConfiguration() -> checkConfiguration
    com.nostra13.universalimageloader.cache.memory.MemoryCacheAware getMemoryCache() -> getMemoryCache
    void clearMemoryCache() -> clearMemoryCache
    com.nostra13.universalimageloader.cache.disc.DiscCacheAware getDiscCache() -> getDiscCache
    void clearDiscCache() -> clearDiscCache
    java.lang.String getLoadingUriForView(android.widget.ImageView) -> getLoadingUriForView
    void cancelDisplayTask(android.widget.ImageView) -> cancelDisplayTask
    void denyNetworkDownloads(boolean) -> denyNetworkDownloads
    void handleSlowNetwork(boolean) -> handleSlowNetwork
    void pause() -> pause
    void resume() -> resume
    void stop() -> stop
    void destroy() -> destroy
com.nostra13.universalimageloader.core.ImageLoaderConfiguration -> com.nostra13.universalimageloader.core.ImageLoaderConfiguration:
    android.content.Context context -> context
    int maxImageWidthForMemoryCache -> maxImageWidthForMemoryCache
    int maxImageHeightForMemoryCache -> maxImageHeightForMemoryCache
    int maxImageWidthForDiscCache -> maxImageWidthForDiscCache
    int maxImageHeightForDiscCache -> maxImageHeightForDiscCache
    android.graphics.Bitmap$CompressFormat imageCompressFormatForDiscCache -> imageCompressFormatForDiscCache
    int imageQualityForDiscCache -> imageQualityForDiscCache
    java.util.concurrent.Executor taskExecutor -> taskExecutor
    java.util.concurrent.Executor taskExecutorForCachedImages -> taskExecutorForCachedImages
    boolean customExecutor -> customExecutor
    boolean customExecutorForCachedImages -> customExecutorForCachedImages
    int threadPoolSize -> threadPoolSize
    int threadPriority -> threadPriority
    com.nostra13.universalimageloader.core.assist.QueueProcessingType tasksProcessingType -> tasksProcessingType
    com.nostra13.universalimageloader.cache.memory.MemoryCacheAware memoryCache -> memoryCache
    com.nostra13.universalimageloader.cache.disc.DiscCacheAware discCache -> discCache
    com.nostra13.universalimageloader.core.download.ImageDownloader downloader -> downloader
    com.nostra13.universalimageloader.core.decode.ImageDecoder decoder -> decoder
    com.nostra13.universalimageloader.core.DisplayImageOptions defaultDisplayImageOptions -> defaultDisplayImageOptions
    boolean loggingEnabled -> loggingEnabled
    com.nostra13.universalimageloader.cache.disc.DiscCacheAware reserveDiscCache -> reserveDiscCache
    com.nostra13.universalimageloader.core.download.ImageDownloader networkDeniedDownloader -> networkDeniedDownloader
    com.nostra13.universalimageloader.core.download.ImageDownloader slowNetworkDownloader -> slowNetworkDownloader
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration createDefault(android.content.Context) -> createDefault
com.nostra13.universalimageloader.core.ImageLoaderConfiguration$1 -> com.nostra13.universalimageloader.core.ImageLoaderConfiguration$1:
com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder -> com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder:
    java.lang.String WARNING_OVERLAP_DISC_CACHE_PARAMS -> WARNING_OVERLAP_DISC_CACHE_PARAMS
    java.lang.String WARNING_OVERLAP_DISC_CACHE_NAME_GENERATOR -> WARNING_OVERLAP_DISC_CACHE_NAME_GENERATOR
    java.lang.String WARNING_OVERLAP_MEMORY_CACHE -> WARNING_OVERLAP_MEMORY_CACHE
    java.lang.String WARNING_OVERLAP_EXECUTOR -> WARNING_OVERLAP_EXECUTOR
    int DEFAULT_THREAD_POOL_SIZE -> DEFAULT_THREAD_POOL_SIZE
    int DEFAULT_THREAD_PRIORITY -> DEFAULT_THREAD_PRIORITY
    com.nostra13.universalimageloader.core.assist.QueueProcessingType DEFAULT_TASK_PROCESSING_TYPE -> DEFAULT_TASK_PROCESSING_TYPE
    android.content.Context context -> context
    int maxImageWidthForMemoryCache -> maxImageWidthForMemoryCache
    int maxImageHeightForMemoryCache -> maxImageHeightForMemoryCache
    int maxImageWidthForDiscCache -> maxImageWidthForDiscCache
    int maxImageHeightForDiscCache -> maxImageHeightForDiscCache
    android.graphics.Bitmap$CompressFormat imageCompressFormatForDiscCache -> imageCompressFormatForDiscCache
    int imageQualityForDiscCache -> imageQualityForDiscCache
    java.util.concurrent.Executor taskExecutor -> taskExecutor
    java.util.concurrent.Executor taskExecutorForCachedImages -> taskExecutorForCachedImages
    boolean customExecutor -> customExecutor
    boolean customExecutorForCachedImages -> customExecutorForCachedImages
    int threadPoolSize -> threadPoolSize
    int threadPriority -> threadPriority
    boolean denyCacheImageMultipleSizesInMemory -> denyCacheImageMultipleSizesInMemory
    com.nostra13.universalimageloader.core.assist.QueueProcessingType tasksProcessingType -> tasksProcessingType
    int memoryCacheSize -> memoryCacheSize
    int discCacheSize -> discCacheSize
    int discCacheFileCount -> discCacheFileCount
    com.nostra13.universalimageloader.cache.memory.MemoryCacheAware memoryCache -> memoryCache
    com.nostra13.universalimageloader.cache.disc.DiscCacheAware discCache -> discCache
    com.nostra13.universalimageloader.cache.disc.naming.FileNameGenerator discCacheFileNameGenerator -> discCacheFileNameGenerator
    com.nostra13.universalimageloader.core.download.ImageDownloader downloader -> downloader
    com.nostra13.universalimageloader.core.decode.ImageDecoder decoder -> decoder
    com.nostra13.universalimageloader.core.DisplayImageOptions defaultDisplayImageOptions -> defaultDisplayImageOptions
    boolean loggingEnabled -> loggingEnabled
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder memoryCacheExtraOptions(int,int) -> memoryCacheExtraOptions
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder discCacheExtraOptions(int,int,android.graphics.Bitmap$CompressFormat,int) -> discCacheExtraOptions
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder taskExecutor(java.util.concurrent.Executor) -> taskExecutor
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder taskExecutorForCachedImages(java.util.concurrent.Executor) -> taskExecutorForCachedImages
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder threadPoolSize(int) -> threadPoolSize
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder threadPriority(int) -> threadPriority
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder denyCacheImageMultipleSizesInMemory() -> denyCacheImageMultipleSizesInMemory
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder tasksProcessingOrder(com.nostra13.universalimageloader.core.assist.QueueProcessingType) -> tasksProcessingOrder
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder memoryCacheSize(int) -> memoryCacheSize
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder memoryCache(com.nostra13.universalimageloader.cache.memory.MemoryCacheAware) -> memoryCache
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder discCacheSize(int) -> discCacheSize
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder discCacheFileCount(int) -> discCacheFileCount
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder discCacheFileNameGenerator(com.nostra13.universalimageloader.cache.disc.naming.FileNameGenerator) -> discCacheFileNameGenerator
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder imageDownloader(com.nostra13.universalimageloader.core.download.ImageDownloader) -> imageDownloader
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder imageDecoder(com.nostra13.universalimageloader.core.decode.ImageDecoder) -> imageDecoder
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder discCache(com.nostra13.universalimageloader.cache.disc.DiscCacheAware) -> discCache
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder defaultDisplayImageOptions(com.nostra13.universalimageloader.core.DisplayImageOptions) -> defaultDisplayImageOptions
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder enableLogging() -> enableLogging
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration build() -> build
    void initEmptyFiledsWithDefaultValues() -> initEmptyFiledsWithDefaultValues
    android.content.Context access$000(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> access$000
    int access$100(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> access$100
    int access$200(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> access$200
    int access$300(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> access$300
    int access$400(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> access$400
    android.graphics.Bitmap$CompressFormat access$500(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> access$500
    int access$600(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> access$600
    java.util.concurrent.Executor access$700(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> access$700
    java.util.concurrent.Executor access$800(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> access$800
    int access$900(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> access$900
    int access$1000(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> access$1000
    com.nostra13.universalimageloader.core.assist.QueueProcessingType access$1100(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> access$1100
    com.nostra13.universalimageloader.cache.disc.DiscCacheAware access$1200(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> access$1200
    com.nostra13.universalimageloader.cache.memory.MemoryCacheAware access$1300(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> access$1300
    com.nostra13.universalimageloader.core.DisplayImageOptions access$1400(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> access$1400
    boolean access$1500(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> access$1500
    com.nostra13.universalimageloader.core.download.ImageDownloader access$1600(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> access$1600
    com.nostra13.universalimageloader.core.decode.ImageDecoder access$1700(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> access$1700
    boolean access$1800(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> access$1800
    boolean access$1900(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> access$1900
com.nostra13.universalimageloader.core.ImageLoaderEngine -> com.nostra13.universalimageloader.core.ImageLoaderEngine:
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration configuration -> configuration
    java.util.concurrent.Executor taskExecutor -> taskExecutor
    java.util.concurrent.Executor taskExecutorForCachedImages -> taskExecutorForCachedImages
    java.util.concurrent.ExecutorService taskDistributor -> taskDistributor
    java.util.Map cacheKeysForImageViews -> cacheKeysForImageViews
    java.util.Map uriLocks -> uriLocks
    java.util.concurrent.atomic.AtomicBoolean paused -> paused
    java.util.concurrent.atomic.AtomicBoolean networkDenied -> networkDenied
    java.util.concurrent.atomic.AtomicBoolean slowNetwork -> slowNetwork
    void submit(com.nostra13.universalimageloader.core.LoadAndDisplayImageTask) -> submit
    void submit(com.nostra13.universalimageloader.core.ProcessAndDisplayImageTask) -> submit
    void initExecutorsIfNeed() -> initExecutorsIfNeed
    java.util.concurrent.Executor createTaskExecutor() -> createTaskExecutor
    java.lang.String getLoadingUriForView(android.widget.ImageView) -> getLoadingUriForView
    void prepareDisplayTaskFor(android.widget.ImageView,java.lang.String) -> prepareDisplayTaskFor
    void cancelDisplayTaskFor(android.widget.ImageView) -> cancelDisplayTaskFor
    void denyNetworkDownloads(boolean) -> denyNetworkDownloads
    void handleSlowNetwork(boolean) -> handleSlowNetwork
    void pause() -> pause
    void resume() -> resume
    void stop() -> stop
    java.util.concurrent.locks.ReentrantLock getLockForUri(java.lang.String) -> getLockForUri
    java.util.concurrent.atomic.AtomicBoolean getPause() -> getPause
    boolean isNetworkDenied() -> isNetworkDenied
    boolean isSlowNetwork() -> isSlowNetwork
    void access$000(com.nostra13.universalimageloader.core.ImageLoaderEngine) -> access$000
    java.util.concurrent.Executor access$100(com.nostra13.universalimageloader.core.ImageLoaderEngine) -> access$100
    java.util.concurrent.Executor access$200(com.nostra13.universalimageloader.core.ImageLoaderEngine) -> access$200
com.nostra13.universalimageloader.core.ImageLoaderEngine$1 -> com.nostra13.universalimageloader.core.ImageLoaderEngine$1:
    com.nostra13.universalimageloader.core.LoadAndDisplayImageTask val$task -> val$task
    com.nostra13.universalimageloader.core.ImageLoaderEngine this$0 -> this$0
    void run() -> run
com.nostra13.universalimageloader.core.ImageLoadingInfo -> com.nostra13.universalimageloader.core.ImageLoadingInfo:
    java.lang.String uri -> uri
    java.lang.String memoryCacheKey -> memoryCacheKey
    android.widget.ImageView imageView -> imageView
    com.nostra13.universalimageloader.core.assist.ImageSize targetSize -> targetSize
    com.nostra13.universalimageloader.core.DisplayImageOptions options -> options
    com.nostra13.universalimageloader.core.assist.ImageLoadingListener listener -> listener
    java.util.concurrent.locks.ReentrantLock loadFromUriLock -> loadFromUriLock
com.nostra13.universalimageloader.core.LoadAndDisplayImageTask -> com.nostra13.universalimageloader.core.LoadAndDisplayImageTask:
    java.lang.String LOG_WAITING_FOR_RESUME -> LOG_WAITING_FOR_RESUME
    java.lang.String LOG_RESUME_AFTER_PAUSE -> LOG_RESUME_AFTER_PAUSE
    java.lang.String LOG_DELAY_BEFORE_LOADING -> LOG_DELAY_BEFORE_LOADING
    java.lang.String LOG_START_DISPLAY_IMAGE_TASK -> LOG_START_DISPLAY_IMAGE_TASK
    java.lang.String LOG_WAITING_FOR_IMAGE_LOADED -> LOG_WAITING_FOR_IMAGE_LOADED
    java.lang.String LOG_GET_IMAGE_FROM_MEMORY_CACHE_AFTER_WAITING -> LOG_GET_IMAGE_FROM_MEMORY_CACHE_AFTER_WAITING
    java.lang.String LOG_LOAD_IMAGE_FROM_NETWORK -> LOG_LOAD_IMAGE_FROM_NETWORK
    java.lang.String LOG_LOAD_IMAGE_FROM_DISC_CACHE -> LOG_LOAD_IMAGE_FROM_DISC_CACHE
    java.lang.String LOG_PREPROCESS_IMAGE -> LOG_PREPROCESS_IMAGE
    java.lang.String LOG_POSTPROCESS_IMAGE -> LOG_POSTPROCESS_IMAGE
    java.lang.String LOG_CACHE_IMAGE_IN_MEMORY -> LOG_CACHE_IMAGE_IN_MEMORY
    java.lang.String LOG_CACHE_IMAGE_ON_DISC -> LOG_CACHE_IMAGE_ON_DISC
    java.lang.String LOG_TASK_CANCELLED -> LOG_TASK_CANCELLED
    java.lang.String LOG_TASK_INTERRUPTED -> LOG_TASK_INTERRUPTED
    java.lang.String WARNING_PRE_PROCESSOR_NULL -> WARNING_PRE_PROCESSOR_NULL
    java.lang.String WARNING_POST_PROCESSOR_NULL -> WARNING_POST_PROCESSOR_NULL
    int BUFFER_SIZE -> BUFFER_SIZE
    com.nostra13.universalimageloader.core.ImageLoaderEngine engine -> engine
    com.nostra13.universalimageloader.core.ImageLoadingInfo imageLoadingInfo -> imageLoadingInfo
    android.os.Handler handler -> handler
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration configuration -> configuration
    com.nostra13.universalimageloader.core.download.ImageDownloader downloader -> downloader
    com.nostra13.universalimageloader.core.download.ImageDownloader networkDeniedDownloader -> networkDeniedDownloader
    com.nostra13.universalimageloader.core.download.ImageDownloader slowNetworkDownloader -> slowNetworkDownloader
    com.nostra13.universalimageloader.core.decode.ImageDecoder decoder -> decoder
    boolean loggingEnabled -> loggingEnabled
    java.lang.String uri -> uri
    java.lang.String memoryCacheKey -> memoryCacheKey
    android.widget.ImageView imageView -> imageView
    com.nostra13.universalimageloader.core.assist.ImageSize targetSize -> targetSize
    com.nostra13.universalimageloader.core.DisplayImageOptions options -> options
    com.nostra13.universalimageloader.core.assist.ImageLoadingListener listener -> listener
    void run() -> run
    boolean waitIfPaused() -> waitIfPaused
    boolean delayIfNeed() -> delayIfNeed
    boolean checkTaskIsNotActual() -> checkTaskIsNotActual
    boolean checkTaskIsInterrupted() -> checkTaskIsInterrupted
    android.graphics.Bitmap tryLoadBitmap() -> tryLoadBitmap
    java.io.File getImageFileInDiscCache() -> getImageFileInDiscCache
    android.graphics.Bitmap decodeImage(java.lang.String) -> decodeImage
    java.lang.String tryCacheImageOnDisc(java.io.File) -> tryCacheImageOnDisc
    boolean downloadSizedImage(java.io.File,int,int) -> downloadSizedImage
    void downloadImage(java.io.File) -> downloadImage
    void fireImageLoadingFailedEvent(com.nostra13.universalimageloader.core.assist.FailReason$FailType,java.lang.Throwable) -> fireImageLoadingFailedEvent
    com.nostra13.universalimageloader.core.download.ImageDownloader getDownloader() -> getDownloader
    java.lang.String getLoadingUri() -> getLoadingUri
    void log(java.lang.String) -> log
    void log(java.lang.String,java.lang.Object[]) -> log
com.nostra13.universalimageloader.core.LoadAndDisplayImageTask$1 -> com.nostra13.universalimageloader.core.LoadAndDisplayImageTask$1:
    com.nostra13.universalimageloader.core.LoadAndDisplayImageTask this$0 -> this$0
    void run() -> run
com.nostra13.universalimageloader.core.LoadAndDisplayImageTask$2 -> com.nostra13.universalimageloader.core.LoadAndDisplayImageTask$2:
    com.nostra13.universalimageloader.core.assist.FailReason$FailType val$failType -> val$failType
    java.lang.Throwable val$failCause -> val$failCause
    com.nostra13.universalimageloader.core.LoadAndDisplayImageTask this$0 -> this$0
    void run() -> run
com.nostra13.universalimageloader.core.ProcessAndDisplayImageTask -> com.nostra13.universalimageloader.core.ProcessAndDisplayImageTask:
    java.lang.String LOG_POSTPROCESS_IMAGE -> LOG_POSTPROCESS_IMAGE
    com.nostra13.universalimageloader.core.ImageLoaderEngine engine -> engine
    android.graphics.Bitmap bitmap -> bitmap
    com.nostra13.universalimageloader.core.ImageLoadingInfo imageLoadingInfo -> imageLoadingInfo
    android.os.Handler handler -> handler
    void run() -> run
com.nostra13.universalimageloader.core.assist.DiscCacheUtil -> com.nostra13.universalimageloader.core.assist.DiscCacheUtil:
    java.io.File findInCache(java.lang.String,com.nostra13.universalimageloader.cache.disc.DiscCacheAware) -> findInCache
    boolean removeFromCache(java.lang.String,com.nostra13.universalimageloader.cache.disc.DiscCacheAware) -> removeFromCache
com.nostra13.universalimageloader.core.assist.FailReason -> com.nostra13.universalimageloader.core.assist.FailReason:
    com.nostra13.universalimageloader.core.assist.FailReason$FailType type -> type
    java.lang.Throwable cause -> cause
    com.nostra13.universalimageloader.core.assist.FailReason$FailType getType() -> getType
    java.lang.Throwable getCause() -> getCause
com.nostra13.universalimageloader.core.assist.FailReason$FailType -> com.nostra13.universalimageloader.core.assist.FailReason$FailType:
    com.nostra13.universalimageloader.core.assist.FailReason$FailType IO_ERROR -> IO_ERROR
    com.nostra13.universalimageloader.core.assist.FailReason$FailType DECODING_ERROR -> DECODING_ERROR
    com.nostra13.universalimageloader.core.assist.FailReason$FailType NETWORK_DENIED -> NETWORK_DENIED
    com.nostra13.universalimageloader.core.assist.FailReason$FailType OUT_OF_MEMORY -> OUT_OF_MEMORY
    com.nostra13.universalimageloader.core.assist.FailReason$FailType UNKNOWN -> UNKNOWN
    com.nostra13.universalimageloader.core.assist.FailReason$FailType[] $VALUES -> $VALUES
    com.nostra13.universalimageloader.core.assist.FailReason$FailType[] values() -> values
    com.nostra13.universalimageloader.core.assist.FailReason$FailType valueOf(java.lang.String) -> valueOf
com.nostra13.universalimageloader.core.assist.FlushedInputStream -> com.nostra13.universalimageloader.core.assist.FlushedInputStream:
    long skip(long) -> skip
com.nostra13.universalimageloader.core.assist.ImageLoadingListener -> com.nostra13.universalimageloader.core.assist.ImageLoadingListener:
    void onLoadingStarted(java.lang.String,android.view.View) -> onLoadingStarted
    void onLoadingFailed(java.lang.String,android.view.View,com.nostra13.universalimageloader.core.assist.FailReason) -> onLoadingFailed
    void onLoadingComplete(java.lang.String,android.view.View,android.graphics.Bitmap) -> onLoadingComplete
    void onLoadingCancelled(java.lang.String,android.view.View) -> onLoadingCancelled
com.nostra13.universalimageloader.core.assist.ImageScaleType -> com.nostra13.universalimageloader.core.assist.ImageScaleType:
    com.nostra13.universalimageloader.core.assist.ImageScaleType NONE -> NONE
    com.nostra13.universalimageloader.core.assist.ImageScaleType IN_SAMPLE_POWER_OF_2 -> IN_SAMPLE_POWER_OF_2
    com.nostra13.universalimageloader.core.assist.ImageScaleType IN_SAMPLE_INT -> IN_SAMPLE_INT
    com.nostra13.universalimageloader.core.assist.ImageScaleType EXACTLY -> EXACTLY
    com.nostra13.universalimageloader.core.assist.ImageScaleType EXACTLY_STRETCHED -> EXACTLY_STRETCHED
    com.nostra13.universalimageloader.core.assist.ImageScaleType[] $VALUES -> $VALUES
    com.nostra13.universalimageloader.core.assist.ImageScaleType[] values() -> values
    com.nostra13.universalimageloader.core.assist.ImageScaleType valueOf(java.lang.String) -> valueOf
com.nostra13.universalimageloader.core.assist.ImageSize -> com.nostra13.universalimageloader.core.assist.ImageSize:
    java.lang.String SEPARATOR -> SEPARATOR
    int width -> width
    int height -> height
    int getWidth() -> getWidth
    int getHeight() -> getHeight
    com.nostra13.universalimageloader.core.assist.ImageSize scaleDown(int) -> scaleDown
    com.nostra13.universalimageloader.core.assist.ImageSize scale(float) -> scale
    java.lang.String toString() -> toString
com.nostra13.universalimageloader.core.assist.MemoryCacheUtil -> com.nostra13.universalimageloader.core.assist.MemoryCacheUtil:
    java.lang.String URI_AND_SIZE_SEPARATOR -> URI_AND_SIZE_SEPARATOR
    java.lang.String WIDTH_AND_HEIGHT_SEPARATOR -> WIDTH_AND_HEIGHT_SEPARATOR
    java.lang.String generateKey(java.lang.String,com.nostra13.universalimageloader.core.assist.ImageSize) -> generateKey
    java.util.Comparator createFuzzyKeyComparator() -> createFuzzyKeyComparator
    java.util.List findCachedBitmapsForImageUri(java.lang.String,com.nostra13.universalimageloader.cache.memory.MemoryCacheAware) -> findCachedBitmapsForImageUri
    java.util.List findCacheKeysForImageUri(java.lang.String,com.nostra13.universalimageloader.cache.memory.MemoryCacheAware) -> findCacheKeysForImageUri
    void removeFromCache(java.lang.String,com.nostra13.universalimageloader.cache.memory.MemoryCacheAware) -> removeFromCache
com.nostra13.universalimageloader.core.assist.MemoryCacheUtil$1 -> com.nostra13.universalimageloader.core.assist.MemoryCacheUtil$1:
    int compare(java.lang.String,java.lang.String) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
com.nostra13.universalimageloader.core.assist.PauseOnScrollListener -> com.nostra13.universalimageloader.core.assist.PauseOnScrollListener:
    com.nostra13.universalimageloader.core.ImageLoader imageLoader -> imageLoader
    boolean pauseOnScroll -> pauseOnScroll
    boolean pauseOnFling -> pauseOnFling
    android.widget.AbsListView$OnScrollListener externalListener -> externalListener
    void onScrollStateChanged(android.widget.AbsListView,int) -> onScrollStateChanged
    void onScroll(android.widget.AbsListView,int,int,int) -> onScroll
com.nostra13.universalimageloader.core.assist.QueueProcessingType -> com.nostra13.universalimageloader.core.assist.QueueProcessingType:
    com.nostra13.universalimageloader.core.assist.QueueProcessingType FIFO -> FIFO
    com.nostra13.universalimageloader.core.assist.QueueProcessingType LIFO -> LIFO
    com.nostra13.universalimageloader.core.assist.QueueProcessingType[] $VALUES -> $VALUES
    com.nostra13.universalimageloader.core.assist.QueueProcessingType[] values() -> values
    com.nostra13.universalimageloader.core.assist.QueueProcessingType valueOf(java.lang.String) -> valueOf
com.nostra13.universalimageloader.core.assist.SimpleImageLoadingListener -> com.nostra13.universalimageloader.core.assist.SimpleImageLoadingListener:
    void onLoadingStarted(java.lang.String,android.view.View) -> onLoadingStarted
    void onLoadingFailed(java.lang.String,android.view.View,com.nostra13.universalimageloader.core.assist.FailReason) -> onLoadingFailed
    void onLoadingComplete(java.lang.String,android.view.View,android.graphics.Bitmap) -> onLoadingComplete
    void onLoadingCancelled(java.lang.String,android.view.View) -> onLoadingCancelled
com.nostra13.universalimageloader.core.assist.ViewScaleType -> com.nostra13.universalimageloader.core.assist.ViewScaleType:
    com.nostra13.universalimageloader.core.assist.ViewScaleType FIT_INSIDE -> FIT_INSIDE
    com.nostra13.universalimageloader.core.assist.ViewScaleType CROP -> CROP
    com.nostra13.universalimageloader.core.assist.ViewScaleType[] $VALUES -> $VALUES
    com.nostra13.universalimageloader.core.assist.ViewScaleType[] values() -> values
    com.nostra13.universalimageloader.core.assist.ViewScaleType valueOf(java.lang.String) -> valueOf
    com.nostra13.universalimageloader.core.assist.ViewScaleType fromImageView(android.widget.ImageView) -> fromImageView
com.nostra13.universalimageloader.core.assist.ViewScaleType$1 -> com.nostra13.universalimageloader.core.assist.ViewScaleType$1:
    int[] $SwitchMap$android$widget$ImageView$ScaleType -> $SwitchMap$android$widget$ImageView$ScaleType
com.nostra13.universalimageloader.core.assist.deque.BlockingDeque -> com.nostra13.universalimageloader.core.assist.deque.BlockingDeque:
    void addFirst(java.lang.Object) -> addFirst
    void addLast(java.lang.Object) -> addLast
    boolean offerFirst(java.lang.Object) -> offerFirst
    boolean offerLast(java.lang.Object) -> offerLast
    void putFirst(java.lang.Object) -> putFirst
    void putLast(java.lang.Object) -> putLast
    boolean offerFirst(java.lang.Object,long,java.util.concurrent.TimeUnit) -> offerFirst
    boolean offerLast(java.lang.Object,long,java.util.concurrent.TimeUnit) -> offerLast
    java.lang.Object takeFirst() -> takeFirst
    java.lang.Object takeLast() -> takeLast
    java.lang.Object pollFirst(long,java.util.concurrent.TimeUnit) -> pollFirst
    java.lang.Object pollLast(long,java.util.concurrent.TimeUnit) -> pollLast
    boolean removeFirstOccurrence(java.lang.Object) -> removeFirstOccurrence
    boolean removeLastOccurrence(java.lang.Object) -> removeLastOccurrence
    boolean add(java.lang.Object) -> add
    boolean offer(java.lang.Object) -> offer
    void put(java.lang.Object) -> put
    boolean offer(java.lang.Object,long,java.util.concurrent.TimeUnit) -> offer
    java.lang.Object remove() -> remove
    java.lang.Object poll() -> poll
    java.lang.Object take() -> take
    java.lang.Object poll(long,java.util.concurrent.TimeUnit) -> poll
    java.lang.Object element() -> element
    java.lang.Object peek() -> peek
    boolean remove(java.lang.Object) -> remove
    boolean contains(java.lang.Object) -> contains
    int size() -> size
    java.util.Iterator iterator() -> iterator
    void push(java.lang.Object) -> push
com.nostra13.universalimageloader.core.assist.deque.Deque -> com.nostra13.universalimageloader.core.assist.deque.Deque:
    void addFirst(java.lang.Object) -> addFirst
    void addLast(java.lang.Object) -> addLast
    boolean offerFirst(java.lang.Object) -> offerFirst
    boolean offerLast(java.lang.Object) -> offerLast
    java.lang.Object removeFirst() -> removeFirst
    java.lang.Object removeLast() -> removeLast
    java.lang.Object pollFirst() -> pollFirst
    java.lang.Object pollLast() -> pollLast
    java.lang.Object getFirst() -> getFirst
    java.lang.Object getLast() -> getLast
    java.lang.Object peekFirst() -> peekFirst
    java.lang.Object peekLast() -> peekLast
    boolean removeFirstOccurrence(java.lang.Object) -> removeFirstOccurrence
    boolean removeLastOccurrence(java.lang.Object) -> removeLastOccurrence
    boolean add(java.lang.Object) -> add
    boolean offer(java.lang.Object) -> offer
    java.lang.Object remove() -> remove
    java.lang.Object poll() -> poll
    java.lang.Object element() -> element
    java.lang.Object peek() -> peek
    void push(java.lang.Object) -> push
    java.lang.Object pop() -> pop
    boolean remove(java.lang.Object) -> remove
    boolean contains(java.lang.Object) -> contains
    int size() -> size
    java.util.Iterator iterator() -> iterator
    java.util.Iterator descendingIterator() -> descendingIterator
com.nostra13.universalimageloader.core.assist.deque.LIFOLinkedBlockingDeque -> com.nostra13.universalimageloader.core.assist.deque.LIFOLinkedBlockingDeque:
    long serialVersionUID -> serialVersionUID
    boolean offer(java.lang.Object) -> offer
    java.lang.Object remove() -> remove
com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque -> com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque:
    long serialVersionUID -> serialVersionUID
    com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node first -> first
    com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node last -> last
    int count -> count
    int capacity -> capacity
    java.util.concurrent.locks.ReentrantLock lock -> lock
    java.util.concurrent.locks.Condition notEmpty -> notEmpty
    java.util.concurrent.locks.Condition notFull -> notFull
    boolean linkFirst(com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node) -> linkFirst
    boolean linkLast(com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node) -> linkLast
    java.lang.Object unlinkFirst() -> unlinkFirst
    java.lang.Object unlinkLast() -> unlinkLast
    void unlink(com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node) -> unlink
    void addFirst(java.lang.Object) -> addFirst
    void addLast(java.lang.Object) -> addLast
    boolean offerFirst(java.lang.Object) -> offerFirst
    boolean offerLast(java.lang.Object) -> offerLast
    void putFirst(java.lang.Object) -> putFirst
    void putLast(java.lang.Object) -> putLast
    boolean offerFirst(java.lang.Object,long,java.util.concurrent.TimeUnit) -> offerFirst
    boolean offerLast(java.lang.Object,long,java.util.concurrent.TimeUnit) -> offerLast
    java.lang.Object removeFirst() -> removeFirst
    java.lang.Object removeLast() -> removeLast
    java.lang.Object pollFirst() -> pollFirst
    java.lang.Object pollLast() -> pollLast
    java.lang.Object takeFirst() -> takeFirst
    java.lang.Object takeLast() -> takeLast
    java.lang.Object pollFirst(long,java.util.concurrent.TimeUnit) -> pollFirst
    java.lang.Object pollLast(long,java.util.concurrent.TimeUnit) -> pollLast
    java.lang.Object getFirst() -> getFirst
    java.lang.Object getLast() -> getLast
    java.lang.Object peekFirst() -> peekFirst
    java.lang.Object peekLast() -> peekLast
    boolean removeFirstOccurrence(java.lang.Object) -> removeFirstOccurrence
    boolean removeLastOccurrence(java.lang.Object) -> removeLastOccurrence
    boolean add(java.lang.Object) -> add
    boolean offer(java.lang.Object) -> offer
    void put(java.lang.Object) -> put
    boolean offer(java.lang.Object,long,java.util.concurrent.TimeUnit) -> offer
    java.lang.Object remove() -> remove
    java.lang.Object poll() -> poll
    java.lang.Object take() -> take
    java.lang.Object poll(long,java.util.concurrent.TimeUnit) -> poll
    java.lang.Object element() -> element
    java.lang.Object peek() -> peek
    int remainingCapacity() -> remainingCapacity
    int drainTo(java.util.Collection) -> drainTo
    int drainTo(java.util.Collection,int) -> drainTo
    void push(java.lang.Object) -> push
    java.lang.Object pop() -> pop
    boolean remove(java.lang.Object) -> remove
    int size() -> size
    boolean contains(java.lang.Object) -> contains
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    java.lang.String toString() -> toString
    void clear() -> clear
    java.util.Iterator iterator() -> iterator
    java.util.Iterator descendingIterator() -> descendingIterator
    void writeObject(java.io.ObjectOutputStream) -> writeObject
    void readObject(java.io.ObjectInputStream) -> readObject
com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$1 -> com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$1:
com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$AbstractItr -> com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$AbstractItr:
    com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node next -> next
    java.lang.Object nextItem -> nextItem
    com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node lastRet -> lastRet
    com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque this$0 -> this$0
    com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node firstNode() -> firstNode
    com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node nextNode(com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node) -> nextNode
    com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node succ(com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node) -> succ
    void advance() -> advance
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    void remove() -> remove
com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$DescendingItr -> com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$DescendingItr:
    com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque this$0 -> this$0
    com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node firstNode() -> firstNode
    com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node nextNode(com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node) -> nextNode
com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Itr -> com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Itr:
    com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque this$0 -> this$0
    com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node firstNode() -> firstNode
    com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node nextNode(com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node) -> nextNode
com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node -> com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node:
    java.lang.Object item -> item
    com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node prev -> prev
    com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node next -> next
com.nostra13.universalimageloader.core.decode.BaseImageDecoder -> com.nostra13.universalimageloader.core.decode.BaseImageDecoder:
    java.lang.String LOG_SABSAMPLE_IMAGE -> LOG_SABSAMPLE_IMAGE
    java.lang.String LOG_SCALE_IMAGE -> LOG_SCALE_IMAGE
    java.lang.String LOG_ROTATE_IMAGE -> LOG_ROTATE_IMAGE
    java.lang.String LOG_FLIP_IMAGE -> LOG_FLIP_IMAGE
    java.lang.String ERROR_CANT_DECODE_IMAGE -> ERROR_CANT_DECODE_IMAGE
    boolean loggingEnabled -> loggingEnabled
    android.graphics.Bitmap decode(com.nostra13.universalimageloader.core.decode.ImageDecodingInfo) -> decode
    java.io.InputStream getImageStream(com.nostra13.universalimageloader.core.decode.ImageDecodingInfo) -> getImageStream
    com.nostra13.universalimageloader.core.decode.BaseImageDecoder$ImageFileInfo defineImageSizeAndRotation(java.io.InputStream,java.lang.String) -> defineImageSizeAndRotation
    com.nostra13.universalimageloader.core.decode.BaseImageDecoder$ExifInfo defineExifOrientation(java.lang.String,java.lang.String) -> defineExifOrientation
    android.graphics.BitmapFactory$Options prepareDecodingOptions(com.nostra13.universalimageloader.core.assist.ImageSize,com.nostra13.universalimageloader.core.decode.ImageDecodingInfo) -> prepareDecodingOptions
    android.graphics.Bitmap decodeStream(java.io.InputStream,android.graphics.BitmapFactory$Options) -> decodeStream
    android.graphics.Bitmap considerExactScaleAndOrientaiton(android.graphics.Bitmap,com.nostra13.universalimageloader.core.decode.ImageDecodingInfo,int,boolean) -> considerExactScaleAndOrientaiton
    void setLoggingEnabled(boolean) -> setLoggingEnabled
com.nostra13.universalimageloader.core.decode.BaseImageDecoder$ExifInfo -> com.nostra13.universalimageloader.core.decode.BaseImageDecoder$ExifInfo:
    int rotation -> rotation
    boolean flipHorizontal -> flipHorizontal
com.nostra13.universalimageloader.core.decode.BaseImageDecoder$ImageFileInfo -> com.nostra13.universalimageloader.core.decode.BaseImageDecoder$ImageFileInfo:
    com.nostra13.universalimageloader.core.assist.ImageSize imageSize -> imageSize
    com.nostra13.universalimageloader.core.decode.BaseImageDecoder$ExifInfo exif -> exif
com.nostra13.universalimageloader.core.decode.ImageDecoder -> com.nostra13.universalimageloader.core.decode.ImageDecoder:
    android.graphics.Bitmap decode(com.nostra13.universalimageloader.core.decode.ImageDecodingInfo) -> decode
com.nostra13.universalimageloader.core.decode.ImageDecodingInfo -> com.nostra13.universalimageloader.core.decode.ImageDecodingInfo:
    java.lang.String imageKey -> imageKey
    java.lang.String imageUri -> imageUri
    com.nostra13.universalimageloader.core.assist.ImageSize targetSize -> targetSize
    com.nostra13.universalimageloader.core.assist.ImageScaleType imageScaleType -> imageScaleType
    com.nostra13.universalimageloader.core.assist.ViewScaleType viewScaleType -> viewScaleType
    com.nostra13.universalimageloader.core.download.ImageDownloader downloader -> downloader
    java.lang.Object extraForDownloader -> extraForDownloader
    android.graphics.BitmapFactory$Options decodingOptions -> decodingOptions
    void copyOptions(android.graphics.BitmapFactory$Options,android.graphics.BitmapFactory$Options) -> copyOptions
    void copyOptions10(android.graphics.BitmapFactory$Options,android.graphics.BitmapFactory$Options) -> copyOptions10
    void copyOptions11(android.graphics.BitmapFactory$Options,android.graphics.BitmapFactory$Options) -> copyOptions11
    java.lang.String getImageKey() -> getImageKey
    java.lang.String getImageUri() -> getImageUri
    com.nostra13.universalimageloader.core.assist.ImageSize getTargetSize() -> getTargetSize
    com.nostra13.universalimageloader.core.assist.ImageScaleType getImageScaleType() -> getImageScaleType
    com.nostra13.universalimageloader.core.assist.ViewScaleType getViewScaleType() -> getViewScaleType
    com.nostra13.universalimageloader.core.download.ImageDownloader getDownloader() -> getDownloader
    java.lang.Object getExtraForDownloader() -> getExtraForDownloader
    android.graphics.BitmapFactory$Options getDecodingOptions() -> getDecodingOptions
com.nostra13.universalimageloader.core.display.BitmapDisplayer -> com.nostra13.universalimageloader.core.display.BitmapDisplayer:
    android.graphics.Bitmap display(android.graphics.Bitmap,android.widget.ImageView) -> display
com.nostra13.universalimageloader.core.display.FadeInBitmapDisplayer -> com.nostra13.universalimageloader.core.display.FadeInBitmapDisplayer:
    int durationMillis -> durationMillis
    android.graphics.Bitmap display(android.graphics.Bitmap,android.widget.ImageView) -> display
    void animate(android.widget.ImageView,int) -> animate
com.nostra13.universalimageloader.core.display.FakeBitmapDisplayer -> com.nostra13.universalimageloader.core.display.FakeBitmapDisplayer:
    android.graphics.Bitmap display(android.graphics.Bitmap,android.widget.ImageView) -> display
com.nostra13.universalimageloader.core.display.RoundedBitmapDisplayer -> com.nostra13.universalimageloader.core.display.RoundedBitmapDisplayer:
    int roundPixels -> roundPixels
    android.graphics.Bitmap display(android.graphics.Bitmap,android.widget.ImageView) -> display
    android.graphics.Bitmap roundCorners(android.graphics.Bitmap,android.widget.ImageView,int) -> roundCorners
    android.graphics.Bitmap getRoundedCornerBitmap(android.graphics.Bitmap,int,android.graphics.Rect,android.graphics.Rect,int,int) -> getRoundedCornerBitmap
com.nostra13.universalimageloader.core.display.RoundedBitmapDisplayer$1 -> com.nostra13.universalimageloader.core.display.RoundedBitmapDisplayer$1:
    int[] $SwitchMap$android$widget$ImageView$ScaleType -> $SwitchMap$android$widget$ImageView$ScaleType
com.nostra13.universalimageloader.core.display.SimpleBitmapDisplayer -> com.nostra13.universalimageloader.core.display.SimpleBitmapDisplayer:
    android.graphics.Bitmap display(android.graphics.Bitmap,android.widget.ImageView) -> display
com.nostra13.universalimageloader.core.download.BaseImageDownloader -> com.nostra13.universalimageloader.core.download.BaseImageDownloader:
    int DEFAULT_HTTP_CONNECT_TIMEOUT -> DEFAULT_HTTP_CONNECT_TIMEOUT
    int DEFAULT_HTTP_READ_TIMEOUT -> DEFAULT_HTTP_READ_TIMEOUT
    int BUFFER_SIZE -> BUFFER_SIZE
    java.lang.String ALLOWED_URI_CHARS -> ALLOWED_URI_CHARS
    int MAX_REDIRECT_COUNT -> MAX_REDIRECT_COUNT
    java.lang.String ERROR_UNSUPPORTED_SCHEME -> ERROR_UNSUPPORTED_SCHEME
    android.content.Context context -> context
    int connectTimeout -> connectTimeout
    int readTimeout -> readTimeout
    java.io.InputStream getStream(java.lang.String,java.lang.Object) -> getStream
    java.io.InputStream getStreamFromNetwork(java.lang.String,java.lang.Object) -> getStreamFromNetwork
    java.net.HttpURLConnection connectTo(java.lang.String) -> connectTo
    java.io.InputStream getStreamFromFile(java.lang.String,java.lang.Object) -> getStreamFromFile
    java.io.InputStream getStreamFromContent(java.lang.String,java.lang.Object) -> getStreamFromContent
    java.io.InputStream getStreamFromAssets(java.lang.String,java.lang.Object) -> getStreamFromAssets
    java.io.InputStream getStreamFromDrawable(java.lang.String,java.lang.Object) -> getStreamFromDrawable
    java.io.InputStream getStreamFromOtherSource(java.lang.String,java.lang.Object) -> getStreamFromOtherSource
com.nostra13.universalimageloader.core.download.BaseImageDownloader$1 -> com.nostra13.universalimageloader.core.download.BaseImageDownloader$1:
    int[] $SwitchMap$com$nostra13$universalimageloader$core$download$ImageDownloader$Scheme -> $SwitchMap$com$nostra13$universalimageloader$core$download$ImageDownloader$Scheme
com.nostra13.universalimageloader.core.download.HttpClientImageDownloader -> com.nostra13.universalimageloader.core.download.HttpClientImageDownloader:
    org.apache.http.client.HttpClient httpClient -> httpClient
    java.io.InputStream getStreamFromNetwork(java.lang.String,java.lang.Object) -> getStreamFromNetwork
com.nostra13.universalimageloader.core.download.ImageDownloader -> com.nostra13.universalimageloader.core.download.ImageDownloader:
    java.io.InputStream getStream(java.lang.String,java.lang.Object) -> getStream
com.nostra13.universalimageloader.core.download.ImageDownloader$Scheme -> com.nostra13.universalimageloader.core.download.ImageDownloader$Scheme:
    com.nostra13.universalimageloader.core.download.ImageDownloader$Scheme HTTP -> HTTP
    com.nostra13.universalimageloader.core.download.ImageDownloader$Scheme HTTPS -> HTTPS
    com.nostra13.universalimageloader.core.download.ImageDownloader$Scheme FILE -> FILE
    com.nostra13.universalimageloader.core.download.ImageDownloader$Scheme CONTENT -> CONTENT
    com.nostra13.universalimageloader.core.download.ImageDownloader$Scheme ASSETS -> ASSETS
    com.nostra13.universalimageloader.core.download.ImageDownloader$Scheme DRAWABLE -> DRAWABLE
    com.nostra13.universalimageloader.core.download.ImageDownloader$Scheme UNKNOWN -> UNKNOWN
    java.lang.String scheme -> scheme
    java.lang.String uriPrefix -> uriPrefix
    com.nostra13.universalimageloader.core.download.ImageDownloader$Scheme[] $VALUES -> $VALUES
    com.nostra13.universalimageloader.core.download.ImageDownloader$Scheme[] values() -> values
    com.nostra13.universalimageloader.core.download.ImageDownloader$Scheme valueOf(java.lang.String) -> valueOf
    com.nostra13.universalimageloader.core.download.ImageDownloader$Scheme ofUri(java.lang.String) -> ofUri
    boolean belongsTo(java.lang.String) -> belongsTo
    java.lang.String wrap(java.lang.String) -> wrap
    java.lang.String crop(java.lang.String) -> crop
com.nostra13.universalimageloader.core.download.NetworkDeniedImageDownloader -> com.nostra13.universalimageloader.core.download.NetworkDeniedImageDownloader:
    com.nostra13.universalimageloader.core.download.ImageDownloader wrappedDownloader -> wrappedDownloader
    java.io.InputStream getStream(java.lang.String,java.lang.Object) -> getStream
com.nostra13.universalimageloader.core.download.NetworkDeniedImageDownloader$1 -> com.nostra13.universalimageloader.core.download.NetworkDeniedImageDownloader$1:
    int[] $SwitchMap$com$nostra13$universalimageloader$core$download$ImageDownloader$Scheme -> $SwitchMap$com$nostra13$universalimageloader$core$download$ImageDownloader$Scheme
com.nostra13.universalimageloader.core.download.SlowNetworkImageDownloader -> com.nostra13.universalimageloader.core.download.SlowNetworkImageDownloader:
    com.nostra13.universalimageloader.core.download.ImageDownloader wrappedDownloader -> wrappedDownloader
    java.io.InputStream getStream(java.lang.String,java.lang.Object) -> getStream
com.nostra13.universalimageloader.core.download.SlowNetworkImageDownloader$1 -> com.nostra13.universalimageloader.core.download.SlowNetworkImageDownloader$1:
    int[] $SwitchMap$com$nostra13$universalimageloader$core$download$ImageDownloader$Scheme -> $SwitchMap$com$nostra13$universalimageloader$core$download$ImageDownloader$Scheme
com.nostra13.universalimageloader.core.process.BitmapProcessor -> com.nostra13.universalimageloader.core.process.BitmapProcessor:
    android.graphics.Bitmap process(android.graphics.Bitmap) -> process
com.nostra13.universalimageloader.utils.ImageSizeUtils -> com.nostra13.universalimageloader.utils.ImageSizeUtils:
    com.nostra13.universalimageloader.core.assist.ImageSize defineTargetSizeForView(android.widget.ImageView,int,int) -> defineTargetSizeForView
    int getImageViewFieldValue(java.lang.Object,java.lang.String) -> getImageViewFieldValue
    int computeImageSampleSize(com.nostra13.universalimageloader.core.assist.ImageSize,com.nostra13.universalimageloader.core.assist.ImageSize,com.nostra13.universalimageloader.core.assist.ViewScaleType,boolean) -> computeImageSampleSize
    float computeImageScale(com.nostra13.universalimageloader.core.assist.ImageSize,com.nostra13.universalimageloader.core.assist.ImageSize,com.nostra13.universalimageloader.core.assist.ViewScaleType,boolean) -> computeImageScale
com.nostra13.universalimageloader.utils.ImageSizeUtils$1 -> com.nostra13.universalimageloader.utils.ImageSizeUtils$1:
    int[] $SwitchMap$com$nostra13$universalimageloader$core$assist$ViewScaleType -> $SwitchMap$com$nostra13$universalimageloader$core$assist$ViewScaleType
com.nostra13.universalimageloader.utils.IoUtils -> com.nostra13.universalimageloader.utils.IoUtils:
    int BUFFER_SIZE -> BUFFER_SIZE
    void copyStream(java.io.InputStream,java.io.OutputStream) -> copyStream
    void closeSilently(java.io.Closeable) -> closeSilently
com.nostra13.universalimageloader.utils.L -> com.nostra13.universalimageloader.utils.L:
    java.lang.String LOG_FORMAT -> LOG_FORMAT
    void d(java.lang.String,java.lang.Object[]) -> d
    void i(java.lang.String,java.lang.Object[]) -> i
    void w(java.lang.String,java.lang.Object[]) -> w
    void e(java.lang.Throwable) -> e
    void e(java.lang.String,java.lang.Object[]) -> e
    void e(java.lang.Throwable,java.lang.String,java.lang.Object[]) -> e
    void log(int,java.lang.Throwable,java.lang.String,java.lang.Object[]) -> log
com.nostra13.universalimageloader.utils.StorageUtils -> com.nostra13.universalimageloader.utils.StorageUtils:
    java.lang.String INDIVIDUAL_DIR_NAME -> INDIVIDUAL_DIR_NAME
    java.io.File getCacheDirectory(android.content.Context) -> getCacheDirectory
    java.io.File getIndividualCacheDirectory(android.content.Context) -> getIndividualCacheDirectory
    java.io.File getOwnCacheDirectory(android.content.Context,java.lang.String) -> getOwnCacheDirectory
    java.io.File getExternalCacheDir(android.content.Context) -> getExternalCacheDir
demo.Pinyin4jAppletDemo -> demo.Pinyin4jAppletDemo:
    java.awt.Dimension APP_SIZE -> APP_SIZE
    long serialVersionUID -> serialVersionUID
    javax.swing.JPanel jContentPane -> jContentPane
    javax.swing.JTabbedPane jTabbedPane -> jTabbedPane
    javax.swing.JPanel formattedCharPanel -> formattedCharPanel
    javax.swing.JPanel optionPanel -> optionPanel
    javax.swing.JButton convertButton -> convertButton
    javax.swing.JPanel buttonPanel -> buttonPanel
    javax.swing.JTextArea formattedOutputField -> formattedOutputField
    javax.swing.JComboBox toneTypesComboBox -> toneTypesComboBox
    javax.swing.JComboBox vCharTypesComboBox -> vCharTypesComboBox
    javax.swing.JComboBox caseTypesComboBox -> caseTypesComboBox
    java.lang.String appName -> appName
    java.lang.String[] caseTypes -> caseTypes
    java.lang.String[] vCharTypes -> vCharTypes
    java.lang.String[] toneTypes -> toneTypes
    javax.swing.JLabel toneLabel -> toneLabel
    javax.swing.JLabel charLabel -> charLabel
    javax.swing.JTextField charTextField -> charTextField
    javax.swing.JPanel unformattedCharPanel -> unformattedCharPanel
    javax.swing.JLabel unformattedHanyuPinyinLabel -> unformattedHanyuPinyinLabel
    javax.swing.JTextArea unformattedHanyuPinyinTextArea -> unformattedHanyuPinyinTextArea
    javax.swing.JPanel unformattedHanyuPinyinPanel -> unformattedHanyuPinyinPanel
    javax.swing.JPanel unformattedTongyongPinyinPanel -> unformattedTongyongPinyinPanel
    javax.swing.JLabel unformattedTongyongPinyinLabel -> unformattedTongyongPinyinLabel
    javax.swing.JTextArea unformattedTongyongPinyinTextArea -> unformattedTongyongPinyinTextArea
    javax.swing.JPanel unformattedWadePinyinPanel -> unformattedWadePinyinPanel
    javax.swing.JLabel unformattedWadePinyinLabel -> unformattedWadePinyinLabel
    javax.swing.JTextArea unformattedWadePinyinTextArea -> unformattedWadePinyinTextArea
    javax.swing.JPanel unformattedMPS2PinyinPanel -> unformattedMPS2PinyinPanel
    javax.swing.JLabel unformattedMPS2PinyinLabel -> unformattedMPS2PinyinLabel
    javax.swing.JTextArea unformattedMPS2PinyinTextArea -> unformattedMPS2PinyinTextArea
    javax.swing.JPanel unformattedYalePinyinPanel -> unformattedYalePinyinPanel
    javax.swing.JLabel unformattedYalePinyinLabel -> unformattedYalePinyinLabel
    javax.swing.JTextArea unformattedYalePinyinTextArea -> unformattedYalePinyinTextArea
    javax.swing.JPanel unformattedGwoyeuRomatzyhPanel -> unformattedGwoyeuRomatzyhPanel
    javax.swing.JLabel unformattedGwoyeuRomatzyhLabel -> unformattedGwoyeuRomatzyhLabel
    javax.swing.JTextArea unformattedGwoyeuRomatzyhTextArea -> unformattedGwoyeuRomatzyhTextArea
    javax.swing.JScrollPane unformattedMPS2PinyinScrollPane -> unformattedMPS2PinyinScrollPane
    javax.swing.JScrollPane unformattedHanyuPinyinScrollPane -> unformattedHanyuPinyinScrollPane
    javax.swing.JScrollPane unformattedTongyongPinyinScrollPane -> unformattedTongyongPinyinScrollPane
    javax.swing.JScrollPane unformattedWadePinyinScrollPane -> unformattedWadePinyinScrollPane
    javax.swing.JScrollPane unformattedYalePinyinScrollPane -> unformattedYalePinyinScrollPane
    javax.swing.JScrollPane unformattedGwoyeuRomatzyhScrollPane -> unformattedGwoyeuRomatzyhScrollPane
    javax.swing.JTextField getCharTextField() -> getCharTextField
    javax.swing.JPanel getUnformattedCharPanel() -> getUnformattedCharPanel
    javax.swing.JTextArea getUnformattedHanyuPinyinTextArea() -> getUnformattedHanyuPinyinTextArea
    javax.swing.JPanel getUnformattedHanyuPinyinPanel() -> getUnformattedHanyuPinyinPanel
    javax.swing.JPanel getUnformattedTongyongPinyinPanel() -> getUnformattedTongyongPinyinPanel
    javax.swing.JTextArea getUnformattedTongyongPinyinTextArea() -> getUnformattedTongyongPinyinTextArea
    javax.swing.JPanel getUnformattedWadePinyinPanel() -> getUnformattedWadePinyinPanel
    javax.swing.JTextArea getUnformattedWadePinyinTextArea() -> getUnformattedWadePinyinTextArea
    javax.swing.JPanel getUnformattedMPS2PinyinPanel() -> getUnformattedMPS2PinyinPanel
    javax.swing.JTextArea getUnformattedMPS2PinyinTextArea() -> getUnformattedMPS2PinyinTextArea
    javax.swing.JPanel getUnformattedYalePinyinPanel() -> getUnformattedYalePinyinPanel
    javax.swing.JTextArea getUnformattedYalePinyinTextArea() -> getUnformattedYalePinyinTextArea
    javax.swing.JPanel getUnformattedGwoyeuRomatzyhPanel() -> getUnformattedGwoyeuRomatzyhPanel
    javax.swing.JTextArea getUnformattedGwoyeuRomatzyhTextArea() -> getUnformattedGwoyeuRomatzyhTextArea
    javax.swing.JScrollPane getUnformattedMPS2PinyinScrollPane() -> getUnformattedMPS2PinyinScrollPane
    javax.swing.JScrollPane getUnformattedHanyuPinyinScrollPane() -> getUnformattedHanyuPinyinScrollPane
    javax.swing.JScrollPane getUnformattedTongyongPinyinScrollPane() -> getUnformattedTongyongPinyinScrollPane
    javax.swing.JScrollPane getUnformattedWadePinyinScrollPane() -> getUnformattedWadePinyinScrollPane
    javax.swing.JScrollPane getUnformattedYalePinyinScrollPane() -> getUnformattedYalePinyinScrollPane
    javax.swing.JScrollPane getUnformattedGwoyeuRomatzyhScrollPane() -> getUnformattedGwoyeuRomatzyhScrollPane
    void main(java.lang.String[]) -> main
    void init() -> init
    javax.swing.JPanel getJContentPane() -> getJContentPane
    javax.swing.JTabbedPane getJTabbedPane() -> getJTabbedPane
    javax.swing.JPanel getFormattedCharPanel() -> getFormattedCharPanel
    javax.swing.JPanel getOptionPanel() -> getOptionPanel
    javax.swing.JButton getConvertButton() -> getConvertButton
    javax.swing.JPanel getButtonPanel() -> getButtonPanel
    javax.swing.JTextArea getFormattedOutputField() -> getFormattedOutputField
    javax.swing.JComboBox getToneTypesComboBox() -> getToneTypesComboBox
    javax.swing.JComboBox getVCharTypesComboBox() -> getVCharTypesComboBox
    javax.swing.JComboBox getCaseTypesComboBox() -> getCaseTypesComboBox
    java.lang.String getChineseCharText() -> getChineseCharText
    java.lang.String access$000(demo.Pinyin4jAppletDemo) -> access$000
    javax.swing.JComboBox access$100(demo.Pinyin4jAppletDemo) -> access$100
    javax.swing.JComboBox access$200(demo.Pinyin4jAppletDemo) -> access$200
    javax.swing.JComboBox access$300(demo.Pinyin4jAppletDemo) -> access$300
    javax.swing.JTextArea access$400(demo.Pinyin4jAppletDemo) -> access$400
    javax.swing.JTextArea access$500(demo.Pinyin4jAppletDemo) -> access$500
    javax.swing.JTextArea access$600(demo.Pinyin4jAppletDemo) -> access$600
    javax.swing.JTextArea access$700(demo.Pinyin4jAppletDemo) -> access$700
    javax.swing.JTextArea access$800(demo.Pinyin4jAppletDemo) -> access$800
    javax.swing.JTextArea access$900(demo.Pinyin4jAppletDemo) -> access$900
    javax.swing.JTextArea access$1000(demo.Pinyin4jAppletDemo) -> access$1000
demo.Pinyin4jAppletDemo$1 -> demo.Pinyin4jAppletDemo$1:
    demo.Pinyin4jAppletDemo val$appletDemo -> val$appletDemo
    void windowClosing(java.awt.event.WindowEvent) -> windowClosing
demo.Pinyin4jAppletDemo$2 -> demo.Pinyin4jAppletDemo$2:
    demo.Pinyin4jAppletDemo this$0 -> this$0
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
    void updateUnformattedTextField(char) -> updateUnformattedTextField
    void updateFormattedTextField(char,java.lang.String,java.lang.String,java.lang.String) -> updateFormattedTextField
    java.lang.String concatPinyinStringArray(java.lang.String[]) -> concatPinyinStringArray
demo.Pinyin4jAppletDemo$3 -> demo.Pinyin4jAppletDemo$3:
    demo.Pinyin4jAppletDemo this$0 -> this$0
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
net.simonvt.numberpicker.NumberPicker -> net.simonvt.numberpicker.NumberPicker:
    int SELECTOR_WHEEL_ITEM_COUNT -> SELECTOR_WHEEL_ITEM_COUNT
    long DEFAULT_LONG_PRESS_UPDATE_INTERVAL -> DEFAULT_LONG_PRESS_UPDATE_INTERVAL
    int SELECTOR_MIDDLE_ITEM_INDEX -> SELECTOR_MIDDLE_ITEM_INDEX
    int SELECTOR_MAX_FLING_VELOCITY_ADJUSTMENT -> SELECTOR_MAX_FLING_VELOCITY_ADJUSTMENT
    int SELECTOR_ADJUSTMENT_DURATION_MILLIS -> SELECTOR_ADJUSTMENT_DURATION_MILLIS
    int SNAP_SCROLL_DURATION -> SNAP_SCROLL_DURATION
    float TOP_AND_BOTTOM_FADING_EDGE_STRENGTH -> TOP_AND_BOTTOM_FADING_EDGE_STRENGTH
    int UNSCALED_DEFAULT_SELECTION_DIVIDER_HEIGHT -> UNSCALED_DEFAULT_SELECTION_DIVIDER_HEIGHT
    int UNSCALED_DEFAULT_SELECTION_DIVIDERS_DISTANCE -> UNSCALED_DEFAULT_SELECTION_DIVIDERS_DISTANCE
    int DEFAULT_LAYOUT_RESOURCE_ID -> DEFAULT_LAYOUT_RESOURCE_ID
    int SIZE_UNSPECIFIED -> SIZE_UNSPECIFIED
    net.simonvt.numberpicker.NumberPicker$TwoDigitFormatter sTwoDigitFormatter -> sTwoDigitFormatter
    android.widget.ImageButton mIncrementButton -> mIncrementButton
    android.widget.ImageButton mDecrementButton -> mDecrementButton
    android.widget.EditText mInputText -> mInputText
    int mSelectionDividersDistance -> mSelectionDividersDistance
    int mMinHeight -> mMinHeight
    int mMaxHeight -> mMaxHeight
    int mMinWidth -> mMinWidth
    int mMaxWidth -> mMaxWidth
    boolean mComputeMaxWidth -> mComputeMaxWidth
    int mTextSize -> mTextSize
    int mSelectorTextGapHeight -> mSelectorTextGapHeight
    java.lang.String[] mDisplayedValues -> mDisplayedValues
    int mMinValue -> mMinValue
    int mMaxValue -> mMaxValue
    int mValue -> mValue
    net.simonvt.numberpicker.NumberPicker$OnValueChangeListener mOnValueChangeListener -> mOnValueChangeListener
    net.simonvt.numberpicker.NumberPicker$OnScrollListener mOnScrollListener -> mOnScrollListener
    net.simonvt.numberpicker.NumberPicker$Formatter mFormatter -> mFormatter
    long mLongPressUpdateInterval -> mLongPressUpdateInterval
    android.util.SparseArray mSelectorIndexToStringCache -> mSelectorIndexToStringCache
    int[] mSelectorIndices -> mSelectorIndices
    android.graphics.Paint mSelectorWheelPaint -> mSelectorWheelPaint
    android.graphics.drawable.Drawable mVirtualButtonPressedDrawable -> mVirtualButtonPressedDrawable
    int mSelectorElementHeight -> mSelectorElementHeight
    int mInitialScrollOffset -> mInitialScrollOffset
    int mCurrentScrollOffset -> mCurrentScrollOffset
    net.simonvt.numberpicker.Scroller mFlingScroller -> mFlingScroller
    net.simonvt.numberpicker.Scroller mAdjustScroller -> mAdjustScroller
    int mPreviousScrollerY -> mPreviousScrollerY
    net.simonvt.numberpicker.NumberPicker$SetSelectionCommand mSetSelectionCommand -> mSetSelectionCommand
    net.simonvt.numberpicker.NumberPicker$ChangeCurrentByOneFromLongPressCommand mChangeCurrentByOneFromLongPressCommand -> mChangeCurrentByOneFromLongPressCommand
    net.simonvt.numberpicker.NumberPicker$BeginSoftInputOnLongPressCommand mBeginSoftInputOnLongPressCommand -> mBeginSoftInputOnLongPressCommand
    float mLastDownEventY -> mLastDownEventY
    long mLastDownEventTime -> mLastDownEventTime
    float mLastDownOrMoveEventY -> mLastDownOrMoveEventY
    android.view.VelocityTracker mVelocityTracker -> mVelocityTracker
    int mTouchSlop -> mTouchSlop
    int mMinimumFlingVelocity -> mMinimumFlingVelocity
    int mMaximumFlingVelocity -> mMaximumFlingVelocity
    boolean mWrapSelectorWheel -> mWrapSelectorWheel
    int mSolidColor -> mSolidColor
    boolean mHasSelectorWheel -> mHasSelectorWheel
    android.graphics.drawable.Drawable mSelectionDivider -> mSelectionDivider
    int mSelectionDividerHeight -> mSelectionDividerHeight
    int mScrollState -> mScrollState
    boolean mIngonreMoveEvents -> mIngonreMoveEvents
    boolean mShowSoftInputOnTap -> mShowSoftInputOnTap
    int mTopSelectionDividerTop -> mTopSelectionDividerTop
    int mBottomSelectionDividerBottom -> mBottomSelectionDividerBottom
    int mLastHoveredChildVirtualViewId -> mLastHoveredChildVirtualViewId
    boolean mIncrementVirtualButtonPressed -> mIncrementVirtualButtonPressed
    boolean mDecrementVirtualButtonPressed -> mDecrementVirtualButtonPressed
    net.simonvt.numberpicker.NumberPicker$SupportAccessibilityNodeProvider mAccessibilityNodeProvider -> mAccessibilityNodeProvider
    net.simonvt.numberpicker.NumberPicker$PressedStateHelper mPressedStateHelper -> mPressedStateHelper
    int mLastHandledDownDpadKeyCode -> mLastHandledDownDpadKeyCode
    char[] DIGIT_CHARACTERS -> DIGIT_CHARACTERS
    net.simonvt.numberpicker.NumberPicker$Formatter getTwoDigitFormatter() -> getTwoDigitFormatter
    void onLayout(boolean,int,int,int,int) -> onLayout
    void onMeasure(int,int) -> onMeasure
    boolean moveToFinalScrollerPosition(net.simonvt.numberpicker.Scroller) -> moveToFinalScrollerPosition
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    boolean dispatchTouchEvent(android.view.MotionEvent) -> dispatchTouchEvent
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    boolean dispatchTrackballEvent(android.view.MotionEvent) -> dispatchTrackballEvent
    boolean dispatchHoverEvent(android.view.MotionEvent) -> dispatchHoverEvent
    void computeScroll() -> computeScroll
    void setEnabled(boolean) -> setEnabled
    void scrollBy(int,int) -> scrollBy
    int getSolidColor() -> getSolidColor
    void setOnValueChangedListener(net.simonvt.numberpicker.NumberPicker$OnValueChangeListener) -> setOnValueChangedListener
    void setOnScrollListener(net.simonvt.numberpicker.NumberPicker$OnScrollListener) -> setOnScrollListener
    void setFormatter(net.simonvt.numberpicker.NumberPicker$Formatter) -> setFormatter
    void setValue(int) -> setValue
    void showSoftInput() -> showSoftInput
    void hideSoftInput() -> hideSoftInput
    void tryComputeMaxWidth() -> tryComputeMaxWidth
    boolean getWrapSelectorWheel() -> getWrapSelectorWheel
    void setWrapSelectorWheel(boolean) -> setWrapSelectorWheel
    void setOnLongPressUpdateInterval(long) -> setOnLongPressUpdateInterval
    int getValue() -> getValue
    int getMinValue() -> getMinValue
    void setMinValue(int) -> setMinValue
    int getMaxValue() -> getMaxValue
    void setMaxValue(int) -> setMaxValue
    java.lang.String[] getDisplayedValues() -> getDisplayedValues
    void setDisplayedValues(java.lang.String[]) -> setDisplayedValues
    float getTopFadingEdgeStrength() -> getTopFadingEdgeStrength
    float getBottomFadingEdgeStrength() -> getBottomFadingEdgeStrength
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onDraw(android.graphics.Canvas) -> onDraw
    void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider() -> getAccessibilityNodeProvider
    int makeMeasureSpec(int,int) -> makeMeasureSpec
    int resolveSizeAndStateRespectingMinSize(int,int,int) -> resolveSizeAndStateRespectingMinSize
    int resolveSizeAndState(int,int,int) -> resolveSizeAndState
    void initializeSelectorWheelIndices() -> initializeSelectorWheelIndices
    void setValueInternal(int,boolean) -> setValueInternal
    void changeValueByOne(boolean) -> changeValueByOne
    void initializeSelectorWheel() -> initializeSelectorWheel
    void initializeFadingEdges() -> initializeFadingEdges
    void onScrollerFinished(net.simonvt.numberpicker.Scroller) -> onScrollerFinished
    void onScrollStateChange(int) -> onScrollStateChange
    void fling(int) -> fling
    int getWrappedSelectorIndex(int) -> getWrappedSelectorIndex
    void incrementSelectorIndices(int[]) -> incrementSelectorIndices
    void decrementSelectorIndices(int[]) -> decrementSelectorIndices
    void ensureCachedScrollSelectorValue(int) -> ensureCachedScrollSelectorValue
    java.lang.String formatNumber(int) -> formatNumber
    void validateInputTextView(android.view.View) -> validateInputTextView
    boolean updateInputTextView() -> updateInputTextView
    void notifyChange(int,int) -> notifyChange
    void postChangeCurrentByOneFromLongPress(boolean,long) -> postChangeCurrentByOneFromLongPress
    void removeChangeCurrentByOneFromLongPress() -> removeChangeCurrentByOneFromLongPress
    void postBeginSoftInputOnLongPressCommand() -> postBeginSoftInputOnLongPressCommand
    void removeBeginSoftInputCommand() -> removeBeginSoftInputCommand
    void removeAllCallbacks() -> removeAllCallbacks
    int getSelectedPos(java.lang.String) -> getSelectedPos
    void postSetSelectionCommand(int,int) -> postSetSelectionCommand
    boolean ensureScrollWheelAdjusted() -> ensureScrollWheelAdjusted
    net.simonvt.numberpicker.NumberPicker$SupportAccessibilityNodeProvider getSupportAccessibilityNodeProvider() -> getSupportAccessibilityNodeProvider
    java.lang.String formatNumberWithLocale(int) -> formatNumberWithLocale
    char[] access$0() -> access$0
    java.lang.String[] access$1(net.simonvt.numberpicker.NumberPicker) -> access$1
    int access$2(net.simonvt.numberpicker.NumberPicker,java.lang.String) -> access$2
    int access$3(net.simonvt.numberpicker.NumberPicker) -> access$3
    void access$4(net.simonvt.numberpicker.NumberPicker,int,int) -> access$4
    boolean access$5(net.simonvt.numberpicker.NumberPicker) -> access$5
    void access$6(net.simonvt.numberpicker.NumberPicker,boolean) -> access$6
    int access$7(net.simonvt.numberpicker.NumberPicker) -> access$7
    void access$8(net.simonvt.numberpicker.NumberPicker,boolean) -> access$8
    boolean access$9(net.simonvt.numberpicker.NumberPicker) -> access$9
    int access$10(net.simonvt.numberpicker.NumberPicker) -> access$10
    android.widget.EditText access$11(net.simonvt.numberpicker.NumberPicker) -> access$11
    void access$12(net.simonvt.numberpicker.NumberPicker,boolean) -> access$12
    long access$13(net.simonvt.numberpicker.NumberPicker) -> access$13
    void access$14(net.simonvt.numberpicker.NumberPicker) -> access$14
    void access$15(net.simonvt.numberpicker.NumberPicker,boolean) -> access$15
    int access$16(net.simonvt.numberpicker.NumberPicker) -> access$16
    int access$17(net.simonvt.numberpicker.NumberPicker) -> access$17
    boolean access$18(net.simonvt.numberpicker.NumberPicker) -> access$18
    int access$19(net.simonvt.numberpicker.NumberPicker,int) -> access$19
    int access$20(net.simonvt.numberpicker.NumberPicker) -> access$20
    java.lang.String access$21(net.simonvt.numberpicker.NumberPicker,int) -> access$21
    void access$22(net.simonvt.numberpicker.NumberPicker) -> access$22
    void access$23(net.simonvt.numberpicker.NumberPicker,boolean,long) -> access$23
    void access$24(net.simonvt.numberpicker.NumberPicker,android.view.View) -> access$24
net.simonvt.numberpicker.NumberPicker$1 -> net.simonvt.numberpicker.NumberPicker$1:
    net.simonvt.numberpicker.NumberPicker this$0 -> this$0
    void onClick(android.view.View) -> onClick
net.simonvt.numberpicker.NumberPicker$2 -> net.simonvt.numberpicker.NumberPicker$2:
    net.simonvt.numberpicker.NumberPicker this$0 -> this$0
    boolean onLongClick(android.view.View) -> onLongClick
net.simonvt.numberpicker.NumberPicker$3 -> net.simonvt.numberpicker.NumberPicker$3:
    net.simonvt.numberpicker.NumberPicker this$0 -> this$0
    void onFocusChange(android.view.View,boolean) -> onFocusChange
net.simonvt.numberpicker.NumberPicker$AccessibilityNodeProviderImpl -> net.simonvt.numberpicker.NumberPicker$AccessibilityNodeProviderImpl:
    int UNDEFINED -> UNDEFINED
    int VIRTUAL_VIEW_ID_INCREMENT -> VIRTUAL_VIEW_ID_INCREMENT
    int VIRTUAL_VIEW_ID_INPUT -> VIRTUAL_VIEW_ID_INPUT
    int VIRTUAL_VIEW_ID_DECREMENT -> VIRTUAL_VIEW_ID_DECREMENT
    android.graphics.Rect mTempRect -> mTempRect
    int[] mTempArray -> mTempArray
    int mAccessibilityFocusedView -> mAccessibilityFocusedView
    net.simonvt.numberpicker.NumberPicker this$0 -> this$0
    android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
    boolean performAction(int,int,android.os.Bundle) -> performAction
    void sendAccessibilityEventForVirtualView(int,int) -> sendAccessibilityEventForVirtualView
    void sendAccessibilityEventForVirtualText(int) -> sendAccessibilityEventForVirtualText
    void sendAccessibilityEventForVirtualButton(int,int,java.lang.String) -> sendAccessibilityEventForVirtualButton
    void findAccessibilityNodeInfosByTextInChild(java.lang.String,int,java.util.List) -> findAccessibilityNodeInfosByTextInChild
    android.view.accessibility.AccessibilityNodeInfo createAccessibiltyNodeInfoForInputText() -> createAccessibiltyNodeInfoForInputText
    android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfoForVirtualButton(int,java.lang.String,int,int,int,int) -> createAccessibilityNodeInfoForVirtualButton
    android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfoForNumberPicker(int,int,int,int) -> createAccessibilityNodeInfoForNumberPicker
    boolean hasVirtualDecrementButton() -> hasVirtualDecrementButton
    boolean hasVirtualIncrementButton() -> hasVirtualIncrementButton
    java.lang.String getVirtualDecrementButtonText() -> getVirtualDecrementButtonText
    java.lang.String getVirtualIncrementButtonText() -> getVirtualIncrementButtonText
net.simonvt.numberpicker.NumberPicker$BeginSoftInputOnLongPressCommand -> net.simonvt.numberpicker.NumberPicker$BeginSoftInputOnLongPressCommand:
    net.simonvt.numberpicker.NumberPicker this$0 -> this$0
    void run() -> run
net.simonvt.numberpicker.NumberPicker$ChangeCurrentByOneFromLongPressCommand -> net.simonvt.numberpicker.NumberPicker$ChangeCurrentByOneFromLongPressCommand:
    boolean mIncrement -> mIncrement
    net.simonvt.numberpicker.NumberPicker this$0 -> this$0
    void setStep(boolean) -> setStep
    void run() -> run
    void access$0(net.simonvt.numberpicker.NumberPicker$ChangeCurrentByOneFromLongPressCommand,boolean) -> access$0
net.simonvt.numberpicker.NumberPicker$CustomEditText -> net.simonvt.numberpicker.NumberPicker$CustomEditText:
    void onEditorAction(int) -> onEditorAction
net.simonvt.numberpicker.NumberPicker$Formatter -> net.simonvt.numberpicker.NumberPicker$Formatter:
    java.lang.String format(int) -> format
net.simonvt.numberpicker.NumberPicker$InputTextFilter -> net.simonvt.numberpicker.NumberPicker$InputTextFilter:
    net.simonvt.numberpicker.NumberPicker this$0 -> this$0
    int getInputType() -> getInputType
    char[] getAcceptedChars() -> getAcceptedChars
    java.lang.CharSequence filter(java.lang.CharSequence,int,int,android.text.Spanned,int,int) -> filter
net.simonvt.numberpicker.NumberPicker$OnScrollListener -> net.simonvt.numberpicker.NumberPicker$OnScrollListener:
    int SCROLL_STATE_IDLE -> SCROLL_STATE_IDLE
    int SCROLL_STATE_TOUCH_SCROLL -> SCROLL_STATE_TOUCH_SCROLL
    int SCROLL_STATE_FLING -> SCROLL_STATE_FLING
    void onScrollStateChange(net.simonvt.numberpicker.NumberPicker,int) -> onScrollStateChange
net.simonvt.numberpicker.NumberPicker$OnValueChangeListener -> net.simonvt.numberpicker.NumberPicker$OnValueChangeListener:
    void onValueChange(net.simonvt.numberpicker.NumberPicker,int,int) -> onValueChange
net.simonvt.numberpicker.NumberPicker$PressedStateHelper -> net.simonvt.numberpicker.NumberPicker$PressedStateHelper:
    int BUTTON_INCREMENT -> BUTTON_INCREMENT
    int BUTTON_DECREMENT -> BUTTON_DECREMENT
    int MODE_PRESS -> MODE_PRESS
    int MODE_TAPPED -> MODE_TAPPED
    int mManagedButton -> mManagedButton
    int mMode -> mMode
    net.simonvt.numberpicker.NumberPicker this$0 -> this$0
    void cancel() -> cancel
    void buttonPressDelayed(int) -> buttonPressDelayed
    void buttonTapped(int) -> buttonTapped
    void run() -> run
net.simonvt.numberpicker.NumberPicker$SetSelectionCommand -> net.simonvt.numberpicker.NumberPicker$SetSelectionCommand:
    int mSelectionStart -> mSelectionStart
    int mSelectionEnd -> mSelectionEnd
    net.simonvt.numberpicker.NumberPicker this$0 -> this$0
    void run() -> run
    void access$0(net.simonvt.numberpicker.NumberPicker$SetSelectionCommand,int) -> access$0
    void access$1(net.simonvt.numberpicker.NumberPicker$SetSelectionCommand,int) -> access$1
net.simonvt.numberpicker.NumberPicker$SupportAccessibilityNodeProvider -> net.simonvt.numberpicker.NumberPicker$SupportAccessibilityNodeProvider:
    net.simonvt.numberpicker.NumberPicker$AccessibilityNodeProviderImpl mProvider -> mProvider
    net.simonvt.numberpicker.NumberPicker this$0 -> this$0
    boolean performAction(int,int,android.os.Bundle) -> performAction
    void sendAccessibilityEventForVirtualView(int,int) -> sendAccessibilityEventForVirtualView
net.simonvt.numberpicker.NumberPicker$TwoDigitFormatter -> net.simonvt.numberpicker.NumberPicker$TwoDigitFormatter:
    java.lang.StringBuilder mBuilder -> mBuilder
    char mZeroDigit -> mZeroDigit
    java.util.Formatter mFmt -> mFmt
    java.lang.Object[] mArgs -> mArgs
    void init(java.util.Locale) -> init
    java.lang.String format(int) -> format
    char getZeroDigit(java.util.Locale) -> getZeroDigit
    java.util.Formatter createFormatter(java.util.Locale) -> createFormatter
net.simonvt.numberpicker.R -> net.simonvt.numberpicker.R:
net.simonvt.numberpicker.R$attr -> net.simonvt.numberpicker.R$attr:
    int internalLayout -> internalLayout
    int internalMaxHeight -> internalMaxHeight
    int internalMaxWidth -> internalMaxWidth
    int internalMinHeight -> internalMinHeight
    int internalMinWidth -> internalMinWidth
    int numberPickerStyle -> numberPickerStyle
    int selectionDivider -> selectionDivider
    int selectionDividerHeight -> selectionDividerHeight
    int selectionDividersDistance -> selectionDividersDistance
    int solidColor -> solidColor
    int virtualButtonPressedDrawable -> virtualButtonPressedDrawable
net.simonvt.numberpicker.R$color -> net.simonvt.numberpicker.R$color:
    int transparent -> transparent
net.simonvt.numberpicker.R$drawable -> net.simonvt.numberpicker.R$drawable:
    int item_background_holo_dark -> item_background_holo_dark
    int item_background_holo_light -> item_background_holo_light
    int list_focused_holo -> list_focused_holo
    int list_longpressed_holo -> list_longpressed_holo
    int list_pressed_holo_dark -> list_pressed_holo_dark
    int list_pressed_holo_light -> list_pressed_holo_light
    int list_selector_background_transition_holo_dark -> list_selector_background_transition_holo_dark
    int list_selector_background_transition_holo_light -> list_selector_background_transition_holo_light
    int list_selector_disabled_holo_dark -> list_selector_disabled_holo_dark
    int list_selector_disabled_holo_light -> list_selector_disabled_holo_light
    int np_numberpicker_selection_divider -> np_numberpicker_selection_divider
net.simonvt.numberpicker.R$id -> net.simonvt.numberpicker.R$id:
    int np__decrement -> np__decrement
    int np__increment -> np__increment
    int np__numberpicker_input -> np__numberpicker_input
net.simonvt.numberpicker.R$layout -> net.simonvt.numberpicker.R$layout:
    int number_picker_with_selector_wheel -> number_picker_with_selector_wheel
net.simonvt.numberpicker.R$style -> net.simonvt.numberpicker.R$style:
    int NPWidget -> NPWidget
    int NPWidget_Holo_Light_NumberPicker -> NPWidget_Holo_Light_NumberPicker
    int NPWidget_Holo_NumberPicker -> NPWidget_Holo_NumberPicker
    int NPWidget_NumberPicker -> NPWidget_NumberPicker
net.simonvt.numberpicker.R$styleable -> net.simonvt.numberpicker.R$styleable:
    int[] NumberPicker -> NumberPicker
    int NumberPicker_internalLayout -> NumberPicker_internalLayout
    int NumberPicker_internalMaxHeight -> NumberPicker_internalMaxHeight
    int NumberPicker_internalMaxWidth -> NumberPicker_internalMaxWidth
    int NumberPicker_internalMinHeight -> NumberPicker_internalMinHeight
    int NumberPicker_internalMinWidth -> NumberPicker_internalMinWidth
    int NumberPicker_selectionDivider -> NumberPicker_selectionDivider
    int NumberPicker_selectionDividerHeight -> NumberPicker_selectionDividerHeight
    int NumberPicker_selectionDividersDistance -> NumberPicker_selectionDividersDistance
    int NumberPicker_solidColor -> NumberPicker_solidColor
    int NumberPicker_virtualButtonPressedDrawable -> NumberPicker_virtualButtonPressedDrawable
net.simonvt.numberpicker.Scroller -> net.simonvt.numberpicker.Scroller:
    int mMode -> mMode
    int mStartX -> mStartX
    int mStartY -> mStartY
    int mFinalX -> mFinalX
    int mFinalY -> mFinalY
    int mMinX -> mMinX
    int mMaxX -> mMaxX
    int mMinY -> mMinY
    int mMaxY -> mMaxY
    int mCurrX -> mCurrX
    int mCurrY -> mCurrY
    long mStartTime -> mStartTime
    int mDuration -> mDuration
    float mDurationReciprocal -> mDurationReciprocal
    float mDeltaX -> mDeltaX
    float mDeltaY -> mDeltaY
    boolean mFinished -> mFinished
    android.view.animation.Interpolator mInterpolator -> mInterpolator
    boolean mFlywheel -> mFlywheel
    float mVelocity -> mVelocity
    int DEFAULT_DURATION -> DEFAULT_DURATION
    int SCROLL_MODE -> SCROLL_MODE
    int FLING_MODE -> FLING_MODE
    float DECELERATION_RATE -> DECELERATION_RATE
    float ALPHA -> ALPHA
    float START_TENSION -> START_TENSION
    float END_TENSION -> END_TENSION
    int NB_SAMPLES -> NB_SAMPLES
    float[] SPLINE -> SPLINE
    float mDeceleration -> mDeceleration
    float mPpi -> mPpi
    float sViscousFluidScale -> sViscousFluidScale
    float sViscousFluidNormalize -> sViscousFluidNormalize
    void setFriction(float) -> setFriction
    float computeDeceleration(float) -> computeDeceleration
    boolean isFinished() -> isFinished
    void forceFinished(boolean) -> forceFinished
    int getDuration() -> getDuration
    int getCurrX() -> getCurrX
    int getCurrY() -> getCurrY
    float getCurrVelocity() -> getCurrVelocity
    int getStartX() -> getStartX
    int getStartY() -> getStartY
    int getFinalX() -> getFinalX
    int getFinalY() -> getFinalY
    boolean computeScrollOffset() -> computeScrollOffset
    void startScroll(int,int,int,int) -> startScroll
    void startScroll(int,int,int,int,int) -> startScroll
    void fling(int,int,int,int,int,int,int,int) -> fling
    float viscousFluid(float) -> viscousFluid
    void abortAnimation() -> abortAnimation
    void extendDuration(int) -> extendDuration
    int timePassed() -> timePassed
    void setFinalX(int) -> setFinalX
    void setFinalY(int) -> setFinalY
    boolean isScrollingInDirection(float,float) -> isScrollingInDirection
net.sourceforge.pinyin4j.ChineseToPinyinResource -> net.sourceforge.pinyin4j.ChineseToPinyinResource:
    java.util.Properties unicodeToHanyuPinyinTable -> unicodeToHanyuPinyinTable
    void setUnicodeToHanyuPinyinTable(java.util.Properties) -> setUnicodeToHanyuPinyinTable
    java.util.Properties getUnicodeToHanyuPinyinTable() -> getUnicodeToHanyuPinyinTable
    void initializeResource() -> initializeResource
    java.lang.String[] getHanyuPinyinStringArray(char) -> getHanyuPinyinStringArray
    boolean isValidRecord(java.lang.String) -> isValidRecord
    java.lang.String getHanyuPinyinRecordFromChar(char) -> getHanyuPinyinRecordFromChar
    net.sourceforge.pinyin4j.ChineseToPinyinResource getInstance() -> getInstance
net.sourceforge.pinyin4j.ChineseToPinyinResource$1 -> net.sourceforge.pinyin4j.ChineseToPinyinResource$1:
net.sourceforge.pinyin4j.ChineseToPinyinResource$ChineseToPinyinResourceHolder -> net.sourceforge.pinyin4j.ChineseToPinyinResource$ChineseToPinyinResourceHolder:
    net.sourceforge.pinyin4j.ChineseToPinyinResource theInstance -> theInstance
net.sourceforge.pinyin4j.ChineseToPinyinResource$Field -> net.sourceforge.pinyin4j.ChineseToPinyinResource$Field:
    java.lang.String LEFT_BRACKET -> LEFT_BRACKET
    java.lang.String RIGHT_BRACKET -> RIGHT_BRACKET
    java.lang.String COMMA -> COMMA
    net.sourceforge.pinyin4j.ChineseToPinyinResource this$0 -> this$0
net.sourceforge.pinyin4j.GwoyeuRomatzyhResource -> net.sourceforge.pinyin4j.GwoyeuRomatzyhResource:
    com.hp.hpl.sparta.Document pinyinToGwoyeuMappingDoc -> pinyinToGwoyeuMappingDoc
    void setPinyinToGwoyeuMappingDoc(com.hp.hpl.sparta.Document) -> setPinyinToGwoyeuMappingDoc
    com.hp.hpl.sparta.Document getPinyinToGwoyeuMappingDoc() -> getPinyinToGwoyeuMappingDoc
    void initializeResource() -> initializeResource
    net.sourceforge.pinyin4j.GwoyeuRomatzyhResource getInstance() -> getInstance
net.sourceforge.pinyin4j.GwoyeuRomatzyhResource$1 -> net.sourceforge.pinyin4j.GwoyeuRomatzyhResource$1:
net.sourceforge.pinyin4j.GwoyeuRomatzyhResource$GwoyeuRomatzyhSystemResourceHolder -> net.sourceforge.pinyin4j.GwoyeuRomatzyhResource$GwoyeuRomatzyhSystemResourceHolder:
    net.sourceforge.pinyin4j.GwoyeuRomatzyhResource theInstance -> theInstance
net.sourceforge.pinyin4j.GwoyeuRomatzyhTranslator -> net.sourceforge.pinyin4j.GwoyeuRomatzyhTranslator:
    java.lang.String[] tones -> tones
    java.lang.String convertHanyuPinyinToGwoyeuRomatzyh(java.lang.String) -> convertHanyuPinyinToGwoyeuRomatzyh
net.sourceforge.pinyin4j.PinyinFormatter -> net.sourceforge.pinyin4j.PinyinFormatter:
    java.lang.String formatHanyuPinyin(java.lang.String,net.sourceforge.pinyin4j.format.HanyuPinyinOutputFormat) -> formatHanyuPinyin
    java.lang.String convertToneNumber2ToneMark(java.lang.String) -> convertToneNumber2ToneMark
net.sourceforge.pinyin4j.PinyinHelper -> net.sourceforge.pinyin4j.PinyinHelper:
    java.lang.String[] toHanyuPinyinStringArray(char) -> toHanyuPinyinStringArray
    java.lang.String[] toHanyuPinyinStringArray(char,net.sourceforge.pinyin4j.format.HanyuPinyinOutputFormat) -> toHanyuPinyinStringArray
    java.lang.String[] getFormattedHanyuPinyinStringArray(char,net.sourceforge.pinyin4j.format.HanyuPinyinOutputFormat) -> getFormattedHanyuPinyinStringArray
    java.lang.String[] getUnformattedHanyuPinyinStringArray(char) -> getUnformattedHanyuPinyinStringArray
    java.lang.String[] toTongyongPinyinStringArray(char) -> toTongyongPinyinStringArray
    java.lang.String[] toWadeGilesPinyinStringArray(char) -> toWadeGilesPinyinStringArray
    java.lang.String[] toMPS2PinyinStringArray(char) -> toMPS2PinyinStringArray
    java.lang.String[] toYalePinyinStringArray(char) -> toYalePinyinStringArray
    java.lang.String[] convertToTargetPinyinStringArray(char,net.sourceforge.pinyin4j.PinyinRomanizationType) -> convertToTargetPinyinStringArray
    java.lang.String[] toGwoyeuRomatzyhStringArray(char) -> toGwoyeuRomatzyhStringArray
    java.lang.String[] convertToGwoyeuRomatzyhStringArray(char) -> convertToGwoyeuRomatzyhStringArray
    java.lang.String toHanyuPinyinString(java.lang.String,net.sourceforge.pinyin4j.format.HanyuPinyinOutputFormat,java.lang.String) -> toHanyuPinyinString
    java.lang.String getFirstHanyuPinyinString(char,net.sourceforge.pinyin4j.format.HanyuPinyinOutputFormat) -> getFirstHanyuPinyinString
net.sourceforge.pinyin4j.PinyinRomanizationResource -> net.sourceforge.pinyin4j.PinyinRomanizationResource:
    com.hp.hpl.sparta.Document pinyinMappingDoc -> pinyinMappingDoc
    void setPinyinMappingDoc(com.hp.hpl.sparta.Document) -> setPinyinMappingDoc
    com.hp.hpl.sparta.Document getPinyinMappingDoc() -> getPinyinMappingDoc
    void initializeResource() -> initializeResource
    net.sourceforge.pinyin4j.PinyinRomanizationResource getInstance() -> getInstance
net.sourceforge.pinyin4j.PinyinRomanizationResource$1 -> net.sourceforge.pinyin4j.PinyinRomanizationResource$1:
net.sourceforge.pinyin4j.PinyinRomanizationResource$PinyinRomanizationSystemResourceHolder -> net.sourceforge.pinyin4j.PinyinRomanizationResource$PinyinRomanizationSystemResourceHolder:
    net.sourceforge.pinyin4j.PinyinRomanizationResource theInstance -> theInstance
net.sourceforge.pinyin4j.PinyinRomanizationTranslator -> net.sourceforge.pinyin4j.PinyinRomanizationTranslator:
    java.lang.String convertRomanizationSystem(java.lang.String,net.sourceforge.pinyin4j.PinyinRomanizationType,net.sourceforge.pinyin4j.PinyinRomanizationType) -> convertRomanizationSystem
net.sourceforge.pinyin4j.PinyinRomanizationType -> net.sourceforge.pinyin4j.PinyinRomanizationType:
    net.sourceforge.pinyin4j.PinyinRomanizationType HANYU_PINYIN -> HANYU_PINYIN
    net.sourceforge.pinyin4j.PinyinRomanizationType WADEGILES_PINYIN -> WADEGILES_PINYIN
    net.sourceforge.pinyin4j.PinyinRomanizationType MPS2_PINYIN -> MPS2_PINYIN
    net.sourceforge.pinyin4j.PinyinRomanizationType YALE_PINYIN -> YALE_PINYIN
    net.sourceforge.pinyin4j.PinyinRomanizationType TONGYONG_PINYIN -> TONGYONG_PINYIN
    net.sourceforge.pinyin4j.PinyinRomanizationType GWOYEU_ROMATZYH -> GWOYEU_ROMATZYH
    java.lang.String tagName -> tagName
    java.lang.String getTagName() -> getTagName
    void setTagName(java.lang.String) -> setTagName
net.sourceforge.pinyin4j.ResourceHelper -> net.sourceforge.pinyin4j.ResourceHelper:
    java.lang.Class class$net$sourceforge$pinyin4j$ResourceHelper -> class$net$sourceforge$pinyin4j$ResourceHelper
    java.io.BufferedInputStream getResourceInputStream(java.lang.String) -> getResourceInputStream
    java.lang.Class class$(java.lang.String) -> class$
net.sourceforge.pinyin4j.TextHelper -> net.sourceforge.pinyin4j.TextHelper:
    java.lang.String extractToneNumber(java.lang.String) -> extractToneNumber
    java.lang.String extractPinyinString(java.lang.String) -> extractPinyinString
net.sourceforge.pinyin4j.format.HanyuPinyinCaseType -> net.sourceforge.pinyin4j.format.HanyuPinyinCaseType:
    net.sourceforge.pinyin4j.format.HanyuPinyinCaseType UPPERCASE -> UPPERCASE
    net.sourceforge.pinyin4j.format.HanyuPinyinCaseType LOWERCASE -> LOWERCASE
    java.lang.String name -> name
    java.lang.String getName() -> getName
    void setName(java.lang.String) -> setName
net.sourceforge.pinyin4j.format.HanyuPinyinOutputFormat -> net.sourceforge.pinyin4j.format.HanyuPinyinOutputFormat:
    net.sourceforge.pinyin4j.format.HanyuPinyinVCharType vCharType -> vCharType
    net.sourceforge.pinyin4j.format.HanyuPinyinCaseType caseType -> caseType
    net.sourceforge.pinyin4j.format.HanyuPinyinToneType toneType -> toneType
    void restoreDefault() -> restoreDefault
    net.sourceforge.pinyin4j.format.HanyuPinyinCaseType getCaseType() -> getCaseType
    void setCaseType(net.sourceforge.pinyin4j.format.HanyuPinyinCaseType) -> setCaseType
    net.sourceforge.pinyin4j.format.HanyuPinyinToneType getToneType() -> getToneType
    void setToneType(net.sourceforge.pinyin4j.format.HanyuPinyinToneType) -> setToneType
    net.sourceforge.pinyin4j.format.HanyuPinyinVCharType getVCharType() -> getVCharType
    void setVCharType(net.sourceforge.pinyin4j.format.HanyuPinyinVCharType) -> setVCharType
net.sourceforge.pinyin4j.format.HanyuPinyinToneType -> net.sourceforge.pinyin4j.format.HanyuPinyinToneType:
    net.sourceforge.pinyin4j.format.HanyuPinyinToneType WITH_TONE_NUMBER -> WITH_TONE_NUMBER
    net.sourceforge.pinyin4j.format.HanyuPinyinToneType WITHOUT_TONE -> WITHOUT_TONE
    net.sourceforge.pinyin4j.format.HanyuPinyinToneType WITH_TONE_MARK -> WITH_TONE_MARK
    java.lang.String name -> name
    java.lang.String getName() -> getName
    void setName(java.lang.String) -> setName
net.sourceforge.pinyin4j.format.HanyuPinyinVCharType -> net.sourceforge.pinyin4j.format.HanyuPinyinVCharType:
    net.sourceforge.pinyin4j.format.HanyuPinyinVCharType WITH_U_AND_COLON -> WITH_U_AND_COLON
    net.sourceforge.pinyin4j.format.HanyuPinyinVCharType WITH_V -> WITH_V
    net.sourceforge.pinyin4j.format.HanyuPinyinVCharType WITH_U_UNICODE -> WITH_U_UNICODE
    java.lang.String name -> name
    java.lang.String getName() -> getName
    void setName(java.lang.String) -> setName
net.sourceforge.pinyin4j.format.exception.BadHanyuPinyinOutputFormatCombination -> net.sourceforge.pinyin4j.format.exception.BadHanyuPinyinOutputFormatCombination:
    long serialVersionUID -> serialVersionUID
org.kobjects.base64.Base64 -> org.kobjects.base64.Base64:
    char[] charTab -> charTab
    java.lang.String encode(byte[]) -> encode
    java.lang.StringBuffer encode(byte[],int,int,java.lang.StringBuffer) -> encode
    int decode(char) -> decode
    byte[] decode(java.lang.String) -> decode
    void decode(java.lang.String,java.io.OutputStream) -> decode
org.kobjects.crypt.Crypt -> org.kobjects.crypt.Crypt:
    int ITERATIONS -> ITERATIONS
    int[] con_salt -> con_salt
    boolean[] shifts2 -> shifts2
    int[][] skb -> skb
    int[][] SPtrans -> SPtrans
    int[] cov_2char -> cov_2char
    int byteToUnsigned(byte) -> byteToUnsigned
    int fourBytesToInt(byte[],int) -> fourBytesToInt
    void intToFourBytes(int,byte[],int) -> intToFourBytes
    void PERM_OP(int,int,int,int,int[]) -> PERM_OP
    int HPERM_OP(int,int,int) -> HPERM_OP
    int[] des_set_key(byte[]) -> des_set_key
    int D_ENCRYPT(int,int,int,int,int,int[]) -> D_ENCRYPT
    int[] body(int[],int,int) -> body
    java.lang.String generate(java.lang.String) -> generate
    boolean match(java.lang.String,java.lang.String) -> match
    java.lang.String crypt(java.lang.String,java.lang.String) -> crypt
    void main(java.lang.String[]) -> main
org.kobjects.io.BoundInputStream -> org.kobjects.io.BoundInputStream:
    int remaining -> remaining
    java.io.InputStream is -> is
    int available() -> available
    int read() -> read
    int read(byte[],int,int) -> read
    void close() -> close
org.kobjects.io.LookAheadReader -> org.kobjects.io.LookAheadReader:
    char[] buf -> buf
    int bufPos -> bufPos
    int bufValid -> bufValid
    java.io.Reader reader -> reader
    int read(char[],int,int) -> read
    java.lang.String readTo(java.lang.String) -> readTo
    java.lang.String readTo(char) -> readTo
    void close() -> close
    int read() -> read
    int peek(int) -> peek
    java.lang.String readLine() -> readLine
    java.lang.String readWhile(java.lang.String) -> readWhile
    void skip(java.lang.String) -> skip
org.kobjects.isodate.IsoDate -> org.kobjects.isodate.IsoDate:
    int DATE -> DATE
    int TIME -> TIME
    int DATE_TIME -> DATE_TIME
    void dd(java.lang.StringBuffer,int) -> dd
    java.lang.String dateToString(java.util.Date,int) -> dateToString
    java.util.Date stringToDate(java.lang.String,int) -> stringToDate
org.kobjects.mime.Decoder -> org.kobjects.mime.Decoder:
    java.io.InputStream is -> is
    java.util.Hashtable header -> header
    boolean eof -> eof
    boolean consumed -> consumed
    java.lang.String boundary -> boundary
    java.lang.String characterEncoding -> characterEncoding
    char[] buf -> buf
    java.lang.String readLine() -> readLine
    java.util.Hashtable getHeaderElements(java.lang.String) -> getHeaderElements
    java.util.Enumeration getHeaderNames() -> getHeaderNames
    java.lang.String getHeader(java.lang.String) -> getHeader
    java.lang.String readContent() -> readContent
    void readContent(java.io.OutputStream) -> readContent
    boolean next() -> next
org.kobjects.pim.PimField -> org.kobjects.pim.PimField:
    java.lang.String name -> name
    java.lang.Object value -> value
    java.util.Hashtable properties -> properties
    java.util.Enumeration propertyNames() -> propertyNames
    void setProperty(java.lang.String,java.lang.String) -> setProperty
    void setValue(java.lang.Object) -> setValue
    java.lang.Object getValue() -> getValue
    java.lang.String toString() -> toString
    java.lang.String getProperty(java.lang.String) -> getProperty
    boolean getAttribute(java.lang.String) -> getAttribute
    void setAttribute(java.lang.String,boolean) -> setAttribute
org.kobjects.pim.PimItem -> org.kobjects.pim.PimItem:
    java.util.Hashtable fields -> fields
    int TYPE_STRING -> TYPE_STRING
    int TYPE_STRING_ARRAY -> TYPE_STRING_ARRAY
    java.util.Enumeration fieldNames() -> fieldNames
    void addField(org.kobjects.pim.PimField) -> addField
    java.util.Enumeration fields() -> fields
    java.util.Enumeration fields(java.lang.String) -> fields
    org.kobjects.pim.PimField getField(java.lang.String,int) -> getField
    int getFieldCount(java.lang.String) -> getFieldCount
    java.lang.String getType() -> getType
    int getArraySize(java.lang.String) -> getArraySize
    int getType(java.lang.String) -> getType
    void removeField(java.lang.String,int) -> removeField
    java.lang.String toString() -> toString
org.kobjects.pim.PimParser -> org.kobjects.pim.PimParser:
    org.kobjects.io.LookAheadReader reader -> reader
    java.lang.Class type -> type
    org.kobjects.pim.PimItem readItem() -> readItem
    java.lang.String readName() -> readName
    java.lang.String[] readArrayValue(int) -> readArrayValue
    java.lang.String readStringValue() -> readStringValue
    void readProperties(org.kobjects.pim.PimField) -> readProperties
org.kobjects.pim.PimWriter -> org.kobjects.pim.PimWriter:
    java.io.Writer writer -> writer
    void writeEntry(org.kobjects.pim.PimItem) -> writeEntry
org.kobjects.pim.VCard -> org.kobjects.pim.VCard:
    java.lang.String getType() -> getType
    int getArraySize(java.lang.String) -> getArraySize
org.kobjects.rss.RssReader -> org.kobjects.rss.RssReader:
    int TITLE -> TITLE
    int LINK -> LINK
    int DESCRIPTION -> DESCRIPTION
    int DATE -> DATE
    int AUTHOR -> AUTHOR
    org.kobjects.xml.XmlReader xr -> xr
    void readText(java.lang.StringBuffer) -> readText
    java.lang.String[] next() -> next
org.kobjects.util.ChainedRuntimeException -> org.kobjects.util.ChainedRuntimeException:
    java.lang.Exception chain -> chain
    org.kobjects.util.ChainedRuntimeException create(java.lang.Exception,java.lang.String) -> create
    org.kobjects.util.ChainedRuntimeException _create(java.lang.Exception,java.lang.String) -> _create
    java.lang.Exception getChained() -> getChained
    void printStackTrace() -> printStackTrace
org.kobjects.util.Csv -> org.kobjects.util.Csv:
    java.lang.String encode(java.lang.String,char) -> encode
    java.lang.String encode(java.lang.Object[]) -> encode
    java.lang.String[] decode(java.lang.String) -> decode
org.kobjects.util.SingleEnumeration -> org.kobjects.util.SingleEnumeration:
    java.lang.Object object -> object
    boolean hasMoreElements() -> hasMoreElements
    java.lang.Object nextElement() -> nextElement
org.kobjects.util.Strings -> org.kobjects.util.Strings:
    java.lang.String replace(java.lang.String,java.lang.String,java.lang.String) -> replace
    java.lang.String toAscii(java.lang.String) -> toAscii
    java.lang.String fill(java.lang.String,int,char) -> fill
    java.lang.String beautify(java.lang.String) -> beautify
    java.lang.String lTrim(java.lang.String,java.lang.String) -> lTrim
    java.lang.String rTrim(java.lang.String,java.lang.String) -> rTrim
org.kobjects.util.Util -> org.kobjects.util.Util:
    java.io.OutputStream streamcopy(java.io.InputStream,java.io.OutputStream) -> streamcopy
    int indexOf(java.lang.Object[],java.lang.Object) -> indexOf
    java.lang.String buildUrl(java.lang.String,java.lang.String) -> buildUrl
    void sort(java.lang.Object[],int,int) -> sort
org.kobjects.xml.XmlReader -> org.kobjects.xml.XmlReader:
    int START_DOCUMENT -> START_DOCUMENT
    int END_DOCUMENT -> END_DOCUMENT
    int START_TAG -> START_TAG
    int END_TAG -> END_TAG
    int TEXT -> TEXT
    int CDSECT -> CDSECT
    int ENTITY_REF -> ENTITY_REF
    java.lang.String UNEXPECTED_EOF -> UNEXPECTED_EOF
    int LEGACY -> LEGACY
    boolean relaxed -> relaxed
    java.util.Hashtable entityMap -> entityMap
    int depth -> depth
    java.lang.String[] elementStack -> elementStack
    java.io.Reader reader -> reader
    char[] srcBuf -> srcBuf
    int srcPos -> srcPos
    int srcCount -> srcCount
    boolean eof -> eof
    int line -> line
    int column -> column
    int peek0 -> peek0
    int peek1 -> peek1
    char[] txtBuf -> txtBuf
    int txtPos -> txtPos
    int type -> type
    java.lang.String text -> text
    boolean isWhitespace -> isWhitespace
    java.lang.String name -> name
    boolean degenerated -> degenerated
    int attributeCount -> attributeCount
    java.lang.String[] attributes -> attributes
    java.lang.String[] TYPES -> TYPES
    int read() -> read
    void exception(java.lang.String) -> exception
    void push(int) -> push
    void read(char) -> read
    void skip() -> skip
    java.lang.String pop(int) -> pop
    java.lang.String readName() -> readName
    void parseLegacy(boolean) -> parseLegacy
    void parseDoctype() -> parseDoctype
    void parseEndTag() -> parseEndTag
    int peekType() -> peekType
    java.lang.String[] ensureCapacity(java.lang.String[],int) -> ensureCapacity
    void parseStartTag() -> parseStartTag
    boolean pushEntity() -> pushEntity
    boolean pushText(int) -> pushText
    void defineCharacterEntity(java.lang.String,java.lang.String) -> defineCharacterEntity
    int getDepth() -> getDepth
    java.lang.String getPositionDescription() -> getPositionDescription
    int getLineNumber() -> getLineNumber
    int getColumnNumber() -> getColumnNumber
    boolean isWhitespace() -> isWhitespace
    java.lang.String getText() -> getText
    java.lang.String getName() -> getName
    boolean isEmptyElementTag() -> isEmptyElementTag
    int getAttributeCount() -> getAttributeCount
    java.lang.String getAttributeName(int) -> getAttributeName
    java.lang.String getAttributeValue(int) -> getAttributeValue
    java.lang.String getAttributeValue(java.lang.String) -> getAttributeValue
    int getType() -> getType
    int next() -> next
    void require(int,java.lang.String) -> require
    java.lang.String readText() -> readText
org.kobjects.xmlrpc.Driver -> org.kobjects.xmlrpc.Driver:
    void main(java.lang.String[]) -> main
org.kobjects.xmlrpc.XmlRpcParser -> org.kobjects.xmlrpc.XmlRpcParser:
    org.kobjects.xml.XmlReader parser -> parser
    java.util.Hashtable parseStruct() -> parseStruct
    java.lang.Object parseValue() -> parseValue
    java.util.Vector parseArray() -> parseArray
    java.lang.Object parseFault() -> parseFault
    java.lang.Object parseParams() -> parseParams
    java.lang.Object parseResponse() -> parseResponse
    int nextTag() -> nextTag
    java.lang.String nextText() -> nextText
org.ksoap2.HeaderProperty -> org.ksoap2.HeaderProperty:
    java.lang.String key -> key
    java.lang.String value -> value
    java.lang.String getKey() -> getKey
    void setKey(java.lang.String) -> setKey
    java.lang.String getValue() -> getValue
    void setValue(java.lang.String) -> setValue
org.ksoap2.SoapEnvelope -> org.ksoap2.SoapEnvelope:
    int VER10 -> VER10
    int VER11 -> VER11
    int VER12 -> VER12
    java.lang.String ENV2001 -> ENV2001
    java.lang.String ENC2001 -> ENC2001
    java.lang.String ENV -> ENV
    java.lang.String ENC -> ENC
    java.lang.String XSD -> XSD
    java.lang.String XSI -> XSI
    java.lang.String XSD1999 -> XSD1999
    java.lang.String XSI1999 -> XSI1999
    java.lang.Object bodyIn -> bodyIn
    java.lang.Object bodyOut -> bodyOut
    org.kxml2.kdom.Element[] headerIn -> headerIn
    org.kxml2.kdom.Element[] headerOut -> headerOut
    java.lang.String encodingStyle -> encodingStyle
    int version -> version
    java.lang.String env -> env
    java.lang.String enc -> enc
    java.lang.String xsi -> xsi
    java.lang.String xsd -> xsd
    boolean stringToBoolean(java.lang.String) -> stringToBoolean
    void parse(org.xmlpull.v1.XmlPullParser) -> parse
    void parseHeader(org.xmlpull.v1.XmlPullParser) -> parseHeader
    void parseBody(org.xmlpull.v1.XmlPullParser) -> parseBody
    void write(org.xmlpull.v1.XmlSerializer) -> write
    void writeHeader(org.xmlpull.v1.XmlSerializer) -> writeHeader
    void writeBody(org.xmlpull.v1.XmlSerializer) -> writeBody
    void setOutputSoapObject(java.lang.Object) -> setOutputSoapObject
org.ksoap2.SoapFault -> org.ksoap2.SoapFault:
    java.lang.String faultcode -> faultcode
    java.lang.String faultstring -> faultstring
    java.lang.String faultactor -> faultactor
    org.kxml2.kdom.Node detail -> detail
    void parse(org.xmlpull.v1.XmlPullParser) -> parse
    void write(org.xmlpull.v1.XmlSerializer) -> write
    java.lang.String getMessage() -> getMessage
    java.lang.String toString() -> toString
org.ksoap2.serialization.AttributeContainer -> org.ksoap2.serialization.AttributeContainer:
    java.util.Vector attributes -> attributes
    void getAttributeInfo(int,org.ksoap2.serialization.AttributeInfo) -> getAttributeInfo
    java.lang.Object getAttribute(int) -> getAttribute
    java.lang.Object getAttribute(java.lang.String) -> getAttribute
    boolean hasAttribute(java.lang.String) -> hasAttribute
    java.lang.Object safeGetAttribute(java.lang.String) -> safeGetAttribute
    java.lang.Integer attributeIndex(java.lang.String) -> attributeIndex
    int getAttributeCount() -> getAttributeCount
    boolean attributesAreEqual(org.ksoap2.serialization.AttributeContainer) -> attributesAreEqual
    void addAttribute(java.lang.String,java.lang.Object) -> addAttribute
    void addAttribute(org.ksoap2.serialization.AttributeInfo) -> addAttribute
org.ksoap2.serialization.AttributeInfo -> org.ksoap2.serialization.AttributeInfo:
org.ksoap2.serialization.DM -> org.ksoap2.serialization.DM:
    java.lang.Object readInstance(org.xmlpull.v1.XmlPullParser,java.lang.String,java.lang.String,org.ksoap2.serialization.PropertyInfo) -> readInstance
    void writeInstance(org.xmlpull.v1.XmlSerializer,java.lang.Object) -> writeInstance
    void register(org.ksoap2.serialization.SoapSerializationEnvelope) -> register
org.ksoap2.serialization.FwdRef -> org.ksoap2.serialization.FwdRef:
    org.ksoap2.serialization.FwdRef next -> next
    java.lang.Object obj -> obj
    int index -> index
org.ksoap2.serialization.KvmSerializable -> org.ksoap2.serialization.KvmSerializable:
    java.lang.Object getProperty(int) -> getProperty
    int getPropertyCount() -> getPropertyCount
    void setProperty(int,java.lang.Object) -> setProperty
    void getPropertyInfo(int,java.util.Hashtable,org.ksoap2.serialization.PropertyInfo) -> getPropertyInfo
org.ksoap2.serialization.Marshal -> org.ksoap2.serialization.Marshal:
    java.lang.Object readInstance(org.xmlpull.v1.XmlPullParser,java.lang.String,java.lang.String,org.ksoap2.serialization.PropertyInfo) -> readInstance
    void writeInstance(org.xmlpull.v1.XmlSerializer,java.lang.Object) -> writeInstance
    void register(org.ksoap2.serialization.SoapSerializationEnvelope) -> register
org.ksoap2.serialization.MarshalBase64 -> org.ksoap2.serialization.MarshalBase64:
    java.lang.Class BYTE_ARRAY_CLASS -> BYTE_ARRAY_CLASS
    java.lang.Object readInstance(org.xmlpull.v1.XmlPullParser,java.lang.String,java.lang.String,org.ksoap2.serialization.PropertyInfo) -> readInstance
    void writeInstance(org.xmlpull.v1.XmlSerializer,java.lang.Object) -> writeInstance
    void register(org.ksoap2.serialization.SoapSerializationEnvelope) -> register
org.ksoap2.serialization.MarshalDate -> org.ksoap2.serialization.MarshalDate:
    java.lang.Class DATE_CLASS -> DATE_CLASS
    java.lang.Object readInstance(org.xmlpull.v1.XmlPullParser,java.lang.String,java.lang.String,org.ksoap2.serialization.PropertyInfo) -> readInstance
    void writeInstance(org.xmlpull.v1.XmlSerializer,java.lang.Object) -> writeInstance
    void register(org.ksoap2.serialization.SoapSerializationEnvelope) -> register
org.ksoap2.serialization.MarshalFloat -> org.ksoap2.serialization.MarshalFloat:
    java.lang.Class class$java$lang$Float -> class$java$lang$Float
    java.lang.Class class$java$lang$Double -> class$java$lang$Double
    java.lang.Class class$java$math$BigDecimal -> class$java$math$BigDecimal
    java.lang.Object readInstance(org.xmlpull.v1.XmlPullParser,java.lang.String,java.lang.String,org.ksoap2.serialization.PropertyInfo) -> readInstance
    void writeInstance(org.xmlpull.v1.XmlSerializer,java.lang.Object) -> writeInstance
    void register(org.ksoap2.serialization.SoapSerializationEnvelope) -> register
    java.lang.Class class$(java.lang.String) -> class$
org.ksoap2.serialization.MarshalHashtable -> org.ksoap2.serialization.MarshalHashtable:
    java.lang.String NAMESPACE -> NAMESPACE
    java.lang.String NAME -> NAME
    java.lang.Class HASHTABLE_CLASS -> HASHTABLE_CLASS
    org.ksoap2.serialization.SoapSerializationEnvelope envelope -> envelope
    java.lang.Object readInstance(org.xmlpull.v1.XmlPullParser,java.lang.String,java.lang.String,org.ksoap2.serialization.PropertyInfo) -> readInstance
    void writeInstance(org.xmlpull.v1.XmlSerializer,java.lang.Object) -> writeInstance
    void register(org.ksoap2.serialization.SoapSerializationEnvelope) -> register
org.ksoap2.serialization.MarshalHashtable$ItemSoapObject -> org.ksoap2.serialization.MarshalHashtable$ItemSoapObject:
    java.util.Hashtable h -> h
    int resolvedIndex -> resolvedIndex
    org.ksoap2.serialization.MarshalHashtable this$0 -> this$0
    void setProperty(int,java.lang.Object) -> setProperty
org.ksoap2.serialization.NullSoapObject -> org.ksoap2.serialization.NullSoapObject:
    java.lang.String toString() -> toString
org.ksoap2.serialization.PropertyInfo -> org.ksoap2.serialization.PropertyInfo:
    java.lang.Class OBJECT_CLASS -> OBJECT_CLASS
    java.lang.Class STRING_CLASS -> STRING_CLASS
    java.lang.Class INTEGER_CLASS -> INTEGER_CLASS
    java.lang.Class LONG_CLASS -> LONG_CLASS
    java.lang.Class BOOLEAN_CLASS -> BOOLEAN_CLASS
    java.lang.Class VECTOR_CLASS -> VECTOR_CLASS
    org.ksoap2.serialization.PropertyInfo OBJECT_TYPE -> OBJECT_TYPE
    int TRANSIENT -> TRANSIENT
    int MULTI_REF -> MULTI_REF
    int REF_ONLY -> REF_ONLY
    java.lang.String name -> name
    java.lang.String namespace -> namespace
    int flags -> flags
    java.lang.Object value -> value
    java.lang.Object type -> type
    boolean multiRef -> multiRef
    org.ksoap2.serialization.PropertyInfo elementType -> elementType
    void clear() -> clear
    org.ksoap2.serialization.PropertyInfo getElementType() -> getElementType
    void setElementType(org.ksoap2.serialization.PropertyInfo) -> setElementType
    int getFlags() -> getFlags
    void setFlags(int) -> setFlags
    boolean isMultiRef() -> isMultiRef
    void setMultiRef(boolean) -> setMultiRef
    java.lang.String getName() -> getName
    void setName(java.lang.String) -> setName
    java.lang.String getNamespace() -> getNamespace
    void setNamespace(java.lang.String) -> setNamespace
    java.lang.Object getType() -> getType
    void setType(java.lang.Object) -> setType
    java.lang.Object getValue() -> getValue
    void setValue(java.lang.Object) -> setValue
    java.lang.String toString() -> toString
org.ksoap2.serialization.SoapObject -> org.ksoap2.serialization.SoapObject:
    java.lang.String namespace -> namespace
    java.lang.String name -> name
    java.util.Vector properties -> properties
    boolean equals(java.lang.Object) -> equals
    java.lang.String getName() -> getName
    java.lang.String getNamespace() -> getNamespace
    java.lang.Object getProperty(int) -> getProperty
    java.lang.Object getProperty(java.lang.String) -> getProperty
    boolean hasProperty(java.lang.String) -> hasProperty
    java.lang.Object safeGetProperty(java.lang.String) -> safeGetProperty
    java.lang.Object safeGetProperty(java.lang.String,java.lang.Object) -> safeGetProperty
    java.lang.Integer propertyIndex(java.lang.String) -> propertyIndex
    int getPropertyCount() -> getPropertyCount
    void getPropertyInfo(int,java.util.Hashtable,org.ksoap2.serialization.PropertyInfo) -> getPropertyInfo
    void getPropertyInfo(int,org.ksoap2.serialization.PropertyInfo) -> getPropertyInfo
    org.ksoap2.serialization.SoapObject newInstance() -> newInstance
    void setProperty(int,java.lang.Object) -> setProperty
    org.ksoap2.serialization.SoapObject addProperty(java.lang.String,java.lang.Object) -> addProperty
    org.ksoap2.serialization.SoapObject addProperty(org.ksoap2.serialization.PropertyInfo,java.lang.Object) -> addProperty
    org.ksoap2.serialization.SoapObject addProperty(org.ksoap2.serialization.PropertyInfo) -> addProperty
    java.lang.String toString() -> toString
org.ksoap2.serialization.SoapPrimitive -> org.ksoap2.serialization.SoapPrimitive:
    java.lang.String namespace -> namespace
    java.lang.String name -> name
    java.lang.String value -> value
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    java.lang.String getNamespace() -> getNamespace
    java.lang.String getName() -> getName
org.ksoap2.serialization.SoapSerializationEnvelope -> org.ksoap2.serialization.SoapSerializationEnvelope:
    int QNAME_TYPE -> QNAME_TYPE
    int QNAME_NAMESPACE -> QNAME_NAMESPACE
    int QNAME_MARSHAL -> QNAME_MARSHAL
    java.lang.String ANY_TYPE_LABEL -> ANY_TYPE_LABEL
    java.lang.String ARRAY_MAPPING_NAME -> ARRAY_MAPPING_NAME
    java.lang.String NULL_LABEL -> NULL_LABEL
    java.lang.String NIL_LABEL -> NIL_LABEL
    java.lang.String HREF_LABEL -> HREF_LABEL
    java.lang.String ID_LABEL -> ID_LABEL
    java.lang.String ROOT_LABEL -> ROOT_LABEL
    java.lang.String TYPE_LABEL -> TYPE_LABEL
    java.lang.String ITEM_LABEL -> ITEM_LABEL
    java.lang.String ARRAY_TYPE_LABEL -> ARRAY_TYPE_LABEL
    org.ksoap2.serialization.Marshal DEFAULT_MARSHAL -> DEFAULT_MARSHAL
    java.util.Hashtable properties -> properties
    java.util.Hashtable idMap -> idMap
    java.util.Vector multiRef -> multiRef
    boolean implicitTypes -> implicitTypes
    boolean dotNet -> dotNet
    java.util.Hashtable qNameToClass -> qNameToClass
    java.util.Hashtable classToQName -> classToQName
    boolean addAdornments -> addAdornments
    java.lang.Class class$org$ksoap2$serialization$SoapObject -> class$org$ksoap2$serialization$SoapObject
    boolean isAddAdornments() -> isAddAdornments
    void setAddAdornments(boolean) -> setAddAdornments
    void parseBody(org.xmlpull.v1.XmlPullParser) -> parseBody
    void readSerializable(org.xmlpull.v1.XmlPullParser,org.ksoap2.serialization.SoapObject) -> readSerializable
    void readSerializable(org.xmlpull.v1.XmlPullParser,org.ksoap2.serialization.KvmSerializable) -> readSerializable
    java.lang.Object readUnknown(org.xmlpull.v1.XmlPullParser,java.lang.String,java.lang.String) -> readUnknown
    int getIndex(java.lang.String,int,int) -> getIndex
    void readVector(org.xmlpull.v1.XmlPullParser,java.util.Vector,org.ksoap2.serialization.PropertyInfo) -> readVector
    java.lang.Object read(org.xmlpull.v1.XmlPullParser,java.lang.Object,int,java.lang.String,java.lang.String,org.ksoap2.serialization.PropertyInfo) -> read
    java.lang.Object readInstance(org.xmlpull.v1.XmlPullParser,java.lang.String,java.lang.String,org.ksoap2.serialization.PropertyInfo) -> readInstance
    java.lang.Object[] getInfo(java.lang.Object,java.lang.Object) -> getInfo
    void addMapping(java.lang.String,java.lang.String,java.lang.Class,org.ksoap2.serialization.Marshal) -> addMapping
    void addMapping(java.lang.String,java.lang.String,java.lang.Class) -> addMapping
    void addTemplate(org.ksoap2.serialization.SoapObject) -> addTemplate
    java.lang.Object getResponse() -> getResponse
    java.lang.Object getResult() -> getResult
    void writeBody(org.xmlpull.v1.XmlSerializer) -> writeBody
    void writeObjectBody(org.xmlpull.v1.XmlSerializer,org.ksoap2.serialization.SoapObject) -> writeObjectBody
    void writeObjectBody(org.xmlpull.v1.XmlSerializer,org.ksoap2.serialization.KvmSerializable) -> writeObjectBody
    void writeProperty(org.xmlpull.v1.XmlSerializer,java.lang.Object,org.ksoap2.serialization.PropertyInfo) -> writeProperty
    void writeElement(org.xmlpull.v1.XmlSerializer,java.lang.Object,org.ksoap2.serialization.PropertyInfo,java.lang.Object) -> writeElement
    void writeVectorBody(org.xmlpull.v1.XmlSerializer,java.util.Vector,org.ksoap2.serialization.PropertyInfo) -> writeVectorBody
    java.lang.Class class$(java.lang.String) -> class$
org.ksoap2.transport.AndroidHttpTransport -> org.ksoap2.transport.AndroidHttpTransport:
    org.ksoap2.transport.ServiceConnection getServiceConnection() -> getServiceConnection
org.ksoap2.transport.AndroidServiceConnection -> org.ksoap2.transport.AndroidServiceConnection:
org.ksoap2.transport.HttpTransportSE -> org.ksoap2.transport.HttpTransportSE:
    org.ksoap2.transport.ServiceConnectionSE connection -> connection
    void call(java.lang.String,org.ksoap2.SoapEnvelope) -> call
    java.util.List call(java.lang.String,org.ksoap2.SoapEnvelope,java.util.List) -> call
    org.ksoap2.transport.ServiceConnectionSE getConnection() -> getConnection
    org.ksoap2.transport.ServiceConnectionSE getServiceConnection() -> getServiceConnection
    java.lang.String getHost() -> getHost
    int getPort() -> getPort
    java.lang.String getPath() -> getPath
org.ksoap2.transport.HttpsServiceConnectionSE -> org.ksoap2.transport.HttpsServiceConnectionSE:
    javax.net.ssl.HttpsURLConnection connection -> connection
    void updateConnectionParameters(int) -> updateConnectionParameters
    void connect() -> connect
    void disconnect() -> disconnect
    java.util.List getResponseProperties() -> getResponseProperties
    void setRequestProperty(java.lang.String,java.lang.String) -> setRequestProperty
    void setRequestMethod(java.lang.String) -> setRequestMethod
    java.io.OutputStream openOutputStream() -> openOutputStream
    java.io.InputStream openInputStream() -> openInputStream
    java.io.InputStream getErrorStream() -> getErrorStream
    java.lang.String getHost() -> getHost
    int getPort() -> getPort
    java.lang.String getPath() -> getPath
org.ksoap2.transport.HttpsTransportSE -> org.ksoap2.transport.HttpsTransportSE:
    java.lang.String PROTOCOL -> PROTOCOL
    org.ksoap2.transport.HttpsServiceConnectionSE conn -> conn
    java.lang.String host -> host
    int port -> port
    java.lang.String file -> file
    int timeout -> timeout
    org.ksoap2.transport.ServiceConnection getConnection() -> getConnection
    org.ksoap2.transport.ServiceConnection getServiceConnection() -> getServiceConnection
    java.lang.String getHost() -> getHost
    int getPort() -> getPort
    java.lang.String getPath() -> getPath
org.ksoap2.transport.KeepAliveHttpsTransportSE -> org.ksoap2.transport.KeepAliveHttpsTransportSE:
    org.ksoap2.transport.HttpsServiceConnectionSE conn -> conn
    java.lang.String host -> host
    int port -> port
    java.lang.String file -> file
    int timeout -> timeout
    org.ksoap2.transport.ServiceConnection getServiceConnection() -> getServiceConnection
org.ksoap2.transport.KeepAliveHttpsTransportSE$1 -> org.ksoap2.transport.KeepAliveHttpsTransportSE$1:
    org.ksoap2.transport.KeepAliveHttpsTransportSE this$0 -> this$0
    void setRequestProperty(java.lang.String,java.lang.String) -> setRequestProperty
org.ksoap2.transport.ServiceConnection -> org.ksoap2.transport.ServiceConnection:
    void connect() -> connect
    void disconnect() -> disconnect
    java.util.List getResponseProperties() -> getResponseProperties
    void setRequestProperty(java.lang.String,java.lang.String) -> setRequestProperty
    void setRequestMethod(java.lang.String) -> setRequestMethod
    java.io.OutputStream openOutputStream() -> openOutputStream
    java.io.InputStream openInputStream() -> openInputStream
    java.io.InputStream getErrorStream() -> getErrorStream
    java.lang.String getHost() -> getHost
    int getPort() -> getPort
    java.lang.String getPath() -> getPath
    void setConnectTimeOut(int) -> setConnectTimeOut
org.ksoap2.transport.ServiceConnectionSE -> org.ksoap2.transport.ServiceConnectionSE:
    java.net.HttpURLConnection connection -> connection
    void connect() -> connect
    void disconnect() -> disconnect
    java.util.List getResponseProperties() -> getResponseProperties
    void setRequestProperty(java.lang.String,java.lang.String) -> setRequestProperty
    void setRequestMethod(java.lang.String) -> setRequestMethod
    java.io.OutputStream openOutputStream() -> openOutputStream
    java.io.InputStream openInputStream() -> openInputStream
    java.io.InputStream getErrorStream() -> getErrorStream
    java.lang.String getHost() -> getHost
    int getPort() -> getPort
    java.lang.String getPath() -> getPath
    void setConnectTimeOut(int) -> setConnectTimeOut
org.ksoap2.transport.Transport -> org.ksoap2.transport.Transport:
    java.net.Proxy proxy -> proxy
    java.lang.String url -> url
    int timeout -> timeout
    boolean debug -> debug
    java.lang.String requestDump -> requestDump
    java.lang.String responseDump -> responseDump
    java.lang.String xmlVersionTag -> xmlVersionTag
    void parseResponse(org.ksoap2.SoapEnvelope,java.io.InputStream) -> parseResponse
    byte[] createRequestData(org.ksoap2.SoapEnvelope) -> createRequestData
    void setUrl(java.lang.String) -> setUrl
    void setXmlVersionTag(java.lang.String) -> setXmlVersionTag
    void reset() -> reset
    java.util.List call(java.lang.String,org.ksoap2.SoapEnvelope,java.util.List) -> call
    void call(java.lang.String,org.ksoap2.SoapEnvelope) -> call
    java.lang.String getHost() -> getHost
    int getPort() -> getPort
    java.lang.String getPath() -> getPath
org.kxml2.io.KXmlParser -> org.kxml2.io.KXmlParser:
    java.lang.Object location -> location
    java.lang.String UNEXPECTED_EOF -> UNEXPECTED_EOF
    java.lang.String ILLEGAL_TYPE -> ILLEGAL_TYPE
    int LEGACY -> LEGACY
    int XML_DECL -> XML_DECL
    java.lang.String version -> version
    java.lang.Boolean standalone -> standalone
    boolean processNsp -> processNsp
    boolean relaxed -> relaxed
    java.util.Hashtable entityMap -> entityMap
    int depth -> depth
    java.lang.String[] elementStack -> elementStack
    java.lang.String[] nspStack -> nspStack
    int[] nspCounts -> nspCounts
    java.io.Reader reader -> reader
    java.lang.String encoding -> encoding
    char[] srcBuf -> srcBuf
    int srcPos -> srcPos
    int srcCount -> srcCount
    int line -> line
    int column -> column
    char[] txtBuf -> txtBuf
    int txtPos -> txtPos
    int type -> type
    boolean isWhitespace -> isWhitespace
    java.lang.String namespace -> namespace
    java.lang.String prefix -> prefix
    java.lang.String name -> name
    boolean degenerated -> degenerated
    int attributeCount -> attributeCount
    java.lang.String[] attributes -> attributes
    java.lang.String error -> error
    int[] peek -> peek
    int peekCount -> peekCount
    boolean wasCR -> wasCR
    boolean unresolved -> unresolved
    boolean token -> token
    boolean isProp(java.lang.String,boolean,java.lang.String) -> isProp
    boolean adjustNsp() -> adjustNsp
    java.lang.String[] ensureCapacity(java.lang.String[],int) -> ensureCapacity
    void error(java.lang.String) -> error
    void exception(java.lang.String) -> exception
    void nextImpl() -> nextImpl
    int parseLegacy(boolean) -> parseLegacy
    void parseDoctype(boolean) -> parseDoctype
    void parseEndTag() -> parseEndTag
    int peekType() -> peekType
    java.lang.String get(int) -> get
    void push(int) -> push
    void parseStartTag(boolean) -> parseStartTag
    void pushEntity() -> pushEntity
    void pushText(int,boolean) -> pushText
    void read(char) -> read
    int read() -> read
    int peek(int) -> peek
    java.lang.String readName() -> readName
    void skip() -> skip
    void setInput(java.io.Reader) -> setInput
    void setInput(java.io.InputStream,java.lang.String) -> setInput
    boolean getFeature(java.lang.String) -> getFeature
    java.lang.String getInputEncoding() -> getInputEncoding
    void defineEntityReplacementText(java.lang.String,java.lang.String) -> defineEntityReplacementText
    java.lang.Object getProperty(java.lang.String) -> getProperty
    int getNamespaceCount(int) -> getNamespaceCount
    java.lang.String getNamespacePrefix(int) -> getNamespacePrefix
    java.lang.String getNamespaceUri(int) -> getNamespaceUri
    java.lang.String getNamespace(java.lang.String) -> getNamespace
    int getDepth() -> getDepth
    java.lang.String getPositionDescription() -> getPositionDescription
    int getLineNumber() -> getLineNumber
    int getColumnNumber() -> getColumnNumber
    boolean isWhitespace() -> isWhitespace
    java.lang.String getText() -> getText
    char[] getTextCharacters(int[]) -> getTextCharacters
    java.lang.String getNamespace() -> getNamespace
    java.lang.String getName() -> getName
    java.lang.String getPrefix() -> getPrefix
    boolean isEmptyElementTag() -> isEmptyElementTag
    int getAttributeCount() -> getAttributeCount
    java.lang.String getAttributeType(int) -> getAttributeType
    boolean isAttributeDefault(int) -> isAttributeDefault
    java.lang.String getAttributeNamespace(int) -> getAttributeNamespace
    java.lang.String getAttributeName(int) -> getAttributeName
    java.lang.String getAttributePrefix(int) -> getAttributePrefix
    java.lang.String getAttributeValue(int) -> getAttributeValue
    java.lang.String getAttributeValue(java.lang.String,java.lang.String) -> getAttributeValue
    int getEventType() -> getEventType
    int next() -> next
    int nextToken() -> nextToken
    int nextTag() -> nextTag
    void require(int,java.lang.String,java.lang.String) -> require
    java.lang.String nextText() -> nextText
    void setFeature(java.lang.String,boolean) -> setFeature
    void setProperty(java.lang.String,java.lang.Object) -> setProperty
    void skipSubTree() -> skipSubTree
org.kxml2.io.KXmlSerializer -> org.kxml2.io.KXmlSerializer:
    java.io.Writer writer -> writer
    boolean pending -> pending
    int auto -> auto
    int depth -> depth
    java.lang.String[] elementStack -> elementStack
    int[] nspCounts -> nspCounts
    java.lang.String[] nspStack -> nspStack
    boolean[] indent -> indent
    boolean unicode -> unicode
    java.lang.String encoding -> encoding
    void check(boolean) -> check
    void writeEscaped(java.lang.String,int) -> writeEscaped
    void docdecl(java.lang.String) -> docdecl
    void endDocument() -> endDocument
    void entityRef(java.lang.String) -> entityRef
    boolean getFeature(java.lang.String) -> getFeature
    java.lang.String getPrefix(java.lang.String,boolean) -> getPrefix
    java.lang.String getPrefix(java.lang.String,boolean,boolean) -> getPrefix
    java.lang.Object getProperty(java.lang.String) -> getProperty
    void ignorableWhitespace(java.lang.String) -> ignorableWhitespace
    void setFeature(java.lang.String,boolean) -> setFeature
    void setProperty(java.lang.String,java.lang.Object) -> setProperty
    void setPrefix(java.lang.String,java.lang.String) -> setPrefix
    void setOutput(java.io.Writer) -> setOutput
    void setOutput(java.io.OutputStream,java.lang.String) -> setOutput
    void startDocument(java.lang.String,java.lang.Boolean) -> startDocument
    org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String) -> startTag
    org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String) -> attribute
    void flush() -> flush
    org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String) -> endTag
    java.lang.String getNamespace() -> getNamespace
    java.lang.String getName() -> getName
    int getDepth() -> getDepth
    org.xmlpull.v1.XmlSerializer text(java.lang.String) -> text
    org.xmlpull.v1.XmlSerializer text(char[],int,int) -> text
    void cdsect(java.lang.String) -> cdsect
    void comment(java.lang.String) -> comment
    void processingInstruction(java.lang.String) -> processingInstruction
org.kxml2.kdom.Document -> org.kxml2.kdom.Document:
    int rootIndex -> rootIndex
    java.lang.String encoding -> encoding
    java.lang.Boolean standalone -> standalone
    java.lang.String getEncoding() -> getEncoding
    void setEncoding(java.lang.String) -> setEncoding
    void setStandalone(java.lang.Boolean) -> setStandalone
    java.lang.Boolean getStandalone() -> getStandalone
    java.lang.String getName() -> getName
    void addChild(int,int,java.lang.Object) -> addChild
    void parse(org.xmlpull.v1.XmlPullParser) -> parse
    void removeChild(int) -> removeChild
    org.kxml2.kdom.Element getRootElement() -> getRootElement
    void write(org.xmlpull.v1.XmlSerializer) -> write
org.kxml2.kdom.Element -> org.kxml2.kdom.Element:
    java.lang.String namespace -> namespace
    java.lang.String name -> name
    java.util.Vector attributes -> attributes
    org.kxml2.kdom.Node parent -> parent
    java.util.Vector prefixes -> prefixes
    void init() -> init
    void clear() -> clear
    org.kxml2.kdom.Element createElement(java.lang.String,java.lang.String) -> createElement
    int getAttributeCount() -> getAttributeCount
    java.lang.String getAttributeNamespace(int) -> getAttributeNamespace
    java.lang.String getAttributeName(int) -> getAttributeName
    java.lang.String getAttributeValue(int) -> getAttributeValue
    java.lang.String getAttributeValue(java.lang.String,java.lang.String) -> getAttributeValue
    org.kxml2.kdom.Node getRoot() -> getRoot
    java.lang.String getName() -> getName
    java.lang.String getNamespace() -> getNamespace
    java.lang.String getNamespaceUri(java.lang.String) -> getNamespaceUri
    int getNamespaceCount() -> getNamespaceCount
    java.lang.String getNamespacePrefix(int) -> getNamespacePrefix
    java.lang.String getNamespaceUri(int) -> getNamespaceUri
    org.kxml2.kdom.Node getParent() -> getParent
    void parse(org.xmlpull.v1.XmlPullParser) -> parse
    void setAttribute(java.lang.String,java.lang.String,java.lang.String) -> setAttribute
    void setPrefix(java.lang.String,java.lang.String) -> setPrefix
    void setName(java.lang.String) -> setName
    void setNamespace(java.lang.String) -> setNamespace
    void setParent(org.kxml2.kdom.Node) -> setParent
    void write(org.xmlpull.v1.XmlSerializer) -> write
org.kxml2.kdom.Node -> org.kxml2.kdom.Node:
    int DOCUMENT -> DOCUMENT
    int ELEMENT -> ELEMENT
    int TEXT -> TEXT
    int CDSECT -> CDSECT
    int ENTITY_REF -> ENTITY_REF
    int IGNORABLE_WHITESPACE -> IGNORABLE_WHITESPACE
    int PROCESSING_INSTRUCTION -> PROCESSING_INSTRUCTION
    int COMMENT -> COMMENT
    int DOCDECL -> DOCDECL
    java.util.Vector children -> children
    java.lang.StringBuffer types -> types
    void addChild(int,int,java.lang.Object) -> addChild
    void addChild(int,java.lang.Object) -> addChild
    org.kxml2.kdom.Element createElement(java.lang.String,java.lang.String) -> createElement
    java.lang.Object getChild(int) -> getChild
    int getChildCount() -> getChildCount
    org.kxml2.kdom.Element getElement(int) -> getElement
    org.kxml2.kdom.Element getElement(java.lang.String,java.lang.String) -> getElement
    java.lang.String getText(int) -> getText
    int getType(int) -> getType
    int indexOf(java.lang.String,java.lang.String,int) -> indexOf
    boolean isText(int) -> isText
    void parse(org.xmlpull.v1.XmlPullParser) -> parse
    void removeChild(int) -> removeChild
    void write(org.xmlpull.v1.XmlSerializer) -> write
    void writeChildren(org.xmlpull.v1.XmlSerializer) -> writeChildren
org.kxml2.wap.Wbxml -> org.kxml2.wap.Wbxml:
    int SWITCH_PAGE -> SWITCH_PAGE
    int END -> END
    int ENTITY -> ENTITY
    int STR_I -> STR_I
    int LITERAL -> LITERAL
    int EXT_I_0 -> EXT_I_0
    int EXT_I_1 -> EXT_I_1
    int EXT_I_2 -> EXT_I_2
    int PI -> PI
    int LITERAL_C -> LITERAL_C
    int EXT_T_0 -> EXT_T_0
    int EXT_T_1 -> EXT_T_1
    int EXT_T_2 -> EXT_T_2
    int STR_T -> STR_T
    int LITERAL_A -> LITERAL_A
    int EXT_0 -> EXT_0
    int EXT_1 -> EXT_1
    int EXT_2 -> EXT_2
    int OPAQUE -> OPAQUE
    int LITERAL_AC -> LITERAL_AC
org.kxml2.wap.WbxmlParser -> org.kxml2.wap.WbxmlParser:
    java.lang.String HEX_DIGITS -> HEX_DIGITS
    int WAP_EXTENSION -> WAP_EXTENSION
    java.lang.String UNEXPECTED_EOF -> UNEXPECTED_EOF
    java.lang.String ILLEGAL_TYPE -> ILLEGAL_TYPE
    java.io.InputStream in -> in
    int TAG_TABLE -> TAG_TABLE
    int ATTR_START_TABLE -> ATTR_START_TABLE
    int ATTR_VALUE_TABLE -> ATTR_VALUE_TABLE
    java.lang.String[] attrStartTable -> attrStartTable
    java.lang.String[] attrValueTable -> attrValueTable
    java.lang.String[] tagTable -> tagTable
    byte[] stringTable -> stringTable
    java.util.Hashtable cacheStringTable -> cacheStringTable
    boolean processNsp -> processNsp
    int depth -> depth
    java.lang.String[] elementStack -> elementStack
    java.lang.String[] nspStack -> nspStack
    int[] nspCounts -> nspCounts
    int attributeCount -> attributeCount
    java.lang.String[] attributes -> attributes
    int nextId -> nextId
    java.util.Vector tables -> tables
    int version -> version
    int publicIdentifierId -> publicIdentifierId
    java.lang.String prefix -> prefix
    java.lang.String namespace -> namespace
    java.lang.String name -> name
    java.lang.String text -> text
    java.lang.Object wapExtensionData -> wapExtensionData
    int wapCode -> wapCode
    int type -> type
    boolean degenerated -> degenerated
    boolean isWhitespace -> isWhitespace
    java.lang.String encoding -> encoding
    boolean getFeature(java.lang.String) -> getFeature
    java.lang.String getInputEncoding() -> getInputEncoding
    void defineEntityReplacementText(java.lang.String,java.lang.String) -> defineEntityReplacementText
    java.lang.Object getProperty(java.lang.String) -> getProperty
    int getNamespaceCount(int) -> getNamespaceCount
    java.lang.String getNamespacePrefix(int) -> getNamespacePrefix
    java.lang.String getNamespaceUri(int) -> getNamespaceUri
    java.lang.String getNamespace(java.lang.String) -> getNamespace
    int getDepth() -> getDepth
    java.lang.String getPositionDescription() -> getPositionDescription
    int getLineNumber() -> getLineNumber
    int getColumnNumber() -> getColumnNumber
    boolean isWhitespace() -> isWhitespace
    java.lang.String getText() -> getText
    char[] getTextCharacters(int[]) -> getTextCharacters
    java.lang.String getNamespace() -> getNamespace
    java.lang.String getName() -> getName
    java.lang.String getPrefix() -> getPrefix
    boolean isEmptyElementTag() -> isEmptyElementTag
    int getAttributeCount() -> getAttributeCount
    java.lang.String getAttributeType(int) -> getAttributeType
    boolean isAttributeDefault(int) -> isAttributeDefault
    java.lang.String getAttributeNamespace(int) -> getAttributeNamespace
    java.lang.String getAttributeName(int) -> getAttributeName
    java.lang.String getAttributePrefix(int) -> getAttributePrefix
    java.lang.String getAttributeValue(int) -> getAttributeValue
    java.lang.String getAttributeValue(java.lang.String,java.lang.String) -> getAttributeValue
    int getEventType() -> getEventType
    int next() -> next
    int nextToken() -> nextToken
    int nextTag() -> nextTag
    java.lang.String nextText() -> nextText
    void require(int,java.lang.String,java.lang.String) -> require
    void setInput(java.io.Reader) -> setInput
    void setInput(java.io.InputStream,java.lang.String) -> setInput
    void setFeature(java.lang.String,boolean) -> setFeature
    void setProperty(java.lang.String,java.lang.Object) -> setProperty
    boolean adjustNsp() -> adjustNsp
    void setTable(int,int,java.lang.String[]) -> setTable
    void exception(java.lang.String) -> exception
    void selectPage(int,boolean) -> selectPage
    void nextImpl() -> nextImpl
    java.lang.Object parseWapExtension(int) -> parseWapExtension
    void readAttr() -> readAttr
    int peekId() -> peekId
    java.lang.String resolveWapExtension(int,java.lang.Object) -> resolveWapExtension
    java.lang.String resolveId(java.lang.String[],int) -> resolveId
    void parseElement(int) -> parseElement
    java.lang.String[] ensureCapacity(java.lang.String[],int) -> ensureCapacity
    int readByte() -> readByte
    int readInt() -> readInt
    java.lang.String readStrI() -> readStrI
    java.lang.String readStrT() -> readStrT
    void setTagTable(int,java.lang.String[]) -> setTagTable
    void setAttrStartTable(int,java.lang.String[]) -> setAttrStartTable
    void setAttrValueTable(int,java.lang.String[]) -> setAttrValueTable
    int getWapCode() -> getWapCode
    java.lang.Object getWapExtensionData() -> getWapExtensionData
org.kxml2.wap.WbxmlSerializer -> org.kxml2.wap.WbxmlSerializer:
    java.util.Hashtable stringTable -> stringTable
    java.io.OutputStream out -> out
    java.io.ByteArrayOutputStream buf -> buf
    java.io.ByteArrayOutputStream stringTableBuf -> stringTableBuf
    java.lang.String pending -> pending
    int depth -> depth
    java.lang.String name -> name
    java.lang.String namespace -> namespace
    java.util.Vector attributes -> attributes
    java.util.Hashtable attrStartTable -> attrStartTable
    java.util.Hashtable attrValueTable -> attrValueTable
    java.util.Hashtable tagTable -> tagTable
    int attrPage -> attrPage
    int tagPage -> tagPage
    java.lang.String encoding -> encoding
    boolean headerSent -> headerSent
    org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String) -> attribute
    void cdsect(java.lang.String) -> cdsect
    void comment(java.lang.String) -> comment
    void docdecl(java.lang.String) -> docdecl
    void entityRef(java.lang.String) -> entityRef
    int getDepth() -> getDepth
    boolean getFeature(java.lang.String) -> getFeature
    java.lang.String getNamespace() -> getNamespace
    java.lang.String getName() -> getName
    java.lang.String getPrefix(java.lang.String,boolean) -> getPrefix
    java.lang.Object getProperty(java.lang.String) -> getProperty
    void ignorableWhitespace(java.lang.String) -> ignorableWhitespace
    void endDocument() -> endDocument
    void flush() -> flush
    void checkPending(boolean) -> checkPending
    void processingInstruction(java.lang.String) -> processingInstruction
    void setFeature(java.lang.String,boolean) -> setFeature
    void setOutput(java.io.Writer) -> setOutput
    void setOutput(java.io.OutputStream,java.lang.String) -> setOutput
    void setPrefix(java.lang.String,java.lang.String) -> setPrefix
    void setProperty(java.lang.String,java.lang.Object) -> setProperty
    void startDocument(java.lang.String,java.lang.Boolean) -> startDocument
    org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String) -> startTag
    org.xmlpull.v1.XmlSerializer text(char[],int,int) -> text
    org.xmlpull.v1.XmlSerializer text(java.lang.String) -> text
    void writeStr(java.lang.String) -> writeStr
    org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String) -> endTag
    void writeWapExtension(int,java.lang.Object) -> writeWapExtension
    void writeInt(java.io.OutputStream,int) -> writeInt
    void writeStrI(java.io.OutputStream,java.lang.String) -> writeStrI
    void writeStrT(java.lang.String,boolean) -> writeStrT
    int addToStringTable(java.lang.String,boolean) -> addToStringTable
    void setTagTable(int,java.lang.String[]) -> setTagTable
    void setAttrStartTable(int,java.lang.String[]) -> setAttrStartTable
    void setAttrValueTable(int,java.lang.String[]) -> setAttrValueTable
org.kxml2.wap.syncml.SyncML -> org.kxml2.wap.syncml.SyncML:
    java.lang.String[] TAG_TABLE_0 -> TAG_TABLE_0
    java.lang.String[] TAG_TABLE_1 -> TAG_TABLE_1
    java.lang.String[] TAG_TABLE_2_DM -> TAG_TABLE_2_DM
    org.kxml2.wap.WbxmlParser createParser() -> createParser
    org.kxml2.wap.WbxmlSerializer createSerializer() -> createSerializer
    org.kxml2.wap.WbxmlParser createDMParser() -> createDMParser
    org.kxml2.wap.WbxmlSerializer createDMSerializer() -> createDMSerializer
org.kxml2.wap.wml.Wml -> org.kxml2.wap.wml.Wml:
    java.lang.String[] TAG_TABLE -> TAG_TABLE
    java.lang.String[] ATTR_START_TABLE -> ATTR_START_TABLE
    java.lang.String[] ATTR_VALUE_TABLE -> ATTR_VALUE_TABLE
    org.kxml2.wap.WbxmlParser createParser() -> createParser
    org.kxml2.wap.WbxmlSerializer createSerializer() -> createSerializer
org.kxml2.wap.wv.WV -> org.kxml2.wap.wv.WV:
    java.lang.String[] tagTablePage0 -> tagTablePage0
    java.lang.String[] tagTablePage1 -> tagTablePage1
    java.lang.String[] tagTablePage2 -> tagTablePage2
    java.lang.String[] tagTablePage3 -> tagTablePage3
    java.lang.String[] tagTablePage4 -> tagTablePage4
    java.lang.String[] tagTablePage5 -> tagTablePage5
    java.lang.String[] tagTablePage6 -> tagTablePage6
    java.lang.String[] tagTablePage7 -> tagTablePage7
    java.lang.String[] tagTablePage8 -> tagTablePage8
    java.lang.String[] tagTablePage9 -> tagTablePage9
    java.lang.String[] tagTablePageA -> tagTablePageA
    java.lang.String[] attrStartTable -> attrStartTable
    java.lang.String[] attrValueTable -> attrValueTable
    org.kxml2.wap.WbxmlParser createParser() -> createParser
org.xmlpull.v1.XmlPullParser -> org.xmlpull.v1.XmlPullParser:
    java.lang.String NO_NAMESPACE -> NO_NAMESPACE
    int START_DOCUMENT -> START_DOCUMENT
    int END_DOCUMENT -> END_DOCUMENT
    int START_TAG -> START_TAG
    int END_TAG -> END_TAG
    int TEXT -> TEXT
    int CDSECT -> CDSECT
    int ENTITY_REF -> ENTITY_REF
    int IGNORABLE_WHITESPACE -> IGNORABLE_WHITESPACE
    int PROCESSING_INSTRUCTION -> PROCESSING_INSTRUCTION
    int COMMENT -> COMMENT
    int DOCDECL -> DOCDECL
    java.lang.String[] TYPES -> TYPES
    java.lang.String FEATURE_PROCESS_NAMESPACES -> FEATURE_PROCESS_NAMESPACES
    java.lang.String FEATURE_REPORT_NAMESPACE_ATTRIBUTES -> FEATURE_REPORT_NAMESPACE_ATTRIBUTES
    java.lang.String FEATURE_PROCESS_DOCDECL -> FEATURE_PROCESS_DOCDECL
    java.lang.String FEATURE_VALIDATION -> FEATURE_VALIDATION
    void setFeature(java.lang.String,boolean) -> setFeature
    boolean getFeature(java.lang.String) -> getFeature
    void setProperty(java.lang.String,java.lang.Object) -> setProperty
    java.lang.Object getProperty(java.lang.String) -> getProperty
    void setInput(java.io.Reader) -> setInput
    void setInput(java.io.InputStream,java.lang.String) -> setInput
    java.lang.String getInputEncoding() -> getInputEncoding
    void defineEntityReplacementText(java.lang.String,java.lang.String) -> defineEntityReplacementText
    int getNamespaceCount(int) -> getNamespaceCount
    java.lang.String getNamespacePrefix(int) -> getNamespacePrefix
    java.lang.String getNamespaceUri(int) -> getNamespaceUri
    java.lang.String getNamespace(java.lang.String) -> getNamespace
    int getDepth() -> getDepth
    java.lang.String getPositionDescription() -> getPositionDescription
    int getLineNumber() -> getLineNumber
    int getColumnNumber() -> getColumnNumber
    boolean isWhitespace() -> isWhitespace
    java.lang.String getText() -> getText
    char[] getTextCharacters(int[]) -> getTextCharacters
    java.lang.String getNamespace() -> getNamespace
    java.lang.String getName() -> getName
    java.lang.String getPrefix() -> getPrefix
    boolean isEmptyElementTag() -> isEmptyElementTag
    int getAttributeCount() -> getAttributeCount
    java.lang.String getAttributeNamespace(int) -> getAttributeNamespace
    java.lang.String getAttributeName(int) -> getAttributeName
    java.lang.String getAttributePrefix(int) -> getAttributePrefix
    java.lang.String getAttributeType(int) -> getAttributeType
    boolean isAttributeDefault(int) -> isAttributeDefault
    java.lang.String getAttributeValue(int) -> getAttributeValue
    java.lang.String getAttributeValue(java.lang.String,java.lang.String) -> getAttributeValue
    int getEventType() -> getEventType
    int next() -> next
    int nextToken() -> nextToken
    void require(int,java.lang.String,java.lang.String) -> require
    java.lang.String nextText() -> nextText
    int nextTag() -> nextTag
org.xmlpull.v1.XmlPullParserException -> org.xmlpull.v1.XmlPullParserException:
    java.lang.Throwable detail -> detail
    int row -> row
    int column -> column
    java.lang.Throwable getDetail() -> getDetail
    int getLineNumber() -> getLineNumber
    int getColumnNumber() -> getColumnNumber
    void printStackTrace() -> printStackTrace
org.xmlpull.v1.XmlPullParserFactory -> org.xmlpull.v1.XmlPullParserFactory:
    java.lang.Class referenceContextClass -> referenceContextClass
    java.lang.String PROPERTY_NAME -> PROPERTY_NAME
    java.lang.String RESOURCE_NAME -> RESOURCE_NAME
    java.util.Vector parserClasses -> parserClasses
    java.lang.String classNamesLocation -> classNamesLocation
    java.util.Vector serializerClasses -> serializerClasses
    java.util.Hashtable features -> features
    void setFeature(java.lang.String,boolean) -> setFeature
    boolean getFeature(java.lang.String) -> getFeature
    void setNamespaceAware(boolean) -> setNamespaceAware
    boolean isNamespaceAware() -> isNamespaceAware
    void setValidating(boolean) -> setValidating
    boolean isValidating() -> isValidating
    org.xmlpull.v1.XmlPullParser newPullParser() -> newPullParser
    org.xmlpull.v1.XmlSerializer newSerializer() -> newSerializer
    org.xmlpull.v1.XmlPullParserFactory newInstance() -> newInstance
    org.xmlpull.v1.XmlPullParserFactory newInstance(java.lang.String,java.lang.Class) -> newInstance
org.xmlpull.v1.XmlSerializer -> org.xmlpull.v1.XmlSerializer:
    void setFeature(java.lang.String,boolean) -> setFeature
    boolean getFeature(java.lang.String) -> getFeature
    void setProperty(java.lang.String,java.lang.Object) -> setProperty
    java.lang.Object getProperty(java.lang.String) -> getProperty
    void setOutput(java.io.OutputStream,java.lang.String) -> setOutput
    void setOutput(java.io.Writer) -> setOutput
    void startDocument(java.lang.String,java.lang.Boolean) -> startDocument
    void endDocument() -> endDocument
    void setPrefix(java.lang.String,java.lang.String) -> setPrefix
    java.lang.String getPrefix(java.lang.String,boolean) -> getPrefix
    int getDepth() -> getDepth
    java.lang.String getNamespace() -> getNamespace
    java.lang.String getName() -> getName
    org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String) -> startTag
    org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String) -> attribute
    org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String) -> endTag
    org.xmlpull.v1.XmlSerializer text(java.lang.String) -> text
    org.xmlpull.v1.XmlSerializer text(char[],int,int) -> text
    void cdsect(java.lang.String) -> cdsect
    void entityRef(java.lang.String) -> entityRef
    void processingInstruction(java.lang.String) -> processingInstruction
    void comment(java.lang.String) -> comment
    void docdecl(java.lang.String) -> docdecl
    void ignorableWhitespace(java.lang.String) -> ignorableWhitespace
    void flush() -> flush
